<Type Name="MPRemoteCommandCenter" FullName="MediaPlayer.MPRemoteCommandCenter">
  <TypeSignature Language="C#" Value="public class MPRemoteCommandCenter : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPRemoteCommandCenter extends Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPRemoteCommandCenter", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 1, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class that handles events from external media players.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPRemoteCommandCenter_Ref/index.html">Apple documentation for <c>MPRemoteCommandCenter</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPRemoteCommandCenter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use MPRemoteCommandCenter.Shared")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPRemoteCommandCenter (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPRemoteCommandCenter (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BookmarkCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPFeedbackCommand BookmarkCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPFeedbackCommand BookmarkCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("bookmarkCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPFeedbackCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the bookmarking command.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePlaybackPositionCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPChangePlaybackPositionCommand ChangePlaybackPositionCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPChangePlaybackPositionCommand ChangePlaybackPositionCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 1, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("changePlaybackPositionCommand")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 1, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPChangePlaybackPositionCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to change the playback position.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePlaybackRateCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPChangePlaybackRateCommand ChangePlaybackRateCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPChangePlaybackRateCommand ChangePlaybackRateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("changePlaybackRateCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPChangePlaybackRateCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to change the playback rate.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeRepeatModeCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPChangeRepeatModeCommand ChangeRepeatModeCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPChangeRepeatModeCommand ChangeRepeatModeCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("changeRepeatModeCommand")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPChangeRepeatModeCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to change the repeat mode.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeShuffleModeCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPChangeShuffleModeCommand ChangeShuffleModeCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPChangeShuffleModeCommand ChangeShuffleModeCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("changeShuffleModeCommand")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPChangeShuffleModeCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to change the shuffle mode.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableLanguageOptionCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand DisableLanguageOptionCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand DisableLanguageOptionCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("disableLanguageOptionCommand")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to disable language options.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DislikeCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPFeedbackCommand DislikeCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPFeedbackCommand DislikeCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("dislikeCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPFeedbackCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to dislike the currently playing item.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLanguageOptionCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand EnableLanguageOptionCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand EnableLanguageOptionCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("enableLanguageOptionCommand")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to enable language options.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LikeCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPFeedbackCommand LikeCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPFeedbackCommand LikeCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("likeCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPFeedbackCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to like the currently playing item.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextTrackCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand NextTrackCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand NextTrackCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("nextTrackCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to play the next track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand PauseCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand PauseCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("pauseCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to pause playback.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand PlayCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand PlayCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("playCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to begin or resume playback.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousTrackCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand PreviousTrackCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand PreviousTrackCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("previousTrackCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to play the previous track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RatingCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRatingCommand RatingCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRatingCommand RatingCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("ratingCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRatingCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to rate the currently playing item.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekBackwardCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand SeekBackwardCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand SeekBackwardCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("seekBackwardCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to seek backward.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekForwardCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand SeekForwardCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand SeekForwardCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("seekForwardCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to seek forward.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static MediaPlayer.MPRemoteCommandCenter Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MediaPlayer.MPRemoteCommandCenter Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sharedCommandCenter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommandCenter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the shared command center object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipBackwardCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPSkipIntervalCommand SkipBackwardCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPSkipIntervalCommand SkipBackwardCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("skipBackwardCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPSkipIntervalCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to skip backward.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipForwardCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPSkipIntervalCommand SkipForwardCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPSkipIntervalCommand SkipForwardCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("skipForwardCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPSkipIntervalCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to skip forward.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand StopCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand StopCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("stopCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to stop playback.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TogglePlayPauseCommand">
      <MemberSignature Language="C#" Value="public virtual MediaPlayer.MPRemoteCommand TogglePlayPauseCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MediaPlayer.MPRemoteCommand TogglePlayPauseCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("togglePlayPauseCommand")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MediaPlayer.MPRemoteCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command that is used to toggle the paused/playing state.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
