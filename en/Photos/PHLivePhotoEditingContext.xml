<Type Name="PHLivePhotoEditingContext" FullName="Photos.PHLivePhotoEditingContext">
  <TypeSignature Language="C#" Value="public class PHLivePhotoEditingContext : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PHLivePhotoEditingContext extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:Photos.PHLivePhotoEditingContext" />
  <TypeSignature Language="F#" Value="type PHLivePhotoEditingContext = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("PHLivePhotoEditingContext", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An editing context for a live photo's image, audio, and video data.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/reference/Photos/PHLivePhotoEditingContext">Apple documentation for <c>PHLivePhotoEditingContext</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PHLivePhotoEditingContext (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Photos.PHLivePhotoEditingContext : Foundation.NSObjectFlag -&gt; Photos.PHLivePhotoEditingContext" Usage="new Photos.PHLivePhotoEditingContext t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PHLivePhotoEditingContext (Photos.PHContentEditingInput livePhotoInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Photos.PHContentEditingInput livePhotoInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.#ctor(Photos.PHContentEditingInput)" />
      <MemberSignature Language="F#" Value="new Photos.PHLivePhotoEditingContext : Photos.PHContentEditingInput -&gt; Photos.PHLivePhotoEditingContext" Usage="new Photos.PHLivePhotoEditingContext livePhotoInput" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithLivePhotoEditingInput:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="livePhotoInput" Type="Photos.PHContentEditingInput" />
      </Parameters>
      <Docs>
        <param name="livePhotoInput">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal PHLivePhotoEditingContext (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Photos.PHLivePhotoEditingContext : nativeint -&gt; Photos.PHLivePhotoEditingContext" Usage="new Photos.PHLivePhotoEditingContext handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioVolume">
      <MemberSignature Language="C#" Value="public virtual float AudioVolume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AudioVolume" />
      <MemberSignature Language="DocId" Value="P:Photos.PHLivePhotoEditingContext.AudioVolume" />
      <MemberSignature Language="F#" Value="member this.AudioVolume : single with get, set" Usage="Photos.PHLivePhotoEditingContext.AudioVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("audioVolume")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setAudioVolume:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the gain to apply to the audio.</summary>
        <value>The gain to apply to the audio.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.Cancel" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit&#xA;override this.Cancel : unit -&gt; unit" Usage="pHLivePhotoEditingContext.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("cancel")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels the editing session.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:Photos.PHLivePhotoEditingContext.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="Photos.PHLivePhotoEditingContext.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime Duration" />
      <MemberSignature Language="DocId" Value="P:Photos.PHLivePhotoEditingContext.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : CoreMedia.CMTime" Usage="Photos.PHLivePhotoEditingContext.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("duration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of time for which the live video plays.</summary>
        <value>The length of time for which the live video plays.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameProcessor">
      <MemberSignature Language="C#" Value="public virtual Photos.PHLivePhotoFrameProcessingBlock FrameProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Photos.PHLivePhotoFrameProcessingBlock FrameProcessor" />
      <MemberSignature Language="DocId" Value="P:Photos.PHLivePhotoEditingContext.FrameProcessor" />
      <MemberSignature Language="F#" Value="member this.FrameProcessor : Photos.PHLivePhotoFrameProcessingBlock with get, set" Usage="Photos.PHLivePhotoEditingContext.FrameProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("Use 'FrameProcessor2' instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHLivePhotoFrameProcessingBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a frame processing block that processes each frame of the Live Photo.</summary>
        <value>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameProcessor2">
      <MemberSignature Language="C#" Value="public virtual Photos.PHLivePhotoFrameProcessingBlock2 FrameProcessor2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Photos.PHLivePhotoFrameProcessingBlock2 FrameProcessor2" />
      <MemberSignature Language="DocId" Value="P:Photos.PHLivePhotoEditingContext.FrameProcessor2" />
      <MemberSignature Language="F#" Value="member this.FrameProcessor2 : Photos.PHLivePhotoFrameProcessingBlock2 with get, set" Usage="Photos.PHLivePhotoEditingContext.FrameProcessor2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("frameProcessor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setFrameProcessor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("frameProcessor", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setFrameProcessor:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHLivePhotoFrameProcessingBlock2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullSizeImage">
      <MemberSignature Language="C#" Value="public virtual CoreImage.CIImage FullSizeImage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreImage.CIImage FullSizeImage" />
      <MemberSignature Language="DocId" Value="P:Photos.PHLivePhotoEditingContext.FullSizeImage" />
      <MemberSignature Language="F#" Value="member this.FullSizeImage : CoreImage.CIImage" Usage="Photos.PHLivePhotoEditingContext.FullSizeImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("fullSizeImage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the original still image at its original size.</summary>
        <value>The original still image at its original size.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual ImageIO.CGImagePropertyOrientation Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ImageIO.CGImagePropertyOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Photos.PHLivePhotoEditingContext.Orientation" />
      <MemberSignature Language="F#" Value="member this.Orientation : ImageIO.CGImagePropertyOrientation" Usage="Photos.PHLivePhotoEditingContext.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("orientation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ImageIO.CGImagePropertyOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that describes the orientation of the live Photo.</summary>
        <value>A value that describes the orientation of the live Photo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhotoTime">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime PhotoTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime PhotoTime" />
      <MemberSignature Language="DocId" Value="P:Photos.PHLivePhotoEditingContext.PhotoTime" />
      <MemberSignature Language="F#" Value="member this.PhotoTime : CoreMedia.CMTime" Usage="Photos.PHLivePhotoEditingContext.PhotoTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("photoTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of time, in seconds from the beginning of the live Photo, where the still photo resides.</summary>
        <value>The length of time, in seconds from the beginning of the live Photo, where the still photo resides.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareLivePhotoForPlayback">
      <MemberSignature Language="C#" Value="public void PrepareLivePhotoForPlayback (CoreGraphics.CGSize targetSize, Action&lt;Photos.PHLivePhoto,Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareLivePhotoForPlayback(valuetype CoreGraphics.CGSize targetSize, class System.Action`2&lt;class Photos.PHLivePhoto, class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.PrepareLivePhotoForPlayback(CoreGraphics.CGSize,System.Action{Photos.PHLivePhoto,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="member this.PrepareLivePhotoForPlayback : CoreGraphics.CGSize * Action&lt;Photos.PHLivePhoto, Foundation.NSError&gt; -&gt; unit" Usage="pHLivePhotoEditingContext.PrepareLivePhotoForPlayback (targetSize, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSize" Type="CoreGraphics.CGSize" />
        <Parameter Name="handler" Type="System.Action&lt;Photos.PHLivePhoto,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V78))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetSize">The size of the output view to target.</param>
        <param name="handler">A handler that takes the Live Photo and an error and is run on the main thread when the processing is complete.</param>
        <summary>Prepares an edited Live Photo for playback.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareLivePhotoForPlayback">
      <MemberSignature Language="C#" Value="public virtual void PrepareLivePhotoForPlayback (CoreGraphics.CGSize targetSize, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; options, Action&lt;Photos.PHLivePhoto,Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareLivePhotoForPlayback(valuetype CoreGraphics.CGSize targetSize, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; options, class System.Action`2&lt;class Photos.PHLivePhoto, class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.PrepareLivePhotoForPlayback(CoreGraphics.CGSize,Foundation.NSDictionary{Foundation.NSString,Foundation.NSObject},System.Action{Photos.PHLivePhoto,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member PrepareLivePhotoForPlayback : CoreGraphics.CGSize * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; * Action&lt;Photos.PHLivePhoto, Foundation.NSError&gt; -&gt; unit&#xA;override this.PrepareLivePhotoForPlayback : CoreGraphics.CGSize * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; * Action&lt;Photos.PHLivePhoto, Foundation.NSError&gt; -&gt; unit" Usage="pHLivePhotoEditingContext.PrepareLivePhotoForPlayback (targetSize, options, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSize" Type="CoreGraphics.CGSize" />
        <Parameter Name="options" Type="Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt;" />
        <Parameter Name="handler" Type="System.Action&lt;Photos.PHLivePhoto,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V65))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetSize">The size of the output view to target.</param>
        <param name="options">
          <para>Live Photo processing options.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="handler">A handler that takes the Live Photo and an error and is run on the main thread when the processing is complete.</param>
        <summary>Prepares an edited Live Photo for playback.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareLivePhotoForPlayback">
      <MemberSignature Language="C#" Value="public void PrepareLivePhotoForPlayback (CoreGraphics.CGSize targetSize, Photos.PHLivePhotoEditingOption options, Action&lt;Photos.PHLivePhoto,Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareLivePhotoForPlayback(valuetype CoreGraphics.CGSize targetSize, class Photos.PHLivePhotoEditingOption options, class System.Action`2&lt;class Photos.PHLivePhoto, class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.PrepareLivePhotoForPlayback(CoreGraphics.CGSize,Photos.PHLivePhotoEditingOption,System.Action{Photos.PHLivePhoto,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="member this.PrepareLivePhotoForPlayback : CoreGraphics.CGSize * Photos.PHLivePhotoEditingOption * Action&lt;Photos.PHLivePhoto, Foundation.NSError&gt; -&gt; unit" Usage="pHLivePhotoEditingContext.PrepareLivePhotoForPlayback (targetSize, options, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSize" Type="CoreGraphics.CGSize" />
        <Parameter Name="options" Type="Photos.PHLivePhotoEditingOption" />
        <Parameter Name="handler" Type="System.Action&lt;Photos.PHLivePhoto,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V77))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetSize">The size of the output view to target.</param>
        <param name="options">
          <para>Live Photo processing options.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="handler">A handler that takes the Live Photo and an error and is run on the main thread when the processing is complete.</param>
        <summary>Prepares an edited Live Photo for playback.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareLivePhotoForPlaybackAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt; PrepareLivePhotoForPlaybackAsync (CoreGraphics.CGSize targetSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Photos.PHLivePhoto&gt; PrepareLivePhotoForPlaybackAsync(valuetype CoreGraphics.CGSize targetSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.PrepareLivePhotoForPlaybackAsync(CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="member this.PrepareLivePhotoForPlaybackAsync : CoreGraphics.CGSize -&gt; System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt;" Usage="pHLivePhotoEditingContext.PrepareLivePhotoForPlaybackAsync targetSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSize" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="targetSize">The size of the output view to target.</param>
        <summary>Asynchronously prepares an edited Live Photo for playback, returning a task that provides the live photo.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareLivePhotoForPlaybackAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt; PrepareLivePhotoForPlaybackAsync (CoreGraphics.CGSize targetSize, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Photos.PHLivePhoto&gt; PrepareLivePhotoForPlaybackAsync(valuetype CoreGraphics.CGSize targetSize, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.PrepareLivePhotoForPlaybackAsync(CoreGraphics.CGSize,Foundation.NSDictionary{Foundation.NSString,Foundation.NSObject})" />
      <MemberSignature Language="F#" Value="abstract member PrepareLivePhotoForPlaybackAsync : CoreGraphics.CGSize * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; -&gt; System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt;&#xA;override this.PrepareLivePhotoForPlaybackAsync : CoreGraphics.CGSize * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; -&gt; System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt;" Usage="pHLivePhotoEditingContext.PrepareLivePhotoForPlaybackAsync (targetSize, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSize" Type="CoreGraphics.CGSize" />
        <Parameter Name="options" Type="Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt;" />
      </Parameters>
      <Docs>
        <param name="targetSize">The size of the output view to target.</param>
        <param name="options">Live Photo processing options.This parameter can be .</param>
        <summary>Asynchronously prepares an edited Live Photo for playback, returning a task that provides the live photo.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous PrepareLivePhotoForPlayback operation.  The value of the TResult parameter is of type <c>Action&lt;Photos.PHLivePhoto,Foundation.NSError&gt;</c>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareLivePhotoForPlaybackAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt; PrepareLivePhotoForPlaybackAsync (CoreGraphics.CGSize targetSize, Photos.PHLivePhotoEditingOption options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Photos.PHLivePhoto&gt; PrepareLivePhotoForPlaybackAsync(valuetype CoreGraphics.CGSize targetSize, class Photos.PHLivePhotoEditingOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.PrepareLivePhotoForPlaybackAsync(CoreGraphics.CGSize,Photos.PHLivePhotoEditingOption)" />
      <MemberSignature Language="F#" Value="member this.PrepareLivePhotoForPlaybackAsync : CoreGraphics.CGSize * Photos.PHLivePhotoEditingOption -&gt; System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt;" Usage="pHLivePhotoEditingContext.PrepareLivePhotoForPlaybackAsync (targetSize, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Photos.PHLivePhoto&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSize" Type="CoreGraphics.CGSize" />
        <Parameter Name="options" Type="Photos.PHLivePhotoEditingOption" />
      </Parameters>
      <Docs>
        <param name="targetSize">The size of the output view to target.</param>
        <param name="options">
          <para>Live Photo processing options.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Asynchronously prepares an edited Live Photo for playback, returning a task that provides the live photo.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLivePhoto">
      <MemberSignature Language="C#" Value="public void SaveLivePhoto (Photos.PHContentEditingOutput output, Action&lt;bool,Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLivePhoto(class Photos.PHContentEditingOutput output, class System.Action`2&lt;bool, class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.SaveLivePhoto(Photos.PHContentEditingOutput,System.Action{System.Boolean,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="member this.SaveLivePhoto : Photos.PHContentEditingOutput * Action&lt;bool, Foundation.NSError&gt; -&gt; unit" Usage="pHLivePhotoEditingContext.SaveLivePhoto (output, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Photos.PHContentEditingOutput" />
        <Parameter Name="handler" Type="System.Action&lt;System.Boolean,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V2))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="output">The output that will recieve the Live Photo data.</param>
        <param name="handler">A handler that recieves an error and is run on the main thread when the processing is complete.</param>
        <summary>Saves a Live Photo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLivePhoto">
      <MemberSignature Language="C#" Value="public virtual void SaveLivePhoto (Photos.PHContentEditingOutput output, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; options, Action&lt;bool,Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveLivePhoto(class Photos.PHContentEditingOutput output, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; options, class System.Action`2&lt;bool, class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.SaveLivePhoto(Photos.PHContentEditingOutput,Foundation.NSDictionary{Foundation.NSString,Foundation.NSObject},System.Action{System.Boolean,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SaveLivePhoto : Photos.PHContentEditingOutput * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; * Action&lt;bool, Foundation.NSError&gt; -&gt; unit&#xA;override this.SaveLivePhoto : Photos.PHContentEditingOutput * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; * Action&lt;bool, Foundation.NSError&gt; -&gt; unit" Usage="pHLivePhotoEditingContext.SaveLivePhoto (output, options, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Photos.PHContentEditingOutput" />
        <Parameter Name="options" Type="Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt;" />
        <Parameter Name="handler" Type="System.Action&lt;System.Boolean,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V2))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="output">The photo editing output to which to save the photo.</param>
        <param name="options">
          <para>The Live Photo processing options to use, if any.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="handler">A handler that takes a <see langword="bool" /> and an error and is run when rendering completes.</param>
        <summary>Saves a Live Photo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLivePhoto">
      <MemberSignature Language="C#" Value="public void SaveLivePhoto (Photos.PHContentEditingOutput output, Photos.PHLivePhotoEditingOption options, Action&lt;bool,Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLivePhoto(class Photos.PHContentEditingOutput output, class Photos.PHLivePhotoEditingOption options, class System.Action`2&lt;bool, class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.SaveLivePhoto(Photos.PHContentEditingOutput,Photos.PHLivePhotoEditingOption,System.Action{System.Boolean,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="member this.SaveLivePhoto : Photos.PHContentEditingOutput * Photos.PHLivePhotoEditingOption * Action&lt;bool, Foundation.NSError&gt; -&gt; unit" Usage="pHLivePhotoEditingContext.SaveLivePhoto (output, options, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Photos.PHContentEditingOutput" />
        <Parameter Name="options" Type="Photos.PHLivePhotoEditingOption" />
        <Parameter Name="handler" Type="System.Action&lt;System.Boolean,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V2))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="output">The photo editing output to which to save the photo.</param>
        <param name="options">
          <para>The Live Photo processing options to use, if any.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="handler">A handler that takes a <see langword="bool" /> and an error and is run when rendering completes.</param>
        <summary>Saves a Live Photo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLivePhotoAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Tuple&lt;bool,Foundation.NSError&gt;&gt; SaveLivePhotoAsync (Photos.PHContentEditingOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Tuple`2&lt;bool, class Foundation.NSError&gt;&gt; SaveLivePhotoAsync(class Photos.PHContentEditingOutput output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.SaveLivePhotoAsync(Photos.PHContentEditingOutput)" />
      <MemberSignature Language="F#" Value="member this.SaveLivePhotoAsync : Photos.PHContentEditingOutput -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;" Usage="pHLivePhotoEditingContext.SaveLivePhotoAsync output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Tuple&lt;System.Boolean,Foundation.NSError&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Photos.PHContentEditingOutput" />
      </Parameters>
      <Docs>
        <param name="output">The photo editing output to which to save the photo.</param>
        <summary>Asynchronously saves a Live Photo, returning a task that indicates success or failure.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLivePhotoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Tuple&lt;bool,Foundation.NSError&gt;&gt; SaveLivePhotoAsync (Photos.PHContentEditingOutput output, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Tuple`2&lt;bool, class Foundation.NSError&gt;&gt; SaveLivePhotoAsync(class Photos.PHContentEditingOutput output, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.SaveLivePhotoAsync(Photos.PHContentEditingOutput,Foundation.NSDictionary{Foundation.NSString,Foundation.NSObject})" />
      <MemberSignature Language="F#" Value="abstract member SaveLivePhotoAsync : Photos.PHContentEditingOutput * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;&#xA;override this.SaveLivePhotoAsync : Photos.PHContentEditingOutput * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;" Usage="pHLivePhotoEditingContext.SaveLivePhotoAsync (output, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Tuple&lt;System.Boolean,Foundation.NSError&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Photos.PHContentEditingOutput" />
        <Parameter Name="options" Type="Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt;" />
      </Parameters>
      <Docs>
        <param name="output">The photo editing output to which to save the photo.</param>
        <param name="options">
          <para>The Live Photo processing options to use, if any.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Asynchronously saves a Live Photo, returning a task that provides a tuple that contains a Boolean value that indicates succes or faiure and an error, if one was encountered.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLivePhotoAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Tuple&lt;bool,Foundation.NSError&gt;&gt; SaveLivePhotoAsync (Photos.PHContentEditingOutput output, Photos.PHLivePhotoEditingOption options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Tuple`2&lt;bool, class Foundation.NSError&gt;&gt; SaveLivePhotoAsync(class Photos.PHContentEditingOutput output, class Photos.PHLivePhotoEditingOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHLivePhotoEditingContext.SaveLivePhotoAsync(Photos.PHContentEditingOutput,Photos.PHLivePhotoEditingOption)" />
      <MemberSignature Language="F#" Value="member this.SaveLivePhotoAsync : Photos.PHContentEditingOutput * Photos.PHLivePhotoEditingOption -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;" Usage="pHLivePhotoEditingContext.SaveLivePhotoAsync (output, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Tuple&lt;System.Boolean,Foundation.NSError&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Photos.PHContentEditingOutput" />
        <Parameter Name="options" Type="Photos.PHLivePhotoEditingOption" />
      </Parameters>
      <Docs>
        <param name="output">The photo editing output to which to save the photo.</param>
        <param name="options">
          <para>The Live Photo processing options to use, if any.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Asynchronously saves a Live Photo, returning a task that contains any error that was encountered.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
