<Type Name="PHAsset" FullName="Photos.PHAsset">
  <TypeSignature Language="C#" Value="public class PHAsset : Photos.PHObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PHAsset extends Photos.PHObject" />
  <TypeSignature Language="DocId" Value="T:Photos.PHAsset" />
  <TypeSignature Language="F#" Value="type PHAsset = class&#xA;    inherit PHObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Photos.PHObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("PHAsset", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <see cref="T:Photos.PHObject" /> representing a single photo or video.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/Photos/Reference/PHAsset_Class/index.html">Apple documentation for <c>PHAsset</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PHAsset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PHAsset (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Photos.PHAsset : Foundation.NSObjectFlag -&gt; Photos.PHAsset" Usage="new Photos.PHAsset t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal PHAsset (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Photos.PHAsset : nativeint -&gt; Photos.PHAsset" Usage="new Photos.PHAsset handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BurstIdentifier">
      <MemberSignature Language="C#" Value="public virtual string BurstIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BurstIdentifier" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.BurstIdentifier" />
      <MemberSignature Language="F#" Value="member this.BurstIdentifier : string" Usage="Photos.PHAsset.BurstIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("burstIdentifier")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("burstIdentifier", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the burst-sequence in which the <see cref="T:Photos.PHAsset" /> was created.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BurstSelectionTypes">
      <MemberSignature Language="C#" Value="public virtual Photos.PHAssetBurstSelectionType BurstSelectionTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Photos.PHAssetBurstSelectionType BurstSelectionTypes" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.BurstSelectionTypes" />
      <MemberSignature Language="F#" Value="member this.BurstSelectionTypes : Photos.PHAssetBurstSelectionType" Usage="Photos.PHAsset.BurstSelectionTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("burstSelectionTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHAssetBurstSelectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:Photos.PHAssetBurstSelectionType" /> of the <see cref="T:Photos.PHAsset" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPerformEditOperation">
      <MemberSignature Language="C#" Value="public virtual bool CanPerformEditOperation (Photos.PHAssetEditOperation editOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanPerformEditOperation(valuetype Photos.PHAssetEditOperation editOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.CanPerformEditOperation(Photos.PHAssetEditOperation)" />
      <MemberSignature Language="F#" Value="abstract member CanPerformEditOperation : Photos.PHAssetEditOperation -&gt; bool&#xA;override this.CanPerformEditOperation : Photos.PHAssetEditOperation -&gt; bool" Usage="pHAsset.CanPerformEditOperation editOperation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("canPerformEditOperation:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editOperation" Type="Photos.PHAssetEditOperation" />
      </Parameters>
      <Docs>
        <param name="editOperation">To be added.</param>
        <summary>Whether <paramref name="editOperation" /> can be performed on this <see cref="T:Photo.PHAsset" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="Photos.PHAsset.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationDate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate CreationDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate CreationDate" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.CreationDate" />
      <MemberSignature Language="F#" Value="member this.CreationDate : Foundation.NSDate" Usage="Photos.PHAsset.CreationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("creationDate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("creationDate", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The date and time at which this <see cref="T:Photos.PHAsset" /> was created.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual double Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Duration" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : double" Usage="Photos.PHAsset.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("duration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The duration, in seconds, of a video <see cref="T:Photos.PHAsset" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Favorite">
      <MemberSignature Language="C#" Value="public virtual bool Favorite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Favorite" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.Favorite" />
      <MemberSignature Language="F#" Value="member this.Favorite : bool" Usage="Photos.PHAsset.Favorite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isFavorite")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the user has marked this <see cref="T:Photos.PHAsset" /> as a favorite.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAssets">
      <MemberSignature Language="C#" Value="public static Photos.PHFetchResult FetchAssets (Photos.PHFetchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Photos.PHFetchResult FetchAssets(class Photos.PHFetchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.FetchAssets(Photos.PHFetchOptions)" />
      <MemberSignature Language="F#" Value="static member FetchAssets : Photos.PHFetchOptions -&gt; Photos.PHFetchResult" Usage="Photos.PHAsset.FetchAssets options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("fetchAssetsWithOptions:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHFetchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Photos.PHFetchOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Retrieves the <see cref="T:Photos.PHAsset" /> objects that match <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAssets">
      <MemberSignature Language="C#" Value="public static Photos.PHFetchResult FetchAssets (Foundation.NSUrl[] assetUrls, Photos.PHFetchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Photos.PHFetchResult FetchAssets(class Foundation.NSUrl[] assetUrls, class Photos.PHFetchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.FetchAssets(Foundation.NSUrl[],Photos.PHFetchOptions)" />
      <MemberSignature Language="F#" Value="static member FetchAssets : Foundation.NSUrl[] * Photos.PHFetchOptions -&gt; Photos.PHFetchResult" Usage="Photos.PHAsset.FetchAssets (assetUrls, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("fetchAssetsWithALAssetURLs:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHFetchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assetUrls" Type="Foundation.NSUrl[]" />
        <Parameter Name="options" Type="Photos.PHFetchOptions" />
      </Parameters>
      <Docs>
        <param name="assetUrls">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Developers should not use this deprecated method. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAssets">
      <MemberSignature Language="C#" Value="public static Photos.PHFetchResult FetchAssets (Photos.PHAssetCollection assetCollection, Photos.PHFetchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Photos.PHFetchResult FetchAssets(class Photos.PHAssetCollection assetCollection, class Photos.PHFetchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.FetchAssets(Photos.PHAssetCollection,Photos.PHFetchOptions)" />
      <MemberSignature Language="F#" Value="static member FetchAssets : Photos.PHAssetCollection * Photos.PHFetchOptions -&gt; Photos.PHFetchResult" Usage="Photos.PHAsset.FetchAssets (assetCollection, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("fetchAssetsInAssetCollection:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHFetchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assetCollection" Type="Photos.PHAssetCollection" />
        <Parameter Name="options" Type="Photos.PHFetchOptions" />
      </Parameters>
      <Docs>
        <param name="assetCollection">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Retrieves the <see cref="T:Photos.PHAsset" /> objects in <paramref name="assetCollection" /> that satisfy <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAssets">
      <MemberSignature Language="C#" Value="public static Photos.PHFetchResult FetchAssets (Photos.PHAssetMediaType mediaType, Photos.PHFetchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Photos.PHFetchResult FetchAssets(valuetype Photos.PHAssetMediaType mediaType, class Photos.PHFetchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.FetchAssets(Photos.PHAssetMediaType,Photos.PHFetchOptions)" />
      <MemberSignature Language="F#" Value="static member FetchAssets : Photos.PHAssetMediaType * Photos.PHFetchOptions -&gt; Photos.PHFetchResult" Usage="Photos.PHAsset.FetchAssets (mediaType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("fetchAssetsWithMediaType:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHFetchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="Photos.PHAssetMediaType" />
        <Parameter Name="options" Type="Photos.PHFetchOptions" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Fetches the <see cref="T:Photos.PHAsset" /> objects of the specified <paramref name="mediaType" /> that match <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAssets">
      <MemberSignature Language="C#" Value="public static Photos.PHFetchResult FetchAssets (string burstIdentifier, Photos.PHFetchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Photos.PHFetchResult FetchAssets(string burstIdentifier, class Photos.PHFetchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.FetchAssets(System.String,Photos.PHFetchOptions)" />
      <MemberSignature Language="F#" Value="static member FetchAssets : string * Photos.PHFetchOptions -&gt; Photos.PHFetchResult" Usage="Photos.PHAsset.FetchAssets (burstIdentifier, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("fetchAssetsWithBurstIdentifier:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHFetchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="burstIdentifier" Type="System.String" />
        <Parameter Name="options" Type="Photos.PHFetchOptions" />
      </Parameters>
      <Docs>
        <param name="burstIdentifier">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Fetches the <see cref="T:Photos.PHAsset" /> objects created in the burst with the specified <paramref name="burstIdentifier" /> that match <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAssetsUsingLocalIdentifiers">
      <MemberSignature Language="C#" Value="public static Photos.PHFetchResult FetchAssetsUsingLocalIdentifiers (string[] identifiers, Photos.PHFetchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Photos.PHFetchResult FetchAssetsUsingLocalIdentifiers(string[] identifiers, class Photos.PHFetchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.FetchAssetsUsingLocalIdentifiers(System.String[],Photos.PHFetchOptions)" />
      <MemberSignature Language="F#" Value="static member FetchAssetsUsingLocalIdentifiers : string[] * Photos.PHFetchOptions -&gt; Photos.PHFetchResult" Usage="Photos.PHAsset.FetchAssetsUsingLocalIdentifiers (identifiers, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("fetchAssetsWithLocalIdentifiers:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHFetchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifiers" Type="System.String[]" />
        <Parameter Name="options" Type="Photos.PHFetchOptions" />
      </Parameters>
      <Docs>
        <param name="identifiers">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Fetches the <see cref="T:Photos.PHAsset" /> objects with the device-specific <paramref name="identifiers" /> and that match <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchKeyAssets">
      <MemberSignature Language="C#" Value="public static Photos.PHFetchResult FetchKeyAssets (Photos.PHAssetCollection assetCollection, Photos.PHFetchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Photos.PHFetchResult FetchKeyAssets(class Photos.PHAssetCollection assetCollection, class Photos.PHFetchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Photos.PHAsset.FetchKeyAssets(Photos.PHAssetCollection,Photos.PHFetchOptions)" />
      <MemberSignature Language="F#" Value="static member FetchKeyAssets : Photos.PHAssetCollection * Photos.PHFetchOptions -&gt; Photos.PHFetchResult" Usage="Photos.PHAsset.FetchKeyAssets (assetCollection, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("fetchKeyAssetsInAssetCollection:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHFetchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assetCollection" Type="Photos.PHAssetCollection" />
        <Parameter Name="options" Type="Photos.PHFetchOptions" />
      </Parameters>
      <Docs>
        <param name="assetCollection">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Fetches the <see cref="T:Photos.PHAsset" /> objects in <paramref name="assetCollection" /> that are marked as key assets and that match <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public virtual bool Hidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.Hidden" />
      <MemberSignature Language="F#" Value="member this.Hidden : bool" Usage="Photos.PHAsset.Hidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isHidden")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the user has marked the <see cref="T:Photos.PHAsset" /> as hidden.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual CoreLocation.CLLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreLocation.CLLocation Location" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.Location" />
      <MemberSignature Language="F#" Value="member this.Location : CoreLocation.CLLocation" Usage="Photos.PHAsset.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("location")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("location", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreLocation.CLLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Where the asset was created.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaSubtypes">
      <MemberSignature Language="C#" Value="public virtual Photos.PHAssetMediaSubtype MediaSubtypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Photos.PHAssetMediaSubtype MediaSubtypes" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.MediaSubtypes" />
      <MemberSignature Language="F#" Value="member this.MediaSubtypes : Photos.PHAssetMediaSubtype" Usage="Photos.PHAsset.MediaSubtypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("mediaSubtypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHAssetMediaSubtype</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:Photos.PHAssetMediaSubtype" /> of the <see cref="T:Photos.PHAsset" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public virtual Photos.PHAssetMediaType MediaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Photos.PHAssetMediaType MediaType" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.MediaType" />
      <MemberSignature Language="F#" Value="member this.MediaType : Photos.PHAssetMediaType" Usage="Photos.PHAsset.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("mediaType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHAssetMediaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:Photos.PHAssetMediaType" /> of this <see cref="T:Photos.PHAsset" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationDate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate ModificationDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate ModificationDate" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.ModificationDate" />
      <MemberSignature Language="F#" Value="member this.ModificationDate : Foundation.NSDate" Usage="Photos.PHAsset.ModificationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("modificationDate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("modificationDate", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The time of the last modification of this <see cref="T:Photos.PHAsset" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public virtual nuint PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint PixelHeight" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.PixelHeight" />
      <MemberSignature Language="F#" Value="member this.PixelHeight : nuint" Usage="Photos.PHAsset.PixelHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("pixelHeight")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of vertical pixels in this <see cref="T:Photos.PHAsset" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public virtual nuint PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint PixelWidth" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.PixelWidth" />
      <MemberSignature Language="F#" Value="member this.PixelWidth : nuint" Usage="Photos.PHAsset.PixelWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("pixelWidth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of horizontal pixels in this <see cref="T:Photos.PHAsset" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackStyle">
      <MemberSignature Language="C#" Value="public virtual Photos.PHAssetPlaybackStyle PlaybackStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Photos.PHAssetPlaybackStyle PlaybackStyle" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.PlaybackStyle" />
      <MemberSignature Language="F#" Value="member this.PlaybackStyle : Photos.PHAssetPlaybackStyle" Usage="Photos.PHAsset.PlaybackStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("playbackStyle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("playbackStyle", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHAssetPlaybackStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepresentsBurst">
      <MemberSignature Language="C#" Value="public virtual bool RepresentsBurst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepresentsBurst" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.RepresentsBurst" />
      <MemberSignature Language="F#" Value="member this.RepresentsBurst : bool" Usage="Photos.PHAsset.RepresentsBurst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("representsBurst")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the user has marked this <see cref="T:Photos.PHAsset" /> as the representative for the associated burst-sequence.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceType">
      <MemberSignature Language="C#" Value="public virtual Photos.PHAssetSourceType SourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Photos.PHAssetSourceType SourceType" />
      <MemberSignature Language="DocId" Value="P:Photos.PHAsset.SourceType" />
      <MemberSignature Language="F#" Value="member this.SourceType : Photos.PHAssetSourceType" Usage="Photos.PHAsset.SourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("sourceType")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("sourceType", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHAssetSourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The source of this <see cref="T:Photos.PHAsset" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
