<Type Name="IPHLivePhotoFrame" FullName="Photos.IPHLivePhotoFrame">
  <TypeSignature Language="C#" Value="public interface IPHLivePhotoFrame : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPHLivePhotoFrame implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Photos.IPHLivePhotoFrame" />
  <TypeSignature Language="F#" Value="type IPHLivePhotoFrame = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="PHLivePhotoFrame", WrapperType=typeof(Photos.PHLivePhotoFrameWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="image", IsProperty=true, IsRequired=true, IsStatic=false, Name="Image", PropertyType=typeof(CoreImage.CIImage), Selector="image")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="time", IsProperty=true, IsRequired=true, IsStatic=false, Name="Time", PropertyType=typeof(CoreMedia.CMTime), Selector="time")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="type", IsProperty=true, IsRequired=true, IsStatic=false, Name="Type", PropertyType=typeof(Photos.PHLivePhotoFrameType), Selector="type")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="renderScale", IsProperty=true, IsRequired=true, IsStatic=false, Name="RenderScale", PropertyType=typeof(System.nfloat), Selector="renderScale")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the interface for Live Photo frames that are produced by the system.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public CoreImage.CIImage Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreImage.CIImage Image" />
      <MemberSignature Language="DocId" Value="P:Photos.IPHLivePhotoFrame.Image" />
      <MemberSignature Language="F#" Value="member this.Image : CoreImage.CIImage" Usage="Photos.IPHLivePhotoFrame.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("image")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the image that will be processed.</summary>
        <value>The image that will be processed.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderScale">
      <MemberSignature Language="C#" Value="public nfloat RenderScale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat RenderScale" />
      <MemberSignature Language="DocId" Value="P:Photos.IPHLivePhotoFrame.RenderScale" />
      <MemberSignature Language="F#" Value="member this.RenderScale : nfloat" Usage="Photos.IPHLivePhotoFrame.RenderScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("renderScale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the relative scale of <see cref="T:Photos.IPHLivePhotoFrame" /> compared to the Live Photo.</summary>
        <value>The relative scale of <see cref="T:Photos.IPHLivePhotoFrame" /> compared to the Live Photo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Time">
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime Time { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime Time" />
      <MemberSignature Language="DocId" Value="P:Photos.IPHLivePhotoFrame.Time" />
      <MemberSignature Language="F#" Value="member this.Time : CoreMedia.CMTime" Usage="Photos.IPHLivePhotoFrame.Time" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("time")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time, in seconds from the beginning of the Live Photo, when the image appears.</summary>
        <value>The time, in seconds from the beginning of the Live Photo, when the image appears.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Photos.PHLivePhotoFrameType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Photos.PHLivePhotoFrameType Type" />
      <MemberSignature Language="DocId" Value="P:Photos.IPHLivePhotoFrame.Type" />
      <MemberSignature Language="F#" Value="member this.Type : Photos.PHLivePhotoFrameType" Usage="Photos.IPHLivePhotoFrame.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Photos.PHLivePhotoFrameType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that tells whether the image is a still photo or a video frame.</summary>
        <value>A value that tells whether the image is a still photo or a video frame.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
