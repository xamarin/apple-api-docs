<Type Name="ICSSearchableIndexDelegate" FullName="MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate">
  <TypeSignature Language="C#" Value="public interface ICSSearchableIndexDelegate : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICSSearchableIndexDelegate implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="CSSearchableIndexDelegate", WrapperType=typeof(MonoTouch.CoreSpotlight.CSSearchableIndexDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReindexAllSearchableItems", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReindexSearchableItems", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidThrottle", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="searchableIndexDidThrottle:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidFinishThrottle", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="searchableIndexDidFinishThrottle:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Interface representing the required methods (if any) of the protocol <see cref="T:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate" />.</para>
    </summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate" />.</para>
      <para>If you create objects that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions" /> class as extension methods to the interface, allowing you to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReindexAllSearchableItems">
      <MemberSignature Language="C#" Value="public void ReindexAllSearchableItems (MonoTouch.CoreSpotlight.CSSearchableIndex searchableIndex, Action acknowledgementHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReindexAllSearchableItems(class MonoTouch.CoreSpotlight.CSSearchableIndex searchableIndex, class System.Action acknowledgementHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchableIndex" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" />
        <Parameter Name="acknowledgementHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="searchableIndex">To be added.</param>
        <param name="acknowledgementHandler">To be added.</param>
        <summary>Reindexes all items in the specified index and runs <paramref name="acknowledgementHandler" /> when finished.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReindexSearchableItems">
      <MemberSignature Language="C#" Value="public void ReindexSearchableItems (MonoTouch.CoreSpotlight.CSSearchableIndex searchableIndex, string[] identifiers, Action acknowledgementHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReindexSearchableItems(class MonoTouch.CoreSpotlight.CSSearchableIndex searchableIndex, string[] identifiers, class System.Action acknowledgementHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchableIndex" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" />
        <Parameter Name="identifiers" Type="System.String[]" />
        <Parameter Name="acknowledgementHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="searchableIndex">To be added.</param>
        <param name="identifiers">To be added.</param>
        <param name="acknowledgementHandler">To be added.</param>
        <summary>Reindexes the specified items in the specified index and runs <paramref name="acknowledgementHandler" /> when finished.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
