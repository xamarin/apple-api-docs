<Type Name="CMBlockBuffer" FullName="CoreMedia.CMBlockBuffer">
  <TypeSignature Language="C#" Value="public class CMBlockBuffer : CoreMedia.ICMAttachmentBearer, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CMBlockBuffer extends System.Object implements class CoreMedia.ICMAttachmentBearer, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CoreMedia.ICMAttachmentBearer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A contiguous range of data offsets over a possibly non-contiguous memory region.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessDataBytes">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError AccessDataBytes (nuint offset, nuint length, IntPtr temporaryBlock, ref IntPtr returnedPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError AccessDataBytes(valuetype System.nuint offset, valuetype System.nuint length, native int temporaryBlock, native int returnedPointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.nuint" />
        <Parameter Name="length" Type="System.nuint" />
        <Parameter Name="temporaryBlock" Type="System.IntPtr" />
        <Parameter Name="returnedPointer" Type="System.IntPtr&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <param name="temporaryBlock">To be added.</param>
        <param name="returnedPointer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBuffer">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError AppendBuffer (CoreMedia.CMBlockBuffer targetBuffer, nuint offsetToData, nuint dataLength, CoreMedia.CMBlockBufferFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError AppendBuffer(class CoreMedia.CMBlockBuffer targetBuffer, valuetype System.nuint offsetToData, valuetype System.nuint dataLength, valuetype CoreMedia.CMBlockBufferFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetBuffer" Type="CoreMedia.CMBlockBuffer" />
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
        <Parameter Name="flags" Type="CoreMedia.CMBlockBufferFlags" />
      </Parameters>
      <Docs>
        <param name="targetBuffer">To be added.</param>
        <param name="offsetToData">To be added.</param>
        <param name="dataLength">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendMemoryBlock">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError AppendMemoryBlock (byte[] data, nuint offsetToData, CoreMedia.CMBlockBufferFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError AppendMemoryBlock(unsigned int8[] data, valuetype System.nuint offsetToData, valuetype CoreMedia.CMBlockBufferFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="flags" Type="CoreMedia.CMBlockBufferFlags" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offsetToData">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendMemoryBlock">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError AppendMemoryBlock (IntPtr memoryBlock, nuint blockLength, CoreMedia.CMCustomBlockAllocator customBlockSource, nuint offsetToData, nuint dataLength, CoreMedia.CMBlockBufferFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError AppendMemoryBlock(native int memoryBlock, valuetype System.nuint blockLength, class CoreMedia.CMCustomBlockAllocator customBlockSource, valuetype System.nuint offsetToData, valuetype System.nuint dataLength, valuetype CoreMedia.CMBlockBufferFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryBlock" Type="System.IntPtr" />
        <Parameter Name="blockLength" Type="System.nuint" />
        <Parameter Name="customBlockSource" Type="CoreMedia.CMCustomBlockAllocator" />
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
        <Parameter Name="flags" Type="CoreMedia.CMBlockBufferFlags" />
      </Parameters>
      <Docs>
        <param name="memoryBlock">To be added.</param>
        <param name="blockLength">To be added.</param>
        <param name="customBlockSource">To be added.</param>
        <param name="offsetToData">To be added.</param>
        <param name="dataLength">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssureBlockMemory">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError AssureBlockMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError AssureBlockMemory() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyDataBytes">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError CopyDataBytes (nuint offsetToData, nuint dataLength, out byte[] destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError CopyDataBytes(valuetype System.nuint offsetToData, valuetype System.nuint dataLength, unsigned int8[] destination) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
        <Parameter Name="destination" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="offsetToData">To be added.</param>
        <param name="dataLength">To be added.</param>
        <param name="destination">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyDataBytes">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError CopyDataBytes (nuint offsetToData, nuint dataLength, IntPtr destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError CopyDataBytes(valuetype System.nuint offsetToData, valuetype System.nuint dataLength, native int destination) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
        <Parameter Name="destination" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="offsetToData">To be added.</param>
        <param name="dataLength">To be added.</param>
        <param name="destination">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContiguous">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMBlockBuffer CreateContiguous (CoreMedia.CMBlockBuffer sourceBuffer, CoreMedia.CMCustomBlockAllocator customBlockSource, nuint offsetToData, nuint dataLength, CoreMedia.CMBlockBufferFlags flags, out CoreMedia.CMBlockBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMBlockBuffer CreateContiguous(class CoreMedia.CMBlockBuffer sourceBuffer, class CoreMedia.CMCustomBlockAllocator customBlockSource, valuetype System.nuint offsetToData, valuetype System.nuint dataLength, valuetype CoreMedia.CMBlockBufferFlags flags, valuetype CoreMedia.CMBlockBufferError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceBuffer" Type="CoreMedia.CMBlockBuffer" />
        <Parameter Name="customBlockSource" Type="CoreMedia.CMCustomBlockAllocator" />
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
        <Parameter Name="flags" Type="CoreMedia.CMBlockBufferFlags" />
        <Parameter Name="error" Type="CoreMedia.CMBlockBufferError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sourceBuffer">To be added.</param>
        <param name="customBlockSource">To be added.</param>
        <param name="offsetToData">To be added.</param>
        <param name="dataLength">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEmpty">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMBlockBuffer CreateEmpty (uint subBlockCapacity, CoreMedia.CMBlockBufferFlags flags, out CoreMedia.CMBlockBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMBlockBuffer CreateEmpty(unsigned int32 subBlockCapacity, valuetype CoreMedia.CMBlockBufferFlags flags, valuetype CoreMedia.CMBlockBufferError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subBlockCapacity" Type="System.UInt32" />
        <Parameter Name="flags" Type="CoreMedia.CMBlockBufferFlags" />
        <Parameter Name="error" Type="CoreMedia.CMBlockBufferError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="subBlockCapacity">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public nuint DataLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint DataLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CMBlockBuffer object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CMBlockBuffer class.</para>
          <para>Calling the Dispose method when the application is finished using the CMBlockBuffer ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CMBlockBuffer object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CMBlockBuffer class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CMBlockBuffer ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDataBytes">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError FillDataBytes (byte fillByte, nuint offsetIntoDestination, nuint dataLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError FillDataBytes(unsigned int8 fillByte, valuetype System.nuint offsetIntoDestination, valuetype System.nuint dataLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fillByte" Type="System.Byte" />
        <Parameter Name="offsetIntoDestination" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="fillByte">To be added.</param>
        <param name="offsetIntoDestination">To be added.</param>
        <param name="dataLength">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CMBlockBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CMBlockBuffer object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMBlockBuffer FromBuffer (CoreMedia.CMBlockBuffer targetBuffer, nuint offsetToData, nuint dataLength, CoreMedia.CMBlockBufferFlags flags, out CoreMedia.CMBlockBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMBlockBuffer FromBuffer(class CoreMedia.CMBlockBuffer targetBuffer, valuetype System.nuint offsetToData, valuetype System.nuint dataLength, valuetype CoreMedia.CMBlockBufferFlags flags, valuetype CoreMedia.CMBlockBufferError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetBuffer" Type="CoreMedia.CMBlockBuffer" />
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
        <Parameter Name="flags" Type="CoreMedia.CMBlockBufferFlags" />
        <Parameter Name="error" Type="CoreMedia.CMBlockBufferError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targetBuffer">To be added.</param>
        <param name="offsetToData">To be added.</param>
        <param name="dataLength">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMemoryBlock">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMBlockBuffer FromMemoryBlock (byte[] data, nuint offsetToData, CoreMedia.CMBlockBufferFlags flags, out CoreMedia.CMBlockBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMBlockBuffer FromMemoryBlock(unsigned int8[] data, valuetype System.nuint offsetToData, valuetype CoreMedia.CMBlockBufferFlags flags, valuetype CoreMedia.CMBlockBufferError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="flags" Type="CoreMedia.CMBlockBufferFlags" />
        <Parameter Name="error" Type="CoreMedia.CMBlockBufferError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offsetToData">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMemoryBlock">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMBlockBuffer FromMemoryBlock (IntPtr memoryBlock, nuint blockLength, CoreMedia.CMCustomBlockAllocator customBlockSource, nuint offsetToData, nuint dataLength, CoreMedia.CMBlockBufferFlags flags, out CoreMedia.CMBlockBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMBlockBuffer FromMemoryBlock(native int memoryBlock, valuetype System.nuint blockLength, class CoreMedia.CMCustomBlockAllocator customBlockSource, valuetype System.nuint offsetToData, valuetype System.nuint dataLength, valuetype CoreMedia.CMBlockBufferFlags flags, valuetype CoreMedia.CMBlockBufferError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryBlock" Type="System.IntPtr" />
        <Parameter Name="blockLength" Type="System.nuint" />
        <Parameter Name="customBlockSource" Type="CoreMedia.CMCustomBlockAllocator" />
        <Parameter Name="offsetToData" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
        <Parameter Name="flags" Type="CoreMedia.CMBlockBufferFlags" />
        <Parameter Name="error" Type="CoreMedia.CMBlockBufferError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memoryBlock">To be added.</param>
        <param name="blockLength">To be added.</param>
        <param name="customBlockSource">To be added.</param>
        <param name="offsetToData">To be added.</param>
        <param name="dataLength">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataPointer">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError GetDataPointer (nuint offset, out nuint lengthAtOffset, out nuint totalLength, ref IntPtr dataPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError GetDataPointer(valuetype System.nuint offset, valuetype System.nuint lengthAtOffset, valuetype System.nuint totalLength, native int dataPointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.nuint" />
        <Parameter Name="lengthAtOffset" Type="System.nuint&amp;" RefType="out" />
        <Parameter Name="totalLength" Type="System.nuint&amp;" RefType="out" />
        <Parameter Name="dataPointer" Type="System.IntPtr&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <param name="lengthAtOffset">To be added.</param>
        <param name="totalLength">To be added.</param>
        <param name="dataPointer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRangeContiguous">
      <MemberSignature Language="C#" Value="public bool IsRangeContiguous (nuint offset, nuint length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRangeContiguous(valuetype System.nuint offset, valuetype System.nuint length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.nuint" />
        <Parameter Name="length" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDataBytes">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError ReplaceDataBytes (byte[] sourceBytes, nuint offsetIntoDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError ReplaceDataBytes(unsigned int8[] sourceBytes, valuetype System.nuint offsetIntoDestination) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceBytes" Type="System.Byte[]" />
        <Parameter Name="offsetIntoDestination" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="sourceBytes">Source byte array</param>
        <param name="offsetIntoDestination">Destination replacement offset</param>
        <summary>Copies and Replaces a chunk of the buffer with the given source byte array data.</summary>
        <returns>Operation status.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDataBytes">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBufferError ReplaceDataBytes (IntPtr sourceBytes, nuint offsetIntoDestination, nuint dataLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMBlockBufferError ReplaceDataBytes(native int sourceBytes, valuetype System.nuint offsetIntoDestination, valuetype System.nuint dataLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceBytes" Type="System.IntPtr" />
        <Parameter Name="offsetIntoDestination" Type="System.nuint" />
        <Parameter Name="dataLength" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="sourceBytes">To be added.</param>
        <param name="offsetIntoDestination">To be added.</param>
        <param name="dataLength">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
