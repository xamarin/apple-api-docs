<Type Name="CMBufferQueue" FullName="CoreMedia.CMBufferQueue">
  <TypeSignature Language="C#" Value="public class CMBufferQueue : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CMBufferQueue extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreMedia.CMBufferQueue" />
  <TypeSignature Language="F#" Value="type CMBufferQueue = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>CoreMedia Buffer Queue.</summary>
    <remarks>The CoreMedia queue exposes a thread-safe API to queue and dequeue buffers.   When you construct the CMBufferQueue, you can specific custom functions to sort the buffers by time, or you can use the convenience function CreateUnsorted to create a queue that behaves like a FIFO.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BufferCount">
      <MemberSignature Language="C#" Value="public nint BufferCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint BufferCount" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMBufferQueue.BufferCount" />
      <MemberSignature Language="F#" Value="member this.BufferCount : nint" Usage="CoreMedia.CMBufferQueue.BufferCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsEndOfData">
      <MemberSignature Language="C#" Value="public bool ContainsEndOfData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsEndOfData" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMBufferQueue.ContainsEndOfData" />
      <MemberSignature Language="F#" Value="member this.ContainsEndOfData : bool" Usage="CoreMedia.CMBufferQueue.ContainsEndOfData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUnsorted">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMBufferQueue CreateUnsorted (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMBufferQueue CreateUnsorted(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.CreateUnsorted(System.Int32)" />
      <MemberSignature Language="F#" Value="static member CreateUnsorted : int -&gt; CoreMedia.CMBufferQueue" Usage="CoreMedia.CMBufferQueue.CreateUnsorted count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBufferQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">Number of items in the queue.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public ObjCRuntime.INativeObject Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ObjCRuntime.INativeObject Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.Dequeue" />
      <MemberSignature Language="F#" Value="member this.Dequeue : unit -&gt; ObjCRuntime.INativeObject" Usage="cMBufferQueue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.INativeObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DequeueIfDataReady">
      <MemberSignature Language="C#" Value="public ObjCRuntime.INativeObject DequeueIfDataReady ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ObjCRuntime.INativeObject DequeueIfDataReady() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.DequeueIfDataReady" />
      <MemberSignature Language="F#" Value="member this.DequeueIfDataReady : unit -&gt; ObjCRuntime.INativeObject" Usage="cMBufferQueue.DequeueIfDataReady " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.INativeObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cMBufferQueue.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CMBufferQueue object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CMBufferQueue class.</para>
          <para>Calling the Dispose method when the application is finished using the CMBufferQueue ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cMBufferQueue.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CMBufferQueue object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CMBufferQueue class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CMBufferQueue ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime Duration" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMBufferQueue.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : CoreMedia.CMTime" Usage="CoreMedia.CMBufferQueue.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (ObjCRuntime.INativeObject cftypeBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(class ObjCRuntime.INativeObject cftypeBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.Enqueue(ObjCRuntime.INativeObject)" />
      <MemberSignature Language="F#" Value="member this.Enqueue : ObjCRuntime.INativeObject -&gt; unit" Usage="cMBufferQueue.Enqueue cftypeBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cftypeBuffer" Type="ObjCRuntime.INativeObject" />
      </Parameters>
      <Docs>
        <param name="cftypeBuffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CMBufferQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cMBufferQueue.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CMBufferQueue object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCallbacks">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMBufferQueue FromCallbacks (int count, CoreMedia.CMBufferGetTime getDecodeTimeStamp, CoreMedia.CMBufferGetTime getPresentationTimeStamp, CoreMedia.CMBufferGetTime getDuration, CoreMedia.CMBufferGetBool isDataReady, CoreMedia.CMBufferCompare compare, Foundation.NSString dataBecameReadyNotification);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMBufferQueue FromCallbacks(int32 count, class CoreMedia.CMBufferGetTime getDecodeTimeStamp, class CoreMedia.CMBufferGetTime getPresentationTimeStamp, class CoreMedia.CMBufferGetTime getDuration, class CoreMedia.CMBufferGetBool isDataReady, class CoreMedia.CMBufferCompare compare, class Foundation.NSString dataBecameReadyNotification) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.FromCallbacks(System.Int32,CoreMedia.CMBufferGetTime,CoreMedia.CMBufferGetTime,CoreMedia.CMBufferGetTime,CoreMedia.CMBufferGetBool,CoreMedia.CMBufferCompare,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="static member FromCallbacks : int * CoreMedia.CMBufferGetTime * CoreMedia.CMBufferGetTime * CoreMedia.CMBufferGetTime * CoreMedia.CMBufferGetBool * CoreMedia.CMBufferCompare * Foundation.NSString -&gt; CoreMedia.CMBufferQueue" Usage="CoreMedia.CMBufferQueue.FromCallbacks (count, getDecodeTimeStamp, getPresentationTimeStamp, getDuration, isDataReady, compare, dataBecameReadyNotification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBufferQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="getDecodeTimeStamp" Type="CoreMedia.CMBufferGetTime" />
        <Parameter Name="getPresentationTimeStamp" Type="CoreMedia.CMBufferGetTime" />
        <Parameter Name="getDuration" Type="CoreMedia.CMBufferGetTime" />
        <Parameter Name="isDataReady" Type="CoreMedia.CMBufferGetBool" />
        <Parameter Name="compare" Type="CoreMedia.CMBufferCompare" />
        <Parameter Name="dataBecameReadyNotification" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="count">Number of items in the queue.</param>
        <param name="getDecodeTimeStamp">To be added.</param>
        <param name="getPresentationTimeStamp">To be added.</param>
        <param name="getDuration">To be added.</param>
        <param name="isDataReady">To be added.</param>
        <param name="compare">To be added.</param>
        <param name="dataBecameReadyNotification">To be added.</param>
        <summary>Creates a custom CMBufferQueue that sorts and returns the objects in the queue based on the various callbacks you provide.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCallbacks">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMBufferQueue FromCallbacks (int count, CoreMedia.CMBufferGetTime getDecodeTimeStamp, CoreMedia.CMBufferGetTime getPresentationTimeStamp, CoreMedia.CMBufferGetTime getDuration, CoreMedia.CMBufferGetBool isDataReady, CoreMedia.CMBufferCompare compare, Foundation.NSString dataBecameReadyNotification, CoreMedia.CMBufferGetSize getTotalSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMBufferQueue FromCallbacks(int32 count, class CoreMedia.CMBufferGetTime getDecodeTimeStamp, class CoreMedia.CMBufferGetTime getPresentationTimeStamp, class CoreMedia.CMBufferGetTime getDuration, class CoreMedia.CMBufferGetBool isDataReady, class CoreMedia.CMBufferCompare compare, class Foundation.NSString dataBecameReadyNotification, class CoreMedia.CMBufferGetSize getTotalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.FromCallbacks(System.Int32,CoreMedia.CMBufferGetTime,CoreMedia.CMBufferGetTime,CoreMedia.CMBufferGetTime,CoreMedia.CMBufferGetBool,CoreMedia.CMBufferCompare,Foundation.NSString,CoreMedia.CMBufferGetSize)" />
      <MemberSignature Language="F#" Value="static member FromCallbacks : int * CoreMedia.CMBufferGetTime * CoreMedia.CMBufferGetTime * CoreMedia.CMBufferGetTime * CoreMedia.CMBufferGetBool * CoreMedia.CMBufferCompare * Foundation.NSString * CoreMedia.CMBufferGetSize -&gt; CoreMedia.CMBufferQueue" Usage="CoreMedia.CMBufferQueue.FromCallbacks (count, getDecodeTimeStamp, getPresentationTimeStamp, getDuration, isDataReady, compare, dataBecameReadyNotification, getTotalSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBufferQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="getDecodeTimeStamp" Type="CoreMedia.CMBufferGetTime" />
        <Parameter Name="getPresentationTimeStamp" Type="CoreMedia.CMBufferGetTime" />
        <Parameter Name="getDuration" Type="CoreMedia.CMBufferGetTime" />
        <Parameter Name="isDataReady" Type="CoreMedia.CMBufferGetBool" />
        <Parameter Name="compare" Type="CoreMedia.CMBufferCompare" />
        <Parameter Name="dataBecameReadyNotification" Type="Foundation.NSString" />
        <Parameter Name="getTotalSize" Type="CoreMedia.CMBufferGetSize" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <param name="getDecodeTimeStamp">To be added.</param>
        <param name="getPresentationTimeStamp">To be added.</param>
        <param name="getDuration">To be added.</param>
        <param name="isDataReady">To be added.</param>
        <param name="compare">To be added.</param>
        <param name="dataBecameReadyNotification">To be added.</param>
        <param name="getTotalSize">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTotalSize">
      <MemberSignature Language="C#" Value="public nint GetTotalSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nint GetTotalSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.GetTotalSize" />
      <MemberSignature Language="F#" Value="member this.GetTotalSize : unit -&gt; nint" Usage="cMBufferQueue.GetTotalSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMBufferQueue.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreMedia.CMBufferQueue.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAtEndOfData">
      <MemberSignature Language="C#" Value="public bool IsAtEndOfData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtEndOfData" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMBufferQueue.IsAtEndOfData" />
      <MemberSignature Language="F#" Value="member this.IsAtEndOfData : bool" Usage="CoreMedia.CMBufferQueue.IsAtEndOfData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMBufferQueue.IsEmpty" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="CoreMedia.CMBufferQueue.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkEndOfData">
      <MemberSignature Language="C#" Value="public int MarkEndOfData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 MarkEndOfData() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.MarkEndOfData" />
      <MemberSignature Language="F#" Value="member this.MarkEndOfData : unit -&gt; int" Usage="cMBufferQueue.MarkEndOfData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public int Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMBufferQueue.Reset" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; int" Usage="cMBufferQueue.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
