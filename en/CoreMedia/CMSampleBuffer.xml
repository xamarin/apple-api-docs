<Type Name="CMSampleBuffer" FullName="CoreMedia.CMSampleBuffer">
  <TypeSignature Language="C#" Value="public class CMSampleBuffer : CoreMedia.ICMAttachmentBearer, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CMSampleBuffer extends System.Object implements class CoreMedia.ICMAttachmentBearer, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreMedia.CMSampleBuffer" />
  <TypeSignature Language="F#" Value="type CMSampleBuffer = class&#xA;    interface ICMAttachmentBearer&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CoreMedia.ICMAttachmentBearer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A container of zero-or-more samples of a particular media type.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/AVCaptureFrames/">avcaptureframes</related>
  </Docs>
  <Members>
    <Member MemberName="CallForEachSample">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferError CallForEachSample (Func&lt;CoreMedia.CMSampleBuffer,int,CoreMedia.CMSampleBufferError&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleBufferError CallForEachSample(class System.Func`3&lt;class CoreMedia.CMSampleBuffer, int32, valuetype CoreMedia.CMSampleBufferError&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CallForEachSample(System.Func{CoreMedia.CMSampleBuffer,System.Int32,CoreMedia.CMSampleBufferError})" />
      <MemberSignature Language="F#" Value="member this.CallForEachSample : Func&lt;CoreMedia.CMSampleBuffer, int, CoreMedia.CMSampleBufferError&gt; -&gt; CoreMedia.CMSampleBufferError" Usage="cMSampleBuffer.CallForEachSample callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;CoreMedia.CMSampleBuffer,System.Int32,CoreMedia.CMSampleBufferError&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPCMDataIntoAudioBufferList">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferError CopyPCMDataIntoAudioBufferList (int frameOffset, int numFrames, AudioToolbox.AudioBuffers bufferList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleBufferError CopyPCMDataIntoAudioBufferList(int32 frameOffset, int32 numFrames, class AudioToolbox.AudioBuffers bufferList) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CopyPCMDataIntoAudioBufferList(System.Int32,System.Int32,AudioToolbox.AudioBuffers)" />
      <MemberSignature Language="F#" Value="member this.CopyPCMDataIntoAudioBufferList : int * int * AudioToolbox.AudioBuffers -&gt; CoreMedia.CMSampleBufferError" Usage="cMSampleBuffer.CopyPCMDataIntoAudioBufferList (frameOffset, numFrames, bufferList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frameOffset" Type="System.Int32" />
        <Parameter Name="numFrames" Type="System.Int32" />
        <Parameter Name="bufferList" Type="AudioToolbox.AudioBuffers" />
      </Parameters>
      <Docs>
        <param name="frameOffset">To be added.</param>
        <param name="numFrames">To be added.</param>
        <param name="bufferList">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForImageBuffer">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMSampleBuffer CreateForImageBuffer (CoreVideo.CVImageBuffer imageBuffer, bool dataReady, CoreMedia.CMVideoFormatDescription formatDescription, CoreMedia.CMSampleTimingInfo sampleTiming, out CoreMedia.CMSampleBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMSampleBuffer CreateForImageBuffer(class CoreVideo.CVImageBuffer imageBuffer, bool dataReady, class CoreMedia.CMVideoFormatDescription formatDescription, valuetype CoreMedia.CMSampleTimingInfo sampleTiming, [out] valuetype CoreMedia.CMSampleBufferError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CreateForImageBuffer(CoreVideo.CVImageBuffer,System.Boolean,CoreMedia.CMVideoFormatDescription,CoreMedia.CMSampleTimingInfo,CoreMedia.CMSampleBufferError@)" />
      <MemberSignature Language="F#" Value="static member CreateForImageBuffer : CoreVideo.CVImageBuffer * bool * CoreMedia.CMVideoFormatDescription * CoreMedia.CMSampleTimingInfo *  -&gt; CoreMedia.CMSampleBuffer" Usage="CoreMedia.CMSampleBuffer.CreateForImageBuffer (imageBuffer, dataReady, formatDescription, sampleTiming, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageBuffer" Type="CoreVideo.CVImageBuffer" />
        <Parameter Name="dataReady" Type="System.Boolean" />
        <Parameter Name="formatDescription" Type="CoreMedia.CMVideoFormatDescription" />
        <Parameter Name="sampleTiming" Type="CoreMedia.CMSampleTimingInfo" />
        <Parameter Name="error" Type="CoreMedia.CMSampleBufferError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="imageBuffer">To be added.</param>
        <param name="dataReady">To be added.</param>
        <param name="formatDescription">To be added.</param>
        <param name="sampleTiming">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReady">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMSampleBuffer CreateReady (CoreMedia.CMBlockBuffer dataBuffer, CoreMedia.CMFormatDescription formatDescription, int samplesCount, CoreMedia.CMSampleTimingInfo[] sampleTimingArray, nuint[] sampleSizeArray, out CoreMedia.CMSampleBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMSampleBuffer CreateReady(class CoreMedia.CMBlockBuffer dataBuffer, class CoreMedia.CMFormatDescription formatDescription, int32 samplesCount, valuetype CoreMedia.CMSampleTimingInfo[] sampleTimingArray, valuetype System.nuint[] sampleSizeArray, [out] valuetype CoreMedia.CMSampleBufferError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CreateReady(CoreMedia.CMBlockBuffer,CoreMedia.CMFormatDescription,System.Int32,CoreMedia.CMSampleTimingInfo[],System.nuint[],CoreMedia.CMSampleBufferError@)" />
      <MemberSignature Language="F#" Value="static member CreateReady : CoreMedia.CMBlockBuffer * CoreMedia.CMFormatDescription * int * CoreMedia.CMSampleTimingInfo[] * nuint[] *  -&gt; CoreMedia.CMSampleBuffer" Usage="CoreMedia.CMSampleBuffer.CreateReady (dataBuffer, formatDescription, samplesCount, sampleTimingArray, sampleSizeArray, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBuffer" Type="CoreMedia.CMBlockBuffer" />
        <Parameter Name="formatDescription" Type="CoreMedia.CMFormatDescription" />
        <Parameter Name="samplesCount" Type="System.Int32" />
        <Parameter Name="sampleTimingArray" Type="CoreMedia.CMSampleTimingInfo[]" />
        <Parameter Name="sampleSizeArray" Type="System.nuint[]" />
        <Parameter Name="error" Type="CoreMedia.CMSampleBufferError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataBuffer">To be added.</param>
        <param name="formatDescription">To be added.</param>
        <param name="samplesCount">To be added.</param>
        <param name="sampleTimingArray">To be added.</param>
        <param name="sampleSizeArray">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReadyWithImageBuffer">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMSampleBuffer CreateReadyWithImageBuffer (CoreVideo.CVImageBuffer imageBuffer, CoreMedia.CMFormatDescription formatDescription, CoreMedia.CMSampleTimingInfo[] sampleTiming, out CoreMedia.CMSampleBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMSampleBuffer CreateReadyWithImageBuffer(class CoreVideo.CVImageBuffer imageBuffer, class CoreMedia.CMFormatDescription formatDescription, valuetype CoreMedia.CMSampleTimingInfo[] sampleTiming, [out] valuetype CoreMedia.CMSampleBufferError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CreateReadyWithImageBuffer(CoreVideo.CVImageBuffer,CoreMedia.CMFormatDescription,CoreMedia.CMSampleTimingInfo[],CoreMedia.CMSampleBufferError@)" />
      <MemberSignature Language="F#" Value="static member CreateReadyWithImageBuffer : CoreVideo.CVImageBuffer * CoreMedia.CMFormatDescription * CoreMedia.CMSampleTimingInfo[] *  -&gt; CoreMedia.CMSampleBuffer" Usage="CoreMedia.CMSampleBuffer.CreateReadyWithImageBuffer (imageBuffer, formatDescription, sampleTiming, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageBuffer" Type="CoreVideo.CVImageBuffer" />
        <Parameter Name="formatDescription" Type="CoreMedia.CMFormatDescription" />
        <Parameter Name="sampleTiming" Type="CoreMedia.CMSampleTimingInfo[]" />
        <Parameter Name="error" Type="CoreMedia.CMSampleBufferError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="imageBuffer">To be added.</param>
        <param name="formatDescription">To be added.</param>
        <param name="sampleTiming">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReadyWithPacketDescriptions">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMSampleBuffer CreateReadyWithPacketDescriptions (CoreMedia.CMBlockBuffer dataBuffer, CoreMedia.CMFormatDescription formatDescription, int samplesCount, CoreMedia.CMTime sampleTimestamp, AudioToolbox.AudioStreamPacketDescription[] packetDescriptions, out CoreMedia.CMSampleBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMSampleBuffer CreateReadyWithPacketDescriptions(class CoreMedia.CMBlockBuffer dataBuffer, class CoreMedia.CMFormatDescription formatDescription, int32 samplesCount, valuetype CoreMedia.CMTime sampleTimestamp, valuetype AudioToolbox.AudioStreamPacketDescription[] packetDescriptions, [out] valuetype CoreMedia.CMSampleBufferError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CreateReadyWithPacketDescriptions(CoreMedia.CMBlockBuffer,CoreMedia.CMFormatDescription,System.Int32,CoreMedia.CMTime,AudioToolbox.AudioStreamPacketDescription[],CoreMedia.CMSampleBufferError@)" />
      <MemberSignature Language="F#" Value="static member CreateReadyWithPacketDescriptions : CoreMedia.CMBlockBuffer * CoreMedia.CMFormatDescription * int * CoreMedia.CMTime * AudioToolbox.AudioStreamPacketDescription[] *  -&gt; CoreMedia.CMSampleBuffer" Usage="CoreMedia.CMSampleBuffer.CreateReadyWithPacketDescriptions (dataBuffer, formatDescription, samplesCount, sampleTimestamp, packetDescriptions, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBuffer" Type="CoreMedia.CMBlockBuffer" />
        <Parameter Name="formatDescription" Type="CoreMedia.CMFormatDescription" />
        <Parameter Name="samplesCount" Type="System.Int32" />
        <Parameter Name="sampleTimestamp" Type="CoreMedia.CMTime" />
        <Parameter Name="packetDescriptions" Type="AudioToolbox.AudioStreamPacketDescription[]" />
        <Parameter Name="error" Type="CoreMedia.CMSampleBufferError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataBuffer">To be added.</param>
        <param name="formatDescription">To be added.</param>
        <param name="samplesCount">To be added.</param>
        <param name="sampleTimestamp">To be added.</param>
        <param name="packetDescriptions">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithNewTiming">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMSampleBuffer CreateWithNewTiming (CoreMedia.CMSampleBuffer original, CoreMedia.CMSampleTimingInfo[] timing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMSampleBuffer CreateWithNewTiming(class CoreMedia.CMSampleBuffer original, valuetype CoreMedia.CMSampleTimingInfo[] timing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CreateWithNewTiming(CoreMedia.CMSampleBuffer,CoreMedia.CMSampleTimingInfo[])" />
      <MemberSignature Language="F#" Value="static member CreateWithNewTiming : CoreMedia.CMSampleBuffer * CoreMedia.CMSampleTimingInfo[] -&gt; CoreMedia.CMSampleBuffer" Usage="CoreMedia.CMSampleBuffer.CreateWithNewTiming (original, timing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="timing" Type="CoreMedia.CMSampleTimingInfo[]" />
      </Parameters>
      <Docs>
        <param name="original">The existing sample buffer providing the default values for the new sample buffer.</param>
        <param name="timing">The timing information for the new sample buffer.</param>
        <summary>Clones a sample buffer, using the provided timing information.</summary>
        <returns>An identical sample buffer as the original one, except with the provided timing information.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithNewTiming">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMSampleBuffer CreateWithNewTiming (CoreMedia.CMSampleBuffer original, CoreMedia.CMSampleTimingInfo[] timing, out nint status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMSampleBuffer CreateWithNewTiming(class CoreMedia.CMSampleBuffer original, valuetype CoreMedia.CMSampleTimingInfo[] timing, [out] valuetype System.nint&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CreateWithNewTiming(CoreMedia.CMSampleBuffer,CoreMedia.CMSampleTimingInfo[],System.nint@)" />
      <MemberSignature Language="F#" Value="static member CreateWithNewTiming : CoreMedia.CMSampleBuffer * CoreMedia.CMSampleTimingInfo[] *  -&gt; CoreMedia.CMSampleBuffer" Usage="CoreMedia.CMSampleBuffer.CreateWithNewTiming (original, timing, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="timing" Type="CoreMedia.CMSampleTimingInfo[]" />
        <Parameter Name="status" Type="System.nint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="original">The existing sample buffer providing the default values for the new sample buffer.</param>
        <param name="timing">The timing information for the new sample buffer.</param>
        <param name="status">The error code if an error occurs, 0 otherwise.</param>
        <summary>Clones a sample buffer, using the provided timing information.</summary>
        <returns>An identical sample buffer as the original one, except with the provided timing information. If an error occurs null will be returned and the 'status' parameter will contain the error code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithPacketDescriptions">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMSampleBuffer CreateWithPacketDescriptions (CoreMedia.CMBlockBuffer dataBuffer, CoreMedia.CMFormatDescription formatDescription, int samplesCount, CoreMedia.CMTime sampleTimestamp, AudioToolbox.AudioStreamPacketDescription[] packetDescriptions, out CoreMedia.CMSampleBufferError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMedia.CMSampleBuffer CreateWithPacketDescriptions(class CoreMedia.CMBlockBuffer dataBuffer, class CoreMedia.CMFormatDescription formatDescription, int32 samplesCount, valuetype CoreMedia.CMTime sampleTimestamp, valuetype AudioToolbox.AudioStreamPacketDescription[] packetDescriptions, [out] valuetype CoreMedia.CMSampleBufferError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.CreateWithPacketDescriptions(CoreMedia.CMBlockBuffer,CoreMedia.CMFormatDescription,System.Int32,CoreMedia.CMTime,AudioToolbox.AudioStreamPacketDescription[],CoreMedia.CMSampleBufferError@)" />
      <MemberSignature Language="F#" Value="static member CreateWithPacketDescriptions : CoreMedia.CMBlockBuffer * CoreMedia.CMFormatDescription * int * CoreMedia.CMTime * AudioToolbox.AudioStreamPacketDescription[] *  -&gt; CoreMedia.CMSampleBuffer" Usage="CoreMedia.CMSampleBuffer.CreateWithPacketDescriptions (dataBuffer, formatDescription, samplesCount, sampleTimestamp, packetDescriptions, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBuffer" Type="CoreMedia.CMBlockBuffer" />
        <Parameter Name="formatDescription" Type="CoreMedia.CMFormatDescription" />
        <Parameter Name="samplesCount" Type="System.Int32" />
        <Parameter Name="sampleTimestamp" Type="CoreMedia.CMTime" />
        <Parameter Name="packetDescriptions" Type="AudioToolbox.AudioStreamPacketDescription[]" />
        <Parameter Name="error" Type="CoreMedia.CMSampleBufferError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataBuffer">To be added.</param>
        <param name="formatDescription">To be added.</param>
        <param name="samplesCount">To be added.</param>
        <param name="sampleTimestamp">To be added.</param>
        <param name="packetDescriptions">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataIsReady">
      <MemberSignature Language="C#" Value="public bool DataIsReady { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataIsReady" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.DataIsReady" />
      <MemberSignature Language="F#" Value="member this.DataIsReady : bool" Usage="CoreMedia.CMSampleBuffer.DataIsReady" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeTimeStamp">
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime DecodeTimeStamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime DecodeTimeStamp" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.DecodeTimeStamp" />
      <MemberSignature Language="F#" Value="member this.DecodeTimeStamp : CoreMedia.CMTime" Usage="CoreMedia.CMSampleBuffer.DecodeTimeStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cMSampleBuffer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CMSampleBuffer object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CMSampleBuffer class.</para>
          <para>Calling the Dispose method when the application is finished using the CMSampleBuffer ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cMSampleBuffer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CMSampleBuffer object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CMSampleBuffer class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CMSampleBuffer ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime Duration" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : CoreMedia.CMTime" Usage="CoreMedia.CMSampleBuffer.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CMSampleBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cMSampleBuffer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CMSampleBuffer object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioFormatDescription">
      <MemberSignature Language="C#" Value="public CoreMedia.CMAudioFormatDescription GetAudioFormatDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreMedia.CMAudioFormatDescription GetAudioFormatDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetAudioFormatDescription" />
      <MemberSignature Language="F#" Value="member this.GetAudioFormatDescription : unit -&gt; CoreMedia.CMAudioFormatDescription" Usage="cMSampleBuffer.GetAudioFormatDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMAudioFormatDescription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBuffer">
      <MemberSignature Language="C#" Value="public CoreMedia.CMBlockBuffer GetDataBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreMedia.CMBlockBuffer GetDataBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetDataBuffer" />
      <MemberSignature Language="F#" Value="member this.GetDataBuffer : unit -&gt; CoreMedia.CMBlockBuffer" Usage="cMSampleBuffer.GetDataBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMBlockBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageBuffer">
      <MemberSignature Language="C#" Value="public CoreVideo.CVImageBuffer GetImageBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreVideo.CVImageBuffer GetImageBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetImageBuffer" />
      <MemberSignature Language="F#" Value="member this.GetImageBuffer : unit -&gt; CoreVideo.CVImageBuffer" Usage="cMSampleBuffer.GetImageBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreVideo.CVImageBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSampleAttachments">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferAttachmentSettings[] GetSampleAttachments (bool createIfNecessary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreMedia.CMSampleBufferAttachmentSettings[] GetSampleAttachments(bool createIfNecessary) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetSampleAttachments(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.GetSampleAttachments : bool -&gt; CoreMedia.CMSampleBufferAttachmentSettings[]" Usage="cMSampleBuffer.GetSampleAttachments createIfNecessary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferAttachmentSettings[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createIfNecessary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="createIfNecessary">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSampleSize">
      <MemberSignature Language="C#" Value="public nuint GetSampleSize (nint sampleIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nuint GetSampleSize(valuetype System.nint sampleIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetSampleSize(System.nint)" />
      <MemberSignature Language="F#" Value="member this.GetSampleSize : nint -&gt; nuint" Usage="cMSampleBuffer.GetSampleSize sampleIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleIndex" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="sampleIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSampleTimingInfo">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleTimingInfo[] GetSampleTimingInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleTimingInfo[] GetSampleTimingInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetSampleTimingInfo" />
      <MemberSignature Language="F#" Value="member this.GetSampleTimingInfo : unit -&gt; CoreMedia.CMSampleTimingInfo[]" Usage="cMSampleBuffer.GetSampleTimingInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleTimingInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fetches the timing information for the sample buffer.</summary>
        <returns>An array of CMSampleTimingInfo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSampleTimingInfo">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleTimingInfo[] GetSampleTimingInfo (out nint status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleTimingInfo[] GetSampleTimingInfo([out] valuetype System.nint&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetSampleTimingInfo(System.nint@)" />
      <MemberSignature Language="F#" Value="member this.GetSampleTimingInfo :  -&gt; CoreMedia.CMSampleTimingInfo[]" Usage="cMSampleBuffer.GetSampleTimingInfo status" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleTimingInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.nint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="status">The error code if an error occurs, 0 otherwise.</param>
        <summary>Fetches the timing information for the sample buffer.</summary>
        <returns>An array of CMSampleTimingInfo. If an error occurs null will be returned and the 'status' parameter will contain the error code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetTypeID() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetTypeID" />
      <MemberSignature Language="F#" Value="static member GetTypeID : unit -&gt; nint" Usage="CoreMedia.CMSampleBuffer.GetTypeID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the CoreMedia.CMSampleBuffer type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID(System.IntPtr)" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isCMSampleBuffer = (CFType.GetTypeID (foo.Handle) == CMSampleBuffer.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVideoFormatDescription">
      <MemberSignature Language="C#" Value="public CoreMedia.CMVideoFormatDescription GetVideoFormatDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreMedia.CMVideoFormatDescription GetVideoFormatDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.GetVideoFormatDescription" />
      <MemberSignature Language="F#" Value="member this.GetVideoFormatDescription : unit -&gt; CoreMedia.CMVideoFormatDescription" Usage="cMSampleBuffer.GetVideoFormatDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMVideoFormatDescription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreMedia.CMSampleBuffer.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferError Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleBufferError Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.Invalidate" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; CoreMedia.CMSampleBufferError" Usage="cMSampleBuffer.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferError</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.IsValid" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="CoreMedia.CMSampleBuffer.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDataReady">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferError MakeDataReady ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleBufferError MakeDataReady() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.MakeDataReady" />
      <MemberSignature Language="F#" Value="member this.MakeDataReady : unit -&gt; CoreMedia.CMSampleBufferError" Usage="cMSampleBuffer.MakeDataReady " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferError</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumSamples">
      <MemberSignature Language="C#" Value="public nint NumSamples { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint NumSamples" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.NumSamples" />
      <MemberSignature Language="F#" Value="member this.NumSamples : nint" Usage="CoreMedia.CMSampleBuffer.NumSamples" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputDecodeTimeStamp">
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime OutputDecodeTimeStamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime OutputDecodeTimeStamp" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.OutputDecodeTimeStamp" />
      <MemberSignature Language="F#" Value="member this.OutputDecodeTimeStamp : CoreMedia.CMTime" Usage="CoreMedia.CMSampleBuffer.OutputDecodeTimeStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputDuration">
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime OutputDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime OutputDuration" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.OutputDuration" />
      <MemberSignature Language="F#" Value="member this.OutputDuration : CoreMedia.CMTime" Usage="CoreMedia.CMSampleBuffer.OutputDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputPresentationTimeStamp">
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime OutputPresentationTimeStamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime OutputPresentationTimeStamp" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.OutputPresentationTimeStamp" />
      <MemberSignature Language="F#" Value="member this.OutputPresentationTimeStamp : CoreMedia.CMTime" Usage="CoreMedia.CMSampleBuffer.OutputPresentationTimeStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentationTimeStamp">
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime PresentationTimeStamp" />
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime PresentationTimeStamp { get; set; }" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.PresentationTimeStamp" />
      <MemberSignature Language="F#" Value="member this.PresentationTimeStamp : CoreMedia.CMTime with get, set" Usage="CoreMedia.CMSampleBuffer.PresentationTimeStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataBuffer">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferError SetDataBuffer (CoreMedia.CMBlockBuffer dataBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleBufferError SetDataBuffer(class CoreMedia.CMBlockBuffer dataBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.SetDataBuffer(CoreMedia.CMBlockBuffer)" />
      <MemberSignature Language="F#" Value="member this.SetDataBuffer : CoreMedia.CMBlockBuffer -&gt; CoreMedia.CMSampleBufferError" Usage="cMSampleBuffer.SetDataBuffer dataBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBuffer" Type="CoreMedia.CMBlockBuffer" />
      </Parameters>
      <Docs>
        <param name="dataBuffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataReady">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferError SetDataReady ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleBufferError SetDataReady() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.SetDataReady" />
      <MemberSignature Language="F#" Value="member this.SetDataReady : unit -&gt; CoreMedia.CMSampleBufferError" Usage="cMSampleBuffer.SetDataReady " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferError</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInvalidateCallback">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferError SetInvalidateCallback (Action&lt;CoreMedia.CMSampleBuffer&gt; invalidateHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleBufferError SetInvalidateCallback(class System.Action`1&lt;class CoreMedia.CMSampleBuffer&gt; invalidateHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.SetInvalidateCallback(System.Action{CoreMedia.CMSampleBuffer})" />
      <MemberSignature Language="F#" Value="member this.SetInvalidateCallback : Action&lt;CoreMedia.CMSampleBuffer&gt; -&gt; CoreMedia.CMSampleBufferError" Usage="cMSampleBuffer.SetInvalidateCallback invalidateHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidateHandler" Type="System.Action&lt;CoreMedia.CMSampleBuffer&gt;" />
      </Parameters>
      <Docs>
        <param name="invalidateHandler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalSampleSize">
      <MemberSignature Language="C#" Value="public nuint TotalSampleSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint TotalSampleSize" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMSampleBuffer.TotalSampleSize" />
      <MemberSignature Language="F#" Value="member this.TotalSampleSize : nuint" Usage="CoreMedia.CMSampleBuffer.TotalSampleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackDataReadiness">
      <MemberSignature Language="C#" Value="public CoreMedia.CMSampleBufferError TrackDataReadiness (CoreMedia.CMSampleBuffer bufferToTrack);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMedia.CMSampleBufferError TrackDataReadiness(class CoreMedia.CMSampleBuffer bufferToTrack) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMSampleBuffer.TrackDataReadiness(CoreMedia.CMSampleBuffer)" />
      <MemberSignature Language="F#" Value="member this.TrackDataReadiness : CoreMedia.CMSampleBuffer -&gt; CoreMedia.CMSampleBufferError" Usage="cMSampleBuffer.TrackDataReadiness bufferToTrack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSampleBufferError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferToTrack" Type="CoreMedia.CMSampleBuffer" />
      </Parameters>
      <Docs>
        <param name="bufferToTrack">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
