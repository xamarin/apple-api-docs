<Type Name="CMClockOrTimebase" FullName="CoreMedia.CMClockOrTimebase">
  <TypeSignature Language="C#" Value="public class CMClockOrTimebase : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CMClockOrTimebase extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreMedia.CMClockOrTimebase" />
  <TypeSignature Language="F#" Value="type CMClockOrTimebase = class&#xA;    interface IDisposable&#xA;    interface INativeObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>The base class for <see cref="T:CoreMedia.CMClock" /> and <see cref="T:CoreMedia.CMTimebase" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CMClockOrTimebase (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMClockOrTimebase.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreMedia.CMClockOrTimebase : nativeint -&gt; CoreMedia.CMClockOrTimebase" Usage="new CoreMedia.CMClockOrTimebase handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMTime ConvertTime (CoreMedia.CMTime time, CoreMedia.CMClockOrTimebase from, CoreMedia.CMClockOrTimebase to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreMedia.CMTime ConvertTime(valuetype CoreMedia.CMTime time, class CoreMedia.CMClockOrTimebase from, class CoreMedia.CMClockOrTimebase to) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMClockOrTimebase.ConvertTime(CoreMedia.CMTime,CoreMedia.CMClockOrTimebase,CoreMedia.CMClockOrTimebase)" />
      <MemberSignature Language="F#" Value="static member ConvertTime : CoreMedia.CMTime * CoreMedia.CMClockOrTimebase * CoreMedia.CMClockOrTimebase -&gt; CoreMedia.CMTime" Usage="CoreMedia.CMClockOrTimebase.ConvertTime (time, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="CoreMedia.CMTime" />
        <Parameter Name="from" Type="CoreMedia.CMClockOrTimebase" />
        <Parameter Name="to" Type="CoreMedia.CMClockOrTimebase" />
      </Parameters>
      <Docs>
        <param name="time">To be added.</param>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMClockOrTimebase.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cMClockOrTimebase.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CMClockOrTimebase object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CMClockOrTimebase class.</para>
          <para>Calling the Dispose method when the application is finished using the CMClockOrTimebase ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMClockOrTimebase.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cMClockOrTimebase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CMClockOrTimebase object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CMClockOrTimebase class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CMClockOrTimebase ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CMClockOrTimebase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMClockOrTimebase.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cMClockOrTimebase.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CMClockOrTimebase object</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeRate">
      <MemberSignature Language="C#" Value="public static double GetRelativeRate (CoreMedia.CMClockOrTimebase clockOrTimebaseA, CoreMedia.CMClockOrTimebase clockOrTimebaseB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetRelativeRate(class CoreMedia.CMClockOrTimebase clockOrTimebaseA, class CoreMedia.CMClockOrTimebase clockOrTimebaseB) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMClockOrTimebase.GetRelativeRate(CoreMedia.CMClockOrTimebase,CoreMedia.CMClockOrTimebase)" />
      <MemberSignature Language="F#" Value="static member GetRelativeRate : CoreMedia.CMClockOrTimebase * CoreMedia.CMClockOrTimebase -&gt; double" Usage="CoreMedia.CMClockOrTimebase.GetRelativeRate (clockOrTimebaseA, clockOrTimebaseB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clockOrTimebaseA" Type="CoreMedia.CMClockOrTimebase" />
        <Parameter Name="clockOrTimebaseB" Type="CoreMedia.CMClockOrTimebase" />
      </Parameters>
      <Docs>
        <param name="clockOrTimebaseA">To be added.</param>
        <param name="clockOrTimebaseB">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeRateAndAnchorTime">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMSyncError GetRelativeRateAndAnchorTime (CoreMedia.CMClockOrTimebase clockOrTimebaseA, CoreMedia.CMClockOrTimebase clockOrTimebaseB, out double relativeRate, out CoreMedia.CMTime timeA, out CoreMedia.CMTime timeB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreMedia.CMSyncError GetRelativeRateAndAnchorTime(class CoreMedia.CMClockOrTimebase clockOrTimebaseA, class CoreMedia.CMClockOrTimebase clockOrTimebaseB, [out] float64&amp; relativeRate, [out] valuetype CoreMedia.CMTime&amp; timeA, [out] valuetype CoreMedia.CMTime&amp; timeB) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMClockOrTimebase.GetRelativeRateAndAnchorTime(CoreMedia.CMClockOrTimebase,CoreMedia.CMClockOrTimebase,System.Double@,CoreMedia.CMTime@,CoreMedia.CMTime@)" />
      <MemberSignature Language="F#" Value="static member GetRelativeRateAndAnchorTime : CoreMedia.CMClockOrTimebase * CoreMedia.CMClockOrTimebase *  *  *  -&gt; CoreMedia.CMSyncError" Usage="CoreMedia.CMClockOrTimebase.GetRelativeRateAndAnchorTime (clockOrTimebaseA, clockOrTimebaseB, relativeRate, timeA, timeB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMSyncError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clockOrTimebaseA" Type="CoreMedia.CMClockOrTimebase" />
        <Parameter Name="clockOrTimebaseB" Type="CoreMedia.CMClockOrTimebase" />
        <Parameter Name="relativeRate" Type="System.Double" RefType="out" />
        <Parameter Name="timeA" Type="CoreMedia.CMTime" RefType="out" />
        <Parameter Name="timeB" Type="CoreMedia.CMTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="clockOrTimebaseA">To be added.</param>
        <param name="clockOrTimebaseB">To be added.</param>
        <param name="relativeRate">To be added.</param>
        <param name="timeA">To be added.</param>
        <param name="timeB">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMClockOrTimebase.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreMedia.CMClockOrTimebase.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MightDrift">
      <MemberSignature Language="C#" Value="public static bool MightDrift (CoreMedia.CMClockOrTimebase clockOrTimebaseA, CoreMedia.CMClockOrTimebase clockOrTimebaseB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MightDrift(class CoreMedia.CMClockOrTimebase clockOrTimebaseA, class CoreMedia.CMClockOrTimebase clockOrTimebaseB) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMedia.CMClockOrTimebase.MightDrift(CoreMedia.CMClockOrTimebase,CoreMedia.CMClockOrTimebase)" />
      <MemberSignature Language="F#" Value="static member MightDrift : CoreMedia.CMClockOrTimebase * CoreMedia.CMClockOrTimebase -&gt; bool" Usage="CoreMedia.CMClockOrTimebase.MightDrift (clockOrTimebaseA, clockOrTimebaseB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clockOrTimebaseA" Type="CoreMedia.CMClockOrTimebase" />
        <Parameter Name="clockOrTimebaseB" Type="CoreMedia.CMClockOrTimebase" />
      </Parameters>
      <Docs>
        <param name="clockOrTimebaseA">To be added.</param>
        <param name="clockOrTimebaseB">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Time">
      <MemberSignature Language="C#" Value="public CoreMedia.CMTime Time { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime Time" />
      <MemberSignature Language="DocId" Value="P:CoreMedia.CMClockOrTimebase.Time" />
      <MemberSignature Language="F#" Value="member this.Time : CoreMedia.CMTime" Usage="CoreMedia.CMClockOrTimebase.Time" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
