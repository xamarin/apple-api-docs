<Type Name="CGImageMetadata" FullName="ImageIO.CGImageMetadata">
  <TypeSignature Language="C#" Value="public class CGImageMetadata : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGImageMetadata extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageIO.CGImageMetadata" />
  <TypeSignature Language="F#" Value="type CGImageMetadata = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An immutable container for metadata. (See <see cref="T:ImageIO.CGMutableImageMetadata" />.)</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGImageMetadata (Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.#ctor(Foundation.NSData)" />
      <MemberSignature Language="F#" Value="new ImageIO.CGImageMetadata : Foundation.NSData -&gt; ImageIO.CGImageMetadata" Usage="new ImageIO.CGImageMetadata data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGImageMetadata (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new ImageIO.CGImageMetadata : nativeint -&gt; ImageIO.CGImageMetadata" Usage="new ImageIO.CGImageMetadata handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTagMatchingImageProperty">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageMetadataTag CopyTagMatchingImageProperty (Foundation.NSString dictionaryName, Foundation.NSString propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ImageIO.CGImageMetadataTag CopyTagMatchingImageProperty(class Foundation.NSString dictionaryName, class Foundation.NSString propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.CopyTagMatchingImageProperty(Foundation.NSString,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="member this.CopyTagMatchingImageProperty : Foundation.NSString * Foundation.NSString -&gt; ImageIO.CGImageMetadataTag" Usage="cGImageMetadata.CopyTagMatchingImageProperty (dictionaryName, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageMetadataTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionaryName" Type="Foundation.NSString" />
        <Parameter Name="propertyName" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="dictionaryName">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXMPData">
      <MemberSignature Language="C#" Value="public Foundation.NSData CreateXMPData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData CreateXMPData() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.CreateXMPData" />
      <MemberSignature Language="F#" Value="member this.CreateXMPData : unit -&gt; Foundation.NSData" Usage="cGImageMetadata.CreateXMPData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cGImageMetadata.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGImageMetadata object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGImageMetadata class.</para>
          <para>Calling the Dispose method when the application is finished using the CGImageMetadata ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cGImageMetadata.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGImageMetadata object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGImageMetadata class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGImageMetadata ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateTags">
      <MemberSignature Language="C#" Value="public void EnumerateTags (Foundation.NSString rootPath, ImageIO.CGImageMetadataEnumerateOptions options, ImageIO.CGImageMetadataTagBlock block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateTags(class Foundation.NSString rootPath, class ImageIO.CGImageMetadataEnumerateOptions options, class ImageIO.CGImageMetadataTagBlock block) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.EnumerateTags(Foundation.NSString,ImageIO.CGImageMetadataEnumerateOptions,ImageIO.CGImageMetadataTagBlock)" />
      <MemberSignature Language="F#" Value="member this.EnumerateTags : Foundation.NSString * ImageIO.CGImageMetadataEnumerateOptions * ImageIO.CGImageMetadataTagBlock -&gt; unit" Usage="cGImageMetadata.EnumerateTags (rootPath, options, block)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootPath" Type="Foundation.NSString" />
        <Parameter Name="options" Type="ImageIO.CGImageMetadataEnumerateOptions" />
        <Parameter Name="block" Type="ImageIO.CGImageMetadataTagBlock" />
      </Parameters>
      <Docs>
        <param name="rootPath">To be added.</param>
        <param name="options">To be added.</param>
        <param name="block">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGImageMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cGImageMetadata.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGImageMetadata object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringValue">
      <MemberSignature Language="C#" Value="public Foundation.NSString GetStringValue (ImageIO.CGImageMetadata parent, Foundation.NSString path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSString GetStringValue(class ImageIO.CGImageMetadata parent, class Foundation.NSString path) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.GetStringValue(ImageIO.CGImageMetadata,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="member this.GetStringValue : ImageIO.CGImageMetadata * Foundation.NSString -&gt; Foundation.NSString" Usage="cGImageMetadata.GetStringValue (parent, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="ImageIO.CGImageMetadata" />
        <Parameter Name="path" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTag">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageMetadataTag GetTag (ImageIO.CGImageMetadata parent, Foundation.NSString path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ImageIO.CGImageMetadataTag GetTag(class ImageIO.CGImageMetadata parent, class Foundation.NSString path) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.GetTag(ImageIO.CGImageMetadata,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="member this.GetTag : ImageIO.CGImageMetadata * Foundation.NSString -&gt; ImageIO.CGImageMetadataTag" Usage="cGImageMetadata.GetTag (parent, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageMetadataTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="ImageIO.CGImageMetadata" />
        <Parameter Name="path" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTags">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageMetadataTag[] GetTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ImageIO.CGImageMetadataTag[] GetTags() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.GetTags" />
      <MemberSignature Language="F#" Value="member this.GetTags : unit -&gt; ImageIO.CGImageMetadataTag[]" Usage="cGImageMetadata.GetTags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageMetadataTag[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ImageIO.framework/ImageIO&quot; as &quot;CGImageMetadataGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadata.GetTypeID" />
      <MemberSignature Language="F#" Value="static member GetTypeID : unit -&gt; nint" Usage="ImageIO.CGImageMetadata.GetTypeID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the ImageIO.CGImageMetadata type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID(System.IntPtr)" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isCGImageMetadata = (CFType.GetTypeID (foo.Handle) == CGImageMetadata.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageMetadata.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="ImageIO.CGImageMetadata.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
