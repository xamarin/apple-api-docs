<Type Name="CGImageDestination" FullName="ImageIO.CGImageDestination">
  <TypeSignature Language="C#" Value="public class CGImageDestination : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGImageDestination extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Use this class to save images and have detailed control over how the images are saved.</summary>
    <remarks>
      <para>You create new instances of <see cref="T:ImageIO.CGImageDestination" /> by calling one of the factory methods.   There are three versions of it:</para>
      <list type="bullet">
        <item>
          <term>Storing the generated image into a file pointed to by an NSUrl.</term>
        </item>
        <item>
          <term>Storing the generated image into an <see cref="T:Foundation.NSMutableData" /></term>
        </item>
        <item>
          <term>Storing the generated image into a <see cref="T:CoreGraphics.CGDataConsumer" /></term>
        </item>
      </list>
      <para>In the classic API, those methods were called FromUrl, FromData and Create respectively.   But this naming was incorrect, as it did not really create an image destination from a url, or a data.  In the Unified API, they have all been turned into <see cref="M:ImageIO.CGImageDestination.Create" /> methods.</para>
      <para>
      </para>
      <para>Once you have created the image, you can call <see cref="M:ImageIO.CGImageDestination.AddImage" /> or <see cref="M:ImageIO.CGImageDestination.AddImageAndMetadata" /> to add one or more images.   </para>
      <para>
      </para>
      <para>To write out the image, you must call the <see cref="M:ImageIO.CGImageDestination.Close" /> method.   </para>
      <para>
      </para>
      <para>
      </para>
      <example>
        <code lang="C#"><![CDATA[// The following example shows how to store an image into
// an in-memory PNG file stored inside an NSData.

NSData ImageToPng (CGImage image)
{
   var storage = new NSMutableData ()
   var dest = CGImageDestination.Create (storage, MobileCoreServices.UTType.PNG, imageCount: 1);
   dest.AddImage (image);
   dest.Close (); 
   return storage;
}]]></code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAuxiliaryDataInfo">
      <MemberSignature Language="C#" Value="public void AddAuxiliaryDataInfo (ImageIO.CGImageAuxiliaryDataType auxiliaryImageDataType, ImageIO.CGImageAuxiliaryDataInfo auxiliaryDataInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuxiliaryDataInfo(valuetype ImageIO.CGImageAuxiliaryDataType auxiliaryImageDataType, class ImageIO.CGImageAuxiliaryDataInfo auxiliaryDataInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="auxiliaryImageDataType" Type="ImageIO.CGImageAuxiliaryDataType" />
        <Parameter Name="auxiliaryDataInfo" Type="ImageIO.CGImageAuxiliaryDataInfo" />
      </Parameters>
      <Docs>
        <param name="auxiliaryImageDataType">To be added.</param>
        <param name="auxiliaryDataInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImage">
      <MemberSignature Language="C#" Value="public void AddImage (CoreGraphics.CGImage image, Foundation.NSDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImage(class CoreGraphics.CGImage image, class Foundation.NSDictionary properties) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreGraphics.CGImage" />
        <Parameter Name="properties" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="properties">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImage">
      <MemberSignature Language="C#" Value="public void AddImage (CoreGraphics.CGImage image, ImageIO.CGImageDestinationOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImage(class CoreGraphics.CGImage image, class ImageIO.CGImageDestinationOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreGraphics.CGImage" />
        <Parameter Name="options" Type="ImageIO.CGImageDestinationOptions" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImage">
      <MemberSignature Language="C#" Value="public void AddImage (ImageIO.CGImageSource source, int index, Foundation.NSDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImage(class ImageIO.CGImageSource source, int32 index, class Foundation.NSDictionary properties) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="ImageIO.CGImageSource" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="properties" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="index">To be added.</param>
        <param name="properties">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImage">
      <MemberSignature Language="C#" Value="public void AddImage (ImageIO.CGImageSource source, int index, ImageIO.CGImageDestinationOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImage(class ImageIO.CGImageSource source, int32 index, class ImageIO.CGImageDestinationOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="ImageIO.CGImageSource" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="options" Type="ImageIO.CGImageDestinationOptions" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="index">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImageAndMetadata">
      <MemberSignature Language="C#" Value="public void AddImageAndMetadata (CoreGraphics.CGImage image, ImageIO.CGImageMetadata meta, Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImageAndMetadata(class CoreGraphics.CGImage image, class ImageIO.CGImageMetadata meta, class Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreGraphics.CGImage" />
        <Parameter Name="meta" Type="ImageIO.CGImageMetadata" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="meta">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImageAndMetadata">
      <MemberSignature Language="C#" Value="public void AddImageAndMetadata (CoreGraphics.CGImage image, ImageIO.CGImageMetadata meta, ImageIO.CGImageDestinationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImageAndMetadata(class CoreGraphics.CGImage image, class ImageIO.CGImageMetadata meta, class ImageIO.CGImageDestinationOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreGraphics.CGImage" />
        <Parameter Name="meta" Type="ImageIO.CGImageMetadata" />
        <Parameter Name="options" Type="ImageIO.CGImageDestinationOptions" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="meta">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the images to the destination and disposes the object.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyImageSource">
      <MemberSignature Language="C#" Value="public bool CopyImageSource (ImageIO.CGImageSource image, Foundation.NSDictionary options, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CopyImageSource(class ImageIO.CGImageSource image, class Foundation.NSDictionary options, class Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="ImageIO.CGImageSource" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
        <Parameter Name="error" Type="Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="options">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyImageSource">
      <MemberSignature Language="C#" Value="public bool CopyImageSource (ImageIO.CGImageSource image, ImageIO.CGCopyImageSourceOptions options, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CopyImageSource(class ImageIO.CGImageSource image, class ImageIO.CGCopyImageSourceOptions options, class Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="ImageIO.CGImageSource" />
        <Parameter Name="options" Type="ImageIO.CGCopyImageSourceOptions" />
        <Parameter Name="error" Type="Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="options">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageDestination Create (Foundation.NSUrl url, string typeIdentifier, int imageCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageDestination Create(class Foundation.NSUrl url, string typeIdentifier, int32 imageCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageDestination</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="typeIdentifier" Type="System.String" />
        <Parameter Name="imageCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="typeIdentifier">To be added.</param>
        <param name="imageCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageDestination Create (CoreGraphics.CGDataConsumer consumer, string typeIdentifier, int imageCount, ImageIO.CGImageDestinationOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageDestination Create(class CoreGraphics.CGDataConsumer consumer, string typeIdentifier, int32 imageCount, class ImageIO.CGImageDestinationOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageDestination</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumer" Type="CoreGraphics.CGDataConsumer" />
        <Parameter Name="typeIdentifier" Type="System.String" />
        <Parameter Name="imageCount" Type="System.Int32" />
        <Parameter Name="options" Type="ImageIO.CGImageDestinationOptions" />
      </Parameters>
      <Docs>
        <param name="consumer">To be added.</param>
        <param name="typeIdentifier">To be added.</param>
        <param name="imageCount">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageDestination Create (Foundation.NSMutableData data, string typeIdentifier, int imageCount, ImageIO.CGImageDestinationOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageDestination Create(class Foundation.NSMutableData data, string typeIdentifier, int32 imageCount, class ImageIO.CGImageDestinationOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageDestination</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSMutableData" />
        <Parameter Name="typeIdentifier" Type="System.String" />
        <Parameter Name="imageCount" Type="System.Int32" />
        <Parameter Name="options" Type="ImageIO.CGImageDestinationOptions" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="typeIdentifier">To be added.</param>
        <param name="imageCount">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGImageDestination object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGImageDestination class.</para>
          <para>Calling the Dispose method when the application is finished using the CGImageDestination ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGImageDestination object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGImageDestination class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGImageDestination ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGImageDestination ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGImageDestination object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ImageIO.framework/ImageIO&quot; as &quot;CGImageDestinationGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the ImageIO.CGImageDestination type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isCGImageDestination = (CFType.GetTypeID (foo.Handle) == CGImageDestination.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperties">
      <MemberSignature Language="C#" Value="public void SetProperties (Foundation.NSDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperties(class Foundation.NSDictionary properties) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeIdentifiers">
      <MemberSignature Language="C#" Value="public static string[] TypeIdentifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string[] TypeIdentifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
