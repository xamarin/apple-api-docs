<Type Name="CGImageSource" FullName="ImageIO.CGImageSource">
  <TypeSignature Language="C#" Value="public class CGImageSource : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGImageSource extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageIO.CGImageSource" />
  <TypeSignature Language="F#" Value="type CGImageSource = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Image Loader.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyAuxiliaryDataInfo">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageAuxiliaryDataInfo CopyAuxiliaryDataInfo (nuint index, ImageIO.CGImageAuxiliaryDataType auxiliaryImageDataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ImageIO.CGImageAuxiliaryDataInfo CopyAuxiliaryDataInfo(valuetype System.nuint index, valuetype ImageIO.CGImageAuxiliaryDataType auxiliaryImageDataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CopyAuxiliaryDataInfo(System.nuint,ImageIO.CGImageAuxiliaryDataType)" />
      <MemberSignature Language="F#" Value="member this.CopyAuxiliaryDataInfo : nuint * ImageIO.CGImageAuxiliaryDataType -&gt; ImageIO.CGImageAuxiliaryDataInfo" Usage="cGImageSource.CopyAuxiliaryDataInfo (index, auxiliaryImageDataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.TV(11, 0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Watch(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageAuxiliaryDataInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nuint" />
        <Parameter Name="auxiliaryImageDataType" Type="ImageIO.CGImageAuxiliaryDataType" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="auxiliaryImageDataType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyMetadata">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageMetadata CopyMetadata (nint index, Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ImageIO.CGImageMetadata CopyMetadata(valuetype System.nint index, class Foundation.NSDictionary options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CopyMetadata(System.nint,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="member this.CopyMetadata : nint * Foundation.NSDictionary -&gt; ImageIO.CGImageMetadata" Usage="cGImageSource.CopyMetadata (index, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nint" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyMetadata">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageMetadata CopyMetadata (nint index, ImageIO.CGImageOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ImageIO.CGImageMetadata CopyMetadata(valuetype System.nint index, class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CopyMetadata(System.nint,ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="member this.CopyMetadata : nint * ImageIO.CGImageOptions -&gt; ImageIO.CGImageMetadata" Usage="cGImageSource.CopyMetadata (index, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nint" />
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary CopyProperties (Foundation.NSDictionary dict);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary CopyProperties(class Foundation.NSDictionary dict) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CopyProperties(Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="member this.CopyProperties : Foundation.NSDictionary -&gt; Foundation.NSDictionary" Usage="cGImageSource.CopyProperties dict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use 'GetProperties'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dict" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="dict">Properties to copy.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary CopyProperties (ImageIO.CGImageOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary CopyProperties(class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CopyProperties(ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="member this.CopyProperties : ImageIO.CGImageOptions -&gt; Foundation.NSDictionary" Usage="cGImageSource.CopyProperties options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use 'GetProperties'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary CopyProperties (Foundation.NSDictionary dict, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary CopyProperties(class Foundation.NSDictionary dict, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CopyProperties(Foundation.NSDictionary,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CopyProperties : Foundation.NSDictionary * int -&gt; Foundation.NSDictionary" Usage="cGImageSource.CopyProperties (dict, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use 'GetProperties'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dict" Type="Foundation.NSDictionary" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dict">Properties to copy.</param>
        <param name="imageIndex">Image index.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary CopyProperties (ImageIO.CGImageOptions options, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary CopyProperties(class ImageIO.CGImageOptions options, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CopyProperties(ImageIO.CGImageOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CopyProperties : ImageIO.CGImageOptions * int -&gt; Foundation.NSDictionary" Usage="cGImageSource.CopyProperties (options, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use 'GetProperties'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="imageIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImage">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImage CreateImage (int index, ImageIO.CGImageOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGImage CreateImage(int32 index, class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CreateImage(System.Int32,ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="member this.CreateImage : int * ImageIO.CGImageOptions -&gt; CoreGraphics.CGImage" Usage="cGImageSource.CreateImage (index, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="index">Index of the image to create.</param>
        <param name="options">Image creation options.</param>
        <summary>Creates a CGImage from this loader.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIncremental">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageSource CreateIncremental (ImageIO.CGImageOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageSource CreateIncremental(class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CreateIncremental(ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="static member CreateIncremental : ImageIO.CGImageOptions -&gt; ImageIO.CGImageSource" Usage="ImageIO.CGImageSource.CreateIncremental options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="options">Image creation options.</param>
        <summary>Creates an incremental image loader.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateThumbnail">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImage CreateThumbnail (int index, ImageIO.CGImageThumbnailOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGImage CreateThumbnail(int32 index, class ImageIO.CGImageThumbnailOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.CreateThumbnail(System.Int32,ImageIO.CGImageThumbnailOptions)" />
      <MemberSignature Language="F#" Value="member this.CreateThumbnail : int * ImageIO.CGImageThumbnailOptions -&gt; CoreGraphics.CGImage" Usage="cGImageSource.CreateThumbnail (index, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="options" Type="ImageIO.CGImageThumbnailOptions" />
      </Parameters>
      <Docs>
        <param name="index">Index of the image to load.</param>
        <param name="options">Thumbnail image creation options.</param>
        <summary>Creates a CGImage thumbnail from this loader..</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cGImageSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGImageSource object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGImageSource class.</para>
          <para>Calling the Dispose method when the application is finished using the CGImageSource ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cGImageSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGImageSource object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGImageSource class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGImageSource ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGImageSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cGImageSource.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGImageSource object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageSource FromData (Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageSource FromData(class Foundation.NSData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.FromData(Foundation.NSData)" />
      <MemberSignature Language="F#" Value="static member FromData : Foundation.NSData -&gt; ImageIO.CGImageSource" Usage="ImageIO.CGImageSource.FromData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="data">Block of bytes containing the image.</param>
        <summary>Creates an image loader from the block of bytes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageSource FromData (Foundation.NSData data, ImageIO.CGImageOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageSource FromData(class Foundation.NSData data, class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.FromData(Foundation.NSData,ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="static member FromData : Foundation.NSData * ImageIO.CGImageOptions -&gt; ImageIO.CGImageSource" Usage="ImageIO.CGImageSource.FromData (data, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="data">Block of bytes containing the image.</param>
        <param name="options">Image creation options.</param>
        <summary>Creates an image loader from the block of bytes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromDataProvider">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageSource FromDataProvider (CoreGraphics.CGDataProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageSource FromDataProvider(class CoreGraphics.CGDataProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.FromDataProvider(CoreGraphics.CGDataProvider)" />
      <MemberSignature Language="F#" Value="static member FromDataProvider : CoreGraphics.CGDataProvider -&gt; ImageIO.CGImageSource" Usage="ImageIO.CGImageSource.FromDataProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="CoreGraphics.CGDataProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Dynamic data provider.</param>
        <summary>Creates an image loader using a dynamic data provider.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromDataProvider">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageSource FromDataProvider (CoreGraphics.CGDataProvider provider, ImageIO.CGImageOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageSource FromDataProvider(class CoreGraphics.CGDataProvider provider, class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.FromDataProvider(CoreGraphics.CGDataProvider,ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="static member FromDataProvider : CoreGraphics.CGDataProvider * ImageIO.CGImageOptions -&gt; ImageIO.CGImageSource" Usage="ImageIO.CGImageSource.FromDataProvider (provider, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="CoreGraphics.CGDataProvider" />
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="provider">Dynamic data provider.</param>
        <param name="options">Image creation options.</param>
        <summary>Creates an image loader using a dynamic data provider.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageSource FromUrl (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageSource FromUrl(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.FromUrl(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="static member FromUrl : Foundation.NSUrl -&gt; ImageIO.CGImageSource" Usage="ImageIO.CGImageSource.FromUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">Url to load the image from.</param>
        <summary>Creates an image loader that loads the file from the given url.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public static ImageIO.CGImageSource FromUrl (Foundation.NSUrl url, ImageIO.CGImageOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ImageIO.CGImageSource FromUrl(class Foundation.NSUrl url, class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.FromUrl(Foundation.NSUrl,ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="static member FromUrl : Foundation.NSUrl * ImageIO.CGImageOptions -&gt; ImageIO.CGImageSource" Usage="ImageIO.CGImageSource.FromUrl (url, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="url">Url to load the image from.</param>
        <param name="options">Image creation options.</param>
        <summary>Creates an image loader that loads the file from the given url.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryImageIndex">
      <MemberSignature Language="C#" Value="public nuint GetPrimaryImageIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nuint GetPrimaryImageIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.GetPrimaryImageIndex" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryImageIndex : unit -&gt; nuint" Usage="cGImageSource.GetPrimaryImageIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.TV(12, 0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Watch(5, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImageProperties GetProperties (ImageIO.CGImageOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGImageProperties GetProperties(class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.GetProperties(ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="member this.GetProperties : ImageIO.CGImageOptions -&gt; CoreGraphics.CGImageProperties" Usage="cGImageSource.GetProperties options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImageProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImageProperties GetProperties (int index, ImageIO.CGImageOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGImageProperties GetProperties(int32 index, class ImageIO.CGImageOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.GetProperties(System.Int32,ImageIO.CGImageOptions)" />
      <MemberSignature Language="F#" Value="member this.GetProperties : int * ImageIO.CGImageOptions -&gt; CoreGraphics.CGImageProperties" Usage="cGImageSource.GetProperties (index, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImageProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="options" Type="ImageIO.CGImageOptions" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatus">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageSourceStatus GetStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype ImageIO.CGImageSourceStatus GetStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.GetStatus" />
      <MemberSignature Language="F#" Value="member this.GetStatus : unit -&gt; ImageIO.CGImageSourceStatus" Usage="cGImageSource.GetStatus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSourceStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the loader status.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatus">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageSourceStatus GetStatus (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype ImageIO.CGImageSourceStatus GetStatus(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.GetStatus(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetStatus : int -&gt; ImageIO.CGImageSourceStatus" Usage="cGImageSource.GetStatus index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageSourceStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Image index.</param>
        <summary>Returns the loader status.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ImageIO.framework/ImageIO&quot; as &quot;CGImageSourceGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.GetTypeID" />
      <MemberSignature Language="F#" Value="static member GetTypeID : unit -&gt; nint" Usage="ImageIO.CGImageSource.GetTypeID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the ImageIO.CGImageSource type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID(System.IntPtr)" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isCGImageSource = (CFType.GetTypeID (foo.Handle) == CGImageSource.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageSource.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="ImageIO.CGImageSource.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageCount">
      <MemberSignature Language="C#" Value="public nint ImageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint ImageCount" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageSource.ImageCount" />
      <MemberSignature Language="F#" Value="member this.ImageCount : nint" Usage="ImageIO.CGImageSource.ImageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Number of images loaded (does not include the Thumbnail).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCache">
      <MemberSignature Language="C#" Value="public void RemoveCache (nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCache(valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.RemoveCache(System.nint)" />
      <MemberSignature Language="F#" Value="member this.RemoveCache : nint -&gt; unit" Usage="cGImageSource.RemoveCache index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeIdentifier">
      <MemberSignature Language="C#" Value="public string TypeIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeIdentifier" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageSource.TypeIdentifier" />
      <MemberSignature Language="F#" Value="member this.TypeIdentifier : string" Usage="ImageIO.CGImageSource.TypeIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The image type of the underling image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeIdentifiers">
      <MemberSignature Language="C#" Value="public static string[] TypeIdentifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string[] TypeIdentifiers" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageSource.TypeIdentifiers" />
      <MemberSignature Language="F#" Value="member this.TypeIdentifiers : string[]" Usage="ImageIO.CGImageSource.TypeIdentifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The type identifiers for the formats supported by the image loader.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public void UpdateData (Foundation.NSData data, bool final);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateData(class Foundation.NSData data, bool final) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.UpdateData(Foundation.NSData,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.UpdateData : Foundation.NSData * bool -&gt; unit" Usage="cGImageSource.UpdateData (data, final)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="final" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">Block of bytes containing the image.</param>
        <param name="final">Whether this block is the last block of data.</param>
        <summary>Pushes new data into a dynamic image loader.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDataProvider">
      <MemberSignature Language="C#" Value="public void UpdateDataProvider (CoreGraphics.CGDataProvider provider, bool final);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateDataProvider(class CoreGraphics.CGDataProvider provider, bool final) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageSource.UpdateDataProvider(CoreGraphics.CGDataProvider,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.UpdateDataProvider : CoreGraphics.CGDataProvider * bool -&gt; unit" Usage="cGImageSource.UpdateDataProvider (provider, final)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="CoreGraphics.CGDataProvider" />
        <Parameter Name="final" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <param name="final">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
