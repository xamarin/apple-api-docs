<Type Name="CGImageMetadataTag" FullName="ImageIO.CGImageMetadataTag">
  <TypeSignature Language="C#" Value="public class CGImageMetadataTag : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGImageMetadataTag extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ImageIO.CGImageMetadataTag" />
  <TypeSignature Language="F#" Value="type CGImageMetadataTag = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An EXIF, IPTC, or XMP property and value.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGImageMetadataTag (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadataTag.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new ImageIO.CGImageMetadataTag : nativeint -&gt; ImageIO.CGImageMetadataTag" Usage="new ImageIO.CGImageMetadataTag handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGImageMetadataTag (Foundation.NSString xmlns, Foundation.NSString prefix, Foundation.NSString name, ImageIO.CGImageMetadataType type, Foundation.NSObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSString xmlns, class Foundation.NSString prefix, class Foundation.NSString name, valuetype ImageIO.CGImageMetadataType type, class Foundation.NSObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadataTag.#ctor(Foundation.NSString,Foundation.NSString,Foundation.NSString,ImageIO.CGImageMetadataType,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="new ImageIO.CGImageMetadataTag : Foundation.NSString * Foundation.NSString * Foundation.NSString * ImageIO.CGImageMetadataType * Foundation.NSObject -&gt; ImageIO.CGImageMetadataTag" Usage="new ImageIO.CGImageMetadataTag (xmlns, prefix, name, type, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlns" Type="Foundation.NSString" />
        <Parameter Name="prefix" Type="Foundation.NSString" />
        <Parameter Name="name" Type="Foundation.NSString" />
        <Parameter Name="type" Type="ImageIO.CGImageMetadataType" />
        <Parameter Name="value" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="xmlns">To be added.</param>
        <param name="prefix">To be added.</param>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGImageMetadataTag (Foundation.NSString xmlns, Foundation.NSString prefix, Foundation.NSString name, ImageIO.CGImageMetadataType type, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSString xmlns, class Foundation.NSString prefix, class Foundation.NSString name, valuetype ImageIO.CGImageMetadataType type, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadataTag.#ctor(Foundation.NSString,Foundation.NSString,Foundation.NSString,ImageIO.CGImageMetadataType,System.Boolean)" />
      <MemberSignature Language="F#" Value="new ImageIO.CGImageMetadataTag : Foundation.NSString * Foundation.NSString * Foundation.NSString * ImageIO.CGImageMetadataType * bool -&gt; ImageIO.CGImageMetadataTag" Usage="new ImageIO.CGImageMetadataTag (xmlns, prefix, name, type, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlns" Type="Foundation.NSString" />
        <Parameter Name="prefix" Type="Foundation.NSString" />
        <Parameter Name="name" Type="Foundation.NSString" />
        <Parameter Name="type" Type="ImageIO.CGImageMetadataType" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xmlns">To be added.</param>
        <param name="prefix">To be added.</param>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadataTag.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cGImageMetadataTag.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGImageMetadataTag object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGImageMetadataTag class.</para>
          <para>Calling the Dispose method when the application is finished using the CGImageMetadataTag ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadataTag.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cGImageMetadataTag.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGImageMetadataTag object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGImageMetadataTag class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGImageMetadataTag ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGImageMetadataTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadataTag.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cGImageMetadataTag.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGImageMetadataTag object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQualifiers">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageMetadataTag[] GetQualifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class ImageIO.CGImageMetadataTag[] GetQualifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadataTag.GetQualifiers" />
      <MemberSignature Language="F#" Value="member this.GetQualifiers : unit -&gt; ImageIO.CGImageMetadataTag[]" Usage="cGImageMetadataTag.GetQualifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageMetadataTag[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/ImageIO.framework/ImageIO&quot; as &quot;CGImageMetadataTagGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberSignature Language="DocId" Value="M:ImageIO.CGImageMetadataTag.GetTypeID" />
      <MemberSignature Language="F#" Value="static member GetTypeID : unit -&gt; nint" Usage="ImageIO.CGImageMetadataTag.GetTypeID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the ImageIO.CGImageMetadataTag type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID(System.IntPtr)" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isCGImageMetadataTag = (CFType.GetTypeID (foo.Handle) == CGImageMetadataTag.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageMetadataTag.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="ImageIO.CGImageMetadataTag.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Foundation.NSString Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString Name" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageMetadataTag.Name" />
      <MemberSignature Language="F#" Value="member this.Name : Foundation.NSString" Usage="ImageIO.CGImageMetadataTag.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public Foundation.NSString Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString Namespace" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageMetadataTag.Namespace" />
      <MemberSignature Language="F#" Value="member this.Namespace : Foundation.NSString" Usage="ImageIO.CGImageMetadataTag.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public Foundation.NSString Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString Prefix" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageMetadataTag.Prefix" />
      <MemberSignature Language="F#" Value="member this.Prefix : Foundation.NSString" Usage="ImageIO.CGImageMetadataTag.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public ImageIO.CGImageMetadataType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ImageIO.CGImageMetadataType Type" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageMetadataTag.Type" />
      <MemberSignature Language="F#" Value="member this.Type : ImageIO.CGImageMetadataType" Usage="ImageIO.CGImageMetadataTag.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ImageIO.CGImageMetadataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public Foundation.NSObject Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject Value" />
      <MemberSignature Language="DocId" Value="P:ImageIO.CGImageMetadataTag.Value" />
      <MemberSignature Language="F#" Value="member this.Value : Foundation.NSObject" Usage="ImageIO.CGImageMetadataTag.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
