<Type Name="GKTurnBasedEventListener_Extensions" FullName="GameKit.GKTurnBasedEventListener_Extensions">
  <TypeSignature Language="C#" Value="public static class GKTurnBasedEventListener_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit GKTurnBasedEventListener_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:GameKit.GKTurnBasedEventListener_Extensions" />
  <TypeSignature Language="F#" Value="type GKTurnBasedEventListener_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:GameKit.IGKTurnBasedEventListener" /> interface to support all the methods from the <see cref="T:GameKit.GKTurnBasedEventListener" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:GameKit.IGKTurnBasedEventListener" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:GameKit.GKTurnBasedEventListener" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidRequestMatchWithOtherPlayers">
      <MemberSignature Language="C#" Value="public static void DidRequestMatchWithOtherPlayers (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKPlayer[] playersToInvite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatchWithOtherPlayers(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKPlayer[] playersToInvite) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKTurnBasedEventListener_Extensions.DidRequestMatchWithOtherPlayers(GameKit.IGKTurnBasedEventListener,GameKit.GKPlayer,GameKit.GKPlayer[])" />
      <MemberSignature Language="F#" Value="static member DidRequestMatchWithOtherPlayers : GameKit.IGKTurnBasedEventListener * GameKit.GKPlayer * GameKit.GKPlayer[] -&gt; unit" Usage="GameKit.GKTurnBasedEventListener_Extensions.DidRequestMatchWithOtherPlayers (This, player, playersToInvite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="GameKit.IGKTurnBasedEventListener" RefType="this" />
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="playersToInvite" Type="GameKit.GKPlayer[]" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="player">To be added.</param>
        <param name="playersToInvite">To be added.</param>
        <summary>Method that is called when <paramref name="player" /> requests a match with <paramref name="playersToInvite" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRequestMatchWithPlayers">
      <MemberSignature Language="C#" Value="public static void DidRequestMatchWithPlayers (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, string[] playerIDsToInvite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatchWithPlayers(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, string[] playerIDsToInvite) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKTurnBasedEventListener_Extensions.DidRequestMatchWithPlayers(GameKit.IGKTurnBasedEventListener,GameKit.GKPlayer,System.String[])" />
      <MemberSignature Language="F#" Value="static member DidRequestMatchWithPlayers : GameKit.IGKTurnBasedEventListener * GameKit.GKPlayer * string[] -&gt; unit" Usage="GameKit.GKTurnBasedEventListener_Extensions.DidRequestMatchWithPlayers (This, player, playerIDsToInvite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'DidRequestMatchWithOtherPlayers' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="GameKit.IGKTurnBasedEventListener" RefType="this" />
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="playerIDsToInvite" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="player">To be added.</param>
        <param name="playerIDsToInvite">To be added.</param>
        <summary>Developers should not use this deprecated method. Developers should use 'DidRequestMatchWithOtherPlayers' instead.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchEnded">
      <MemberSignature Language="C#" Value="public static void MatchEnded (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedMatch match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MatchEnded(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedMatch match) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKTurnBasedEventListener_Extensions.MatchEnded(GameKit.IGKTurnBasedEventListener,GameKit.GKPlayer,GameKit.GKTurnBasedMatch)" />
      <MemberSignature Language="F#" Value="static member MatchEnded : GameKit.IGKTurnBasedEventListener * GameKit.GKPlayer * GameKit.GKTurnBasedMatch -&gt; unit" Usage="GameKit.GKTurnBasedEventListener_Extensions.MatchEnded (This, player, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="GameKit.IGKTurnBasedEventListener" RefType="this" />
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="match" Type="GameKit.GKTurnBasedMatch" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="player">To be added.</param>
        <param name="match">To be added.</param>
        <summary>Method that is called after the <paramref name="match" /> is ended.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedExchangeCancellation">
      <MemberSignature Language="C#" Value="public static void ReceivedExchangeCancellation (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedExchange exchange, GameKit.GKTurnBasedMatch match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeCancellation(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedExchange exchange, class GameKit.GKTurnBasedMatch match) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeCancellation(GameKit.IGKTurnBasedEventListener,GameKit.GKPlayer,GameKit.GKTurnBasedExchange,GameKit.GKTurnBasedMatch)" />
      <MemberSignature Language="F#" Value="static member ReceivedExchangeCancellation : GameKit.IGKTurnBasedEventListener * GameKit.GKPlayer * GameKit.GKTurnBasedExchange * GameKit.GKTurnBasedMatch -&gt; unit" Usage="GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeCancellation (This, player, exchange, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="GameKit.IGKTurnBasedEventListener" RefType="this" />
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="exchange" Type="GameKit.GKTurnBasedExchange" />
        <Parameter Name="match" Type="GameKit.GKTurnBasedMatch" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="player">To be added.</param>
        <param name="exchange">To be added.</param>
        <param name="match">To be added.</param>
        <summary>Method that is called after <paramref name="player" /> cancels the <paramref name="exchange" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedExchangeReplies">
      <MemberSignature Language="C#" Value="public static void ReceivedExchangeReplies (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedExchangeReply[] replies, GameKit.GKTurnBasedExchange exchange, GameKit.GKTurnBasedMatch match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeReplies(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedExchangeReply[] replies, class GameKit.GKTurnBasedExchange exchange, class GameKit.GKTurnBasedMatch match) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeReplies(GameKit.IGKTurnBasedEventListener,GameKit.GKPlayer,GameKit.GKTurnBasedExchangeReply[],GameKit.GKTurnBasedExchange,GameKit.GKTurnBasedMatch)" />
      <MemberSignature Language="F#" Value="static member ReceivedExchangeReplies : GameKit.IGKTurnBasedEventListener * GameKit.GKPlayer * GameKit.GKTurnBasedExchangeReply[] * GameKit.GKTurnBasedExchange * GameKit.GKTurnBasedMatch -&gt; unit" Usage="GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeReplies (This, player, replies, exchange, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="GameKit.IGKTurnBasedEventListener" RefType="this" />
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="replies" Type="GameKit.GKTurnBasedExchangeReply[]" />
        <Parameter Name="exchange" Type="GameKit.GKTurnBasedExchange" />
        <Parameter Name="match" Type="GameKit.GKTurnBasedMatch" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="player">To be added.</param>
        <param name="replies">To be added.</param>
        <param name="exchange">To be added.</param>
        <param name="match">To be added.</param>
        <summary>Method that is called after the <paramref name="exchange" /> with <paramref name="player" /> completes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedExchangeRequest">
      <MemberSignature Language="C#" Value="public static void ReceivedExchangeRequest (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedExchange exchange, GameKit.GKTurnBasedMatch match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeRequest(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedExchange exchange, class GameKit.GKTurnBasedMatch match) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeRequest(GameKit.IGKTurnBasedEventListener,GameKit.GKPlayer,GameKit.GKTurnBasedExchange,GameKit.GKTurnBasedMatch)" />
      <MemberSignature Language="F#" Value="static member ReceivedExchangeRequest : GameKit.IGKTurnBasedEventListener * GameKit.GKPlayer * GameKit.GKTurnBasedExchange * GameKit.GKTurnBasedMatch -&gt; unit" Usage="GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeRequest (This, player, exchange, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="GameKit.IGKTurnBasedEventListener" RefType="this" />
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="exchange" Type="GameKit.GKTurnBasedExchange" />
        <Parameter Name="match" Type="GameKit.GKTurnBasedMatch" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="player">To be added.</param>
        <param name="exchange">To be added.</param>
        <param name="match">To be added.</param>
        <summary>Method that is called when <paramref name="player" /> receives a request for an <paramref name="exchange" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedTurnEvent">
      <MemberSignature Language="C#" Value="public static void ReceivedTurnEvent (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedMatch match, bool becameActive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedTurnEvent(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedMatch match, bool becameActive) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKTurnBasedEventListener_Extensions.ReceivedTurnEvent(GameKit.IGKTurnBasedEventListener,GameKit.GKPlayer,GameKit.GKTurnBasedMatch,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member ReceivedTurnEvent : GameKit.IGKTurnBasedEventListener * GameKit.GKPlayer * GameKit.GKTurnBasedMatch * bool -&gt; unit" Usage="GameKit.GKTurnBasedEventListener_Extensions.ReceivedTurnEvent (This, player, match, becameActive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="GameKit.IGKTurnBasedEventListener" RefType="this" />
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="match" Type="GameKit.GKTurnBasedMatch" />
        <Parameter Name="becameActive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="player">To be added.</param>
        <param name="match">To be added.</param>
        <param name="becameActive">To be added.</param>
        <summary>Method that is called to activate a turn for <paramref name="player" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantsToQuitMatch">
      <MemberSignature Language="C#" Value="public static void WantsToQuitMatch (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedMatch match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WantsToQuitMatch(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedMatch match) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKTurnBasedEventListener_Extensions.WantsToQuitMatch(GameKit.IGKTurnBasedEventListener,GameKit.GKPlayer,GameKit.GKTurnBasedMatch)" />
      <MemberSignature Language="F#" Value="static member WantsToQuitMatch : GameKit.IGKTurnBasedEventListener * GameKit.GKPlayer * GameKit.GKTurnBasedMatch -&gt; unit" Usage="GameKit.GKTurnBasedEventListener_Extensions.WantsToQuitMatch (This, player, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="GameKit.IGKTurnBasedEventListener" RefType="this" />
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="match" Type="GameKit.GKTurnBasedMatch" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="player">To be added.</param>
        <param name="match">To be added.</param>
        <summary>Method that is called after <paramref name="player" /> indicates that they desire to quit the match.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
