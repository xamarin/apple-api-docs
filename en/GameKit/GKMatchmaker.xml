<Type Name="GKMatchmaker" FullName="GameKit.GKMatchmaker">
  <TypeSignature Language="C#" Value="public class GKMatchmaker : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GKMatchmaker extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:GameKit.GKMatchmaker" />
  <TypeSignature Language="F#" Value="type GKMatchmaker = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("GKMatchmaker", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A class that creates matches between players and receives invitations to potential matches.</summary>
    <remarks>
      <para>Application developers may use this class if they choose to present a custom matchmaking interface. Otherwise, the <see cref="T:GameKit.GKMatchmakerViewController" /> provides a standard user experience for matchmaking.</para>
    </remarks>
    <altmember cref="T:GameKit.GKMatchmakerViewController" />
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/GameKit/Reference/GKMatchmaker_Ref/index.html">Apple documentation for <c>GKMatchmaker</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKMatchmaker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GKMatchmaker (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new GameKit.GKMatchmaker : Foundation.NSObjectFlag -&gt; GameKit.GKMatchmaker" Usage="new GameKit.GKMatchmaker t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal GKMatchmaker (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new GameKit.GKMatchmaker : nativeint -&gt; GameKit.GKMatchmaker" Usage="new GameKit.GKMatchmaker handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPlayers">
      <MemberSignature Language="C#" Value="public virtual void AddPlayers (GameKit.GKMatch toMatch, GameKit.GKMatchRequest matchRequest, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPlayers(class GameKit.GKMatch toMatch, class GameKit.GKMatchRequest matchRequest, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.AddPlayers(GameKit.GKMatch,GameKit.GKMatchRequest,System.Action{Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member AddPlayers : GameKit.GKMatch * GameKit.GKMatchRequest * Action&lt;Foundation.NSError&gt; -&gt; unit&#xA;override this.AddPlayers : GameKit.GKMatch * GameKit.GKMatchRequest * Action&lt;Foundation.NSError&gt; -&gt; unit" Usage="gKMatchmaker.AddPlayers (toMatch, matchRequest, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addPlayersToMatch:matchRequest:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toMatch" Type="GameKit.GKMatch" />
        <Parameter Name="matchRequest" Type="GameKit.GKMatchRequest" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="toMatch">To be added.</param>
        <param name="matchRequest">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Adds the players in the match request to the match.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPlayersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AddPlayersAsync (GameKit.GKMatch toMatch, GameKit.GKMatchRequest matchRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddPlayersAsync(class GameKit.GKMatch toMatch, class GameKit.GKMatchRequest matchRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.AddPlayersAsync(GameKit.GKMatch,GameKit.GKMatchRequest)" />
      <MemberSignature Language="F#" Value="abstract member AddPlayersAsync : GameKit.GKMatch * GameKit.GKMatchRequest -&gt; System.Threading.Tasks.Task&#xA;override this.AddPlayersAsync : GameKit.GKMatch * GameKit.GKMatchRequest -&gt; System.Threading.Tasks.Task" Usage="gKMatchmaker.AddPlayersAsync (toMatch, matchRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toMatch" Type="GameKit.GKMatch" />
        <Parameter Name="matchRequest" Type="GameKit.GKMatchRequest" />
      </Parameters>
      <Docs>
        <param name="toMatch">To be added.</param>
        <param name="matchRequest">To be added.</param>
        <summary>Adds the players in the match request to the match.</summary>
        <returns>A task that represents the asynchronous AddPlayers operation</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.Cancel" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit&#xA;override this.Cancel : unit -&gt; unit" Usage="gKMatchmaker.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cancel")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels a match request.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelInvite">
      <MemberSignature Language="C#" Value="public virtual void CancelInvite (string playerID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelInvite(string playerID) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.CancelInvite(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CancelInvite : string -&gt; unit&#xA;override this.CancelInvite : string -&gt; unit" Usage="gKMatchmaker.CancelInvite playerID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cancelInviteToPlayer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'CancelPendingInvite' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'CancelPendingInvite' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="playerID">To be added.</param>
        <summary>Developers should not use this deprecated method. Developers should use 'CancelPendingInvite' instead.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingInvite">
      <MemberSignature Language="C#" Value="public virtual void CancelPendingInvite (GameKit.GKPlayer player);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelPendingInvite(class GameKit.GKPlayer player) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.CancelPendingInvite(GameKit.GKPlayer)" />
      <MemberSignature Language="F#" Value="abstract member CancelPendingInvite : GameKit.GKPlayer -&gt; unit&#xA;override this.CancelPendingInvite : GameKit.GKPlayer -&gt; unit" Usage="gKMatchmaker.CancelPendingInvite player" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cancelPendingInviteToPlayer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="player" Type="GameKit.GKPlayer" />
      </Parameters>
      <Docs>
        <param name="player">To be added.</param>
        <summary>Cancels the pending invitation to <paramref name="player" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKMatchmaker.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="GameKit.GKMatchmaker.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMatch">
      <MemberSignature Language="C#" Value="public virtual void FindMatch (GameKit.GKMatchRequest request, GameKit.GKNotificationMatch matchHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindMatch(class GameKit.GKMatchRequest request, class GameKit.GKNotificationMatch matchHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.FindMatch(GameKit.GKMatchRequest,GameKit.GKNotificationMatch)" />
      <MemberSignature Language="F#" Value="abstract member FindMatch : GameKit.GKMatchRequest * GameKit.GKNotificationMatch -&gt; unit&#xA;override this.FindMatch : GameKit.GKMatchRequest * GameKit.GKNotificationMatch -&gt; unit" Usage="gKMatchmaker.FindMatch (request, matchHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("findMatchForRequest:withCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="GameKit.GKMatchRequest" />
        <Parameter Name="matchHandler" Type="GameKit.GKNotificationMatch">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKNotificationMatch))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="matchHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Finds players for a peer-to-peer match.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKMatch&gt; FindMatchAsync (GameKit.GKMatchRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKMatch&gt; FindMatchAsync(class GameKit.GKMatchRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.FindMatchAsync(GameKit.GKMatchRequest)" />
      <MemberSignature Language="F#" Value="abstract member FindMatchAsync : GameKit.GKMatchRequest -&gt; System.Threading.Tasks.Task&lt;GameKit.GKMatch&gt;&#xA;override this.FindMatchAsync : GameKit.GKMatchRequest -&gt; System.Threading.Tasks.Task&lt;GameKit.GKMatch&gt;" Usage="gKMatchmaker.FindMatchAsync request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="GameKit.GKMatchRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Finds players for a peer-to-peer match.</summary>
        <returns>
          <para>A task that represents the asynchronous FindMatch operation.   The value of the TResult parameter is a GameKit.GKNotificationMatch.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPlayers">
      <MemberSignature Language="C#" Value="public virtual void FindPlayers (GameKit.GKMatchRequest request, GameKit.GKFriendsHandler playerHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindPlayers(class GameKit.GKMatchRequest request, class GameKit.GKFriendsHandler playerHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.FindPlayers(GameKit.GKMatchRequest,GameKit.GKFriendsHandler)" />
      <MemberSignature Language="F#" Value="abstract member FindPlayers : GameKit.GKMatchRequest * GameKit.GKFriendsHandler -&gt; unit&#xA;override this.FindPlayers : GameKit.GKMatchRequest * GameKit.GKFriendsHandler -&gt; unit" Usage="gKMatchmaker.FindPlayers (request, playerHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("findPlayersForHostedMatchRequest:withCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'FindPlayersForHostedRequest' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'FindPlayersForHostedRequest' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="GameKit.GKMatchRequest" />
        <Parameter Name="playerHandler" Type="GameKit.GKFriendsHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKFriendsHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="playerHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPlayersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string[]&gt; FindPlayersAsync (GameKit.GKMatchRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string[]&gt; FindPlayersAsync(class GameKit.GKMatchRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.FindPlayersAsync(GameKit.GKMatchRequest)" />
      <MemberSignature Language="F#" Value="abstract member FindPlayersAsync : GameKit.GKMatchRequest -&gt; System.Threading.Tasks.Task&lt;string[]&gt;&#xA;override this.FindPlayersAsync : GameKit.GKMatchRequest -&gt; System.Threading.Tasks.Task&lt;string[]&gt;" Usage="gKMatchmaker.FindPlayersAsync request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'FindPlayersForHostedRequest' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'FindPlayersForHostedRequest' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="GameKit.GKMatchRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para>A task that represents the asynchronous FindPlayers operation.   The value of the TResult parameter is a GameKit.GKFriendsHandler.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPlayersForHostedRequest">
      <MemberSignature Language="C#" Value="public virtual void FindPlayersForHostedRequest (GameKit.GKMatchRequest request, Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindPlayersForHostedRequest(class GameKit.GKMatchRequest request, class System.Action`2&lt;class GameKit.GKPlayer[], class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.FindPlayersForHostedRequest(GameKit.GKMatchRequest,System.Action{GameKit.GKPlayer[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FindPlayersForHostedRequest : GameKit.GKMatchRequest * Action&lt;GameKit.GKPlayer[], Foundation.NSError&gt; -&gt; unit&#xA;override this.FindPlayersForHostedRequest : GameKit.GKMatchRequest * Action&lt;GameKit.GKPlayer[], Foundation.NSError&gt; -&gt; unit" Usage="gKMatchmaker.FindPlayersForHostedRequest (request, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("findPlayersForHostedRequest:withCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="GameKit.GKMatchRequest" />
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V46))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Finds players for a hosted match request.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPlayersForHostedRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt; FindPlayersForHostedRequestAsync (GameKit.GKMatchRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKPlayer[]&gt; FindPlayersForHostedRequestAsync(class GameKit.GKMatchRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.FindPlayersForHostedRequestAsync(GameKit.GKMatchRequest)" />
      <MemberSignature Language="F#" Value="abstract member FindPlayersForHostedRequestAsync : GameKit.GKMatchRequest -&gt; System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;&#xA;override this.FindPlayersForHostedRequestAsync : GameKit.GKMatchRequest -&gt; System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;" Usage="gKMatchmaker.FindPlayersForHostedRequestAsync request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="GameKit.GKMatchRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Finds players for a hosted match request.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FindPlayersForHostedRequest operation.  The value of the TResult parameter is of type System.Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para copied="true">The FindPlayersForHostedRequestAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishMatchmaking">
      <MemberSignature Language="C#" Value="public virtual void FinishMatchmaking (GameKit.GKMatch match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishMatchmaking(class GameKit.GKMatch match) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.FinishMatchmaking(GameKit.GKMatch)" />
      <MemberSignature Language="F#" Value="abstract member FinishMatchmaking : GameKit.GKMatch -&gt; unit&#xA;override this.FinishMatchmaking : GameKit.GKMatch -&gt; unit" Usage="gKMatchmaker.FinishMatchmaking match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("finishMatchmakingForMatch:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="GameKit.GKMatch" />
      </Parameters>
      <Docs>
        <param name="match">To be added.</param>
        <summary>Finishes matchmaking for a match.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InviteHandler">
      <MemberSignature Language="C#" Value="public virtual GameKit.GKInviteHandler InviteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GameKit.GKInviteHandler InviteHandler" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKMatchmaker.InviteHandler" />
      <MemberSignature Language="F#" Value="member this.InviteHandler : GameKit.GKInviteHandler with get, set" Usage="GameKit.GKMatchmaker.InviteHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("inviteHandler", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setInviteHandler:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKInviteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public virtual void Match (GameKit.GKInvite invite, Action&lt;GameKit.GKMatch,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Match(class GameKit.GKInvite invite, class System.Action`2&lt;class GameKit.GKMatch, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.Match(GameKit.GKInvite,System.Action{GameKit.GKMatch,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member Match : GameKit.GKInvite * Action&lt;GameKit.GKMatch, Foundation.NSError&gt; -&gt; unit&#xA;override this.Match : GameKit.GKInvite * Action&lt;GameKit.GKMatch, Foundation.NSError&gt; -&gt; unit" Usage="gKMatchmaker.Match (invite, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("matchForInvite:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invite" Type="GameKit.GKInvite" />
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKMatch,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V56))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="invite">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates a match for the specified invitation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKMatch&gt; MatchAsync (GameKit.GKInvite invite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKMatch&gt; MatchAsync(class GameKit.GKInvite invite) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.MatchAsync(GameKit.GKInvite)" />
      <MemberSignature Language="F#" Value="abstract member MatchAsync : GameKit.GKInvite -&gt; System.Threading.Tasks.Task&lt;GameKit.GKMatch&gt;&#xA;override this.MatchAsync : GameKit.GKInvite -&gt; System.Threading.Tasks.Task&lt;GameKit.GKMatch&gt;" Usage="gKMatchmaker.MatchAsync invite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invite" Type="GameKit.GKInvite" />
      </Parameters>
      <Docs>
        <param name="invite">To be added.</param>
        <summary>Creates a match for the specified invitation.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous Match operation.  The value of the TResult parameter is of type System.Action&lt;GameKit.GKMatch,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryActivity">
      <MemberSignature Language="C#" Value="public virtual void QueryActivity (GameKit.GKQueryHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryActivity(class GameKit.GKQueryHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.QueryActivity(GameKit.GKQueryHandler)" />
      <MemberSignature Language="F#" Value="abstract member QueryActivity : GameKit.GKQueryHandler -&gt; unit&#xA;override this.QueryActivity : GameKit.GKQueryHandler -&gt; unit" Usage="gKMatchmaker.QueryActivity completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("queryActivityWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="GameKit.GKQueryHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKQueryHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Queries for activity in all player groups.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryActivityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;nint&gt; QueryActivityAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.nint&gt; QueryActivityAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.QueryActivityAsync" />
      <MemberSignature Language="F#" Value="abstract member QueryActivityAsync : unit -&gt; System.Threading.Tasks.Task&lt;nint&gt;&#xA;override this.QueryActivityAsync : unit -&gt; System.Threading.Tasks.Task&lt;nint&gt;" Usage="gKMatchmaker.QueryActivityAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.nint&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Queries for activity in all player groups.</summary>
        <returns>
          <para>A task that represents the asynchronous QueryActivity operation.   The value of the TResult parameter is a GameKit.GKQueryHandler.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPlayerGroupActivity">
      <MemberSignature Language="C#" Value="public virtual void QueryPlayerGroupActivity (nint playerGroup, GameKit.GKQueryHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryPlayerGroupActivity(valuetype System.nint playerGroup, class GameKit.GKQueryHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.QueryPlayerGroupActivity(System.nint,GameKit.GKQueryHandler)" />
      <MemberSignature Language="F#" Value="abstract member QueryPlayerGroupActivity : nint * GameKit.GKQueryHandler -&gt; unit&#xA;override this.QueryPlayerGroupActivity : nint * GameKit.GKQueryHandler -&gt; unit" Usage="gKMatchmaker.QueryPlayerGroupActivity (playerGroup, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("queryPlayerGroupActivity:withCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerGroup" Type="System.nint" />
        <Parameter Name="completionHandler" Type="GameKit.GKQueryHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKQueryHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="playerGroup">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPlayerGroupActivityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;nint&gt; QueryPlayerGroupActivityAsync (nint playerGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.nint&gt; QueryPlayerGroupActivityAsync(valuetype System.nint playerGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.QueryPlayerGroupActivityAsync(System.nint)" />
      <MemberSignature Language="F#" Value="abstract member QueryPlayerGroupActivityAsync : nint -&gt; System.Threading.Tasks.Task&lt;nint&gt;&#xA;override this.QueryPlayerGroupActivityAsync : nint -&gt; System.Threading.Tasks.Task&lt;nint&gt;" Usage="gKMatchmaker.QueryPlayerGroupActivityAsync playerGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.nint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerGroup" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="playerGroup">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para>A task that represents the asynchronous QueryPlayerGroupActivity operation.   The value of the TResult parameter is a GameKit.GKQueryHandler.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInviteHandler">
      <MemberSignature Language="C#" Value="public virtual void SetInviteHandler (GameKit.GKInviteHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInviteHandler(class GameKit.GKInviteHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.SetInviteHandler(GameKit.GKInviteHandler)" />
      <MemberSignature Language="F#" Value="abstract member SetInviteHandler : GameKit.GKInviteHandler -&gt; unit&#xA;override this.SetInviteHandler : GameKit.GKInviteHandler -&gt; unit" Usage="gKMatchmaker.SetInviteHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'InviteHandler' property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="GameKit.GKInviteHandler" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedMatchmaker">
      <MemberSignature Language="C#" Value="public static GameKit.GKMatchmaker SharedMatchmaker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class GameKit.GKMatchmaker SharedMatchmaker" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKMatchmaker.SharedMatchmaker" />
      <MemberSignature Language="F#" Value="member this.SharedMatchmaker : GameKit.GKMatchmaker" Usage="GameKit.GKMatchmaker.SharedMatchmaker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sharedMatchmaker")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKMatchmaker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the matchmaker singleton.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartBrowsingForNearbyPlayers">
      <MemberSignature Language="C#" Value="public virtual void StartBrowsingForNearbyPlayers (Action&lt;GameKit.GKPlayer,bool&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartBrowsingForNearbyPlayers(class System.Action`2&lt;class GameKit.GKPlayer, bool&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.StartBrowsingForNearbyPlayers(System.Action{GameKit.GKPlayer,System.Boolean})" />
      <MemberSignature Language="F#" Value="abstract member StartBrowsingForNearbyPlayers : Action&lt;GameKit.GKPlayer, bool&gt; -&gt; unit&#xA;override this.StartBrowsingForNearbyPlayers : Action&lt;GameKit.GKPlayer, bool&gt; -&gt; unit" Usage="gKMatchmaker.StartBrowsingForNearbyPlayers handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("startBrowsingForNearbyPlayersWithHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;GameKit.GKPlayer,System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V60))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Begins discovering nearby players.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartBrowsingForNearbyPlayers">
      <MemberSignature Language="C#" Value="public virtual void StartBrowsingForNearbyPlayers (Action&lt;string,bool&gt; reachableHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartBrowsingForNearbyPlayers(class System.Action`2&lt;string, bool&gt; reachableHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.StartBrowsingForNearbyPlayers(System.Action{System.String,System.Boolean})" />
      <MemberSignature Language="F#" Value="abstract member StartBrowsingForNearbyPlayers : Action&lt;string, bool&gt; -&gt; unit&#xA;override this.StartBrowsingForNearbyPlayers : Action&lt;string, bool&gt; -&gt; unit" Usage="gKMatchmaker.StartBrowsingForNearbyPlayers reachableHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("startBrowsingForNearbyPlayersWithReachableHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'StartBrowsingForNearbyPlayers(Action&lt;GKPlayer, bool&gt; handler)' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'StartBrowsingForNearbyPlayers(Action&lt;GKPlayer, bool&gt; handler)' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reachableHandler" Type="System.Action&lt;System.String,System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V59))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="reachableHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Begins discovering nearby players.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopBrowsingForNearbyPlayers">
      <MemberSignature Language="C#" Value="public virtual void StopBrowsingForNearbyPlayers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopBrowsingForNearbyPlayers() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKMatchmaker.StopBrowsingForNearbyPlayers" />
      <MemberSignature Language="F#" Value="abstract member StopBrowsingForNearbyPlayers : unit -&gt; unit&#xA;override this.StopBrowsingForNearbyPlayers : unit -&gt; unit" Usage="gKMatchmaker.StopBrowsingForNearbyPlayers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stopBrowsingForNearbyPlayers")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops discovering nearby players.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
