<Type Name="GKLocalPlayer" FullName="GameKit.GKLocalPlayer">
  <TypeSignature Language="C#" Value="public class GKLocalPlayer : GameKit.GKPlayer, GameKit.IGKSavedGameListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GKLocalPlayer extends GameKit.GKPlayer implements class GameKit.IGKSavedGameListener, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:GameKit.GKLocalPlayer" />
  <TypeSignature Language="F#" Value="type GKLocalPlayer = class&#xA;    inherit GKPlayer&#xA;    interface IGKSavedGameListener&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>GameKit.GKPlayer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>GameKit.IGKSavedGameListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("GKLocalPlayer", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the authenticated local player.</summary>
    <remarks>
      <para>
	Represents the authenticated player for this device.   
      </para>
      <para>
	On iOS 6.0 and newer, to authenticate the user, set the <see cref="P:GameKit.GKLocalPlayer.AuthenticateHandler" />
	property to a delegate that takes both a UIViewController and
	an NSError parameters.  This will trigger the authentication
	to take place.  For older versions of iOS, you should call the
	<see cref="M:GameKit.GKLocalPlayer.Authenticate(System.Action{Foundation.NSError})" />
	method.  The difference is that with iOS 6.0 your callback
	receives a UIViewController that you can present to your user,
	while the old API would present the API and invoke your
	callback on an arbitrary thread.

      </para>
      <para>
	GameKit will call <see cref="P:GameKit.GKLocalPlayer.AuthenticateHandler" />
	on demand as your application transitions from background and
	foreground.  It is important that you update any internal
	state when authenticated as the user might have logged off,
	and logged in with a different account.

      </para>
      <example>
        <code lang="C#"><![CDATA[
//
// This shows how to authenticate on both iOS 6.0 and older versions
//
if (UIDevice.CurrentDevice.CheckSystemVersion (6, 0)) {
    //
    // iOS 6.0 and newer
    //
    GKLocalPlayer.LocalPlayer.AuthenticateHandler = (ui, error) => {

        // If ui is null, that means the user is already authenticated,
	// for example, if the user used Game Center directly to log in

	if (ui != null)
            current.PresentModalViewController (ui, true);
	else {
	    // Check if you are authenticated:
	    var authenticated = GKLocalPlayer.LocalPlayer.Authenticated;
	}
	Console.WriteLine ("Authentication result: {0}",err);
    };
} else {
    // Versions prior to iOS 6.0
    GKLocalPlayer.LocalPlayer.Authenticate ((err) => {
        Console.WriteLine ("Authentication result: {0}",err);
    });
};
]]></code>
      </example>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/GameKit/Reference/GKLocalPlayer_Ref/index.html">Apple documentation for <c>GKLocalPlayer</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKLocalPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKLocalPlayer (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new GameKit.GKLocalPlayer : Foundation.NSCoder -&gt; GameKit.GKLocalPlayer" Usage="new GameKit.GKLocalPlayer coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GKLocalPlayer (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new GameKit.GKLocalPlayer : Foundation.NSObjectFlag -&gt; GameKit.GKLocalPlayer" Usage="new GameKit.GKLocalPlayer t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal GKLocalPlayer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new GameKit.GKLocalPlayer : nativeint -&gt; GameKit.GKLocalPlayer" Usage="new GameKit.GKLocalPlayer handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual void Authenticate (Action&lt;Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Authenticate(class System.Action`1&lt;class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.Authenticate(System.Action{Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : Action&lt;Foundation.NSError&gt; -&gt; unit&#xA;override this.Authenticate : Action&lt;Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.Authenticate handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("authenticateWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, "Set the 'AuthenticationHandler' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, "Set the 'AuthenticationHandler' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Developers should not use this deprecated method. Set the 'AuthenticationHandler' instead.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.AuthenticateAsync" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsync : unit -&gt; System.Threading.Tasks.Task" Usage="gKLocalPlayer.AuthenticateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, "Set the 'AuthenticationHandler' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, "Set the 'AuthenticationHandler' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Developers should not use this deprecated method. Set the 'AuthenticationHandler' instead.</summary>
        <returns>A task that represents the asynchronous Authenticate operation</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public virtual bool Authenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKLocalPlayer.Authenticated" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool" Usage="GameKit.GKLocalPlayer.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAuthenticated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Current authentication state for the local player.</summary>
        <value>True if the user has been authenticated, false otherwise.</value>
        <remarks>

	  This property changes as the application transitions from
	  background to foreground, so you should check the value of
	  this property on your handler and enable or disable features
	  that depend on it in your game.

	</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateHandler">
      <MemberSignature Language="C#" Value="public virtual Action&lt;UIKit.UIViewController,Foundation.NSError&gt; AuthenticateHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`2&lt;class UIKit.UIViewController, class Foundation.NSError&gt; AuthenticateHandler" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKLocalPlayer.AuthenticateHandler" />
      <MemberSignature Language="F#" Value="member this.AuthenticateHandler : Action&lt;UIKit.UIViewController, Foundation.NSError&gt; with get, set" Usage="GameKit.GKLocalPlayer.AuthenticateHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("authenticateHandler", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAuthenticateHandler:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;UIKit.UIViewController,Foundation.NSError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handler used to authenticate the user, triggers authentication when set.</summary>
        <value>
          <para>
          </para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>
          <para>
	    This method will be called on demand, and the scenarios
	    are either (a) the user has not authenticated this device,
	    so you should present the view controller that is passed
	    as an argument to this function; (b) the user is either
	    authenticated or not authenticated, and you should use the
	    value of the <see cref="P:GameKit.GKLocalPlayer.Authenticated" />
	    to determine this.

	  </para>
          <para> 
	    This callback can be called multiple times, for
	    example in response to the user logging off, and another
	    one logging in in GameCenter.  Use the state in the
	    GKLocalPlayer to determine the 
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationDidChangeNotificationName">
      <MemberSignature Language="C#" Value="public static Foundation.NSString AuthenticationDidChangeNotificationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString AuthenticationDidChangeNotificationName" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKLocalPlayer.AuthenticationDidChangeNotificationName" />
      <MemberSignature Language="F#" Value="member this.AuthenticationDidChangeNotificationName : Foundation.NSString" Usage="GameKit.GKLocalPlayer.AuthenticationDidChangeNotificationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use GKLocalPlayer.Notifications.ObserveAuthenticationDidChangeNotificationName helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("GKPlayerAuthenticationDidChangeNotificationName", "GameKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for AuthenticationDidChangeNoti</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <para id="tool-remark">If you want to subscribe to this notification, you can use the convenience <see cref="M:GameKit.GKLocalPlayer.Notifications.ObserveAuthenticationDidChangeNotificationName*" /> methods which offer strongly typed access to the parameters of the notification.</para>
          <para>The following example shows how to use the strongly typed Notifications class, to take the guesswork out of the available properties in the notification:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// Lambda style
//

// listening
notification = GKLocalPlayer.Notifications.ObserveAuthenticationDidChangeNotificationName ((sender, args) => {
    /* Access strongly typed args */
    Console.WriteLine ("Notification: {0}", args.Notification);
});

// To stop listening:
notification.Dispose ();

//
// Method style
//
NSObject notification;
void Callback (object sender, Foundation.NSNotificationEventArgs args)
{
    // Access strongly typed args
    Console.WriteLine ("Notification: {0}", args.Notification);
}

void Setup ()
{
    notification = GKLocalPlayer.Notifications.ObserveAuthenticationDidChangeNotificationName (Callback);
}

void Teardown ()
{
    notification.Dispose ();
}]]></code>
          </example>
          <para>The following example shows how to use the notification with the DefaultCenter API:</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        GKLocalPlayer.AuthenticationDidChangeNotificationName, (notification) => {Console.WriteLine ("Received the notification GKLocalPlayer", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification GKLocalPlayer", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (GKLocalPlayer.AuthenticationDidChangeNotificationName, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKLocalPlayer.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="GameKit.GKLocalPlayer.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSavedGames">
      <MemberSignature Language="C#" Value="public virtual void DeleteSavedGames (string name, Action&lt;Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteSavedGames(string name, class System.Action`1&lt;class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.DeleteSavedGames(System.String,System.Action{Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DeleteSavedGames : string * Action&lt;Foundation.NSError&gt; -&gt; unit&#xA;override this.DeleteSavedGames : string * Action&lt;Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.DeleteSavedGames (name, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("deleteSavedGamesWithName:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="handler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="handler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Deletes all saved games that are named <paramref name="name" /> and passes <see langword="null" /> to  <paramref name="handler" /> on success, or an error on failure.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidModifySavedGame">
      <MemberSignature Language="C#" Value="public virtual void DidModifySavedGame (GameKit.GKPlayer player, GameKit.GKSavedGame savedGame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidModifySavedGame(class GameKit.GKPlayer player, class GameKit.GKSavedGame savedGame) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.DidModifySavedGame(GameKit.GKPlayer,GameKit.GKSavedGame)" />
      <MemberSignature Language="F#" Value="abstract member DidModifySavedGame : GameKit.GKPlayer * GameKit.GKSavedGame -&gt; unit&#xA;override this.DidModifySavedGame : GameKit.GKPlayer * GameKit.GKSavedGame -&gt; unit" Usage="gKLocalPlayer.DidModifySavedGame (player, savedGame)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("player:didModifySavedGame:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="savedGame" Type="GameKit.GKSavedGame" />
      </Parameters>
      <Docs>
        <param name="player">To be added.</param>
        <param name="savedGame">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchSavedGames">
      <MemberSignature Language="C#" Value="public virtual void FetchSavedGames (Action&lt;GameKit.GKSavedGame[],Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchSavedGames(class System.Action`2&lt;class GameKit.GKSavedGame[], class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.FetchSavedGames(System.Action{GameKit.GKSavedGame[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchSavedGames : Action&lt;GameKit.GKSavedGame[], Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchSavedGames : Action&lt;GameKit.GKSavedGame[], Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.FetchSavedGames handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchSavedGamesWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;GameKit.GKSavedGame[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V52))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Retrieves all saved games and passes them to  <paramref name="handler" />, along with <see langword="null" /> for success, or an error on failure.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Friends">
      <MemberSignature Language="C#" Value="public virtual string[] Friends { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Friends" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKLocalPlayer.Friends" />
      <MemberSignature Language="F#" Value="member this.Friends : string[]" Usage="GameKit.GKLocalPlayer.Friends" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadFriendPlayers' instead and collect the friends from the invoked callback.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadFriendPlayers' instead and collect the friends from the invoked callback.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadFriendPlayers' instead and collect the friends from the invoked callback.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadFriendPlayers' instead and collect the friends from the invoked callback.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("friends", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Deprecated. Gets an array of the local player's friends' identifiers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateIdentityVerificationSignature">
      <MemberSignature Language="C#" Value="public virtual void GenerateIdentityVerificationSignature (GameKit.GKIdentityVerificationSignatureHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateIdentityVerificationSignature(class GameKit.GKIdentityVerificationSignatureHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.GenerateIdentityVerificationSignature(GameKit.GKIdentityVerificationSignatureHandler)" />
      <MemberSignature Language="F#" Value="abstract member GenerateIdentityVerificationSignature : GameKit.GKIdentityVerificationSignatureHandler -&gt; unit&#xA;override this.GenerateIdentityVerificationSignature : GameKit.GKIdentityVerificationSignatureHandler -&gt; unit" Usage="gKLocalPlayer.GenerateIdentityVerificationSignature completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("generateIdentityVerificationSignatureWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="GameKit.GKIdentityVerificationSignatureHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKIdentityVerificationSignatureHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates and returns a signature for authenticating the local player on a third-party server. See remarks</summary>
        <remarks>
          <paramref name="completionHandler" /> receives an encryption key URL, the signature data, a salt, a timestamp, and an error object that is <see langword="null" /> on success.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateIdentityVerificationSignatureAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKIdentityVerificationSignatureResult&gt; GenerateIdentityVerificationSignatureAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKIdentityVerificationSignatureResult&gt; GenerateIdentityVerificationSignatureAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.GenerateIdentityVerificationSignatureAsync" />
      <MemberSignature Language="F#" Value="abstract member GenerateIdentityVerificationSignatureAsync : unit -&gt; System.Threading.Tasks.Task&lt;GameKit.GKIdentityVerificationSignatureResult&gt;&#xA;override this.GenerateIdentityVerificationSignatureAsync : unit -&gt; System.Threading.Tasks.Task&lt;GameKit.GKIdentityVerificationSignatureResult&gt;" Usage="gKLocalPlayer.GenerateIdentityVerificationSignatureAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKIdentityVerificationSignatureResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a signature for authenticating the local player on a third-party server. See remarks</summary>
        <returns>
          <para>A task that represents the asynchronous GenerateIdentityVerificationSignature operation.   The value of the TResult parameter is of type GameKit.GKIdentityVerificationSignatureResult.  Holds the return values from the asynchronous method </para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConflictingSavedGames">
      <MemberSignature Language="C#" Value="public virtual void HasConflictingSavedGames (GameKit.GKPlayer player, GameKit.GKSavedGame[] savedGames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HasConflictingSavedGames(class GameKit.GKPlayer player, class GameKit.GKSavedGame[] savedGames) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.HasConflictingSavedGames(GameKit.GKPlayer,GameKit.GKSavedGame[])" />
      <MemberSignature Language="F#" Value="abstract member HasConflictingSavedGames : GameKit.GKPlayer * GameKit.GKSavedGame[] -&gt; unit&#xA;override this.HasConflictingSavedGames : GameKit.GKPlayer * GameKit.GKSavedGame[] -&gt; unit" Usage="gKLocalPlayer.HasConflictingSavedGames (player, savedGames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("player:hasConflictingSavedGames:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="player" Type="GameKit.GKPlayer" />
        <Parameter Name="savedGames" Type="GameKit.GKSavedGame[]" />
      </Parameters>
      <Docs>
        <param name="player">To be added.</param>
        <param name="savedGames">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnderage">
      <MemberSignature Language="C#" Value="public virtual bool IsUnderage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnderage" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKLocalPlayer.IsUnderage" />
      <MemberSignature Language="F#" Value="member this.IsUnderage : bool" Usage="GameKit.GKLocalPlayer.IsUnderage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isUnderage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that tells whether the player is undreaged.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultLeaderboardCategoryID">
      <MemberSignature Language="C#" Value="public virtual void LoadDefaultLeaderboardCategoryID (Action&lt;string,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadDefaultLeaderboardCategoryID(class System.Action`2&lt;string, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadDefaultLeaderboardCategoryID(System.Action{System.String,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member LoadDefaultLeaderboardCategoryID : Action&lt;string, Foundation.NSError&gt; -&gt; unit&#xA;override this.LoadDefaultLeaderboardCategoryID : Action&lt;string, Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.LoadDefaultLeaderboardCategoryID completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loadDefaultLeaderboardCategoryIDWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadDefaultLeaderboardIdentifier' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadDefaultLeaderboardIdentifier' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;System.String,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V53))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Loads the local player's default leaderboard category ID, and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultLeaderboardCategoryIDAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; LoadDefaultLeaderboardCategoryIDAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; LoadDefaultLeaderboardCategoryIDAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadDefaultLeaderboardCategoryIDAsync" />
      <MemberSignature Language="F#" Value="abstract member LoadDefaultLeaderboardCategoryIDAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.LoadDefaultLeaderboardCategoryIDAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="gKLocalPlayer.LoadDefaultLeaderboardCategoryIDAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadDefaultLeaderboardIdentifier' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadDefaultLeaderboardIdentifier' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads the local player's default leaderboard category ID, and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous LoadDefaultLeaderboardCategoryID operation.  The value of the TResult parameter is of type System.Action&lt;System.String,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultLeaderboardIdentifier">
      <MemberSignature Language="C#" Value="public virtual void LoadDefaultLeaderboardIdentifier (Action&lt;string,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadDefaultLeaderboardIdentifier(class System.Action`2&lt;string, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadDefaultLeaderboardIdentifier(System.Action{System.String,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member LoadDefaultLeaderboardIdentifier : Action&lt;string, Foundation.NSError&gt; -&gt; unit&#xA;override this.LoadDefaultLeaderboardIdentifier : Action&lt;string, Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.LoadDefaultLeaderboardIdentifier completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loadDefaultLeaderboardIdentifierWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;System.String,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V53))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Loads the local player's default leaderboard identifier, and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDefaultLeaderboardIdentifierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; LoadDefaultLeaderboardIdentifierAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; LoadDefaultLeaderboardIdentifierAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadDefaultLeaderboardIdentifierAsync" />
      <MemberSignature Language="F#" Value="abstract member LoadDefaultLeaderboardIdentifierAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.LoadDefaultLeaderboardIdentifierAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="gKLocalPlayer.LoadDefaultLeaderboardIdentifierAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads the local player's default leaderboard identifier, and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous LoadDefaultLeaderboardIdentifier operation.  The value of the TResult parameter is of type System.Action&lt;System.String,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFriendPlayers">
      <MemberSignature Language="C#" Value="public virtual void LoadFriendPlayers (Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadFriendPlayers(class System.Action`2&lt;class GameKit.GKPlayer[], class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadFriendPlayers(System.Action{GameKit.GKPlayer[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member LoadFriendPlayers : Action&lt;GameKit.GKPlayer[], Foundation.NSError&gt; -&gt; unit&#xA;override this.LoadFriendPlayers : Action&lt;GameKit.GKPlayer[], Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.LoadFriendPlayers completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loadFriendPlayersWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V46))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Loads an array of the local player's friends' identifiers and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFriendPlayersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt; LoadFriendPlayersAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKPlayer[]&gt; LoadFriendPlayersAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadFriendPlayersAsync" />
      <MemberSignature Language="F#" Value="abstract member LoadFriendPlayersAsync : unit -&gt; System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;&#xA;override this.LoadFriendPlayersAsync : unit -&gt; System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;" Usage="gKLocalPlayer.LoadFriendPlayersAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads an array of the local player's friends' identifiers and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous LoadFriendPlayers operation.  The value of the TResult parameter is of type System.Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para copied="true">The LoadFriendPlayersAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFriends">
      <MemberSignature Language="C#" Value="public virtual void LoadFriends (GameKit.GKFriendsHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadFriends(class GameKit.GKFriendsHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadFriends(GameKit.GKFriendsHandler)" />
      <MemberSignature Language="F#" Value="abstract member LoadFriends : GameKit.GKFriendsHandler -&gt; unit&#xA;override this.LoadFriends : GameKit.GKFriendsHandler -&gt; unit" Usage="gKLocalPlayer.LoadFriends handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loadFriendsWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadRecentPlayers' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadRecentPlayers' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="GameKit.GKFriendsHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKFriendsHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Deprecated. Loads an array of the local player's friends' identifiers and passes it to <paramref name="handler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFriendsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string[]&gt; LoadFriendsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string[]&gt; LoadFriendsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadFriendsAsync" />
      <MemberSignature Language="F#" Value="abstract member LoadFriendsAsync : unit -&gt; System.Threading.Tasks.Task&lt;string[]&gt;&#xA;override this.LoadFriendsAsync : unit -&gt; System.Threading.Tasks.Task&lt;string[]&gt;" Usage="gKLocalPlayer.LoadFriendsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadRecentPlayers' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'LoadRecentPlayers' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deprecated. Loads an array of the local player's friends' identifiers and passes it to <paramref name="handler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <returns>
          <para>A task that represents the asynchronous LoadFriends operation.   The value of the TResult parameter is a GameKit.GKFriendsHandler.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRecentPlayers">
      <MemberSignature Language="C#" Value="public virtual void LoadRecentPlayers (Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadRecentPlayers(class System.Action`2&lt;class GameKit.GKPlayer[], class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadRecentPlayers(System.Action{GameKit.GKPlayer[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member LoadRecentPlayers : Action&lt;GameKit.GKPlayer[], Foundation.NSError&gt; -&gt; unit&#xA;override this.LoadRecentPlayers : Action&lt;GameKit.GKPlayer[], Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.LoadRecentPlayers completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loadRecentPlayersWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V46))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Loads the recent players.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRecentPlayersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt; LoadRecentPlayersAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKPlayer[]&gt; LoadRecentPlayersAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.LoadRecentPlayersAsync" />
      <MemberSignature Language="F#" Value="abstract member LoadRecentPlayersAsync : unit -&gt; System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;&#xA;override this.LoadRecentPlayersAsync : unit -&gt; System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;" Usage="gKLocalPlayer.LoadRecentPlayersAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKPlayer[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads the recent players.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous LoadRecentPlayers operation.  The value of the TResult parameter is of type System.Action&lt;GameKit.GKPlayer[],Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalPlayer">
      <MemberSignature Language="C#" Value="public static GameKit.GKLocalPlayer LocalPlayer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class GameKit.GKLocalPlayer LocalPlayer" />
      <MemberSignature Language="DocId" Value="P:GameKit.GKLocalPlayer.LocalPlayer" />
      <MemberSignature Language="F#" Value="member this.LocalPlayer : GameKit.GKLocalPlayer" Usage="GameKit.GKLocalPlayer.LocalPlayer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("localPlayer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKLocalPlayer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the shared instance of the local player.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterListener">
      <MemberSignature Language="C#" Value="public virtual void RegisterListener (GameKit.IGKLocalPlayerListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterListener(class GameKit.IGKLocalPlayerListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.RegisterListener(GameKit.IGKLocalPlayerListener)" />
      <MemberSignature Language="F#" Value="abstract member RegisterListener : GameKit.IGKLocalPlayerListener -&gt; unit&#xA;override this.RegisterListener : GameKit.IGKLocalPlayerListener -&gt; unit" Usage="gKLocalPlayer.RegisterListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("registerListener:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="GameKit.IGKLocalPlayerListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Registers <paramref name="listener" /> in order to monitor the events that it listens for.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveConflictingSavedGames">
      <MemberSignature Language="C#" Value="public virtual void ResolveConflictingSavedGames (GameKit.GKSavedGame[] conflictingSavedGames, Foundation.NSData data, Action&lt;GameKit.GKSavedGame[],Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResolveConflictingSavedGames(class GameKit.GKSavedGame[] conflictingSavedGames, class Foundation.NSData data, class System.Action`2&lt;class GameKit.GKSavedGame[], class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.ResolveConflictingSavedGames(GameKit.GKSavedGame[],Foundation.NSData,System.Action{GameKit.GKSavedGame[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member ResolveConflictingSavedGames : GameKit.GKSavedGame[] * Foundation.NSData * Action&lt;GameKit.GKSavedGame[], Foundation.NSError&gt; -&gt; unit&#xA;override this.ResolveConflictingSavedGames : GameKit.GKSavedGame[] * Foundation.NSData * Action&lt;GameKit.GKSavedGame[], Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.ResolveConflictingSavedGames (conflictingSavedGames, data, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resolveConflictingSavedGames:withData:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conflictingSavedGames" Type="GameKit.GKSavedGame[]" />
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="handler" Type="System.Action&lt;GameKit.GKSavedGame[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V52))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="conflictingSavedGames">To be added.</param>
        <param name="data">To be added.</param>
        <param name="handler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Resolves the specified conflicting saved games that are listed in <paramref name="conflictingSavedGames" /> and stored in <paramref name="data" />, then passes a list of all the games (conflicting games first) to <paramref name="handler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveGameData">
      <MemberSignature Language="C#" Value="public virtual void SaveGameData (Foundation.NSData data, string name, Action&lt;GameKit.GKSavedGame,Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveGameData(class Foundation.NSData data, string name, class System.Action`2&lt;class GameKit.GKSavedGame, class Foundation.NSError&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.SaveGameData(Foundation.NSData,System.String,System.Action{GameKit.GKSavedGame,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SaveGameData : Foundation.NSData * string * Action&lt;GameKit.GKSavedGame, Foundation.NSError&gt; -&gt; unit&#xA;override this.SaveGameData : Foundation.NSData * string * Action&lt;GameKit.GKSavedGame, Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.SaveGameData (data, name, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveGameData:withName:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="handler" Type="System.Action&lt;GameKit.GKSavedGame,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V54))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="name">To be added.</param>
        <param name="handler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Saves the game data <paramref name="data" /> under the name <paramref name="name" />, and then passes the game metadata to <paramref name="handler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultLeaderboardCategoryID">
      <MemberSignature Language="C#" Value="public virtual void SetDefaultLeaderboardCategoryID (string categoryID, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultLeaderboardCategoryID(string categoryID, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.SetDefaultLeaderboardCategoryID(System.String,System.Action{Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultLeaderboardCategoryID : string * Action&lt;Foundation.NSError&gt; -&gt; unit&#xA;override this.SetDefaultLeaderboardCategoryID : string * Action&lt;Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.SetDefaultLeaderboardCategoryID (categoryID, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setDefaultLeaderboardCategoryID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'SetDefaultLeaderboardIdentifier' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'SetDefaultLeaderboardIdentifier' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryID" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="categoryID">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Deprecated. Sets the local player's default leaderboard category ID, and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultLeaderboardCategoryIDAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetDefaultLeaderboardCategoryIDAsync (string categoryID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetDefaultLeaderboardCategoryIDAsync(string categoryID) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.SetDefaultLeaderboardCategoryIDAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultLeaderboardCategoryIDAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.SetDefaultLeaderboardCategoryIDAsync : string -&gt; System.Threading.Tasks.Task" Usage="gKLocalPlayer.SetDefaultLeaderboardCategoryIDAsync categoryID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'SetDefaultLeaderboardIdentifier' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, "Use 'SetDefaultLeaderboardIdentifier' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryID">To be added.This parameter can be .</param>
        <summary>Deprecated. Sets the local player's default leaderboard category ID, and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <returns>A task that represents the asynchronous SetDefaultLeaderboardCategoryID operation</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultLeaderboardIdentifier">
      <MemberSignature Language="C#" Value="public virtual void SetDefaultLeaderboardIdentifier (string leaderboardIdentifier, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultLeaderboardIdentifier(string leaderboardIdentifier, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.SetDefaultLeaderboardIdentifier(System.String,System.Action{Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultLeaderboardIdentifier : string * Action&lt;Foundation.NSError&gt; -&gt; unit&#xA;override this.SetDefaultLeaderboardIdentifier : string * Action&lt;Foundation.NSError&gt; -&gt; unit" Usage="gKLocalPlayer.SetDefaultLeaderboardIdentifier (leaderboardIdentifier, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setDefaultLeaderboardIdentifier:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaderboardIdentifier" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="leaderboardIdentifier">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Sets the local player's default leaderboard identifier, and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred..</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultLeaderboardIdentifierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetDefaultLeaderboardIdentifierAsync (string leaderboardIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetDefaultLeaderboardIdentifierAsync(string leaderboardIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.SetDefaultLeaderboardIdentifierAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultLeaderboardIdentifierAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.SetDefaultLeaderboardIdentifierAsync : string -&gt; System.Threading.Tasks.Task" Usage="gKLocalPlayer.SetDefaultLeaderboardIdentifierAsync leaderboardIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaderboardIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="leaderboardIdentifier">To be added.</param>
        <summary>Sets the local player's default leaderboard identifier, and passes it to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred..</summary>
        <returns>A task that represents the asynchronous SetDefaultLeaderboardIdentifier operation</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAllListeners">
      <MemberSignature Language="C#" Value="public virtual void UnregisterAllListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAllListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.UnregisterAllListeners" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAllListeners : unit -&gt; unit&#xA;override this.UnregisterAllListeners : unit -&gt; unit" Usage="gKLocalPlayer.UnregisterAllListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unregisterAllListeners")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unregisters all event listeners.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterListener">
      <MemberSignature Language="C#" Value="public virtual void UnregisterListener (GameKit.IGKLocalPlayerListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterListener(class GameKit.IGKLocalPlayerListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameKit.GKLocalPlayer.UnregisterListener(GameKit.IGKLocalPlayerListener)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterListener : GameKit.IGKLocalPlayerListener -&gt; unit&#xA;override this.UnregisterListener : GameKit.IGKLocalPlayerListener -&gt; unit" Usage="gKLocalPlayer.UnregisterListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unregisterListener:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="GameKit.IGKLocalPlayerListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Unregisters <paramref name="listener" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
