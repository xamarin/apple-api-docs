<Type Name="GKTurnBasedMatch" FullName="GameKit.GKTurnBasedMatch">
  <TypeSignature Language="C#" Value="public class GKTurnBasedMatch : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GKTurnBasedMatch extends Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("GKTurnBasedMatch", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 5, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A type of game match that uses store-and-forward to share data and allow for asynchronous turn-taking.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/GameKit/Reference/GKTurnBasedMatch_Ref/index.html">Apple documentation for <c>GKTurnBasedMatch</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKTurnBasedMatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GKTurnBasedMatch (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GKTurnBasedMatch (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptInvite">
      <MemberSignature Language="C#" Value="public virtual void AcceptInvite (Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptInvite(class System.Action`2&lt;class GameKit.GKTurnBasedMatch, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("acceptInviteWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V49))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Accepts an invitation to a match and then passes a new match object to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptInviteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt; AcceptInviteAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKTurnBasedMatch&gt; AcceptInviteAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Accepts an invitation to a match and then passes a new match object to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous AcceptInvite operation.  The value of the TResult parameter is of type <c>Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt;</c>.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActiveExchanges">
      <MemberSignature Language="C#" Value="public virtual GameKit.GKTurnBasedExchange[] ActiveExchanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GameKit.GKTurnBasedExchange[] ActiveExchanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("activeExchanges", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKTurnBasedExchange[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array that contains the active exchanges for the local player.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedExchanges">
      <MemberSignature Language="C#" Value="public virtual GameKit.GKTurnBasedExchange[] CompletedExchanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GameKit.GKTurnBasedExchange[] CompletedExchanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("completedExchanges", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKTurnBasedExchange[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array that contains the completed exchanges for the local player.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationDate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate CreationDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate CreationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("creationDate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the match creation date.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentParticipant">
      <MemberSignature Language="C#" Value="public virtual GameKit.GKTurnBasedParticipant CurrentParticipant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GameKit.GKTurnBasedParticipant CurrentParticipant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("currentParticipant", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKTurnBasedParticipant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the participant who is currently able to update match data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclineInvite">
      <MemberSignature Language="C#" Value="public virtual void DeclineInvite (Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeclineInvite(class System.Action`2&lt;class GameKit.GKTurnBasedMatch, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("declineInviteWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V49))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Declines an invitation to a match and then passes a new match object to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclineInviteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt; DeclineInviteAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKTurnBasedMatch&gt; DeclineInviteAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Declines an invitation to a match and then passes a new match object to <paramref name="completionHandler" />, along with an error object that is <see langword="null" /> if no error occurred.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DeclineInvite operation.  The value of the TResult parameter is of type <c>Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt;</c>.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DefaultTimeout">
      <MemberSignature Language="C#" Value="public static double DefaultTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 DefaultTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("GKTurnTimeoutDefault", "GameKit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant GKTurnTimeoutDefault</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndMatchInTurn">
      <MemberSignature Language="C#" Value="public virtual void EndMatchInTurn (Foundation.NSData matchData, Action&lt;Foundation.NSError&gt; onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndMatchInTurn(class Foundation.NSData matchData, class System.Action`1&lt;class Foundation.NSError&gt; onCompletion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("endMatchInTurnWithMatchData:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="onCompletion" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V6))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matchData">To be added.</param>
        <param name="onCompletion">To be added.</param>
        <summary>Ends the match with the end state <paramref name="matchData" /> and passes an error object that is <see langword="null" /> if no error occurred to <paramref name="completionHandler" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndMatchInTurn">
      <MemberSignature Language="C#" Value="public virtual void EndMatchInTurn (Foundation.NSData matchData, GameKit.GKScore[] scores, GameKit.GKAchievement[] achievements, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndMatchInTurn(class Foundation.NSData matchData, class GameKit.GKScore[] scores, class GameKit.GKAchievement[] achievements, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("endMatchInTurnWithMatchData:scores:achievements:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="scores" Type="GameKit.GKScore[]" />
        <Parameter Name="achievements" Type="GameKit.GKAchievement[]" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matchData">To be added.</param>
        <param name="scores">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="achievements">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Ends the match with the specified end state, scores, and achievements, and passes an error object that is <see langword="null" /> if no error occurred to <paramref name="completionHandler" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndMatchInTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task EndMatchInTurnAsync (Foundation.NSData matchData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task EndMatchInTurnAsync(class Foundation.NSData matchData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="matchData">To be added.</param>
        <summary>Ends the match with the specified end state, scores, and achievements, and passes an error object that is  if no error occurred to .</summary>
        <returns>A task that represents the asynchronous EndMatchInTurn operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndMatchInTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task EndMatchInTurnAsync (Foundation.NSData matchData, GameKit.GKScore[] scores, GameKit.GKAchievement[] achievements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task EndMatchInTurnAsync(class Foundation.NSData matchData, class GameKit.GKScore[] scores, class GameKit.GKAchievement[] achievements) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="scores" Type="GameKit.GKScore[]" />
        <Parameter Name="achievements" Type="GameKit.GKAchievement[]" />
      </Parameters>
      <Docs>
        <param name="matchData">To be added.</param>
        <param name="scores">To be added.</param>
        <param name="achievements">To be added.</param>
        <summary>Asynchronously the specified end state, scores, and achievements.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTurn">
      <MemberSignature Language="C#" Value="public virtual void EndTurn (GameKit.GKTurnBasedParticipant[] nextParticipants, double timeoutSeconds, Foundation.NSData matchData, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTurn(class GameKit.GKTurnBasedParticipant[] nextParticipants, float64 timeoutSeconds, class Foundation.NSData matchData, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("endTurnWithNextParticipants:turnTimeout:matchData:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextParticipants" Type="GameKit.GKTurnBasedParticipant[]" />
        <Parameter Name="timeoutSeconds" Type="System.Double" />
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="nextParticipants">To be added.</param>
        <param name="timeoutSeconds">To be added.</param>
        <param name="matchData">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Ends the turn and passes an error object that is <see langword="null" /> if no error occurred to <paramref name="completionHandler" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task EndTurnAsync (GameKit.GKTurnBasedParticipant[] nextParticipants, double timeoutSeconds, Foundation.NSData matchData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task EndTurnAsync(class GameKit.GKTurnBasedParticipant[] nextParticipants, float64 timeoutSeconds, class Foundation.NSData matchData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextParticipants" Type="GameKit.GKTurnBasedParticipant[]" />
        <Parameter Name="timeoutSeconds" Type="System.Double" />
        <Parameter Name="matchData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="nextParticipants">To be added.</param>
        <param name="timeoutSeconds">To be added.</param>
        <param name="matchData">To be added.</param>
        <summary>Ends the turn and passes an error object that is  if no error occurred to .</summary>
        <returns>A task that represents the asynchronous EndTurn operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndTurnWithNextParticipant">
      <MemberSignature Language="C#" Value="public virtual void EndTurnWithNextParticipant (GameKit.GKTurnBasedParticipant nextParticipant, Foundation.NSData matchData, Action&lt;Foundation.NSError&gt; noCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTurnWithNextParticipant(class GameKit.GKTurnBasedParticipant nextParticipant, class Foundation.NSData matchData, class System.Action`1&lt;class Foundation.NSError&gt; noCompletion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("endTurnWithNextParticipant:matchData:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'EndTurn' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, "Use 'EndTurn' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextParticipant" Type="GameKit.GKTurnBasedParticipant" />
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="noCompletion" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V6))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="nextParticipant">To be added.</param>
        <param name="matchData">To be added.</param>
        <param name="noCompletion">To be added.</param>
        <summary>Deprecated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTurnWithNextParticipantAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task EndTurnWithNextParticipantAsync (GameKit.GKTurnBasedParticipant nextParticipant, Foundation.NSData matchData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task EndTurnWithNextParticipantAsync(class GameKit.GKTurnBasedParticipant nextParticipant, class Foundation.NSData matchData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'EndTurn' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, "Use 'EndTurn' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextParticipant" Type="GameKit.GKTurnBasedParticipant" />
        <Parameter Name="matchData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="nextParticipant">To be added.</param>
        <param name="matchData">To be added.</param>
        <summary>Deprecated.</summary>
        <returns>A task that represents the asynchronous EndTurnWithNextParticipant operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExchangeMaxInitiatedExchangesPerPlayer">
      <MemberSignature Language="C#" Value="public virtual nuint ExchangeMaxInitiatedExchangesPerPlayer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint ExchangeMaxInitiatedExchangesPerPlayer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exchangeMaxInitiatedExchangesPerPlayer")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum number of active exchanges that the player can have initiated.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exchanges">
      <MemberSignature Language="C#" Value="public virtual GameKit.GKTurnBasedExchange[] Exchanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GameKit.GKTurnBasedExchange[] Exchanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exchanges", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKTurnBasedExchange[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array that contains the exchanges that are in progress for the match.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExhangeDataMaximumSize">
      <MemberSignature Language="C#" Value="public virtual nuint ExhangeDataMaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint ExhangeDataMaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exchangeDataMaximumSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum size of exchange data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMatch">
      <MemberSignature Language="C#" Value="public static void FindMatch (GameKit.GKMatchRequest request, GameKit.GKTurnBasedMatchRequest onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FindMatch(class GameKit.GKMatchRequest request, class GameKit.GKTurnBasedMatchRequest onCompletion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("findMatchForRequest:withCompletionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="GameKit.GKMatchRequest" />
        <Parameter Name="onCompletion" Type="GameKit.GKTurnBasedMatchRequest">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKTurnBasedMatchRequest))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="onCompletion">To be added.</param>
        <summary>Searches for and returns a match to join, and passes the match (which is <see langword="null" /> if an error occurs) and an error object (whic is null if there is no error) to <paramref name="onCompletion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMatchAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt; FindMatchAsync (GameKit.GKMatchRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class GameKit.GKTurnBasedMatch&gt; FindMatchAsync(class GameKit.GKMatchRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="GameKit.GKMatchRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Searches for and returns a match to join, and passes the match (which is  if an error occurs) and an error object (whic is null if there is no error) to .</summary>
        <returns>
          <para>A task that represents the asynchronous FindMatch operation.   The value of the TResult parameter is a <see cref="GameKit.GKTurnBasedMatchRequest" />.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LoadMatch">
      <MemberSignature Language="C#" Value="public static void LoadMatch (string matchId, Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatch(string matchId, class System.Action`2&lt;class GameKit.GKTurnBasedMatch, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loadMatchWithID:withCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchId" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V49))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matchId">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Loads the match that is identified by <paramref name="matchId" /> and passes the match (which is <see langword="null" /> if an error occurs) and an error object (whic is null if there is no error) to <paramref name="onCompletion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatchAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt; LoadMatchAsync (string matchId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class GameKit.GKTurnBasedMatch&gt; LoadMatchAsync(string matchId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="matchId">To be added.</param>
        <summary>Loads the match that is identified by  and passes the match (which is  if an error occurs) and an error object (whic is null if there is no error) to .</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous LoadMatch operation.  The value of the TResult parameter is of type <c>Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt;</c>.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LoadMatchData">
      <MemberSignature Language="C#" Value="public virtual void LoadMatchData (GameKit.GKTurnBasedMatchData onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadMatchData(class GameKit.GKTurnBasedMatchData onCompletion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loadMatchDataWithCompletionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onCompletion" Type="GameKit.GKTurnBasedMatchData">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKTurnBasedMatchData))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="onCompletion">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Loads the match data and passes it, along with an error object, to <paramref name="onCompletion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatchDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Foundation.NSData&gt; LoadMatchDataAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Foundation.NSData&gt; LoadMatchDataAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Foundation.NSData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads the match data and passes it, along with an error object, to <paramref name="onCompletion" />.</summary>
        <returns>
          <para>A task that represents the asynchronous LoadMatchData operation.   The value of the TResult parameter is a <see cref="GameKit.GKTurnBasedMatchData" />.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LoadMatches">
      <MemberSignature Language="C#" Value="public static void LoadMatches (GameKit.GKTurnBasedMatchesRequest onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatches(class GameKit.GKTurnBasedMatchesRequest onCompletion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("loadMatchesWithCompletionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onCompletion" Type="GameKit.GKTurnBasedMatchesRequest">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDGKTurnBasedMatchesRequest))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="onCompletion">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Loads all the matches for the current player and passes them, along with an error object, to <paramref name="onCompletion" />..</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatchesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch[]&gt; LoadMatchesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class GameKit.GKTurnBasedMatch[]&gt; LoadMatchesAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads all the matches for the current player and passes them, along with an error object, to <paramref name="onCompletion" />..</summary>
        <returns>
          <para>A task that represents the asynchronous LoadMatches operation.   The value of the TResult parameter is a <see cref="GameKit.GKTurnBasedMatchesRequest" />.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MatchData">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSData MatchData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData MatchData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("matchData", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the match data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchDataMaximumSize">
      <MemberSignature Language="C#" Value="public virtual nint MatchDataMaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint MatchDataMaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("matchDataMaximumSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the match data maximum size.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchID">
      <MemberSignature Language="C#" Value="public virtual string MatchID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MatchID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("matchID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identifer for the match.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("message", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMessage:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a message that is displayed to all the players in the match.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoTimeout">
      <MemberSignature Language="C#" Value="public static double NoTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 NoTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("GKTurnTimeoutNone", "GameKit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant GKTurnTimeoutNone</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantQuitInTurn">
      <MemberSignature Language="C#" Value="public virtual void ParticipantQuitInTurn (GameKit.GKTurnBasedMatchOutcome matchOutcome, GameKit.GKTurnBasedParticipant nextParticipant, Foundation.NSData matchData, Action&lt;Foundation.NSError&gt; onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParticipantQuitInTurn(valuetype GameKit.GKTurnBasedMatchOutcome matchOutcome, class GameKit.GKTurnBasedParticipant nextParticipant, class Foundation.NSData matchData, class System.Action`1&lt;class Foundation.NSError&gt; onCompletion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'ParticipantQuitInTurn (GKTurnBasedMatchOutcome, GKTurnBasedParticipant[], double, NSData, Action&lt;NSError&gt;)' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, "Use 'ParticipantQuitInTurn (GKTurnBasedMatchOutcome, GKTurnBasedParticipant[], double, NSData, Action&lt;NSError&gt;)' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchOutcome" Type="GameKit.GKTurnBasedMatchOutcome" />
        <Parameter Name="nextParticipant" Type="GameKit.GKTurnBasedParticipant" />
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="onCompletion" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V6))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matchOutcome">To be added.</param>
        <param name="nextParticipant">To be added.</param>
        <param name="matchData">To be added.</param>
        <param name="onCompletion">To be added.</param>
        <summary>Deprecated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantQuitInTurn">
      <MemberSignature Language="C#" Value="public virtual void ParticipantQuitInTurn (GameKit.GKTurnBasedMatchOutcome matchOutcome, GameKit.GKTurnBasedParticipant[] nextParticipants, double timeoutSeconds, Foundation.NSData matchData, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParticipantQuitInTurn(valuetype GameKit.GKTurnBasedMatchOutcome matchOutcome, class GameKit.GKTurnBasedParticipant[] nextParticipants, float64 timeoutSeconds, class Foundation.NSData matchData, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("participantQuitInTurnWithOutcome:nextParticipants:turnTimeout:matchData:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchOutcome" Type="GameKit.GKTurnBasedMatchOutcome" />
        <Parameter Name="nextParticipants" Type="GameKit.GKTurnBasedParticipant[]" />
        <Parameter Name="timeoutSeconds" Type="System.Double" />
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matchOutcome">To be added.</param>
        <param name="nextParticipants">To be added.</param>
        <param name="timeoutSeconds">To be added.</param>
        <param name="matchData">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Resigns the current player from the match and runs <paramref name="completionHandler" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantQuitInTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ParticipantQuitInTurnAsync (GameKit.GKTurnBasedMatchOutcome matchOutcome, GameKit.GKTurnBasedParticipant nextParticipant, Foundation.NSData matchData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ParticipantQuitInTurnAsync(valuetype GameKit.GKTurnBasedMatchOutcome matchOutcome, class GameKit.GKTurnBasedParticipant nextParticipant, class Foundation.NSData matchData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'ParticipantQuitInTurn (GKTurnBasedMatchOutcome, GKTurnBasedParticipant[], double, NSData, Action&lt;NSError&gt;)' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, "Use 'ParticipantQuitInTurn (GKTurnBasedMatchOutcome, GKTurnBasedParticipant[], double, NSData, Action&lt;NSError&gt;)' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchOutcome" Type="GameKit.GKTurnBasedMatchOutcome" />
        <Parameter Name="nextParticipant" Type="GameKit.GKTurnBasedParticipant" />
        <Parameter Name="matchData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="matchOutcome">To be added.</param>
        <param name="nextParticipant">To be added.</param>
        <param name="matchData">To be added.</param>
        <summary>Deprecated.</summary>
        <returns>A task that represents the asynchronous ParticipantQuitInTurn operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ParticipantQuitInTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ParticipantQuitInTurnAsync (GameKit.GKTurnBasedMatchOutcome matchOutcome, GameKit.GKTurnBasedParticipant[] nextParticipants, double timeoutSeconds, Foundation.NSData matchData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ParticipantQuitInTurnAsync(valuetype GameKit.GKTurnBasedMatchOutcome matchOutcome, class GameKit.GKTurnBasedParticipant[] nextParticipants, float64 timeoutSeconds, class Foundation.NSData matchData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchOutcome" Type="GameKit.GKTurnBasedMatchOutcome" />
        <Parameter Name="nextParticipants" Type="GameKit.GKTurnBasedParticipant[]" />
        <Parameter Name="timeoutSeconds" Type="System.Double" />
        <Parameter Name="matchData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="matchOutcome">To be added.</param>
        <param name="nextParticipants">To be added.</param>
        <param name="timeoutSeconds">To be added.</param>
        <param name="matchData">To be added.</param>
        <summary>Resigns the current player from the match and runs .</summary>
        <returns>A task that represents the asynchronous ParticipantQuitInTurn operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ParticipantQuitOutOfTurn">
      <MemberSignature Language="C#" Value="public virtual void ParticipantQuitOutOfTurn (GameKit.GKTurnBasedMatchOutcome matchOutcome, Action&lt;Foundation.NSError&gt; onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParticipantQuitOutOfTurn(valuetype GameKit.GKTurnBasedMatchOutcome matchOutcome, class System.Action`1&lt;class Foundation.NSError&gt; onCompletion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("participantQuitOutOfTurnWithOutcome:withCompletionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchOutcome" Type="GameKit.GKTurnBasedMatchOutcome" />
        <Parameter Name="onCompletion" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V6))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matchOutcome">To be added.</param>
        <param name="onCompletion">To be added.</param>
        <summary>Resigns the player from the match out of turn and runs <paramref name="onCompletion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantQuitOutOfTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ParticipantQuitOutOfTurnAsync (GameKit.GKTurnBasedMatchOutcome matchOutcome);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ParticipantQuitOutOfTurnAsync(valuetype GameKit.GKTurnBasedMatchOutcome matchOutcome) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchOutcome" Type="GameKit.GKTurnBasedMatchOutcome" />
      </Parameters>
      <Docs>
        <param name="matchOutcome">To be added.</param>
        <summary>Resigns the player from the match out of turn and runs .</summary>
        <returns>A task that represents the asynchronous ParticipantQuitOutOfTurn operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Participants">
      <MemberSignature Language="C#" Value="public virtual GameKit.GKTurnBasedParticipant[] Participants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GameKit.GKTurnBasedParticipant[] Participants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("participants", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKTurnBasedParticipant[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of participants in the match.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rematch">
      <MemberSignature Language="C#" Value="public virtual void Rematch (Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rematch(class System.Action`2&lt;class GameKit.GKTurnBasedMatch, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rematchWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V49))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates a new match with the same list of participants as the current match, and runs <paramref name="completionHanler" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RematchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt; RematchAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKTurnBasedMatch&gt; RematchAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new match with the same list of participants as the current match, and runs <paramref name="completionHanler" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous Rematch operation.  The value of the TResult parameter is of type <c>Action&lt;GameKit.GKTurnBasedMatch,Foundation.NSError&gt;</c>.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (Action&lt;Foundation.NSError&gt; onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Action`1&lt;class Foundation.NSError&gt; onCompletion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeWithCompletionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onCompletion" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V6))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="onCompletion">To be added.</param>
        <summary>Removes the match from the Game Center and runs <paramref name="oncCompletion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the match from the Game Center and runs <paramref name="oncCompletion" />.</summary>
        <returns>A task that represents the asynchronous Remove operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SaveCurrentTurn">
      <MemberSignature Language="C#" Value="public virtual void SaveCurrentTurn (Foundation.NSData matchData, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCurrentTurn(class Foundation.NSData matchData, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveCurrentTurnWithMatchData:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matchData">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Saves the current turn, does not advance to the next player, and runs <paramref name="oncCompletion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCurrentTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveCurrentTurnAsync (Foundation.NSData matchData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveCurrentTurnAsync(class Foundation.NSData matchData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="matchData">To be added.</param>
        <summary>Saves the current turn, does not advance to the next player, and runs .</summary>
        <returns>A task that represents the asynchronous SaveCurrentTurn operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SaveMergedMatchData">
      <MemberSignature Language="C#" Value="public virtual void SaveMergedMatchData (Foundation.NSData matchData, GameKit.GKTurnBasedExchange[] exchanges, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveMergedMatchData(class Foundation.NSData matchData, class GameKit.GKTurnBasedExchange[] exchanges, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveMergedMatchData:withResolvedExchanges:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="exchanges" Type="GameKit.GKTurnBasedExchange[]" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matchData">To be added.</param>
        <param name="exchanges">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Saves merged match data without advancing play, and runs <paramref name="completionHandler" /> when finished.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveMergedMatchDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveMergedMatchDataAsync (Foundation.NSData matchData, GameKit.GKTurnBasedExchange[] exchanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveMergedMatchDataAsync(class Foundation.NSData matchData, class GameKit.GKTurnBasedExchange[] exchanges) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchData" Type="Foundation.NSData" />
        <Parameter Name="exchanges" Type="GameKit.GKTurnBasedExchange[]" />
      </Parameters>
      <Docs>
        <param name="matchData">To be added.</param>
        <param name="exchanges">To be added.</param>
        <summary>Saves merged match data without advancing play, and runs  when finished.</summary>
        <returns>A task that represents the asynchronous SaveMergedMatchData operation</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SendExchange">
      <MemberSignature Language="C#" Value="public virtual void SendExchange (GameKit.GKTurnBasedParticipant[] participants, Foundation.NSData data, string localizableMessage, Foundation.NSObject[] arguments, double timeout, Action&lt;GameKit.GKTurnBasedExchange,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendExchange(class GameKit.GKTurnBasedParticipant[] participants, class Foundation.NSData data, string localizableMessage, class Foundation.NSObject[] arguments, float64 timeout, class System.Action`2&lt;class GameKit.GKTurnBasedExchange, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("sendExchangeToParticipants:data:localizableMessageKey:arguments:timeout:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participants" Type="GameKit.GKTurnBasedParticipant[]" />
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="localizableMessage" Type="System.String" />
        <Parameter Name="arguments" Type="Foundation.NSObject[]" />
        <Parameter Name="timeout" Type="System.Double" />
        <Parameter Name="completionHandler" Type="System.Action&lt;GameKit.GKTurnBasedExchange,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V50))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="participants">To be added.</param>
        <param name="data">To be added.</param>
        <param name="localizableMessage">To be added.</param>
        <param name="arguments">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Sends exchange requests to the players who are listed in <paramref name="participants" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendExchangeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedExchange&gt; SendExchangeAsync (GameKit.GKTurnBasedParticipant[] participants, Foundation.NSData data, string localizableMessage, Foundation.NSObject[] arguments, double timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class GameKit.GKTurnBasedExchange&gt; SendExchangeAsync(class GameKit.GKTurnBasedParticipant[] participants, class Foundation.NSData data, string localizableMessage, class Foundation.NSObject[] arguments, float64 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;GameKit.GKTurnBasedExchange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participants" Type="GameKit.GKTurnBasedParticipant[]" />
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="localizableMessage" Type="System.String" />
        <Parameter Name="arguments" Type="Foundation.NSObject[]" />
        <Parameter Name="timeout" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="participants">To be added.</param>
        <param name="data">To be added.</param>
        <param name="localizableMessage">To be added.</param>
        <param name="arguments">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>Sends exchange requests to the players who are listed in .</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous SendExchange operation.  The value of the TResult parameter is of type <c>Action&lt;GameKit.GKTurnBasedExchange,Foundation.NSError&gt;</c>.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SendReminder">
      <MemberSignature Language="C#" Value="public virtual void SendReminder (GameKit.GKTurnBasedParticipant[] participants, string localizableMessage, Foundation.NSObject[] arguments, Action&lt;Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendReminder(class GameKit.GKTurnBasedParticipant[] participants, string localizableMessage, class Foundation.NSObject[] arguments, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("sendReminderToParticipants:localizableMessageKey:arguments:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participants" Type="GameKit.GKTurnBasedParticipant[]" />
        <Parameter Name="localizableMessage" Type="System.String" />
        <Parameter Name="arguments" Type="Foundation.NSObject[]" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="participants">To be added.</param>
        <param name="localizableMessage">To be added.</param>
        <param name="arguments">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Sends a reminder to the players who are listed in <paramref name="participants" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendReminderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SendReminderAsync (GameKit.GKTurnBasedParticipant[] participants, string localizableMessage, Foundation.NSObject[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendReminderAsync(class GameKit.GKTurnBasedParticipant[] participants, string localizableMessage, class Foundation.NSObject[] arguments) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participants" Type="GameKit.GKTurnBasedParticipant[]" />
        <Parameter Name="localizableMessage" Type="System.String" />
        <Parameter Name="arguments" Type="Foundation.NSObject[]" />
      </Parameters>
      <Docs>
        <param name="participants">To be added.</param>
        <param name="localizableMessage">To be added.</param>
        <param name="arguments">To be added.</param>
        <summary>Sends a reminder to the players who are listed in .</summary>
        <returns>A task that represents the asynchronous SendReminder operation</returns>
        <remarks>
          <para copied="true">The SendReminderAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessage">
      <MemberSignature Language="C#" Value="public virtual void SetMessage (string localizableMessage, Foundation.NSObject[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMessage(string localizableMessage, class Foundation.NSObject[] arguments) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setLocalizableMessageWithKey:arguments:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localizableMessage" Type="System.String" />
        <Parameter Name="arguments" Type="Foundation.NSObject[]" />
      </Parameters>
      <Docs>
        <param name="localizableMessage">To be added.</param>
        <param name="arguments">To be added.</param>
        <summary>Sets a localizable message that will be displayed at the end of the match.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public virtual GameKit.GKTurnBasedMatchStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype GameKit.GKTurnBasedMatchStatus Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("status")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameKit.GKTurnBasedMatchStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current match status.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
