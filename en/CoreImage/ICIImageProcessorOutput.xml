<Type Name="ICIImageProcessorOutput" FullName="CoreImage.ICIImageProcessorOutput">
  <TypeSignature Language="C#" Value="public interface ICIImageProcessorOutput : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICIImageProcessorOutput implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="CIImageProcessorOutput", WrapperType=typeof(CoreImage.CIImageProcessorOutputWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="region", IsProperty=true, IsRequired=true, IsStatic=false, Name="Region", PropertyType=typeof(CoreGraphics.CGRect), Selector="region")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="bytesPerRow", IsProperty=true, IsRequired=true, IsStatic=false, Name="BytesPerRow", PropertyType=typeof(System.nuint), Selector="bytesPerRow")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="format", IsProperty=true, IsRequired=true, IsStatic=false, Name="Format", PropertyType=typeof(CoreImage.CIFormat), Selector="format")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="baseAddress", IsProperty=true, IsRequired=true, IsStatic=false, Name="BaseAddress", PropertyType=typeof(System.IntPtr), Selector="baseAddress")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="pixelBuffer", IsProperty=true, IsRequired=true, IsStatic=false, Name="PixelBuffer", PropertyType=typeof(CoreVideo.CVPixelBuffer), Selector="pixelBuffer")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="metalTexture", IsProperty=true, IsRequired=true, IsStatic=false, Name="MetalTexture", PropertyType=typeof(Metal.IMTLTexture), Selector="metalTexture")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="metalCommandBuffer", IsProperty=true, IsRequired=true, IsStatic=false, Name="MetalCommandBuffer", PropertyType=typeof(Metal.IMTLCommandBuffer), Selector="metalCommandBuffer")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="surface", IsProperty=true, IsRequired=false, IsStatic=false, Name="Surface", PropertyType=typeof(IOSurface.IOSurface), Selector="surface")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The output of a <see cref="T:CoreImage.CIImageProcessorKernel" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public IntPtr BaseAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("baseAddress")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The memory address of the data buffer.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesPerRow">
      <MemberSignature Language="C#" Value="public nuint BytesPerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint BytesPerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("bytesPerRow")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of bytes in a single row of the output image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreImage.CIFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.CoreImage.CIFormat Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("format")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreImage.CIFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The colorspace of the output image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetalCommandBuffer">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLCommandBuffer MetalCommandBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Metal.IMTLCommandBuffer MetalCommandBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("metalCommandBuffer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLCommandBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Metal command buffer for the output image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetalTexture">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture MetalTexture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Metal.IMTLTexture MetalTexture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("metalTexture")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Metal <see cref="T:Metal.IMTLTexture" /> of the output image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelBuffer">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreVideo.CVPixelBuffer PixelBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreVideo.CVPixelBuffer PixelBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("pixelBuffer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreVideo.CVPixelBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The output image, as a <see cref="T:CoreVideo.CVPixelBuffer" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Region">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreGraphics.CGRect Region { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.CoreGraphics.CGRect Region" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("region")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:CoreGraphics.CGRect" /> to which the processing was applied.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>