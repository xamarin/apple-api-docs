<Type Name="CIContext" FullName="CoreImage.CIContext">
  <TypeSignature Language="C#" Value="public class CIContext : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CIContext extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:CoreImage.CIContext" />
  <TypeSignature Language="F#" Value="type CIContext = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("CIContext", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Orchestrates the rendering of a CIFilter pipeline.</summary>
    <remarks>
      <para>
	The CIContext class is used to orchestrate the rendering of a
	pipeline of filters into one of the supported output surfaces.
      </para>
      <para>

	The CGContext can render its results into a CoreGraphics
	CGImage, render directly into the screen with one of the
	various Draw methods, into a CoreVideo CVPixelBuffer or into a CoreGraphics context.
      </para>
    </remarks>
    <related type="sample" href="http://samples.xamarin.com/Samples/ByGuid?guid=e2a0ccca-ab10-4e41-9c09-11831a8c1380">coreimage</related>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/GraphicsImaging/Reference/QuartzCoreFramework/Classes/CIContext_Class/index.html">Apple documentation for <c>CIContext</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CIContext (CoreImage.CIContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CoreImage.CIContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.#ctor(CoreImage.CIContextOptions)" />
      <MemberSignature Language="F#" Value="new CoreImage.CIContext : CoreImage.CIContextOptions -&gt; CoreImage.CIContext" Usage="new CoreImage.CIContext options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="CoreImage.CIContextOptions" />
      </Parameters>
      <Docs>
        <param name="options">The context options to use.</param>
        <summary>Creates a new Core Image context with the specified <paramref name="options" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CIContext (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreImage.CIContext : Foundation.NSObjectFlag -&gt; CoreImage.CIContext" Usage="new CoreImage.CIContext t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CIContext (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreImage.CIContext : nativeint -&gt; CoreImage.CIContext" Usage="new CoreImage.CIContext handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIContext.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="CoreImage.CIContext.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCaches">
      <MemberSignature Language="C#" Value="public virtual void ClearCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCaches() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.ClearCaches" />
      <MemberSignature Language="F#" Value="abstract member ClearCaches : unit -&gt; unit&#xA;override this.ClearCaches : unit -&gt; unit" Usage="cIContext.ClearCaches " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("clearCaches")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Frees data in the cache and runs the garbage collector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.Create" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="">
          <AttributeName>Foundation.Export("context")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:CoreImage.CIContext" /> with default options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCGImage">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGImage CreateCGImage (CoreImage.CIImage image, CoreGraphics.CGRect fromRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CoreGraphics.CGImage CreateCGImage(class CoreImage.CIImage image, valuetype CoreGraphics.CGRect fromRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.CreateCGImage(CoreImage.CIImage,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member CreateCGImage : CoreImage.CIImage * CoreGraphics.CGRect -&gt; CoreGraphics.CGImage&#xA;override this.CreateCGImage : CoreImage.CIImage * CoreGraphics.CGRect -&gt; CoreGraphics.CGImage" Usage="cIContext.CreateCGImage (image, fromRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("createCGImage:fromRect:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>ObjCRuntime.Release</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="fromRectangle" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="fromRectangle">To be added.</param>
        <summary>Creates a new <see cref="T:CoreGraphics.CGImage" /> from the <paramref name="fromRectangle" /> region of <paramref name="image" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCGImage">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImage CreateCGImage (CoreImage.CIImage image, CoreGraphics.CGRect fromRect, CoreImage.CIFormat ciImageFormat, CoreGraphics.CGColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGImage CreateCGImage(class CoreImage.CIImage image, valuetype CoreGraphics.CGRect fromRect, valuetype CoreImage.CIFormat ciImageFormat, class CoreGraphics.CGColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.CreateCGImage(CoreImage.CIImage,CoreGraphics.CGRect,CoreImage.CIFormat,CoreGraphics.CGColorSpace)" />
      <MemberSignature Language="F#" Value="member this.CreateCGImage : CoreImage.CIImage * CoreGraphics.CGRect * CoreImage.CIFormat * CoreGraphics.CGColorSpace -&gt; CoreGraphics.CGImage" Usage="cIContext.CreateCGImage (image, fromRect, ciImageFormat, colorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="fromRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="ciImageFormat" Type="CoreImage.CIFormat" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="fromRect">To be added.</param>
        <param name="ciImageFormat">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCGImage">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGImage CreateCGImage (CoreImage.CIImage image, CoreGraphics.CGRect fromRect, int ciImageFormat, CoreGraphics.CGColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CoreGraphics.CGImage CreateCGImage(class CoreImage.CIImage image, valuetype CoreGraphics.CGRect fromRect, int32 ciImageFormat, class CoreGraphics.CGColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.CreateCGImage(CoreImage.CIImage,CoreGraphics.CGRect,System.Int32,CoreGraphics.CGColorSpace)" />
      <MemberSignature Language="F#" Value="abstract member CreateCGImage : CoreImage.CIImage * CoreGraphics.CGRect * int * CoreGraphics.CGColorSpace -&gt; CoreGraphics.CGImage&#xA;override this.CreateCGImage : CoreImage.CIImage * CoreGraphics.CGRect * int * CoreGraphics.CGColorSpace -&gt; CoreGraphics.CGImage" Usage="cIContext.CreateCGImage (image, fromRect, ciImageFormat, colorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("createCGImage:fromRect:format:colorSpace:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>ObjCRuntime.Release</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="fromRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="ciImageFormat" Type="System.Int32" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="fromRect">To be added.</param>
        <param name="ciImageFormat">To be added.</param>
        <param name="colorSpace">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCGImage">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGImage CreateCGImage (CoreImage.CIImage image, CoreGraphics.CGRect fromRect, CoreImage.CIFormat format, CoreGraphics.CGColorSpace colorSpace, bool deferred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CoreGraphics.CGImage CreateCGImage(class CoreImage.CIImage image, valuetype CoreGraphics.CGRect fromRect, valuetype CoreImage.CIFormat format, class CoreGraphics.CGColorSpace colorSpace, bool deferred) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.CreateCGImage(CoreImage.CIImage,CoreGraphics.CGRect,CoreImage.CIFormat,CoreGraphics.CGColorSpace,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CreateCGImage : CoreImage.CIImage * CoreGraphics.CGRect * CoreImage.CIFormat * CoreGraphics.CGColorSpace * bool -&gt; CoreGraphics.CGImage&#xA;override this.CreateCGImage : CoreImage.CIImage * CoreGraphics.CGRect * CoreImage.CIFormat * CoreGraphics.CGColorSpace * bool -&gt; CoreGraphics.CGImage" Usage="cIContext.CreateCGImage (image, fromRect, format, colorSpace, deferred)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("createCGImage:fromRect:format:colorSpace:deferred:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="fromRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="format" Type="CoreImage.CIFormat" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
        <Parameter Name="deferred" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="fromRect">To be added.</param>
        <param name="format">To be added.</param>
        <param name="colorSpace">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="deferred">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public virtual void DrawImage (CoreImage.CIImage image, CoreGraphics.CGPoint atPoint, CoreGraphics.CGRect fromRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawImage(class CoreImage.CIImage image, valuetype CoreGraphics.CGPoint atPoint, valuetype CoreGraphics.CGRect fromRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.DrawImage(CoreImage.CIImage,CoreGraphics.CGPoint,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member DrawImage : CoreImage.CIImage * CoreGraphics.CGPoint * CoreGraphics.CGRect -&gt; unit&#xA;override this.DrawImage : CoreImage.CIImage * CoreGraphics.CGPoint * CoreGraphics.CGRect -&gt; unit" Usage="cIContext.DrawImage (image, atPoint, fromRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("drawImage:atPoint:fromRect:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DrawImage (image, CGRect, CGRect)' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.None, "Use 'DrawImage (image, CGRect, CGRect)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="atPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="fromRect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="atPoint">To be added.</param>
        <param name="fromRect">To be added.</param>
        <summary>Developers should not use this deprecated method. Developers should use 'DrawImage (image, CGRect, CGRect)' instead.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public virtual void DrawImage (CoreImage.CIImage image, CoreGraphics.CGRect inRectangle, CoreGraphics.CGRect fromRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawImage(class CoreImage.CIImage image, valuetype CoreGraphics.CGRect inRectangle, valuetype CoreGraphics.CGRect fromRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.DrawImage(CoreImage.CIImage,CoreGraphics.CGRect,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member DrawImage : CoreImage.CIImage * CoreGraphics.CGRect * CoreGraphics.CGRect -&gt; unit&#xA;override this.DrawImage : CoreImage.CIImage * CoreGraphics.CGRect * CoreGraphics.CGRect -&gt; unit" Usage="cIContext.DrawImage (image, inRectangle, fromRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("drawImage:inRect:fromRect:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="inRectangle" Type="CoreGraphics.CGRect" />
        <Parameter Name="fromRectangle" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="inRectangle">To be added.</param>
        <param name="fromRectangle">To be added.</param>
        <summary>Draws the <paramref name="fromRect" /> portion of <paramref name="inRectangle" /> into the rectangle in the context that is specified by <paramref name="atPoint" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromContext (CoreGraphics.CGContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromContext(class CoreGraphics.CGContext ctx) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromContext(CoreGraphics.CGContext)" />
      <MemberSignature Language="F#" Value="static member FromContext : CoreGraphics.CGContext -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromContext ctx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <summary>Creates a new CIContext from an existing one.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromContext (OpenGLES.EAGLContext eaglContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromContext(class OpenGLES.EAGLContext eaglContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromContext(OpenGLES.EAGLContext)" />
      <MemberSignature Language="F#" Value="static member FromContext : OpenGLES.EAGLContext -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromContext eaglContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("contextWithEAGLContext:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eaglContext" Type="OpenGLES.EAGLContext" />
      </Parameters>
      <Docs>
        <param name="eaglContext">To be added.</param>
        <summary>Creates a new <see cref="T:CoreImage.CIContext" /> from the provided <paramref name="eaglContext" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromContext (CoreGraphics.CGContext ctx, CoreImage.CIContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromContext(class CoreGraphics.CGContext ctx, class CoreImage.CIContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromContext(CoreGraphics.CGContext,CoreImage.CIContextOptions)" />
      <MemberSignature Language="F#" Value="static member FromContext : CoreGraphics.CGContext * CoreImage.CIContextOptions -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromContext (ctx, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="CoreGraphics.CGContext" />
        <Parameter Name="options" Type="CoreImage.CIContextOptions" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Creates a new CIContext from an existing one, along with the provided </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromContext (OpenGLES.EAGLContext eaglContext, CoreImage.CIContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromContext(class OpenGLES.EAGLContext eaglContext, class CoreImage.CIContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromContext(OpenGLES.EAGLContext,CoreImage.CIContextOptions)" />
      <MemberSignature Language="F#" Value="static member FromContext : OpenGLES.EAGLContext * CoreImage.CIContextOptions -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromContext (eaglContext, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eaglContext" Type="OpenGLES.EAGLContext" />
        <Parameter Name="options" Type="CoreImage.CIContextOptions" />
      </Parameters>
      <Docs>
        <param name="eaglContext">The source <see cref="T:OpenGLES.EAGLContext" />.</param>
        <param name="options">The desired <see cref="T:CoreImage.CIContextOptions" />.</param>
        <summary>Creates a <see cref="T:CoreImage.CIContext" /> based on the <paramref name="eaglContext" />, with the specified <paramref name="options" />.</summary>
        <returns>A new <see cref="T:CoreImage.CIContext" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromContext (OpenGLES.EAGLContext eaglContext, Foundation.NSDictionary dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromContext(class OpenGLES.EAGLContext eaglContext, class Foundation.NSDictionary dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromContext(OpenGLES.EAGLContext,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member FromContext : OpenGLES.EAGLContext * Foundation.NSDictionary -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromContext (eaglContext, dictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("contextWithEAGLContext:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eaglContext" Type="OpenGLES.EAGLContext" />
        <Parameter Name="dictionary" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="eaglContext">To be added.</param>
        <param name="dictionary">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates a new <see cref="T:CoreImage.CIContext" /> from the provided <paramref name="eaglContext" /> and by using the options that are named in <paramref name="dictionary" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMetalDevice">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromMetalDevice (Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromMetalDevice(class Metal.IMTLDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromMetalDevice(Metal.IMTLDevice)" />
      <MemberSignature Language="F#" Value="static member FromMetalDevice : Metal.IMTLDevice -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromMetalDevice device" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("contextWithMTLDevice:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <summary>Creates a new CIContext from the provided Metal device.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMetalDevice">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromMetalDevice (Metal.IMTLDevice device, CoreImage.CIContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromMetalDevice(class Metal.IMTLDevice device, class CoreImage.CIContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromMetalDevice(Metal.IMTLDevice,CoreImage.CIContextOptions)" />
      <MemberSignature Language="F#" Value="static member FromMetalDevice : Metal.IMTLDevice * CoreImage.CIContextOptions -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromMetalDevice (device, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="options" Type="CoreImage.CIContextOptions" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Creates a new CIContext from the provided Metal device, along with the specified context.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMetalDevice">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromMetalDevice (Metal.IMTLDevice device, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromMetalDevice(class Metal.IMTLDevice device, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromMetalDevice(Metal.IMTLDevice,Foundation.NSDictionary{Foundation.NSString,Foundation.NSObject})" />
      <MemberSignature Language="F#" Value="static member FromMetalDevice : Metal.IMTLDevice * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromMetalDevice (device, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("contextWithMTLDevice:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="options" Type="Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt;" />
      </Parameters>
      <Docs>
        <param name="device">The source <see cref="T:MetalIMTlDevice" />.</param>
        <param name="options">The desired options for the new <see cref="T:CoreImag.CIContext" />.<para tool="nullallowed">This parameter can be <see langword="null" />.</para></param>
        <summary>Creates a new <see cref="T:CoreImage.CIContext" /> from the provided Metal <paramref name="device" />, applying the specified options.</summary>
        <returns>A new <see cref="T:CoreImage.CIContext" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromOptions">
      <MemberSignature Language="C#" Value="public static CoreImage.CIContext FromOptions (CoreImage.CIContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIContext FromOptions(class CoreImage.CIContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.FromOptions(CoreImage.CIContextOptions)" />
      <MemberSignature Language="F#" Value="static member FromOptions : CoreImage.CIContextOptions -&gt; CoreImage.CIContext" Usage="CoreImage.CIContext.FromOptions options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreImage.CIContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="CoreImage.CIContextOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>Creates a new <see cref="T:CoreImage.CIContext" /> from the options that are named in <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputImageMaximumSize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize InputImageMaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize InputImageMaximumSize" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIContext.InputImageMaximumSize" />
      <MemberSignature Language="F#" Value="member this.InputImageMaximumSize : CoreGraphics.CGSize" Usage="CoreImage.CIContext.InputImageMaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("inputImageMaximumSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum allowed input image size.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputImageMaximumSize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize OutputImageMaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize OutputImageMaximumSize" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIContext.OutputImageMaximumSize" />
      <MemberSignature Language="F#" Value="member this.OutputImageMaximumSize : CoreGraphics.CGSize" Usage="CoreImage.CIContext.OutputImageMaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("outputImageMaximumSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum allowed output image size.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public virtual void Render (CoreImage.CIImage image, CoreVideo.CVPixelBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Render(class CoreImage.CIImage image, class CoreVideo.CVPixelBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.Render(CoreImage.CIImage,CoreVideo.CVPixelBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Render : CoreImage.CIImage * CoreVideo.CVPixelBuffer -&gt; unit&#xA;override this.Render : CoreImage.CIImage * CoreVideo.CVPixelBuffer -&gt; unit" Usage="cIContext.Render (image, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("render:toCVPixelBuffer:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="buffer" Type="CoreVideo.CVPixelBuffer" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="buffer">To be added.</param>
        <summary>Renders <paramref name="image" /> to <paramref name="buffer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public virtual void Render (CoreImage.CIImage image, CoreVideo.CVPixelBuffer buffer, CoreGraphics.CGRect rectangle, CoreGraphics.CGColorSpace cs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Render(class CoreImage.CIImage image, class CoreVideo.CVPixelBuffer buffer, valuetype CoreGraphics.CGRect rectangle, class CoreGraphics.CGColorSpace cs) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.Render(CoreImage.CIImage,CoreVideo.CVPixelBuffer,CoreGraphics.CGRect,CoreGraphics.CGColorSpace)" />
      <MemberSignature Language="F#" Value="abstract member Render : CoreImage.CIImage * CoreVideo.CVPixelBuffer * CoreGraphics.CGRect * CoreGraphics.CGColorSpace -&gt; unit&#xA;override this.Render : CoreImage.CIImage * CoreVideo.CVPixelBuffer * CoreGraphics.CGRect * CoreGraphics.CGColorSpace -&gt; unit" Usage="cIContext.Render (image, buffer, rectangle, cs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("render:toCVPixelBuffer:bounds:colorSpace:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="buffer" Type="CoreVideo.CVPixelBuffer" />
        <Parameter Name="rectangle" Type="CoreGraphics.CGRect" />
        <Parameter Name="cs" Type="CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="rectangle">To be added.</param>
        <param name="cs">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public virtual void Render (CoreImage.CIImage image, IOSurface.IOSurface surface, CoreGraphics.CGRect bounds, CoreGraphics.CGColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Render(class CoreImage.CIImage image, class IOSurface.IOSurface surface, valuetype CoreGraphics.CGRect bounds, class CoreGraphics.CGColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.Render(CoreImage.CIImage,IOSurface.IOSurface,CoreGraphics.CGRect,CoreGraphics.CGColorSpace)" />
      <MemberSignature Language="F#" Value="abstract member Render : CoreImage.CIImage * IOSurface.IOSurface * CoreGraphics.CGRect * CoreGraphics.CGColorSpace -&gt; unit&#xA;override this.Render : CoreImage.CIImage * IOSurface.IOSurface * CoreGraphics.CGRect * CoreGraphics.CGColorSpace -&gt; unit" Usage="cIContext.Render (image, surface, bounds, colorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("render:toIOSurface:bounds:colorSpace:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="surface" Type="IOSurface.IOSurface" />
        <Parameter Name="bounds" Type="CoreGraphics.CGRect" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="surface">To be added.</param>
        <param name="bounds">To be added.</param>
        <param name="colorSpace">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public virtual void Render (CoreImage.CIImage image, Metal.IMTLTexture texture, Metal.IMTLCommandBuffer commandBuffer, CoreGraphics.CGRect bounds, CoreGraphics.CGColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Render(class CoreImage.CIImage image, class Metal.IMTLTexture texture, class Metal.IMTLCommandBuffer commandBuffer, valuetype CoreGraphics.CGRect bounds, class CoreGraphics.CGColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.Render(CoreImage.CIImage,Metal.IMTLTexture,Metal.IMTLCommandBuffer,CoreGraphics.CGRect,CoreGraphics.CGColorSpace)" />
      <MemberSignature Language="F#" Value="abstract member Render : CoreImage.CIImage * Metal.IMTLTexture * Metal.IMTLCommandBuffer * CoreGraphics.CGRect * CoreGraphics.CGColorSpace -&gt; unit&#xA;override this.Render : CoreImage.CIImage * Metal.IMTLTexture * Metal.IMTLCommandBuffer * CoreGraphics.CGRect * CoreGraphics.CGColorSpace -&gt; unit" Usage="cIContext.Render (image, texture, commandBuffer, bounds, colorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("render:toMTLTexture:commandBuffer:bounds:colorSpace:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="texture" Type="Metal.IMTLTexture" />
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="bounds" Type="CoreGraphics.CGRect" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="texture">To be added.</param>
        <param name="commandBuffer">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="bounds">To be added.</param>
        <param name="colorSpace">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderToBitmap">
      <MemberSignature Language="C#" Value="public virtual void RenderToBitmap (CoreImage.CIImage image, IntPtr bitmapPtr, nint bytesPerRow, CoreGraphics.CGRect bounds, int bitmapFormat, CoreGraphics.CGColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderToBitmap(class CoreImage.CIImage image, native int bitmapPtr, valuetype System.nint bytesPerRow, valuetype CoreGraphics.CGRect bounds, int32 bitmapFormat, class CoreGraphics.CGColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreImage.CIContext.RenderToBitmap(CoreImage.CIImage,System.IntPtr,System.nint,CoreGraphics.CGRect,System.Int32,CoreGraphics.CGColorSpace)" />
      <MemberSignature Language="F#" Value="abstract member RenderToBitmap : CoreImage.CIImage * nativeint * nint * CoreGraphics.CGRect * int * CoreGraphics.CGColorSpace -&gt; unit&#xA;override this.RenderToBitmap : CoreImage.CIImage * nativeint * nint * CoreGraphics.CGRect * int * CoreGraphics.CGColorSpace -&gt; unit" Usage="cIContext.RenderToBitmap (image, bitmapPtr, bytesPerRow, bounds, bitmapFormat, colorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("render:toBitmap:rowBytes:bounds:format:colorSpace:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="CoreImage.CIImage" />
        <Parameter Name="bitmapPtr" Type="System.IntPtr" />
        <Parameter Name="bytesPerRow" Type="System.nint" />
        <Parameter Name="bounds" Type="CoreGraphics.CGRect" />
        <Parameter Name="bitmapFormat" Type="System.Int32" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="bitmapPtr">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="bounds">To be added.</param>
        <param name="bitmapFormat">To be added.</param>
        <param name="colorSpace">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingColorSpace">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGColorSpace WorkingColorSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreGraphics.CGColorSpace WorkingColorSpace" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIContext.WorkingColorSpace" />
      <MemberSignature Language="F#" Value="member this.WorkingColorSpace : CoreGraphics.CGColorSpace" Usage="CoreImage.CIContext.WorkingColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("workingColorSpace")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The working <see cref="T:CoreGraphics.CGColorSpace" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingFormat">
      <MemberSignature Language="C#" Value="public virtual CoreImage.CIFormat WorkingFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreImage.CIFormat WorkingFormat" />
      <MemberSignature Language="DocId" Value="P:CoreImage.CIContext.WorkingFormat" />
      <MemberSignature Language="F#" Value="member this.WorkingFormat : CoreImage.CIFormat" Usage="CoreImage.CIContext.WorkingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("workingFormat")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreImage.CIFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The working pixel format.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
