<Type Name="HMAccessoryDelegate" FullName="HomeKit.HMAccessoryDelegate">
  <TypeSignature Language="C#" Value="public class HMAccessoryDelegate : Foundation.NSObject, HomeKit.IHMAccessoryDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMAccessoryDelegate extends Foundation.NSObject implements class HomeKit.IHMAccessoryDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:HomeKit.HMAccessoryDelegate" />
  <TypeSignature Language="F#" Value="type HMAccessoryDelegate = class&#xA;    inherit NSObject&#xA;    interface IHMAccessoryDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>HomeKit.IHMAccessoryDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("HMAccessoryDelegate", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate object for <see cref="T:HomeKit.HMAccessory" /> objects, provides methods called when characteristics of the accessory change.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/HomeKit/Reference/HMAccessoryDelegate_Protocol/index.html">Apple documentation for <c>HMAccessoryDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMAccessoryDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAccessoryDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new HomeKit.HMAccessoryDelegate : Foundation.NSObjectFlag -&gt; HomeKit.HMAccessoryDelegate" Usage="new HomeKit.HMAccessoryDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal HMAccessoryDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new HomeKit.HMAccessoryDelegate : nativeint -&gt; HomeKit.HMAccessoryDelegate" Usage="new HomeKit.HMAccessoryDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddProfile">
      <MemberSignature Language="C#" Value="public virtual void DidAddProfile (HomeKit.HMAccessory accessory, HomeKit.HMAccessoryProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddProfile(class HomeKit.HMAccessory accessory, class HomeKit.HMAccessoryProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidAddProfile(HomeKit.HMAccessory,HomeKit.HMAccessoryProfile)" />
      <MemberSignature Language="F#" Value="abstract member DidAddProfile : HomeKit.HMAccessory * HomeKit.HMAccessoryProfile -&gt; unit&#xA;override this.DidAddProfile : HomeKit.HMAccessory * HomeKit.HMAccessoryProfile -&gt; unit" Usage="hMAccessoryDelegate.DidAddProfile (accessory, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessory:didAddProfile:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
        <Parameter Name="profile" Type="HomeKit.HMAccessoryProfile" />
      </Parameters>
      <Docs>
        <param name="accessory">The accessory to which the profile was added.</param>
        <param name="profile">The profile that was added.</param>
        <summary>Method that is called when <paramref name="profile" /> was added to <paramref name="accessory" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveProfile">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveProfile (HomeKit.HMAccessory accessory, HomeKit.HMAccessoryProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveProfile(class HomeKit.HMAccessory accessory, class HomeKit.HMAccessoryProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidRemoveProfile(HomeKit.HMAccessory,HomeKit.HMAccessoryProfile)" />
      <MemberSignature Language="F#" Value="abstract member DidRemoveProfile : HomeKit.HMAccessory * HomeKit.HMAccessoryProfile -&gt; unit&#xA;override this.DidRemoveProfile : HomeKit.HMAccessory * HomeKit.HMAccessoryProfile -&gt; unit" Usage="hMAccessoryDelegate.DidRemoveProfile (accessory, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessory:didRemoveProfile:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
        <Parameter Name="profile" Type="HomeKit.HMAccessoryProfile" />
      </Parameters>
      <Docs>
        <param name="accessory">The accessory from which the profile was removed.</param>
        <param name="profile">The profile that was removed.</param>
        <summary>Method that is called when <paramref name="profile" /> was removed from <paramref name="accessory" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateAssociatedServiceType">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateAssociatedServiceType (HomeKit.HMAccessory accessory, HomeKit.HMService service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateAssociatedServiceType(class HomeKit.HMAccessory accessory, class HomeKit.HMService service) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidUpdateAssociatedServiceType(HomeKit.HMAccessory,HomeKit.HMService)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateAssociatedServiceType : HomeKit.HMAccessory * HomeKit.HMService -&gt; unit&#xA;override this.DidUpdateAssociatedServiceType : HomeKit.HMAccessory * HomeKit.HMService -&gt; unit" Usage="hMAccessoryDelegate.DidUpdateAssociatedServiceType (accessory, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessory:didUpdateAssociatedServiceTypeForService:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
        <Parameter Name="service" Type="HomeKit.HMService" />
      </Parameters>
      <Docs>
        <param name="accessory">To be added.</param>
        <param name="service">To be added.</param>
        <summary>The <paramref name="accessory" /> updated the service type for <paramref name="service" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateFirmwareVersion">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateFirmwareVersion (HomeKit.HMAccessory accessory, string firmwareVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateFirmwareVersion(class HomeKit.HMAccessory accessory, string firmwareVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidUpdateFirmwareVersion(HomeKit.HMAccessory,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateFirmwareVersion : HomeKit.HMAccessory * string -&gt; unit&#xA;override this.DidUpdateFirmwareVersion : HomeKit.HMAccessory * string -&gt; unit" Usage="hMAccessoryDelegate.DidUpdateFirmwareVersion (accessory, firmwareVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessory:didUpdateFirmwareVersion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
        <Parameter Name="firmwareVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="accessory">The accessory whose firmware version was updated.</param>
        <param name="firmwareVersion">The new firmware version.</param>
        <summary>Method that is called when the firmware version of <paramref name="accessory" /> is updated to <paramref name="firmwareVersion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateName">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateName (HomeKit.HMAccessory accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateName(class HomeKit.HMAccessory accessory) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidUpdateName(HomeKit.HMAccessory)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateName : HomeKit.HMAccessory -&gt; unit&#xA;override this.DidUpdateName : HomeKit.HMAccessory -&gt; unit" Usage="hMAccessoryDelegate.DidUpdateName accessory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessoryDidUpdateName:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
      </Parameters>
      <Docs>
        <param name="accessory">To be added.</param>
        <summary>The <paramref name="accessory" /> updated its name.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateNameForService">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateNameForService (HomeKit.HMAccessory accessory, HomeKit.HMService service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateNameForService(class HomeKit.HMAccessory accessory, class HomeKit.HMService service) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidUpdateNameForService(HomeKit.HMAccessory,HomeKit.HMService)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateNameForService : HomeKit.HMAccessory * HomeKit.HMService -&gt; unit&#xA;override this.DidUpdateNameForService : HomeKit.HMAccessory * HomeKit.HMService -&gt; unit" Usage="hMAccessoryDelegate.DidUpdateNameForService (accessory, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessory:didUpdateNameForService:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
        <Parameter Name="service" Type="HomeKit.HMService" />
      </Parameters>
      <Docs>
        <param name="accessory">To be added.</param>
        <param name="service">To be added.</param>
        <summary>The <paramref name="accessory" /> updated the name of <paramref name="service" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateReachability">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateReachability (HomeKit.HMAccessory accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateReachability(class HomeKit.HMAccessory accessory) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidUpdateReachability(HomeKit.HMAccessory)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateReachability : HomeKit.HMAccessory -&gt; unit&#xA;override this.DidUpdateReachability : HomeKit.HMAccessory -&gt; unit" Usage="hMAccessoryDelegate.DidUpdateReachability accessory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessoryDidUpdateReachability:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
      </Parameters>
      <Docs>
        <param name="accessory">To be added.</param>
        <summary>The <paramref name="accessory" /> updated its reachability.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateServices">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateServices (HomeKit.HMAccessory accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateServices(class HomeKit.HMAccessory accessory) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidUpdateServices(HomeKit.HMAccessory)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateServices : HomeKit.HMAccessory -&gt; unit&#xA;override this.DidUpdateServices : HomeKit.HMAccessory -&gt; unit" Usage="hMAccessoryDelegate.DidUpdateServices accessory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessoryDidUpdateServices:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
      </Parameters>
      <Docs>
        <param name="accessory">To be added.</param>
        <summary>The <paramref name="accessory" /> updated its services.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateValueForCharacteristic">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateValueForCharacteristic (HomeKit.HMAccessory accessory, HomeKit.HMService service, HomeKit.HMCharacteristic characteristic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateValueForCharacteristic(class HomeKit.HMAccessory accessory, class HomeKit.HMService service, class HomeKit.HMCharacteristic characteristic) cil managed" />
      <MemberSignature Language="DocId" Value="M:HomeKit.HMAccessoryDelegate.DidUpdateValueForCharacteristic(HomeKit.HMAccessory,HomeKit.HMService,HomeKit.HMCharacteristic)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateValueForCharacteristic : HomeKit.HMAccessory * HomeKit.HMService * HomeKit.HMCharacteristic -&gt; unit&#xA;override this.DidUpdateValueForCharacteristic : HomeKit.HMAccessory * HomeKit.HMService * HomeKit.HMCharacteristic -&gt; unit" Usage="hMAccessoryDelegate.DidUpdateValueForCharacteristic (accessory, service, characteristic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accessory:service:didUpdateValueForCharacteristic:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="HomeKit.HMAccessory" />
        <Parameter Name="service" Type="HomeKit.HMService" />
        <Parameter Name="characteristic" Type="HomeKit.HMCharacteristic" />
      </Parameters>
      <Docs>
        <param name="accessory">To be added.</param>
        <param name="service">To be added.</param>
        <param name="characteristic">To be added.</param>
        <summary>The <paramref name="accessory" /> updated the value of <paramref name="characteristic" /> on <paramref name="service" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
