<Type Name="CMGyroHandler" FullName="CoreMotion.CMGyroHandler">
  <TypeSignature Language="C#" Value="public delegate void CMGyroHandler(CMGyroData gyroData, NSError error);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CMGyroHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:CoreMotion.CMGyroHandler" />
  <TypeSignature Language="F#" Value="type CMGyroHandler = delegate of CMGyroData * NSError -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="gyroData" Type="CoreMotion.CMGyroData" />
    <Parameter Name="error" Type="Foundation.NSError" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="gyroData">The gyroscope data for this event.</param>
    <param name="error">Error or null if there are no errors.</param>
    <summary>A delegate signature used to receive events from <see cref="T:CoreMotion.CMMotionManager" /></summary>
    <remarks>
      <para>
This signature is used as an argument to the <see cref="T:CoreMotion.CMMotionManager" />'s StartGyroUpdates.  
</para>
      <para>
For example:</para>
      <example>
        <code lang="C#"><![CDATA[
     var motionManager = new CMMotionManager ();
     motionManager.AccelerometerUpdateInterval = 0.01; // 100Hz
     motionManager.StartDeviceMotionUpdates (NSOperationQueue.CurrentQueue, (gyroData, error) => {
          Console.WriteLine ("RotationRate={0}", gyroData.RotationRate);
     });
  ]]></code>
      </example>
    </remarks>
  </Docs>
</Type>
