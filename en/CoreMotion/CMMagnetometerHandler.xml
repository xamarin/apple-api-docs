<Type Name="CMMagnetometerHandler" FullName="CoreMotion.CMMagnetometerHandler">
  <TypeSignature Language="C#" Value="public delegate void CMMagnetometerHandler(CMMagnetometerData magnetometerData, NSError error);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CMMagnetometerHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:CoreMotion.CMMagnetometerHandler" />
  <TypeSignature Language="F#" Value="type CMMagnetometerHandler = delegate of CMMagnetometerData * NSError -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="magnetometerData" Type="CoreMotion.CMMagnetometerData" />
    <Parameter Name="error" Type="Foundation.NSError" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="magnetometerData">


The magnetometer data being provider
  	   
  	   </param>
    <param name="error">


Error, if any.
  	   
  	   </param>
    <summary>A delegate that is the <c>handler</c> for the <see cref="M:CoreMotion.CMMotionManager.StartMagnetometerUpdates" /> method.</summary>
    <remarks>Signature for a method that can receive magnetometer data from the CMMotionManager.</remarks>
  </Docs>
</Type>
