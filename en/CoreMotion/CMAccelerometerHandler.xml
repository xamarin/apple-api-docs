<Type Name="CMAccelerometerHandler" FullName="CoreMotion.CMAccelerometerHandler">
  <TypeSignature Language="C#" Value="public delegate void CMAccelerometerHandler(CMAccelerometerData data, NSError error);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CMAccelerometerHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="data" Type="CoreMotion.CMAccelerometerData" />
    <Parameter Name="error" Type="Foundation.NSError" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="data">The accelerometer data for this event.</param>
    <param name="error">An error, or null if there have been no errors.</param>
    <summary>A delegate signature used to receive events from <see cref="T:CoreMotion.CMMotionManager" /></summary>
    <remarks>
      <para>
This signature is used as an argument to the <see cref="T:CoreMotion.CMMotionManager" />'s StartAccelerometerUpdates.  
</para>
      <example>
        <code lang="C#"><![CDATA[
     var motionManager = new CMMotionManager ();
     motionManager.AccelerometerUpdateInterval = 0.01; // 100Hz
     motionManager.StartAccelerometerUpdates (NSOperationQueue.CurrentQueue, (data, error) => {
          Console.WriteLine ("Got an acceleration event {0}", data.Acceleration.X);
     });
  ]]></code>
      </example>
    </remarks>
  </Docs>
</Type>