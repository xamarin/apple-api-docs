<Type Name="CALayerDelegate_Extensions" FullName="CoreAnimation.CALayerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class CALayerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CALayerDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CoreAnimation.CALayerDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type CALayerDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:CoreAnimation.ICALayerDelegate" /> interface to support all the methods from the <see cref="T:CoreAnimation.CALayerDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:CoreAnimation.ICALayerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:CoreAnimation.CALayerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActionForLayer">
      <MemberSignature Language="C#" Value="public static Foundation.NSObject ActionForLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer, string eventKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject ActionForLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer, string eventKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CALayerDelegate_Extensions.ActionForLayer(CoreAnimation.ICALayerDelegate,CoreAnimation.CALayer,System.String)" />
      <MemberSignature Language="F#" Value="static member ActionForLayer : CoreAnimation.ICALayerDelegate * CoreAnimation.CALayer * string -&gt; Foundation.NSObject" Usage="CoreAnimation.CALayerDelegate_Extensions.ActionForLayer (This, layer, eventKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CoreAnimation.ICALayerDelegate" RefType="this" />
        <Parameter Name="layer" Type="CoreAnimation.CALayer" />
        <Parameter Name="eventKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="layer">To be added.</param>
        <param name="eventKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayLayer">
      <MemberSignature Language="C#" Value="public static void DisplayLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisplayLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CALayerDelegate_Extensions.DisplayLayer(CoreAnimation.ICALayerDelegate,CoreAnimation.CALayer)" />
      <MemberSignature Language="F#" Value="static member DisplayLayer : CoreAnimation.ICALayerDelegate * CoreAnimation.CALayer -&gt; unit" Usage="CoreAnimation.CALayerDelegate_Extensions.DisplayLayer (This, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CoreAnimation.ICALayerDelegate" RefType="this" />
        <Parameter Name="layer" Type="CoreAnimation.CALayer" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="layer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawLayer">
      <MemberSignature Language="C#" Value="public static void DrawLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer, CoreGraphics.CGContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer, class CoreGraphics.CGContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CALayerDelegate_Extensions.DrawLayer(CoreAnimation.ICALayerDelegate,CoreAnimation.CALayer,CoreGraphics.CGContext)" />
      <MemberSignature Language="F#" Value="static member DrawLayer : CoreAnimation.ICALayerDelegate * CoreAnimation.CALayer * CoreGraphics.CGContext -&gt; unit" Usage="CoreAnimation.CALayerDelegate_Extensions.DrawLayer (This, layer, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CoreAnimation.ICALayerDelegate" RefType="this" />
        <Parameter Name="layer" Type="CoreAnimation.CALayer" />
        <Parameter Name="context" Type="CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="layer">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutSublayersOfLayer">
      <MemberSignature Language="C#" Value="public static void LayoutSublayersOfLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LayoutSublayersOfLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CALayerDelegate_Extensions.LayoutSublayersOfLayer(CoreAnimation.ICALayerDelegate,CoreAnimation.CALayer)" />
      <MemberSignature Language="F#" Value="static member LayoutSublayersOfLayer : CoreAnimation.ICALayerDelegate * CoreAnimation.CALayer -&gt; unit" Usage="CoreAnimation.CALayerDelegate_Extensions.LayoutSublayersOfLayer (This, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CoreAnimation.ICALayerDelegate" RefType="this" />
        <Parameter Name="layer" Type="CoreAnimation.CALayer" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="layer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDrawLayer">
      <MemberSignature Language="C#" Value="public static void WillDrawLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDrawLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreAnimation.CALayerDelegate_Extensions.WillDrawLayer(CoreAnimation.ICALayerDelegate,CoreAnimation.CALayer)" />
      <MemberSignature Language="F#" Value="static member WillDrawLayer : CoreAnimation.ICALayerDelegate * CoreAnimation.CALayer -&gt; unit" Usage="CoreAnimation.CALayerDelegate_Extensions.WillDrawLayer (This, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CoreAnimation.ICALayerDelegate" RefType="this" />
        <Parameter Name="layer" Type="CoreAnimation.CALayer" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="layer">The layer that will be redrawn.</param>
        <summary>Method that is called when <paramref name="layer" /> is about to be drawn.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
