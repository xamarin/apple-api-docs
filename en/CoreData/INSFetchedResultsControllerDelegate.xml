<Type Name="INSFetchedResultsControllerDelegate" FullName="CoreData.INSFetchedResultsControllerDelegate">
  <TypeSignature Language="C#" Value="public interface INSFetchedResultsControllerDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSFetchedResultsControllerDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreData.INSFetchedResultsControllerDelegate" />
  <TypeSignature Language="F#" Value="type INSFetchedResultsControllerDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSFetchedResultsControllerDelegate", WrapperType=typeof(CoreData.NSFetchedResultsControllerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WillChangeContent", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(CoreData.NSFetchedResultsController) }, Selector="controllerWillChangeContent:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeObject", ParameterByRef=new System.Boolean[] { false, false, false, false, false }, ParameterType=new System.Type[] { typeof(CoreData.NSFetchedResultsController), typeof(Foundation.NSObject), typeof(Foundation.NSIndexPath), typeof(CoreData.NSFetchedResultsChangeType), typeof(Foundation.NSIndexPath) }, Selector="controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeSection", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(CoreData.NSFetchedResultsController), typeof(CoreData.INSFetchedResultsSectionInfo), typeof(System.nuint), typeof(CoreData.NSFetchedResultsChangeType) }, Selector="controller:didChangeSection:atIndex:forChangeType:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeContent", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(CoreData.NSFetchedResultsController) }, Selector="controllerDidChangeContent:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="SectionFor", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(CoreData.NSFetchedResultsController), typeof(System.String) }, ReturnType=typeof(System.String), Selector="controller:sectionIndexTitleForSectionName:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:CoreData.NSFetchedResultsControllerDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:CoreData.NSFetchedResultsControllerDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:CoreData.NSFetchedResultsControllerDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:CoreData.NSFetchedResultsControllerDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members />
</Type>
