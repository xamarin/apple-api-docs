<Type Name="AudioUnit" FullName="AudioUnit.AudioUnit">
  <TypeSignature Language="C#" Value="public class AudioUnit : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioUnit extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AudioUnit.AudioUnit" />
  <TypeSignature Language="F#" Value="type AudioUnit = class&#xA;    interface IDisposable&#xA;    interface INativeObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A plug-in component that processes or generates audio data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioUnit (AudioUnit.AudioComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AudioUnit.AudioComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.#ctor(AudioUnit.AudioComponent)" />
      <MemberSignature Language="F#" Value="new AudioUnit.AudioUnit : AudioUnit.AudioComponent -&gt; AudioUnit.AudioUnit" Usage="new AudioUnit.AudioUnit component" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="component" Type="AudioUnit.AudioComponent" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioOutputUnitPublish">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioComponentStatus AudioOutputUnitPublish (AudioUnit.AudioComponentDescription description, string name, uint version = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioComponentStatus AudioOutputUnitPublish(valuetype AudioUnit.AudioComponentDescription description, string name, unsigned int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.AudioOutputUnitPublish(AudioUnit.AudioComponentDescription,System.String,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.AudioOutputUnitPublish : AudioUnit.AudioComponentDescription * string * uint32 -&gt; AudioUnit.AudioComponentStatus" Usage="audioUnit.AudioOutputUnitPublish (description, name, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="AudioUnit.AudioComponentDescription" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="description">To be added.</param>
        <param name="name">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AudioUnit.AudioComponent Component" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AudioUnit.Component" />
      <MemberSignature Language="F#" Value="member this.Component : AudioUnit.AudioComponent" Usage="AudioUnit.AudioUnit.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="audioUnit.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the AudioUnit object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the AudioUnit class.</para>
          <para>Calling the Dispose method when the application is finished using the AudioUnit ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="audioUnit.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the AudioUnit object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the AudioUnit class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the AudioUnit ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioFormat">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioStreamBasicDescription GetAudioFormat (AudioUnit.AudioUnitScopeType scope, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioStreamBasicDescription GetAudioFormat(valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.GetAudioFormat(AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.GetAudioFormat : AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioToolbox.AudioStreamBasicDescription" Usage="audioUnit.GetAudioFormat (scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioStreamBasicDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassInfo">
      <MemberSignature Language="C#" Value="public AudioUnit.ClassInfoDictionary GetClassInfo (AudioUnit.AudioUnitScopeType scope = AudioUnit.AudioUnitScopeType.Global, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AudioUnit.ClassInfoDictionary GetClassInfo(valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.GetClassInfo(AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.GetClassInfo : AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.ClassInfoDictionary" Usage="audioUnit.GetClassInfo (scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.ClassInfoDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentDevice">
      <MemberSignature Language="C#" Value="public uint GetCurrentDevice (AudioUnit.AudioUnitScopeType scope, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetCurrentDevice(valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.GetCurrentDevice(AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.GetCurrentDevice : AudioUnit.AudioUnitScopeType * uint32 -&gt; uint32" Usage="audioUnit.GetCurrentDevice (scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentInputDevice">
      <MemberSignature Language="C#" Value="public static uint GetCurrentInputDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetCurrentInputDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.GetCurrentInputDevice" />
      <MemberSignature Language="F#" Value="static member GetCurrentInputDevice : unit -&gt; uint32" Usage="AudioUnit.AudioUnit.GetCurrentInputDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API is not available on iOS.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementCount">
      <MemberSignature Language="C#" Value="public uint GetElementCount (AudioUnit.AudioUnitScopeType scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetElementCount(valuetype AudioUnit.AudioUnitScopeType scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.GetElementCount(AudioUnit.AudioUnitScopeType)" />
      <MemberSignature Language="F#" Value="member this.GetElementCount : AudioUnit.AudioUnitScopeType -&gt; uint32" Usage="audioUnit.GetElementCount scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostIcon">
      <MemberSignature Language="C#" Value="public UIKit.UIImage GetHostIcon (float desiredPointSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class UIKit.UIImage GetHostIcon(float32 desiredPointSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.GetHostIcon(System.Single)" />
      <MemberSignature Language="F#" Value="member this.GetHostIcon : single -&gt; UIKit.UIImage" Usage="audioUnit.GetHostIcon desiredPointSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredPointSize" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="desiredPointSize">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaximumFramesPerSlice">
      <MemberSignature Language="C#" Value="public uint GetMaximumFramesPerSlice (AudioUnit.AudioUnitScopeType scope = AudioUnit.AudioUnitScopeType.Global, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetMaximumFramesPerSlice(valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.GetMaximumFramesPerSlice(AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.GetMaximumFramesPerSlice : AudioUnit.AudioUnitScopeType * uint32 -&gt; uint32" Usage="audioUnit.GetMaximumFramesPerSlice (scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterList">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitParameterInfo[] GetParameterList (AudioUnit.AudioUnitScopeType scope = AudioUnit.AudioUnitScopeType.Global, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AudioUnit.AudioUnitParameterInfo[] GetParameterList(valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.GetParameterList(AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.GetParameterList : AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitParameterInfo[]" Usage="audioUnit.GetParameterList (scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AudioUnit.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="AudioUnit.AudioUnit.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public int Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.Initialize" />
      <MemberSignature Language="F#" Value="member this.Initialize : unit -&gt; int" Usage="audioUnit.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlaying">
      <MemberSignature Language="C#" Value="public bool IsPlaying { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlaying" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AudioUnit.IsPlaying" />
      <MemberSignature Language="F#" Value="member this.IsPlaying : bool" Usage="AudioUnit.AudioUnit.IsPlaying" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInstrument">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus LoadInstrument (AudioUnit.SamplerInstrumentData instrumentData, AudioUnit.AudioUnitScopeType scope = AudioUnit.AudioUnitScopeType.Global, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus LoadInstrument(class AudioUnit.SamplerInstrumentData instrumentData, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.LoadInstrument(AudioUnit.SamplerInstrumentData,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.LoadInstrument : AudioUnit.SamplerInstrumentData * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.LoadInstrument (instrumentData, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instrumentData" Type="AudioUnit.SamplerInstrumentData" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="instrumentData">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeConnection">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus MakeConnection (AudioUnit.AudioUnit sourceAudioUnit, uint sourceOutputNumber, uint destInputNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus MakeConnection(class AudioUnit.AudioUnit sourceAudioUnit, unsigned int32 sourceOutputNumber, unsigned int32 destInputNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.MakeConnection(AudioUnit.AudioUnit,System.UInt32,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.MakeConnection : AudioUnit.AudioUnit * uint32 * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.MakeConnection (sourceAudioUnit, sourceOutputNumber, destInputNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAudioUnit" Type="AudioUnit.AudioUnit" />
        <Parameter Name="sourceOutputNumber" Type="System.UInt32" />
        <Parameter Name="destInputNumber" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="sourceAudioUnit">To be added.</param>
        <param name="sourceOutputNumber">To be added.</param>
        <param name="destInputNumber">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MusicDeviceMIDIEvent">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus MusicDeviceMIDIEvent (uint status, uint data1, uint data2, uint offsetSampleFrame = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus MusicDeviceMIDIEvent(unsigned int32 status, unsigned int32 data1, unsigned int32 data2, unsigned int32 offsetSampleFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.MusicDeviceMIDIEvent(System.UInt32,System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.MusicDeviceMIDIEvent : uint32 * uint32 * uint32 * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.MusicDeviceMIDIEvent (status, data1, data2, offsetSampleFrame)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.UInt32" />
        <Parameter Name="data1" Type="System.UInt32" />
        <Parameter Name="data2" Type="System.UInt32" />
        <Parameter Name="offsetSampleFrame" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="status">To be added.</param>
        <param name="data1">To be added.</param>
        <param name="data2">To be added.</param>
        <param name="offsetSampleFrame">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus Render (ref AudioUnit.AudioUnitRenderActionFlags actionFlags, AudioToolbox.AudioTimeStamp timeStamp, uint busNumber, uint numberFrames, AudioToolbox.AudioBuffers data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus Render(valuetype AudioUnit.AudioUnitRenderActionFlags&amp; actionFlags, valuetype AudioToolbox.AudioTimeStamp timeStamp, unsigned int32 busNumber, unsigned int32 numberFrames, class AudioToolbox.AudioBuffers data) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.Render(AudioUnit.AudioUnitRenderActionFlags@,AudioToolbox.AudioTimeStamp,System.UInt32,System.UInt32,AudioToolbox.AudioBuffers)" />
      <MemberSignature Language="F#" Value="member this.Render :  * AudioToolbox.AudioTimeStamp * uint32 * uint32 * AudioToolbox.AudioBuffers -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.Render (actionFlags, timeStamp, busNumber, numberFrames, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionFlags" Type="AudioUnit.AudioUnitRenderActionFlags" RefType="ref" />
        <Parameter Name="timeStamp" Type="AudioToolbox.AudioTimeStamp" />
        <Parameter Name="busNumber" Type="System.UInt32" />
        <Parameter Name="numberFrames" Type="System.UInt32" />
        <Parameter Name="data" Type="AudioToolbox.AudioBuffers" />
      </Parameters>
      <Docs>
        <param name="actionFlags">To be added.</param>
        <param name="timeStamp">To be added.</param>
        <param name="busNumber">To be added.</param>
        <param name="numberFrames">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleParameter">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus ScheduleParameter (AudioUnit.AudioUnitParameterEvent inParameterEvent, uint inNumParamEvents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus ScheduleParameter(valuetype AudioUnit.AudioUnitParameterEvent inParameterEvent, unsigned int32 inNumParamEvents) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.ScheduleParameter(AudioUnit.AudioUnitParameterEvent,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.ScheduleParameter : AudioUnit.AudioUnitParameterEvent * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.ScheduleParameter (inParameterEvent, inNumParamEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inParameterEvent" Type="AudioUnit.AudioUnitParameterEvent" />
        <Parameter Name="inNumParamEvents" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="inParameterEvent">To be added.</param>
        <param name="inNumParamEvents">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAudioFormat">
      <MemberSignature Language="C#" Value="public void SetAudioFormat (AudioToolbox.AudioStreamBasicDescription audioFormat, AudioUnit.AudioUnitScopeType scope, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudioFormat(valuetype AudioToolbox.AudioStreamBasicDescription audioFormat, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetAudioFormat(AudioToolbox.AudioStreamBasicDescription,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetAudioFormat : AudioToolbox.AudioStreamBasicDescription * AudioUnit.AudioUnitScopeType * uint32 -&gt; unit" Usage="audioUnit.SetAudioFormat (audioFormat, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'SetFormat' instead as it has the ability of returning a status code.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFormat" Type="AudioToolbox.AudioStreamBasicDescription" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="audioFormat">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClassInfo">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetClassInfo (AudioUnit.ClassInfoDictionary preset, AudioUnit.AudioUnitScopeType scope = AudioUnit.AudioUnitScopeType.Global, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetClassInfo(class AudioUnit.ClassInfoDictionary preset, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetClassInfo(AudioUnit.ClassInfoDictionary,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetClassInfo : AudioUnit.ClassInfoDictionary * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetClassInfo (preset, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preset" Type="AudioUnit.ClassInfoDictionary" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="preset">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentDevice">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetCurrentDevice (uint inputDevice, AudioUnit.AudioUnitScopeType scope, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetCurrentDevice(unsigned int32 inputDevice, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetCurrentDevice(System.UInt32,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetCurrentDevice : uint32 * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetCurrentDevice (inputDevice, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputDevice" Type="System.UInt32" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="inputDevice">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElementCount">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetElementCount (AudioUnit.AudioUnitScopeType scope, uint count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetElementCount(valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetElementCount(AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetElementCount : AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetElementCount (scope, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="count" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnableIO">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetEnableIO (bool enableIO, AudioUnit.AudioUnitScopeType scope, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetEnableIO(bool enableIO, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetEnableIO(System.Boolean,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetEnableIO : bool * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetEnableIO (enableIO, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableIO" Type="System.Boolean" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="enableIO">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFormat">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetFormat (AudioToolbox.AudioStreamBasicDescription audioFormat, AudioUnit.AudioUnitScopeType scope, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetFormat(valuetype AudioToolbox.AudioStreamBasicDescription audioFormat, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetFormat(AudioToolbox.AudioStreamBasicDescription,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetFormat : AudioToolbox.AudioStreamBasicDescription * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetFormat (audioFormat, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFormat" Type="AudioToolbox.AudioStreamBasicDescription" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="audioFormat">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputCallback">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetInputCallback (AudioUnit.InputDelegate inputDelegate, AudioUnit.AudioUnitScopeType scope = AudioUnit.AudioUnitScopeType.Global, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetInputCallback(class AudioUnit.InputDelegate inputDelegate, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetInputCallback(AudioUnit.InputDelegate,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetInputCallback : AudioUnit.InputDelegate * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetInputCallback (inputDelegate, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputDelegate" Type="AudioUnit.InputDelegate" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="inputDelegate">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaximumFramesPerSlice">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetMaximumFramesPerSlice (uint value, AudioUnit.AudioUnitScopeType scope, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetMaximumFramesPerSlice(unsigned int32 value, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetMaximumFramesPerSlice(System.UInt32,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetMaximumFramesPerSlice : uint32 * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetMaximumFramesPerSlice (value, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetParameter (AudioUnit.AudioUnitParameterType type, float value, AudioUnit.AudioUnitScopeType scope, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetParameter(valuetype AudioUnit.AudioUnitParameterType type, float32 value, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetParameter(AudioUnit.AudioUnitParameterType,System.Single,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetParameter : AudioUnit.AudioUnitParameterType * single * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetParameter (type, value, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="AudioUnit.AudioUnitParameterType" />
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="value">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRenderCallback">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetRenderCallback (AudioUnit.RenderDelegate renderDelegate, AudioUnit.AudioUnitScopeType scope = AudioUnit.AudioUnitScopeType.Global, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetRenderCallback(class AudioUnit.RenderDelegate renderDelegate, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetRenderCallback(AudioUnit.RenderDelegate,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetRenderCallback : AudioUnit.RenderDelegate * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetRenderCallback (renderDelegate, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderDelegate" Type="AudioUnit.RenderDelegate" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="renderDelegate">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSampleRate">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetSampleRate (double sampleRate, AudioUnit.AudioUnitScopeType scope = AudioUnit.AudioUnitScopeType.Output, uint audioUnitElement = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetSampleRate(float64 sampleRate, valuetype AudioUnit.AudioUnitScopeType scope, unsigned int32 audioUnitElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetSampleRate(System.Double,AudioUnit.AudioUnitScopeType,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.SetSampleRate : double * AudioUnit.AudioUnitScopeType * uint32 -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetSampleRate (sampleRate, scope, audioUnitElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleRate" Type="System.Double" />
        <Parameter Name="scope" Type="AudioUnit.AudioUnitScopeType" />
        <Parameter Name="audioUnitElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="sampleRate">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="audioUnitElement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScheduledFileRegion">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetScheduledFileRegion (AudioUnit.AUScheduledAudioFileRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetScheduledFileRegion(class AudioUnit.AUScheduledAudioFileRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetScheduledFileRegion(AudioUnit.AUScheduledAudioFileRegion)" />
      <MemberSignature Language="F#" Value="member this.SetScheduledFileRegion : AudioUnit.AUScheduledAudioFileRegion -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetScheduledFileRegion region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="AudioUnit.AUScheduledAudioFileRegion" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScheduledFiles">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetScheduledFiles (AudioToolbox.AudioFile audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetScheduledFiles(class AudioToolbox.AudioFile audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetScheduledFiles(AudioToolbox.AudioFile)" />
      <MemberSignature Language="F#" Value="member this.SetScheduledFiles : AudioToolbox.AudioFile -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetScheduledFiles audioFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="AudioToolbox.AudioFile" />
      </Parameters>
      <Docs>
        <param name="audioFile">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScheduledFiles">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetScheduledFiles (AudioToolbox.AudioFile[] audioFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetScheduledFiles(class AudioToolbox.AudioFile[] audioFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetScheduledFiles(AudioToolbox.AudioFile[])" />
      <MemberSignature Language="F#" Value="member this.SetScheduledFiles : AudioToolbox.AudioFile[] -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetScheduledFiles audioFiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFiles" Type="AudioToolbox.AudioFile[]" />
      </Parameters>
      <Docs>
        <param name="audioFiles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScheduleStartTimeStamp">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioUnitStatus SetScheduleStartTimeStamp (AudioToolbox.AudioTimeStamp timeStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AudioUnitStatus SetScheduleStartTimeStamp(valuetype AudioToolbox.AudioTimeStamp timeStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.SetScheduleStartTimeStamp(AudioToolbox.AudioTimeStamp)" />
      <MemberSignature Language="F#" Value="member this.SetScheduleStartTimeStamp : AudioToolbox.AudioTimeStamp -&gt; AudioUnit.AudioUnitStatus" Usage="audioUnit.SetScheduleStartTimeStamp timeStamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeStamp" Type="AudioToolbox.AudioTimeStamp" />
      </Parameters>
      <Docs>
        <param name="timeStamp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.Start" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="audioUnit.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.Stop" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="audioUnit.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninitialize">
      <MemberSignature Language="C#" Value="public int Uninitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Uninitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioUnit.Uninitialize" />
      <MemberSignature Language="F#" Value="member this.Uninitialize : unit -&gt; int" Usage="audioUnit.Uninitialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
