<Type Name="AudioComponentDescription" FullName="AudioUnit.AudioComponentDescription">
  <TypeSignature Language="C#" Value="public struct AudioComponentDescription" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AudioComponentDescription extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:AudioUnit.AudioComponentDescription" />
  <TypeSignature Language="F#" Value="type AudioComponentDescription = struct" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Identifiers for a <see cref="T:AudioUnit.AudioComponent" />.</summary>
    <remarks>
      <para>You can either create <see cref="T:AudioUnit.AudioComponentDescription" /> using the empty constructor and setting all of the fields for the audio component, or you can use one of the convenience factory method that provide strongly typed ways of instantiating the structure.</para>
      <para>
      </para>
      <para>The following example shows how to use the various Create methods:</para>
      <para>
      </para>
      <para>
      </para>
      <example>
        <code lang="C#"><![CDATA[auGraph = new AUGraph ();
auGraph.Open ();
int effectNode = auGraph.AddNode (AudioComponentDescription.CreateConverter (AudioTypeConverter.NewTimePitch));
effectUnit = auGraph.GetNodeInfo (effectNode);

int convertToEffectNode = auGraph.AddNode (AudioComponentDescription.CreateConverter (AudioTypeConverter.AU));
convertToEffectUnit = auGraph.GetNodeInfo (convertToEffectNode);

int convertFromEffectNode = auGraph.AddNode (AudioComponentDescription.CreateConverter (AudioTypeConverter.AU));
convertFromEffectUnit = auGraph.GetNodeInfo (convertFromEffectNode);

int genericOutputNode = auGraph.AddNode (AudioComponentDescription.CreateOutput (AudioTypeOutput.Generic));
genericOutputUnit = auGraph.GetNodeInfo (genericOutputNode);

// set the format conversions throughout the graph
AudioStreamBasicDescription effectFormat = effectUnit.GetAudioFormat (AudioUnitScopeType.Output);
var tapFormat = aqTap.ProcessingFormat;

convertToEffectUnit.SetAudioFormat (tapFormat, AudioUnitScopeType.Input);
convertToEffectUnit.SetAudioFormat (effectFormat, AudioUnitScopeType.Output);

convertFromEffectUnit.SetAudioFormat (effectFormat, AudioUnitScopeType.Input);
convertFromEffectUnit.SetAudioFormat (tapFormat, AudioUnitScopeType.Output);

genericOutputUnit.SetAudioFormat (tapFormat, AudioUnitScopeType.Input);
genericOutputUnit.SetAudioFormat (tapFormat, AudioUnitScopeType.Output);]]></code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ComponentFlags">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioComponentFlag ComponentFlags;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype AudioUnit.AudioComponentFlag ComponentFlags" />
      <MemberSignature Language="DocId" Value="F:AudioUnit.AudioComponentDescription.ComponentFlags" />
      <MemberSignature Language="F#" Value="val mutable ComponentFlags : AudioUnit.AudioComponentFlag" Usage="AudioUnit.AudioComponentDescription.ComponentFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentFlagsMask">
      <MemberSignature Language="C#" Value="public int ComponentFlagsMask;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ComponentFlagsMask" />
      <MemberSignature Language="DocId" Value="F:AudioUnit.AudioComponentDescription.ComponentFlagsMask" />
      <MemberSignature Language="F#" Value="val mutable ComponentFlagsMask : int" Usage="AudioUnit.AudioComponentDescription.ComponentFlagsMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentManufacturer">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioComponentManufacturerType ComponentManufacturer;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype AudioUnit.AudioComponentManufacturerType ComponentManufacturer" />
      <MemberSignature Language="DocId" Value="F:AudioUnit.AudioComponentDescription.ComponentManufacturer" />
      <MemberSignature Language="F#" Value="val mutable ComponentManufacturer : AudioUnit.AudioComponentManufacturerType" Usage="AudioUnit.AudioComponentDescription.ComponentManufacturer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentManufacturerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentSubType">
      <MemberSignature Language="C#" Value="public int ComponentSubType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ComponentSubType" />
      <MemberSignature Language="DocId" Value="F:AudioUnit.AudioComponentDescription.ComponentSubType" />
      <MemberSignature Language="F#" Value="val mutable ComponentSubType : int" Usage="AudioUnit.AudioComponentDescription.ComponentSubType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Audio Unit component subtype, depending on the <see cref="F:AudioUnit.AudioComponentDescription.ComponentSubType" /> value you should use one of the values from <see cref="T:AudioUnit.AudioTypeOutput" />, <see cref="T:AudioUnit.AudioTypeMusicDevice" />, <see cref="T:AudioUnit.AudioTypeConverter" />, <see cref="T:AudioUnit.AudioTypeEffect" />, <see cref="T:AudioUnit.AudioTypeMixer" />, <see cref="T:AudioUnit.AudioTypePanner," /> <see cref="T:AudioUnit.AudioTypeGenerator" /></summary>
        <remarks>
          <para>Audio Unit component subtype, depending on the <see cref="F:AudioUnit.AudioComponentDescription.ComponentType" /> you should use one of the values from <see cref="T:AudioUnit.AudioTypeOutput" />, <see cref="T:AudioUnit.AudioTypeMusicDevice" />, <see cref="T:AudioUnit.AudioTypeConverter" />, <see cref="T:AudioUnit.AudioTypeEffect" />, <see cref="T:AudioUnit.AudioTypeMixer" />, <see cref="T:AudioUnit.AudioTypePanner," /> <see cref="T:AudioUnit.AudioTypeGenerator" />.</para>
          <para />
          <para>Since this is an integer, and the values on those enumerations are strongly typed, you typically need to cast.   The following example shows this:</para>
          <para />
          <para />
          <example>
            <code lang="C#"><![CDATA[var processingGraph = new AUGraph ();

int samplerNode, ioNode;

var musicSampler = new AudioComponentDescription () {
        ComponentManufacturer = AudioComponentManufacturerType.Apple,
        ComponentType = AudioComponentType.MusicDevice,
        ComponentSubType = (int)AudioTypeMusicDevice.Sampler
};
samplerNode = processingGraph.AddNode (musicSampler);

var remoteOutput = new AudioComponentDescription () {
        ComponentManufacturer = AudioComponentManufacturerType.Apple,
        ComponentType = AudioComponentType.Output,
        ComponentSubType = (int)AudioTypeOutput.Remote
};
ioNode = processingGraph.AddNode (remoteOutput);

processingGraph.Open ();]]></code>
          </example>.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public AudioUnit.AudioComponentType ComponentType;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype AudioUnit.AudioComponentType ComponentType" />
      <MemberSignature Language="DocId" Value="F:AudioUnit.AudioComponentDescription.ComponentType" />
      <MemberSignature Language="F#" Value="val mutable ComponentType : AudioUnit.AudioComponentType" Usage="AudioUnit.AudioComponentDescription.ComponentType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Describes the component type, some of the component types have subtypes, in those cases, you should also set the <see cref="F:AudioUnit.AudioComponentDescription.ComponentSubType" /> property.</summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConverter">
      <MemberSignature Language="C#" Value="public static AudioUnit.AudioComponentDescription CreateConverter (AudioUnit.AudioTypeConverter converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AudioUnit.AudioComponentDescription CreateConverter(valuetype AudioUnit.AudioTypeConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.CreateConverter(AudioUnit.AudioTypeConverter)" />
      <MemberSignature Language="F#" Value="static member CreateConverter : AudioUnit.AudioTypeConverter -&gt; AudioUnit.AudioComponentDescription" Usage="AudioUnit.AudioComponentDescription.CreateConverter converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="AudioUnit.AudioTypeConverter" />
      </Parameters>
      <Docs>
        <param name="converter">To be added.</param>
        <summary>Creates an audio converter component description.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEffect">
      <MemberSignature Language="C#" Value="public static AudioUnit.AudioComponentDescription CreateEffect (AudioUnit.AudioTypeEffect effect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AudioUnit.AudioComponentDescription CreateEffect(valuetype AudioUnit.AudioTypeEffect effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.CreateEffect(AudioUnit.AudioTypeEffect)" />
      <MemberSignature Language="F#" Value="static member CreateEffect : AudioUnit.AudioTypeEffect -&gt; AudioUnit.AudioComponentDescription" Usage="AudioUnit.AudioComponentDescription.CreateEffect effect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="AudioUnit.AudioTypeEffect" />
      </Parameters>
      <Docs>
        <param name="effect">To be added.</param>
        <summary>Creates an audio effect component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="F:AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="F:AudioUnit.AudioComponentType.Effect" /> and the specified effect.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public static AudioUnit.AudioComponentDescription CreateGenerator (AudioUnit.AudioTypeGenerator generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AudioUnit.AudioComponentDescription CreateGenerator(valuetype AudioUnit.AudioTypeGenerator generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.CreateGenerator(AudioUnit.AudioTypeGenerator)" />
      <MemberSignature Language="F#" Value="static member CreateGenerator : AudioUnit.AudioTypeGenerator -&gt; AudioUnit.AudioComponentDescription" Usage="AudioUnit.AudioComponentDescription.CreateGenerator generator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="AudioUnit.AudioTypeGenerator" />
      </Parameters>
      <Docs>
        <param name="generator">To be added.</param>
        <summary>Creates an audio generator component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="F:AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="F:AudioUnit.AudioComponentType.Generator" /> and the specified generator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric">
      <MemberSignature Language="C#" Value="public static AudioUnit.AudioComponentDescription CreateGeneric (AudioUnit.AudioComponentType type, int subType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AudioUnit.AudioComponentDescription CreateGeneric(valuetype AudioUnit.AudioComponentType type, int32 subType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.CreateGeneric(AudioUnit.AudioComponentType,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CreateGeneric : AudioUnit.AudioComponentType * int -&gt; AudioUnit.AudioComponentDescription" Usage="AudioUnit.AudioComponentDescription.CreateGeneric (type, subType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="AudioUnit.AudioComponentType" />
        <Parameter Name="subType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="subType">To be added.</param>
        <summary>Initializes an <see cref="T:AudioUnit.AudioComponentDescription" /> with the given type and given subtype.   This method is here for cases where you might want to create a component description that is not covered by the built-in enumerations for component subtypes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMixer">
      <MemberSignature Language="C#" Value="public static AudioUnit.AudioComponentDescription CreateMixer (AudioUnit.AudioTypeMixer mixer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AudioUnit.AudioComponentDescription CreateMixer(valuetype AudioUnit.AudioTypeMixer mixer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.CreateMixer(AudioUnit.AudioTypeMixer)" />
      <MemberSignature Language="F#" Value="static member CreateMixer : AudioUnit.AudioTypeMixer -&gt; AudioUnit.AudioComponentDescription" Usage="AudioUnit.AudioComponentDescription.CreateMixer mixer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mixer" Type="AudioUnit.AudioTypeMixer" />
      </Parameters>
      <Docs>
        <param name="mixer">To be added.</param>
        <summary>Creates an audio mixer component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="F:AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="F:AudioUnit.AudioComponentType.Mixer" /> and the specified mixer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMusicDevice">
      <MemberSignature Language="C#" Value="public static AudioUnit.AudioComponentDescription CreateMusicDevice (AudioUnit.AudioTypeMusicDevice musicDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AudioUnit.AudioComponentDescription CreateMusicDevice(valuetype AudioUnit.AudioTypeMusicDevice musicDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.CreateMusicDevice(AudioUnit.AudioTypeMusicDevice)" />
      <MemberSignature Language="F#" Value="static member CreateMusicDevice : AudioUnit.AudioTypeMusicDevice -&gt; AudioUnit.AudioComponentDescription" Usage="AudioUnit.AudioComponentDescription.CreateMusicDevice musicDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="musicDevice" Type="AudioUnit.AudioTypeMusicDevice" />
      </Parameters>
      <Docs>
        <param name="musicDevice">To be added.</param>
        <summary>Creates a music effect component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="F:AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="F:AudioUnit.AudioComponentType.MusicDevice" /> and the specified device.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOutput">
      <MemberSignature Language="C#" Value="public static AudioUnit.AudioComponentDescription CreateOutput (AudioUnit.AudioTypeOutput outputType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AudioUnit.AudioComponentDescription CreateOutput(valuetype AudioUnit.AudioTypeOutput outputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.CreateOutput(AudioUnit.AudioTypeOutput)" />
      <MemberSignature Language="F#" Value="static member CreateOutput : AudioUnit.AudioTypeOutput -&gt; AudioUnit.AudioComponentDescription" Usage="AudioUnit.AudioComponentDescription.CreateOutput outputType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputType" Type="AudioUnit.AudioTypeOutput" />
      </Parameters>
      <Docs>
        <param name="outputType">To be added.</param>
        <summary>Creates an output component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="F:AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="F:AudioUnit.AudioComponentType.Output" /> and the specified output type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePanner">
      <MemberSignature Language="C#" Value="public static AudioUnit.AudioComponentDescription CreatePanner (AudioUnit.AudioTypePanner panner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AudioUnit.AudioComponentDescription CreatePanner(valuetype AudioUnit.AudioTypePanner panner) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.CreatePanner(AudioUnit.AudioTypePanner)" />
      <MemberSignature Language="F#" Value="static member CreatePanner : AudioUnit.AudioTypePanner -&gt; AudioUnit.AudioComponentDescription" Usage="AudioUnit.AudioComponentDescription.CreatePanner panner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panner" Type="AudioUnit.AudioTypePanner" />
      </Parameters>
      <Docs>
        <param name="panner">To be added.</param>
        <summary>Creates a panner component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="F:AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="F:AudioUnit.AudioComponentType.Panner" /> and the specified panner.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AudioComponentDescription.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="audioComponentDescription.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a debugging message showing the component type and subtype for this description.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
