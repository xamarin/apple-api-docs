<Type Name="AUParameterNode" FullName="AudioUnit.AUParameterNode">
  <TypeSignature Language="C#" Value="public class AUParameterNode : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AUParameterNode extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:AudioUnit.AUParameterNode" />
  <TypeSignature Language="F#" Value="type AUParameterNode = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("AUParameterNode", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A node which represents a parameter or parameter group in an <see cref="T:AudioUnit.AUParameterTree" />.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AudioUnit/Reference/AUParameterNode_ClassReference/index.html">Apple documentation for <c>AUParameterNode</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AUParameterNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AUParameterNode (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AudioUnit.AUParameterNode : Foundation.NSObjectFlag -&gt; AudioUnit.AUParameterNode" Usage="new AudioUnit.AUParameterNode t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AUParameterNode (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AudioUnit.AUParameterNode : nativeint -&gt; AudioUnit.AUParameterNode" Usage="new AudioUnit.AUParameterNode handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AudioUnit.AUParameterNode.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTokenByAddingParameterObserver">
      <MemberSignature Language="C#" Value="public AudioUnit.AUParameterObserverToken CreateTokenByAddingParameterObserver (AudioUnit.AUParameterObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AUParameterObserverToken CreateTokenByAddingParameterObserver(class AudioUnit.AUParameterObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.CreateTokenByAddingParameterObserver(AudioUnit.AUParameterObserver)" />
      <MemberSignature Language="F#" Value="member this.CreateTokenByAddingParameterObserver : AudioUnit.AUParameterObserver -&gt; AudioUnit.AUParameterObserverToken" Usage="aUParameterNode.CreateTokenByAddingParameterObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AUParameterObserverToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="AudioUnit.AUParameterObserver" />
      </Parameters>
      <Docs>
        <param name="observer">The block that is called after the parameter changes.</param>
        <summary>Adds a observer for the parameter and returns a token that developers can use to identify it.</summary>
        <returns>A token that can be passed to the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=M:RemoveParameterObserver*&amp;scope=Xamarin" title="M:RemoveParameterObserver*">M:RemoveParameterObserver*</a></format> and <see cref="M:AudioUnit.AUParameter.SetValue(System.Single,AudioUnit.AUParameterObserverToken,System.UInt64,AudioUnit.AUParameterAutomationEventType)" /> methods.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTokenByAddingParameterRecordingObserver">
      <MemberSignature Language="C#" Value="public AudioUnit.AUParameterObserverToken CreateTokenByAddingParameterRecordingObserver (AudioUnit.AUParameterRecordingObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AUParameterObserverToken CreateTokenByAddingParameterRecordingObserver(class AudioUnit.AUParameterRecordingObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.CreateTokenByAddingParameterRecordingObserver(AudioUnit.AUParameterRecordingObserver)" />
      <MemberSignature Language="F#" Value="member this.CreateTokenByAddingParameterRecordingObserver : AudioUnit.AUParameterRecordingObserver -&gt; AudioUnit.AUParameterObserverToken" Usage="aUParameterNode.CreateTokenByAddingParameterRecordingObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioUnit.AUParameterObserverToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="AudioUnit.AUParameterRecordingObserver" />
      </Parameters>
      <Docs>
        <param name="observer">The block that is called after the parameter changes.</param>
        <summary>Adds a recording observer for the parameter and returns a token that developers can use to identify it.</summary>
        <returns>A token that can be passed to the <see cref="M:AudioUnit.AUParameterNode.RemoveParameterObserver(System.IntPtr)" /> and <see cref="M:AudioUnit.AUParameter.SetValue(System.Single,AudioUnit.AUParameterObserverToken,System.UInt64,AudioUnit.AUParameterAutomationEventType)" /> methods.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.DisplayName" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="AudioUnit.AUParameterNode.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("displayName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the localized display name for the node.</summary>
        <value>The localized display name for the node.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="C#" Value="public virtual string GetDisplayName (nint maximumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayName(valuetype System.nint maximumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.GetDisplayName(System.nint)" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayName : nint -&gt; string&#xA;override this.GetDisplayName : nint -&gt; string" Usage="aUParameterNode.GetDisplayName maximumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("displayNameWithLength:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maximumLength" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="maximumLength">The maximum length of the returned localized display name or display name fragment.</param>
        <summary>Returns the possibly truncated localized display name for the node.</summary>
        <returns>The possibly truncated localized display name for the node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public AudioUnit.AUParameterObserverToken GetToken (AudioUnit.AUParameterAutomationObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioUnit.AUParameterObserverToken GetToken(class AudioUnit.AUParameterAutomationObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.GetToken(AudioUnit.AUParameterAutomationObserver)" />
      <MemberSignature Language="F#" Value="member this.GetToken : AudioUnit.AUParameterAutomationObserver -&gt; AudioUnit.AUParameterObserverToken" Usage="aUParameterNode.GetToken observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioUnit.AUParameterObserverToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="AudioUnit.AUParameterAutomationObserver">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAUParameterAutomationObserver))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>Adds a parameter automation observer for the parameter and returns a token that developers can use to identify it.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public virtual string Identifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identifier" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.Identifier" />
      <MemberSignature Language="F#" Value="member this.Identifier : string" Usage="AudioUnit.AUParameterNode.Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("identifier")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the permanent unique identifier for the node.</summary>
        <value>The unique identifier for the node.</value>
        <remarks>App developers must not change this property, as doing so will invalidate host documents between releases.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementorDisplayNameWithLengthCallback">
      <MemberSignature Language="C#" Value="public virtual AudioUnit.AUImplementorDisplayNameWithLengthCallback ImplementorDisplayNameWithLengthCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AudioUnit.AUImplementorDisplayNameWithLengthCallback ImplementorDisplayNameWithLengthCallback" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.ImplementorDisplayNameWithLengthCallback" />
      <MemberSignature Language="F#" Value="member this.ImplementorDisplayNameWithLengthCallback : AudioUnit.AUImplementorDisplayNameWithLengthCallback with get, set" Usage="AudioUnit.AUParameterNode.ImplementorDisplayNameWithLengthCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("implementorDisplayNameWithLengthCallback")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setImplementorDisplayNameWithLengthCallback:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("implementorDisplayNameWithLengthCallback", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setImplementorDisplayNameWithLengthCallback:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioUnit.AUImplementorDisplayNameWithLengthCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Callback for retrieving an abbreviated display name.</summary>
        <value>The possibly abbreviated name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementorStringFromValueCallback">
      <MemberSignature Language="C#" Value="public virtual AudioUnit.AUImplementorStringFromValueCallback ImplementorStringFromValueCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AudioUnit.AUImplementorStringFromValueCallback ImplementorStringFromValueCallback" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.ImplementorStringFromValueCallback" />
      <MemberSignature Language="F#" Value="member this.ImplementorStringFromValueCallback : AudioUnit.AUImplementorStringFromValueCallback with get, set" Usage="AudioUnit.AUParameterNode.ImplementorStringFromValueCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("implementorStringFromValueCallback")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setImplementorStringFromValueCallback:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("implementorStringFromValueCallback", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setImplementorStringFromValueCallback:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioUnit.AUImplementorStringFromValueCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the callback that provides a string representation of the value of the parameter.</summary>
        <value>The callback that provides the string representation of the value of the parameter.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementorValueFromStringCallback">
      <MemberSignature Language="C#" Value="public virtual AudioUnit.AUImplementorValueFromStringCallback ImplementorValueFromStringCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AudioUnit.AUImplementorValueFromStringCallback ImplementorValueFromStringCallback" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.ImplementorValueFromStringCallback" />
      <MemberSignature Language="F#" Value="member this.ImplementorValueFromStringCallback : AudioUnit.AUImplementorValueFromStringCallback with get, set" Usage="AudioUnit.AUParameterNode.ImplementorValueFromStringCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("implementorValueFromStringCallback")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setImplementorValueFromStringCallback:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("implementorValueFromStringCallback", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setImplementorValueFromStringCallback:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioUnit.AUImplementorValueFromStringCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the callback that provides a parameter value when provided with a string representation of the value of the parameter.</summary>
        <value>The callback that provides a parameter value when provided with a string representation of the value of the parameter.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementorValueObserver">
      <MemberSignature Language="C#" Value="public virtual AudioUnit.AUImplementorValueObserver ImplementorValueObserver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AudioUnit.AUImplementorValueObserver ImplementorValueObserver" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.ImplementorValueObserver" />
      <MemberSignature Language="F#" Value="member this.ImplementorValueObserver : AudioUnit.AUImplementorValueObserver with get, set" Usage="AudioUnit.AUParameterNode.ImplementorValueObserver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("implementorValueObserver")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setImplementorValueObserver:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("implementorValueObserver", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setImplementorValueObserver:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioUnit.AUImplementorValueObserver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:AudioUnit.AUImplementorValueObserver" /> that notifies the audio unit when a parameter value changes.</summary>
        <value>The <see cref="T:AudioUnit.AUImplementorValueObserver" /> that notifies the audio unit when a parameter value changes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementorValueProvider">
      <MemberSignature Language="C#" Value="public virtual AudioUnit.AUImplementorValueProvider ImplementorValueProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AudioUnit.AUImplementorValueProvider ImplementorValueProvider" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.ImplementorValueProvider" />
      <MemberSignature Language="F#" Value="member this.ImplementorValueProvider : AudioUnit.AUImplementorValueProvider with get, set" Usage="AudioUnit.AUParameterNode.ImplementorValueProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("implementorValueProvider")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setImplementorValueProvider:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("implementorValueProvider", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setImplementorValueProvider:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioUnit.AUImplementorValueProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:AudioUnit.AUImplementorValueObserver" /> that updates stale parameter values.</summary>
        <value>The <see cref="T:AudioUnit.AUImplementorValueObserver" /> that updates stale parameter values.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPath">
      <MemberSignature Language="C#" Value="public virtual string KeyPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyPath" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameterNode.KeyPath" />
      <MemberSignature Language="F#" Value="member this.KeyPath : string" Usage="AudioUnit.AUParameterNode.KeyPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("keyPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the key path, the concatenation of the parameter's and its parents' identifiers.</summary>
        <value>The key path, the concatenation of the parameter's and its parents' identifiers.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParameterObserver">
      <MemberSignature Language="C#" Value="public void RemoveParameterObserver (AudioUnit.AUParameterObserverToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParameterObserver(valuetype AudioUnit.AUParameterObserverToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.RemoveParameterObserver(AudioUnit.AUParameterObserverToken)" />
      <MemberSignature Language="F#" Value="member this.RemoveParameterObserver : AudioUnit.AUParameterObserverToken -&gt; unit" Usage="aUParameterNode.RemoveParameterObserver token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="AudioUnit.AUParameterObserverToken" />
      </Parameters>
      <Docs>
        <param name="token">An opaque pointer to the parameter observer to remove.</param>
        <summary>Removes the parameter observer that is identified by <paramref name="token" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParameterObserver">
      <MemberSignature Language="C#" Value="public virtual void RemoveParameterObserver (IntPtr token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveParameterObserver(native int token) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.RemoveParameterObserver(System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member RemoveParameterObserver : nativeint -&gt; unit&#xA;override this.RemoveParameterObserver : nativeint -&gt; unit" Usage="aUParameterNode.RemoveParameterObserver token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeParameterObserver:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("Use the 'AUParameterObserverToken' overload.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="token">An opaque pointer to the parameter observer to remove.</param>
        <summary>Removes the parameter observer that is specified by <paramref name="token" />.</summary>
        <remarks>Developers get valid <paramref name="token" /> instances by saving the value that is returned from <see cref="M:AudioUnit.AUParameterNode.TokenByAddingParameterRecordingObserver(AudioUnit.AUParameterRecordingObserver)" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenByAddingParameterObserver">
      <MemberSignature Language="C#" Value="public virtual IntPtr TokenByAddingParameterObserver (AudioUnit.AUParameterObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int TokenByAddingParameterObserver(class AudioUnit.AUParameterObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.TokenByAddingParameterObserver(AudioUnit.AUParameterObserver)" />
      <MemberSignature Language="F#" Value="abstract member TokenByAddingParameterObserver : AudioUnit.AUParameterObserver -&gt; nativeint&#xA;override this.TokenByAddingParameterObserver : AudioUnit.AUParameterObserver -&gt; nativeint" Usage="aUParameterNode.TokenByAddingParameterObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("tokenByAddingParameterObserver:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("Use the 'CreateTokenByAddingParameterObserver' instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="AudioUnit.AUParameterObserver">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAUParameterObserver))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>Adds an observer to a parameter or parameter group, and returns a token that identifies the observers for later removal.</summary>
        <returns>A token that identifies the observers for later removal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenByAddingParameterRecordingObserver">
      <MemberSignature Language="C#" Value="public virtual IntPtr TokenByAddingParameterRecordingObserver (AudioUnit.AUParameterRecordingObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int TokenByAddingParameterRecordingObserver(class AudioUnit.AUParameterRecordingObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameterNode.TokenByAddingParameterRecordingObserver(AudioUnit.AUParameterRecordingObserver)" />
      <MemberSignature Language="F#" Value="abstract member TokenByAddingParameterRecordingObserver : AudioUnit.AUParameterRecordingObserver -&gt; nativeint&#xA;override this.TokenByAddingParameterRecordingObserver : AudioUnit.AUParameterRecordingObserver -&gt; nativeint" Usage="aUParameterNode.TokenByAddingParameterRecordingObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("tokenByAddingParameterRecordingObserver:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("Use the 'CreateTokenByAddingParameterRecordingObserver' instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="AudioUnit.AUParameterRecordingObserver">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAUParameterRecordingObserver))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>Adds a recording observer to a parameter or parameter group, and returns a token that identifies the observers for later removal.</summary>
        <returns>A token that identifies the observers for later removal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
