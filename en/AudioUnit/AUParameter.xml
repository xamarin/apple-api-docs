<Type Name="AUParameter" FullName="AudioUnit.AUParameter">
  <TypeSignature Language="C#" Value="public class AUParameter : AudioUnit.AUParameterNode, Foundation.INSSecureCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AUParameter extends AudioUnit.AUParameterNode implements class Foundation.INSCoding, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AudioUnit.AUParameter" />
  <TypeSignature Language="F#" Value="type AUParameter = class&#xA;    inherit AUParameterNode&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AudioUnit.AUParameterNode</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("AUParameter", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An audio unit parameter.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AudioUnit/Reference/AUParameter_ClassReference/index.html">Apple documentation for <c>AUParameter</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AUParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AUParameter (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AudioUnit.AUParameter : Foundation.NSCoder -&gt; AudioUnit.AUParameter" Usage="new AudioUnit.AUParameter coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AUParameter (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AudioUnit.AUParameter : Foundation.NSObjectFlag -&gt; AudioUnit.AUParameter" Usage="new AudioUnit.AUParameter t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AUParameter (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AudioUnit.AUParameter : nativeint -&gt; AudioUnit.AUParameter" Usage="new AudioUnit.AUParameter handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public virtual ulong Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 Address" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.Address" />
      <MemberSignature Language="F#" Value="member this.Address : uint64" Usage="AudioUnit.AUParameter.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("address")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the address (a non-persistent numerical identifier) for the parameter.</summary>
        <value>A non-persistent numeric identifier for the parameter.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AudioUnit.AUParameter.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentParameters">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] DependentParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] DependentParameters" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.DependentParameters" />
      <MemberSignature Language="F#" Value="member this.DependentParameters : Foundation.NSNumber[]" Usage="AudioUnit.AUParameter.DependentParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("dependentParameters", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of addresses for parameters that may be changed when the developer changes this parameter.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="aUParameter.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">The encoder object where the state of the object will be stored</param>
        <summary>Encodes the state of the object on the provided encoder</summary>
        <remarks>
          <para>This method is part of the <see cref="T:Foundation.NSCoding" /> protocol and is used by applications to preserve the state of the object into an archive.</para>
          <para>Users will typically create a <see cref="T:Foundation.NSKeyedArchiver" /> and then invoke the <see cref="M:Foundation.NSKeyedArchiver.ArchiveRootObjectToFile(Foundation.NSObject,System.String)" /> which will call into this method</para>
          <para>If developers want to allow their object to be archived, they should override this method and store their state in using the provided <paramref name="encoder" /> parameter.   In addition, developers should also implement a constructor that takes an NSCoder argument and is exported with [Export ("initWithCoder:")]</para>
          <example>
            <code lang="C#"><![CDATA[public void override EncodeTo (NSCoder coder){
    coder.Encode (1, key: "version");
    coder.Encode (userName, key: "userName");
    coder.Encode (hostName, key: "hostName");]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual AudioUnit.AudioUnitParameterOptions Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AudioUnit.AudioUnitParameterOptions Flags" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.Flags" />
      <MemberSignature Language="F#" Value="member this.Flags : AudioUnit.AudioUnitParameterOptions" Usage="AudioUnit.AUParameter.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("flags")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitParameterOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameter option flags for this parameter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (Nullable&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.Nullable`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.GetString(System.Nullable{System.Single})" />
      <MemberSignature Language="F#" Value="member this.GetString : Nullable&lt;single&gt; -&gt; string" Usage="aUParameter.GetString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The parameter value to represent as a string.</param>
        <summary>Returns the string representation of the parameter value that corresponds to <paramref name="value" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.GetString(System.Single@)" />
      <MemberSignature Language="F#" Value="abstract member GetString :  -&gt; string&#xA;override this.GetString :  -&gt; string" Usage="aUParameter.GetString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stringFromValue:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="value">The parameter value to represent as a string.</param>
        <summary>Returns the string representation of the parameter value that corresponds to <paramref name="value" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual float GetValue (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetValue(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.GetValue(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetValue : string -&gt; single&#xA;override this.GetValue : string -&gt; single" Usage="aUParameter.GetValue str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("valueFromString:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string representation for which to get a parameter value.</param>
        <summary>Returns the numeric value for the parameter in <paramref name="str" />.</summary>
        <returns>The numeric value for the parameter string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public virtual float MaxValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxValue" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.MaxValue" />
      <MemberSignature Language="F#" Value="member this.MaxValue : single" Usage="AudioUnit.AUParameter.MaxValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maxValue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameter's maximum value.</summary>
        <value>The parameter's maximum value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public virtual float MinValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinValue" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.MinValue" />
      <MemberSignature Language="F#" Value="member this.MinValue : single" Usage="AudioUnit.AUParameter.MinValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minValue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameter's minimum value.</summary>
        <value>The parameter's minimum value.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (float value, AudioUnit.AUParameterObserverToken originator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(float32 value, valuetype AudioUnit.AUParameterObserverToken originator) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.SetValue(System.Single,AudioUnit.AUParameterObserverToken)" />
      <MemberSignature Language="F#" Value="member this.SetValue : single * AudioUnit.AUParameterObserverToken -&gt; unit" Usage="aUParameter.SetValue (value, originator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="originator" Type="AudioUnit.AUParameterObserverToken" />
      </Parameters>
      <Docs>
        <param name="value">The value to set.</param>
        <param name="originator">The originator, whose notification should be skipped.</param>
        <summary>Sets the parameter to <paramref name="value" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (float value, IntPtr originator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(float32 value, native int originator) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.SetValue(System.Single,System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member SetValue : single * nativeint -&gt; unit&#xA;override this.SetValue : single * nativeint -&gt; unit" Usage="aUParameter.SetValue (value, originator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setValue:originator:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use the 'AUParameterObserverToken' overload.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="originator" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value">The value to set.</param>
        <param name="originator">The originator, whose notification should be skipped.</param>
        <summary>Sets the parameter's value without notifying <paramref name="originator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (float value, AudioUnit.AUParameterObserverToken originator, ulong hostTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(float32 value, valuetype AudioUnit.AUParameterObserverToken originator, unsigned int64 hostTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.SetValue(System.Single,AudioUnit.AUParameterObserverToken,System.UInt64)" />
      <MemberSignature Language="F#" Value="member this.SetValue : single * AudioUnit.AUParameterObserverToken * uint64 -&gt; unit" Usage="aUParameter.SetValue (value, originator, hostTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="originator" Type="AudioUnit.AUParameterObserverToken" />
        <Parameter Name="hostTime" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">The value to set.</param>
        <param name="originator">The originator, whose notification should be skipped.</param>
        <param name="hostTime">The host time of the initiating gesture.</param>
        <summary>Sets the parameter to the specified value, and preserves the initiating gesture time.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (float value, IntPtr originator, ulong hostTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(float32 value, native int originator, unsigned int64 hostTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.SetValue(System.Single,System.IntPtr,System.UInt64)" />
      <MemberSignature Language="F#" Value="abstract member SetValue : single * nativeint * uint64 -&gt; unit&#xA;override this.SetValue : single * nativeint * uint64 -&gt; unit" Usage="aUParameter.SetValue (value, originator, hostTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setValue:originator:atHostTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use the 'AUParameterObserverToken' overload.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="originator" Type="System.IntPtr" />
        <Parameter Name="hostTime" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">The value to set.</param>
        <param name="originator">The originator, whose notification should be skipped.</param>
        <param name="hostTime">The time to apply the change.</param>
        <summary>Sets the parameter's value, without notifying <paramref name="originator" />, at the specified <paramref name="hostTime" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (float value, AudioUnit.AUParameterObserverToken originator, ulong hostTime, AudioUnit.AUParameterAutomationEventType eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(float32 value, valuetype AudioUnit.AUParameterObserverToken originator, unsigned int64 hostTime, valuetype AudioUnit.AUParameterAutomationEventType eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioUnit.AUParameter.SetValue(System.Single,AudioUnit.AUParameterObserverToken,System.UInt64,AudioUnit.AUParameterAutomationEventType)" />
      <MemberSignature Language="F#" Value="member this.SetValue : single * AudioUnit.AUParameterObserverToken * uint64 * AudioUnit.AUParameterAutomationEventType -&gt; unit" Usage="aUParameter.SetValue (value, originator, hostTime, eventType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="originator" Type="AudioUnit.AUParameterObserverToken" />
        <Parameter Name="hostTime" Type="System.UInt64" />
        <Parameter Name="eventType" Type="AudioUnit.AUParameterAutomationEventType" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="originator">To be added.</param>
        <param name="hostTime">To be added.</param>
        <param name="eventType">To be added.</param>
        <summary>Sets the parameter's value to <paramref name="value" />, with the specified <paramref name="hostTime" /> and <paramref name="eventType" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unit">
      <MemberSignature Language="C#" Value="public virtual AudioUnit.AudioUnitParameterUnit Unit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AudioUnit.AudioUnitParameterUnit Unit" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.Unit" />
      <MemberSignature Language="F#" Value="member this.Unit : AudioUnit.AudioUnitParameterUnit" Usage="AudioUnit.AUParameter.Unit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("unit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioUnit.AudioUnitParameterUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unit of measurement for the value of the parameter.</summary>
        <value>The unit of measurement for the value of the parameter.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitName">
      <MemberSignature Language="C#" Value="public virtual string UnitName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnitName" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.UnitName" />
      <MemberSignature Language="F#" Value="member this.UnitName : string" Usage="AudioUnit.AUParameter.UnitName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("unitName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the localized unit of measurement for the value of the parameter.</summary>
        <value>
          <para>The localized unit of measurement for the value of the parameter.</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual float Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Value" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.Value" />
      <MemberSignature Language="F#" Value="member this.Value : single with get, set" Usage="AudioUnit.AUParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("value")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setValue:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current value of the parameter.</summary>
        <value>The current value of the parameter.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueStrings">
      <MemberSignature Language="C#" Value="public virtual string[] ValueStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ValueStrings" />
      <MemberSignature Language="DocId" Value="P:AudioUnit.AUParameter.ValueStrings" />
      <MemberSignature Language="F#" Value="member this.ValueStrings : string[]" Usage="AudioUnit.AUParameter.ValueStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("valueStrings", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array that contains allowable localized value names for the parameter.</summary>
        <value>
          <para>An array that contains allowable localized value names for the parameter.</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
