<Type Name="CommandStage" FullName="NUnit.Framework.Internal.Commands.CommandStage">
  <TypeSignature Language="C#" Value="public enum CommandStage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandStage extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            The CommandStage enumeration represents the defined stages
            of execution for a series of TestCommands. The int values
            of the enum are used to apply decorators in the proper
            order. Lower values are applied first and are therefore
            "closer" to the actual test execution.
            </summary>
    <remarks>
            No CommandStage is defined for actual invocation of the test or
            for creation of the context. Execution may be imagined as
            proceeding from the bottom of the list upwards, with cleanup
            after the test running in the opposite order.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AboveSetUpTearDown">
      <MemberSignature Language="C#" Value="AboveSetUpTearDown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage AboveSetUpTearDown = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="BelowSetUpTearDown">
      <MemberSignature Language="C#" Value="BelowSetUpTearDown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage BelowSetUpTearDown = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage Default = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Use an application-defined default value.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="SetUpTearDown">
      <MemberSignature Language="C#" Value="SetUpTearDown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage SetUpTearDown = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Run SetUp and TearDown for the test.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>