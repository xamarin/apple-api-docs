<Type Name="ExpectedExceptionCommand" FullName="NUnit.Framework.Internal.Commands.ExpectedExceptionCommand">
  <TypeSignature Language="C#" Value="public class ExpectedExceptionCommand : NUnit.Framework.Internal.Commands.DelegatingTestCommand" apistyle="classic" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpectedExceptionCommand extends NUnit.Framework.Internal.Commands.DelegatingTestCommand" apistyle="classic" />
  <TypeSignature Language="C#" Value="public class ExpectedExceptionCommand : Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.DelegatingTestCommand" apistyle="unified" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpectedExceptionCommand extends Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.DelegatingTestCommand" apistyle="unified" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
    <AssemblyVersion>0.8.0.0</AssemblyVersion>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Internal.Commands.DelegatingTestCommand</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            TODO: Documentation needed for class
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpectedExceptionCommand (NUnit.Framework.Internal.Commands.TestCommand innerCommand, NUnit.Framework.Api.ExpectedExceptionData exceptionData);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NUnit.Framework.Internal.Commands.TestCommand innerCommand, valuetype NUnit.Framework.Api.ExpectedExceptionData exceptionData) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public ExpectedExceptionCommand (Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.TestCommand innerCommand, Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ExpectedExceptionData exceptionData);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.TestCommand innerCommand, valuetype Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ExpectedExceptionData exceptionData) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerCommand" Type="NUnit.Framework.Internal.Commands.TestCommand" apistyle="classic" />
        <Parameter Name="exceptionData" Type="NUnit.Framework.Api.ExpectedExceptionData" apistyle="classic" />
        <Parameter Name="innerCommand" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.TestCommand" apistyle="unified" />
        <Parameter Name="exceptionData" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ExpectedExceptionData" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="innerCommand">The inner command.</param>
        <param name="exceptionData">The exception data.</param>
        <summary>
            Initializes a new instance of the <see cref="T:NUnit.Framework.Internal.Commands.ExpectedExceptionCommand" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute" apistyle="classic">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Internal.TestResult Execute (NUnit.Framework.Internal.TestExecutionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Internal.TestResult Execute(class NUnit.Framework.Internal.TestExecutionContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="NUnit.Framework.Internal.TestExecutionContext" />
      </Parameters>
      <Docs>
        <param name="context">The context in which the test is to be run.</param>
        <summary>
            Runs the test, saving a TestResult in the supplied TestExecutionContext
            </summary>
        <returns>A TestResult</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessException">
      <MemberSignature Language="C#" Value="public void ProcessException (Exception exception, NUnit.Framework.Internal.TestExecutionContext context);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessException(class System.Exception exception, class NUnit.Framework.Internal.TestExecutionContext context) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public void ProcessException (Exception exception, Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestExecutionContext context);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessException(class System.Exception exception, class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestExecutionContext context) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="context" Type="NUnit.Framework.Internal.TestExecutionContext" apistyle="classic" />
        <Parameter Name="context" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestExecutionContext" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="exception">The exception.</param>
        <param name="context">To be added.</param>
        <summary>
            Handles processing when an exception was thrown.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessNoException">
      <MemberSignature Language="C#" Value="public void ProcessNoException (NUnit.Framework.Internal.TestExecutionContext context);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessNoException(class NUnit.Framework.Internal.TestExecutionContext context) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public void ProcessNoException (Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestExecutionContext context);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessNoException(class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestExecutionContext context) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="NUnit.Framework.Internal.TestExecutionContext" apistyle="classic" />
        <Parameter Name="context" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestExecutionContext" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Handles processing when no exception was thrown.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
