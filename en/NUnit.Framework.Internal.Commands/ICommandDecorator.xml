<Type Name="ICommandDecorator" FullName="NUnit.Framework.Internal.Commands.ICommandDecorator">
  <TypeSignature Language="C#" Value="public interface ICommandDecorator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandDecorator" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            ICommandDecorator is implemented by attributes and other
            objects able to decorate a TestCommand, usually by wrapping
            it with an outer command.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The priority of this decorator as compared to other decorators
            in the same Stage. Lower values are applied first.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stage">
      <MemberSignature Language="C#" Value="public Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage Stage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.iOS.dll=NUnit.Framework.Internal.Commands.CommandStage Stage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.CommandStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The stage of command execution to which this decorator applies.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>