<Type Name="VTDecompressionSession" FullName="VideoToolbox.VTDecompressionSession">
  <TypeSignature Language="C#" Value="public class VTDecompressionSession : VideoToolbox.VTSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VTDecompressionSession extends VideoToolbox.VTSession" />
  <TypeSignature Language="DocId" Value="T:VideoToolbox.VTDecompressionSession" />
  <TypeSignature Language="F#" Value="type VTDecompressionSession = class&#xA;    inherit VTSession" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>VideoToolbox.VTSession</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.TV(10, 2)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Turns compressed frames into uncompressed video frames.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal VTDecompressionSession (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new VideoToolbox.VTDecompressionSession : nativeint -&gt; VideoToolbox.VTDecompressionSession" Usage="new VideoToolbox.VTDecompressionSession handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAcceptFormatDescriptor">
      <MemberSignature Language="C#" Value="public VideoToolbox.VTStatus CanAcceptFormatDescriptor (CoreMedia.CMFormatDescription newDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype VideoToolbox.VTStatus CanAcceptFormatDescriptor(class CoreMedia.CMFormatDescription newDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.CanAcceptFormatDescriptor(CoreMedia.CMFormatDescription)" />
      <MemberSignature Language="F#" Value="member this.CanAcceptFormatDescriptor : CoreMedia.CMFormatDescription -&gt; VideoToolbox.VTStatus" Usage="vTDecompressionSession.CanAcceptFormatDescriptor newDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>VideoToolbox.VTStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newDescriptor" Type="CoreMedia.CMFormatDescription" />
      </Parameters>
      <Docs>
        <param name="newDescriptor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlackPixelBuffer">
      <MemberSignature Language="C#" Value="public VideoToolbox.VTStatus CopyBlackPixelBuffer (out CoreVideo.CVPixelBuffer pixelBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype VideoToolbox.VTStatus CopyBlackPixelBuffer([out] class CoreVideo.CVPixelBuffer&amp; pixelBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.CopyBlackPixelBuffer(CoreVideo.CVPixelBuffer@)" />
      <MemberSignature Language="F#" Value="member this.CopyBlackPixelBuffer :  -&gt; VideoToolbox.VTStatus" Usage="vTDecompressionSession.CopyBlackPixelBuffer pixelBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>VideoToolbox.VTStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelBuffer" Type="CoreVideo.CVPixelBuffer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pixelBuffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static VideoToolbox.VTDecompressionSession Create (VideoToolbox.VTDecompressionSession.VTDecompressionOutputCallback outputCallback, CoreMedia.CMVideoFormatDescription formatDescription, VideoToolbox.VTVideoDecoderSpecification decoderSpecification, CoreVideo.CVPixelBufferAttributes destinationImageBufferAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class VideoToolbox.VTDecompressionSession Create(class VideoToolbox.VTDecompressionSession/VTDecompressionOutputCallback outputCallback, class CoreMedia.CMVideoFormatDescription formatDescription, class VideoToolbox.VTVideoDecoderSpecification decoderSpecification, class CoreVideo.CVPixelBufferAttributes destinationImageBufferAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.Create(VideoToolbox.VTDecompressionSession.VTDecompressionOutputCallback,CoreMedia.CMVideoFormatDescription,VideoToolbox.VTVideoDecoderSpecification,CoreVideo.CVPixelBufferAttributes)" />
      <MemberSignature Language="F#" Value="static member Create : VideoToolbox.VTDecompressionSession.VTDecompressionOutputCallback * CoreMedia.CMVideoFormatDescription * VideoToolbox.VTVideoDecoderSpecification * CoreVideo.CVPixelBufferAttributes -&gt; VideoToolbox.VTDecompressionSession" Usage="VideoToolbox.VTDecompressionSession.Create (outputCallback, formatDescription, decoderSpecification, destinationImageBufferAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>VideoToolbox.VTDecompressionSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputCallback" Type="VideoToolbox.VTDecompressionSession+VTDecompressionOutputCallback" />
        <Parameter Name="formatDescription" Type="CoreMedia.CMVideoFormatDescription" />
        <Parameter Name="decoderSpecification" Type="VideoToolbox.VTVideoDecoderSpecification" />
        <Parameter Name="destinationImageBufferAttributes" Type="CoreVideo.CVPixelBufferAttributes" />
      </Parameters>
      <Docs>
        <param name="outputCallback">To be added.</param>
        <param name="formatDescription">To be added.</param>
        <param name="decoderSpecification">To be added.</param>
        <param name="destinationImageBufferAttributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static VideoToolbox.VTDecompressionSession Create (VideoToolbox.VTDecompressionSession.VTDecompressionOutputCallback outputCallback, CoreMedia.CMVideoFormatDescription formatDescription, VideoToolbox.VTVideoDecoderSpecification decoderSpecification = null, Foundation.NSDictionary destinationImageBufferAttributes = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class VideoToolbox.VTDecompressionSession Create(class VideoToolbox.VTDecompressionSession/VTDecompressionOutputCallback outputCallback, class CoreMedia.CMVideoFormatDescription formatDescription, class VideoToolbox.VTVideoDecoderSpecification decoderSpecification, class Foundation.NSDictionary destinationImageBufferAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.Create(VideoToolbox.VTDecompressionSession.VTDecompressionOutputCallback,CoreMedia.CMVideoFormatDescription,VideoToolbox.VTVideoDecoderSpecification,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member Create : VideoToolbox.VTDecompressionSession.VTDecompressionOutputCallback * CoreMedia.CMVideoFormatDescription * VideoToolbox.VTVideoDecoderSpecification * Foundation.NSDictionary -&gt; VideoToolbox.VTDecompressionSession" Usage="VideoToolbox.VTDecompressionSession.Create (outputCallback, formatDescription, decoderSpecification, destinationImageBufferAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("This overload requires that the provided compressionOutputCallback manually CFRetain the passed CMSampleBuffer, use Create(VTDecompressionOutputCallback,CMVideoFormatDescription,VTVideoDecoderSpecification,CVPixelBufferAttributes) variant instead which does not have that requirement.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>VideoToolbox.VTDecompressionSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputCallback" Type="VideoToolbox.VTDecompressionSession+VTDecompressionOutputCallback" />
        <Parameter Name="formatDescription" Type="CoreMedia.CMVideoFormatDescription" />
        <Parameter Name="decoderSpecification" Type="VideoToolbox.VTVideoDecoderSpecification" />
        <Parameter Name="destinationImageBufferAttributes" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="outputCallback">To be added.</param>
        <param name="formatDescription">To be added.</param>
        <param name="decoderSpecification">To be added.</param>
        <param name="destinationImageBufferAttributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFrame">
      <MemberSignature Language="C#" Value="public VideoToolbox.VTStatus DecodeFrame (CoreMedia.CMSampleBuffer sampleBuffer, VideoToolbox.VTDecodeFrameFlags decodeFlags, IntPtr sourceFrame, out VideoToolbox.VTDecodeInfoFlags infoFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype VideoToolbox.VTStatus DecodeFrame(class CoreMedia.CMSampleBuffer sampleBuffer, valuetype VideoToolbox.VTDecodeFrameFlags decodeFlags, native int sourceFrame, [out] valuetype VideoToolbox.VTDecodeInfoFlags&amp; infoFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.DecodeFrame(CoreMedia.CMSampleBuffer,VideoToolbox.VTDecodeFrameFlags,System.IntPtr,VideoToolbox.VTDecodeInfoFlags@)" />
      <MemberSignature Language="F#" Value="member this.DecodeFrame : CoreMedia.CMSampleBuffer * VideoToolbox.VTDecodeFrameFlags * nativeint *  -&gt; VideoToolbox.VTStatus" Usage="vTDecompressionSession.DecodeFrame (sampleBuffer, decodeFlags, sourceFrame, infoFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>VideoToolbox.VTStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleBuffer" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="decodeFlags" Type="VideoToolbox.VTDecodeFrameFlags" />
        <Parameter Name="sourceFrame" Type="System.IntPtr" />
        <Parameter Name="infoFlags" Type="VideoToolbox.VTDecodeInfoFlags" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sampleBuffer">To be added.</param>
        <param name="decodeFlags">To be added.</param>
        <param name="sourceFrame">To be added.</param>
        <param name="infoFlags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.Dispose" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="vTDecompressionSession.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the VTDecompressionSession object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the VTDecompressionSession class.</para>
          <para>Calling the Dispose method when the application is finished using the VTDecompressionSession ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="vTDecompressionSession.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the VTDecompressionSession object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the VTDecompressionSession class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the VTDecompressionSession ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~VTDecompressionSession ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="vTDecompressionSession.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the VTDecompressionSession object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishDelayedFrames">
      <MemberSignature Language="C#" Value="public VideoToolbox.VTStatus FinishDelayedFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype VideoToolbox.VTStatus FinishDelayedFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.FinishDelayedFrames" />
      <MemberSignature Language="F#" Value="member this.FinishDelayedFrames : unit -&gt; VideoToolbox.VTStatus" Usage="vTDecompressionSession.FinishDelayedFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>VideoToolbox.VTStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHardwareDecodeSupported">
      <MemberSignature Language="C#" Value="public static bool IsHardwareDecodeSupported (CoreMedia.CMVideoCodecType codecType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHardwareDecodeSupported(valuetype CoreMedia.CMVideoCodecType codecType) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.IsHardwareDecodeSupported(CoreMedia.CMVideoCodecType)" />
      <MemberSignature Language="F#" Value="static member IsHardwareDecodeSupported : CoreMedia.CMVideoCodecType -&gt; bool" Usage="VideoToolbox.VTDecompressionSession.IsHardwareDecodeSupported codecType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(11, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codecType" Type="CoreMedia.CMVideoCodecType" />
      </Parameters>
      <Docs>
        <param name="codecType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDecompressionProperties">
      <MemberSignature Language="C#" Value="public VideoToolbox.VTStatus SetDecompressionProperties (VideoToolbox.VTDecompressionProperties options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype VideoToolbox.VTStatus SetDecompressionProperties(class VideoToolbox.VTDecompressionProperties options) cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.SetDecompressionProperties(VideoToolbox.VTDecompressionProperties)" />
      <MemberSignature Language="F#" Value="member this.SetDecompressionProperties : VideoToolbox.VTDecompressionProperties -&gt; VideoToolbox.VTStatus" Usage="vTDecompressionSession.SetDecompressionProperties options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>VideoToolbox.VTStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="VideoToolbox.VTDecompressionProperties" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForAsynchronousFrames">
      <MemberSignature Language="C#" Value="public VideoToolbox.VTStatus WaitForAsynchronousFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype VideoToolbox.VTStatus WaitForAsynchronousFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:VideoToolbox.VTDecompressionSession.WaitForAsynchronousFrames" />
      <MemberSignature Language="F#" Value="member this.WaitForAsynchronousFrames : unit -&gt; VideoToolbox.VTStatus" Usage="vTDecompressionSession.WaitForAsynchronousFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>VideoToolbox.VTStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
