<Type Name="ARFrame" FullName="MonoTouch.ARKit.ARFrame">
  <TypeSignature Language="C#" Value="public class ARFrame : MonoTouch.Foundation.NSObject, IDisposable, MonoTouch.Foundation.INSCopying" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ARFrame extends MonoTouch.Foundation.NSObject implements class MonoTouch.Foundation.INSCopying, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("ARFrame", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 11, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.WatchOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.MacOSX, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A frame in an augmented-reality session.</summary>
    <remarks>
      <para>Developers can retrieve the current <see cref="T:MonoTouch.ARKit.ARFrame" /> from <see cref="P:MonoTouch.ARKit.ARSession.CurrentFrame" /> or by implementing <see cref="M:MonoTouch.IARSessionDelegate.DidUpdateFrame" />. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ARFrame (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ARFrame (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anchors">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.ARKit.ARAnchor[] Anchors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.ARKit.ARAnchor[] Anchors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("anchors")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ARKit.ARAnchor[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An array of <see cref="T:MonoTouch.ARKit.ARAnchor" /> objects, representing the tracked positions or objects in the session.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Camera">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.ARKit.ARCamera Camera { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.ARKit.ARCamera Camera" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("camera")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ARKit.ARCamera</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The device being used to capture frames for augmented-reality processing.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapturedImage">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreVideo.CVPixelBuffer CapturedImage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreVideo.CVPixelBuffer CapturedImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("capturedImage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreVideo.CVPixelBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The original capture image, not corrected for device orientation or view aspect ratio, as a <see cref="T:MonoTouch.CoreVideo.CVPixelBuffer" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject Copy (MonoTouch.Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSObject Copy(class MonoTouch.Foundation.NSZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="MonoTouch.Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTransform">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGAffineTransform GetDisplayTransform (MonoTouch.UIKit.UIInterfaceOrientation orientation, MonoTouch.CoreGraphics.CGSize viewportSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreGraphics.CGAffineTransform GetDisplayTransform(valuetype MonoTouch.UIKit.UIInterfaceOrientation orientation, valuetype MonoTouch.CoreGraphics.CGSize viewportSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("displayTransformForOrientation:viewportSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGAffineTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
        <Parameter Name="viewportSize" Type="MonoTouch.CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="orientation">To be added.</param>
        <param name="viewportSize">To be added.</param>
        <summary>The affine transform that can be used to convert from coordinates normalized to the range [0,1] into screen coordinates.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.ARKit.ARHitTestResult[] HitTest (MonoTouch.CoreGraphics.CGPoint point, MonoTouch.ARKit.ARHitTestResultType types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.ARKit.ARHitTestResult[] HitTest(valuetype MonoTouch.CoreGraphics.CGPoint point, valuetype MonoTouch.ARKit.ARHitTestResultType types) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("hitTest:types:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ARKit.ARHitTestResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        <Parameter Name="types" Type="MonoTouch.ARKit.ARHitTestResultType" />
      </Parameters>
      <Docs>
        <param name="point">Point, in image coordinates normalized to the range [0,0]-[1,1], to perform a hit-test.</param>
        <param name="types">To be added.</param>
        <summary>Returns real-world objects such as planes and <see cref="T:MonoTouch.ARKit.ARAnchor" /> objects in the ray projected from <paramref name="point" />.</summary>
        <returns>Objects are ordered from nearest to farthest.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightEstimate">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.ARKit.ARLightEstimate LightEstimate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.ARKit.ARLightEstimate LightEstimate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("lightEstimate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ARKit.ARLightEstimate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If not <see langword="null" />, gets an estimation of the real-world ambient lighting intensity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This property will be <see langword="null" /> unless <see cref="P:MonoTouch.ARKit.ARSessionConfiguration.LightEstimationEnabled" /> is <see langword="true" />.</para>
          <para>
            <see cref="T:MonoTouch.ARKit.ARSceneView" /> automatically incorporates this information into its rendering of SceneKit content.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawFeaturePoints">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.ARKit.ARPointCloud RawFeaturePoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.ARKit.ARPointCloud RawFeaturePoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("rawFeaturePoints")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.ARKit.ARPointCloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:MonoTouch.ARPointCloud" /> of the current frame..</summary>
        <value>To be added.</value>
        <remarks>
          <para>This property represents the notable features detected in the frame. These features are not necessarily stable between frames.</para>
          <para>This is the same data as is presented in <see cref="T:MonoTouch.ARKit.ARSceneView" /> when <see cref="P:MonoTouch.ARKit.ARSCNDebugOptions.ShowFeaturePoints" /> is <see langword="true" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public virtual double Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("timestamp")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A timespan, in seconds with sub-millisecond accuracy, indicating the capture time of the frame .</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>