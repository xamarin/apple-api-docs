<Type Name="SKTileMapNode" FullName="MonoTouch.SpriteKit.SKTileMapNode">
  <TypeSignature Language="C#" Value="public class SKTileMapNode : MonoTouch.SpriteKit.SKNode, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKTileMapNode extends MonoTouch.SpriteKit.SKNode implements class MonoTouch.Foundation.INSCoding, class MonoTouch.Foundation.INSCopying, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.SpriteKit.SKNode</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("SKTileMapNode", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.WatchOS, 3, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 12, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.TvOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/reference/SpriteKit/SKTileMapNode">Apple documentation for <c>SKTileMapNode</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKTileMapNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKTileMapNode (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:MonoTouch.Foundation.NSCoding" />  protocol.</para>
          <para>If you want to create a subclass of this object and continue to support deserialization from an archive, you should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:MonoTouch.Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKTileMapNode (MonoTouch.Foundation.NSObjectFlag t);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected SKTileMapNode (MonoTouch.Foundation.NSObjectFlag t);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When you invoke the constructor that takes the NSObjectFlag.Empty you taking advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to you.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is your responsibility to completely initialize the object if you chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if your constructors invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, you should instead chain to the proper constructor in your class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKTileMapNode (IntPtr handle);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected SKTileMapNode (IntPtr handle);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoTouch.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKTileMapNode (MonoTouch.SpriteKit.SKTileSet tileSet, uint columns, uint rows, System.Drawing.SizeF tileSize);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.SpriteKit.SKTileSet tileSet, unsigned int32 columns, unsigned int32 rows, valuetype System.Drawing.SizeF tileSize) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public SKTileMapNode (MonoTouch.SpriteKit.SKTileSet tileSet, nuint columns, nuint rows, MonoTouch.CoreGraphics.CGSize tileSize);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.SpriteKit.SKTileSet tileSet, valuetype System.nuint columns, valuetype System.nuint rows, valuetype MonoTouch.CoreGraphics.CGSize tileSize) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTileSet:columns:rows:tileSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tileSet" Type="MonoTouch.SpriteKit.SKTileSet" />
        <Parameter Name="columns" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rows" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="tileSize" Type="System.Drawing.SizeF" apistyle="classic" />
        <Parameter Name="columns" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rows" Type="System.nuint" apistyle="unified" />
        <Parameter Name="tileSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileSet">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="rows">To be added.</param>
        <param name="tileSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKTileMapNode (MonoTouch.SpriteKit.SKTileSet tileSet, uint columns, uint rows, System.Drawing.SizeF tileSize, MonoTouch.SpriteKit.SKTileGroup tileGroup);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.SpriteKit.SKTileSet tileSet, unsigned int32 columns, unsigned int32 rows, valuetype System.Drawing.SizeF tileSize, class MonoTouch.SpriteKit.SKTileGroup tileGroup) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public SKTileMapNode (MonoTouch.SpriteKit.SKTileSet tileSet, nuint columns, nuint rows, MonoTouch.CoreGraphics.CGSize tileSize, MonoTouch.SpriteKit.SKTileGroup tileGroup);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.SpriteKit.SKTileSet tileSet, valuetype System.nuint columns, valuetype System.nuint rows, valuetype MonoTouch.CoreGraphics.CGSize tileSize, class MonoTouch.SpriteKit.SKTileGroup tileGroup) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTileSet:columns:rows:tileSize:fillWithTileGroup:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tileSet" Type="MonoTouch.SpriteKit.SKTileSet" />
        <Parameter Name="columns" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rows" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="tileSize" Type="System.Drawing.SizeF" apistyle="classic" />
        <Parameter Name="tileGroup" Type="MonoTouch.SpriteKit.SKTileGroup" />
        <Parameter Name="columns" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rows" Type="System.nuint" apistyle="unified" />
        <Parameter Name="tileSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileSet">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="rows">To be added.</param>
        <param name="tileSize">To be added.</param>
        <param name="tileGroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKTileMapNode (MonoTouch.SpriteKit.SKTileSet tileSet, uint columns, uint rows, System.Drawing.SizeF tileSize, MonoTouch.SpriteKit.SKTileGroup[] tileGroupLayout);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.SpriteKit.SKTileSet tileSet, unsigned int32 columns, unsigned int32 rows, valuetype System.Drawing.SizeF tileSize, class MonoTouch.SpriteKit.SKTileGroup[] tileGroupLayout) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public SKTileMapNode (MonoTouch.SpriteKit.SKTileSet tileSet, nuint columns, nuint rows, MonoTouch.CoreGraphics.CGSize tileSize, MonoTouch.SpriteKit.SKTileGroup[] tileGroupLayout);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.SpriteKit.SKTileSet tileSet, valuetype System.nuint columns, valuetype System.nuint rows, valuetype MonoTouch.CoreGraphics.CGSize tileSize, class MonoTouch.SpriteKit.SKTileGroup[] tileGroupLayout) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTileSet:columns:rows:tileSize:tileGroupLayout:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tileSet" Type="MonoTouch.SpriteKit.SKTileSet" />
        <Parameter Name="columns" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rows" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="tileSize" Type="System.Drawing.SizeF" apistyle="classic" />
        <Parameter Name="tileGroupLayout" Type="MonoTouch.SpriteKit.SKTileGroup[]" />
        <Parameter Name="columns" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rows" Type="System.nuint" apistyle="unified" />
        <Parameter Name="tileSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileSet">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="rows">To be added.</param>
        <param name="tileSize">To be added.</param>
        <param name="tileGroupLayout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorPoint">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF AnchorPoint { get; set; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF AnchorPoint" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGPoint AnchorPoint { get; set; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.CoreGraphics.CGPoint AnchorPoint" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("anchorPoint")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setAnchorPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Drawing.PointF</ReturnType>
        <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendMode">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.SpriteKit.SKBlendMode BlendMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.SpriteKit.SKBlendMode BlendMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("blendMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setBlendMode:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKBlendMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoTouch class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIColor Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.UIKit.UIColor Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("color")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorBlendFactor">
      <MemberSignature Language="C#" Value="public virtual float ColorBlendFactor { get; set; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ColorBlendFactor" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual nfloat ColorBlendFactor { get; set; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ColorBlendFactor" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("colorBlendFactor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setColorBlendFactor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Single</ReturnType>
        <ReturnType apistyle="unified">System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject Copy (MonoTouch.Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSObject Copy(class MonoTouch.Foundation.NSZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="MonoTouch.Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">Zone to use to allocate this object, or null to use the default zone.</param>
        <summary>Performs a copy of the underlying Objective-C object.</summary>
        <returns>This method performs a copy of the underlying Objective-C object state and returns a new instance of it.  It does not actually try to replicate any managed state.</returns>
        <remarks>Implementation of the INSCopyable interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MonoTouch.SpriteKit.SKTileMapNode Create (MonoTouch.SpriteKit.SKTileSet tileSet, uint columns, uint rows, System.Drawing.SizeF tileSize);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SpriteKit.SKTileMapNode Create(class MonoTouch.SpriteKit.SKTileSet tileSet, unsigned int32 columns, unsigned int32 rows, valuetype System.Drawing.SizeF tileSize) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static MonoTouch.SpriteKit.SKTileMapNode Create (MonoTouch.SpriteKit.SKTileSet tileSet, nuint columns, nuint rows, MonoTouch.CoreGraphics.CGSize tileSize);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SpriteKit.SKTileMapNode Create(class MonoTouch.SpriteKit.SKTileSet tileSet, valuetype System.nuint columns, valuetype System.nuint rows, valuetype MonoTouch.CoreGraphics.CGSize tileSize) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tileMapNodeWithTileSet:columns:rows:tileSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKTileMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileSet" Type="MonoTouch.SpriteKit.SKTileSet" />
        <Parameter Name="columns" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rows" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="tileSize" Type="System.Drawing.SizeF" apistyle="classic" />
        <Parameter Name="columns" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rows" Type="System.nuint" apistyle="unified" />
        <Parameter Name="tileSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileSet">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="rows">To be added.</param>
        <param name="tileSize">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MonoTouch.SpriteKit.SKTileMapNode Create (MonoTouch.SpriteKit.SKTileSet tileSet, uint columns, uint rows, System.Drawing.SizeF tileSize, MonoTouch.SpriteKit.SKTileGroup tileGroup);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SpriteKit.SKTileMapNode Create(class MonoTouch.SpriteKit.SKTileSet tileSet, unsigned int32 columns, unsigned int32 rows, valuetype System.Drawing.SizeF tileSize, class MonoTouch.SpriteKit.SKTileGroup tileGroup) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static MonoTouch.SpriteKit.SKTileMapNode Create (MonoTouch.SpriteKit.SKTileSet tileSet, nuint columns, nuint rows, MonoTouch.CoreGraphics.CGSize tileSize, MonoTouch.SpriteKit.SKTileGroup tileGroup);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SpriteKit.SKTileMapNode Create(class MonoTouch.SpriteKit.SKTileSet tileSet, valuetype System.nuint columns, valuetype System.nuint rows, valuetype MonoTouch.CoreGraphics.CGSize tileSize, class MonoTouch.SpriteKit.SKTileGroup tileGroup) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tileMapNodeWithTileSet:columns:rows:tileSize:fillWithTileGroup:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKTileMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileSet" Type="MonoTouch.SpriteKit.SKTileSet" />
        <Parameter Name="columns" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rows" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="tileSize" Type="System.Drawing.SizeF" apistyle="classic" />
        <Parameter Name="tileGroup" Type="MonoTouch.SpriteKit.SKTileGroup" />
        <Parameter Name="columns" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rows" Type="System.nuint" apistyle="unified" />
        <Parameter Name="tileSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileSet">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="rows">To be added.</param>
        <param name="tileSize">To be added.</param>
        <param name="tileGroup">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MonoTouch.SpriteKit.SKTileMapNode Create (MonoTouch.SpriteKit.SKTileSet tileSet, uint columns, uint rows, System.Drawing.SizeF tileSize, MonoTouch.SpriteKit.SKTileGroup[] tileGroupLayout);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SpriteKit.SKTileMapNode Create(class MonoTouch.SpriteKit.SKTileSet tileSet, unsigned int32 columns, unsigned int32 rows, valuetype System.Drawing.SizeF tileSize, class MonoTouch.SpriteKit.SKTileGroup[] tileGroupLayout) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static MonoTouch.SpriteKit.SKTileMapNode Create (MonoTouch.SpriteKit.SKTileSet tileSet, nuint columns, nuint rows, MonoTouch.CoreGraphics.CGSize tileSize, MonoTouch.SpriteKit.SKTileGroup[] tileGroupLayout);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SpriteKit.SKTileMapNode Create(class MonoTouch.SpriteKit.SKTileSet tileSet, valuetype System.nuint columns, valuetype System.nuint rows, valuetype MonoTouch.CoreGraphics.CGSize tileSize, class MonoTouch.SpriteKit.SKTileGroup[] tileGroupLayout) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tileMapNodeWithTileSet:columns:rows:tileSize:tileGroupLayout:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKTileMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileSet" Type="MonoTouch.SpriteKit.SKTileSet" />
        <Parameter Name="columns" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rows" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="tileSize" Type="System.Drawing.SizeF" apistyle="classic" />
        <Parameter Name="tileGroupLayout" Type="MonoTouch.SpriteKit.SKTileGroup[]" />
        <Parameter Name="columns" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rows" Type="System.nuint" apistyle="unified" />
        <Parameter Name="tileSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileSet">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="rows">To be added.</param>
        <param name="tileSize">To be added.</param>
        <param name="tileGroupLayout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the SKTileMapNode object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the SKTileMapNode class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when you are finished using the SKTileMapNode ensures that all external resources used by this managed object are released as soon as possible.  Once you have invoked the Dispose method, the object is no longer useful and you should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutomapping">
      <MemberSignature Language="C#" Value="public virtual bool EnableAutomapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutomapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("enableAutomapping")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setEnableAutomapping:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (MonoTouch.Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class MonoTouch.Foundation.NSCoder encoder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">The encoder object where the state of the object will be stored</param>
        <summary>Encodes the state of the object on the provided encoder</summary>
        <remarks>
          <para>This method is part of the <see cref="T:MonoTouch.Foundation.NSCoding" /> protocol and is used by applications to preserve the state of the object into an archive.</para>
          <para>Users will typically create a <see cref="T:MonoTouch.Foundation.NSKeyedArchived" /> and then invoke the <see cref="M:MonoTouch.Foundation.NSKeyedArchived.ArchiveRootObjectToFile" /> which will call into this method</para>
          <para>If you want to allow your object to be archived, you should override this method and store your state in using the provided <paramref name="encoder" /> parameter.   In addition, you should also implement a constructor that takes an NSCoder argument and is exported with [Export ("initWithCoder:")]</para>
          <example>
            <code lang="c#">public void override EncodeTo (NSCoder coder){
    c.Encode (1, key: "version");
    c.Encode (userName, key: "userName");
    c.Encode (hostName, key: "hostName");</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public virtual void Fill (MonoTouch.SpriteKit.SKTileGroup tileGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fill(class MonoTouch.SpriteKit.SKTileGroup tileGroup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("fillWithTileGroup:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileGroup" Type="MonoTouch.SpriteKit.SKTileGroup" />
      </Parameters>
      <Docs>
        <param name="tileGroup">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTileSet">
      <MemberSignature Language="C#" Value="public static MonoTouch.SpriteKit.SKTileMapNode[] FromTileSet (MonoTouch.SpriteKit.SKTileSet tileSet, uint columns, uint rows, System.Drawing.SizeF tileSize, MonoTouch.GameplayKit.GKNoiseMap noiseMap, MonoTouch.Foundation.NSNumber[] thresholds);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SpriteKit.SKTileMapNode[] FromTileSet(class MonoTouch.SpriteKit.SKTileSet tileSet, unsigned int32 columns, unsigned int32 rows, valuetype System.Drawing.SizeF tileSize, class MonoTouch.GameplayKit.GKNoiseMap noiseMap, class MonoTouch.Foundation.NSNumber[] thresholds) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static MonoTouch.SpriteKit.SKTileMapNode[] FromTileSet (MonoTouch.SpriteKit.SKTileSet tileSet, nuint columns, nuint rows, MonoTouch.CoreGraphics.CGSize tileSize, MonoTouch.GameplayKit.GKNoiseMap noiseMap, MonoTouch.Foundation.NSNumber[] thresholds);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SpriteKit.SKTileMapNode[] FromTileSet(class MonoTouch.SpriteKit.SKTileSet tileSet, valuetype System.nuint columns, valuetype System.nuint rows, valuetype MonoTouch.CoreGraphics.CGSize tileSize, class MonoTouch.GameplayKit.GKNoiseMap noiseMap, class MonoTouch.Foundation.NSNumber[] thresholds) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tileMapNodesWithTileSet:columns:rows:tileSize:fromNoiseMap:tileTypeNoiseMapThresholds:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.TvOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 12, MonoTouch.ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.WatchOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKTileMapNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileSet" Type="MonoTouch.SpriteKit.SKTileSet" />
        <Parameter Name="columns" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rows" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="tileSize" Type="System.Drawing.SizeF" apistyle="classic" />
        <Parameter Name="noiseMap" Type="MonoTouch.GameplayKit.GKNoiseMap" />
        <Parameter Name="thresholds" Type="MonoTouch.Foundation.NSNumber[]" />
        <Parameter Name="columns" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rows" Type="System.nuint" apistyle="unified" />
        <Parameter Name="tileSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileSet">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="rows">To be added.</param>
        <param name="tileSize">To be added.</param>
        <param name="noiseMap">To be added.</param>
        <param name="thresholds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCenterOfTile">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF GetCenterOfTile (uint column, uint row);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.PointF GetCenterOfTile(unsigned int32 column, unsigned int32 row) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGPoint GetCenterOfTile (nuint column, nuint row);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreGraphics.CGPoint GetCenterOfTile(valuetype System.nuint column, valuetype System.nuint row) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("centerOfTileAtColumn:row:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Drawing.PointF</ReturnType>
        <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="row" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="column" Type="System.nuint" apistyle="unified" />
        <Parameter Name="row" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="row">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTileColumnIndex">
      <MemberSignature Language="C#" Value="public virtual uint GetTileColumnIndex (System.Drawing.PointF position);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 GetTileColumnIndex(valuetype System.Drawing.PointF position) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual nuint GetTileColumnIndex (MonoTouch.CoreGraphics.CGPoint position);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint GetTileColumnIndex(valuetype MonoTouch.CoreGraphics.CGPoint position) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tileColumnIndexFromPosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Drawing.PointF" apistyle="classic" />
        <Parameter Name="position" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTileDefinition">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.SpriteKit.SKTileDefinition GetTileDefinition (uint column, uint row);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.SpriteKit.SKTileDefinition GetTileDefinition(unsigned int32 column, unsigned int32 row) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual MonoTouch.SpriteKit.SKTileDefinition GetTileDefinition (nuint column, nuint row);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.SpriteKit.SKTileDefinition GetTileDefinition(valuetype System.nuint column, valuetype System.nuint row) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tileDefinitionAtColumn:row:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKTileDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="row" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="column" Type="System.nuint" apistyle="unified" />
        <Parameter Name="row" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="row">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTileGroup">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.SpriteKit.SKTileGroup GetTileGroup (uint column, uint row);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.SpriteKit.SKTileGroup GetTileGroup(unsigned int32 column, unsigned int32 row) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual MonoTouch.SpriteKit.SKTileGroup GetTileGroup (nuint column, nuint row);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.SpriteKit.SKTileGroup GetTileGroup(valuetype System.nuint column, valuetype System.nuint row) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tileGroupAtColumn:row:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKTileGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="row" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="column" Type="System.nuint" apistyle="unified" />
        <Parameter Name="row" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="row">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTileRowIndex">
      <MemberSignature Language="C#" Value="public virtual uint GetTileRowIndex (System.Drawing.PointF position);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 GetTileRowIndex(valuetype System.Drawing.PointF position) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual nuint GetTileRowIndex (MonoTouch.CoreGraphics.CGPoint position);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint GetTileRowIndex(valuetype MonoTouch.CoreGraphics.CGPoint position) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("tileRowIndexFromPosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Drawing.PointF" apistyle="classic" />
        <Parameter Name="position" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightingBitMask">
      <MemberSignature Language="C#" Value="public virtual uint LightingBitMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 LightingBitMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("lightingBitMask")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLightingBitMask:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF MapSize { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF MapSize" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGSize MapSize { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.CoreGraphics.CGSize MapSize" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("mapSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
        <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfColumns">
      <MemberSignature Language="C#" Value="public virtual uint NumberOfColumns { get; set; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumberOfColumns" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual nuint NumberOfColumns { get; set; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumberOfColumns" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("numberOfColumns")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setNumberOfColumns:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfRows">
      <MemberSignature Language="C#" Value="public virtual uint NumberOfRows { get; set; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumberOfRows" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual nuint NumberOfRows { get; set; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumberOfRows" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("numberOfRows")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setNumberOfRows:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTileGroup">
      <MemberSignature Language="C#" Value="public virtual void SetTileGroup (MonoTouch.SpriteKit.SKTileGroup tileGroup, uint column, uint row);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTileGroup(class MonoTouch.SpriteKit.SKTileGroup tileGroup, unsigned int32 column, unsigned int32 row) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual void SetTileGroup (MonoTouch.SpriteKit.SKTileGroup tileGroup, nuint column, nuint row);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTileGroup(class MonoTouch.SpriteKit.SKTileGroup tileGroup, valuetype System.nuint column, valuetype System.nuint row) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setTileGroup:forColumn:row:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileGroup" Type="MonoTouch.SpriteKit.SKTileGroup" />
        <Parameter Name="column" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="row" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="column" Type="System.nuint" apistyle="unified" />
        <Parameter Name="row" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileGroup">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="column">To be added.</param>
        <param name="row">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTileGroup">
      <MemberSignature Language="C#" Value="public virtual void SetTileGroup (MonoTouch.SpriteKit.SKTileGroup tileGroup, MonoTouch.SpriteKit.SKTileDefinition tileDefinition, uint column, uint row);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTileGroup(class MonoTouch.SpriteKit.SKTileGroup tileGroup, class MonoTouch.SpriteKit.SKTileDefinition tileDefinition, unsigned int32 column, unsigned int32 row) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual void SetTileGroup (MonoTouch.SpriteKit.SKTileGroup tileGroup, MonoTouch.SpriteKit.SKTileDefinition tileDefinition, nuint column, nuint row);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTileGroup(class MonoTouch.SpriteKit.SKTileGroup tileGroup, class MonoTouch.SpriteKit.SKTileDefinition tileDefinition, valuetype System.nuint column, valuetype System.nuint row) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setTileGroup:andTileDefinition:forColumn:row:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tileGroup" Type="MonoTouch.SpriteKit.SKTileGroup" />
        <Parameter Name="tileDefinition" Type="MonoTouch.SpriteKit.SKTileDefinition" />
        <Parameter Name="column" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="row" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="column" Type="System.nuint" apistyle="unified" />
        <Parameter Name="row" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="tileGroup">To be added.</param>
        <param name="tileDefinition">To be added.</param>
        <param name="column">To be added.</param>
        <param name="row">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shader">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.SpriteKit.SKShader Shader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.SpriteKit.SKShader Shader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("shader")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setShader:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKShader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSet">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.SpriteKit.SKTileSet TileSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.SpriteKit.SKTileSet TileSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("tileSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTileSet:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.SpriteKit.SKTileSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF TileSize { get; set; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF TileSize" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGSize TileSize { get; set; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.CoreGraphics.CGSize TileSize" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("tileSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTileSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
        <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
