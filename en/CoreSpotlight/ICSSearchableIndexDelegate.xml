<Type Name="ICSSearchableIndexDelegate" FullName="CoreSpotlight.ICSSearchableIndexDelegate">
  <TypeSignature Language="C#" Value="public interface ICSSearchableIndexDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICSSearchableIndexDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreSpotlight.ICSSearchableIndexDelegate" />
  <TypeSignature Language="F#" Value="type ICSSearchableIndexDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="CSSearchableIndexDelegate", WrapperType=typeof(CoreSpotlight.CSSearchableIndexDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReindexAllSearchableItems", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReindexSearchableItems", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidThrottle", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="searchableIndexDidThrottle:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidFinishThrottle", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="searchableIndexDidFinishThrottle:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetData", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(Foundation.NSData), Selector="dataForSearchableIndex:itemIdentifier:typeIdentifier:error:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetFileUrl", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(Foundation.NSUrl), Selector="fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReindexAllSearchableItems", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(CoreSpotlight.CSSearchableIndex), typeof(System.Action) }, Selector="searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReindexSearchableItems", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(CoreSpotlight.CSSearchableIndex), typeof(System.String[]), typeof(System.Action) }, Selector="searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidThrottle", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(CoreSpotlight.CSSearchableIndex) }, Selector="searchableIndexDidThrottle:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidFinishThrottle", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(CoreSpotlight.CSSearchableIndex) }, Selector="searchableIndexDidFinishThrottle:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetData", ParameterByRef=new System.Boolean[] { false, false, false, true }, ParameterType=new System.Type[] { typeof(CoreSpotlight.CSSearchableIndex), typeof(System.String), typeof(System.String), typeof(Foundation.NSError) }, ReturnType=typeof(Foundation.NSData), Selector="dataForSearchableIndex:itemIdentifier:typeIdentifier:error:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetFileUrl", ParameterByRef=new System.Boolean[] { false, false, false, false, true }, ParameterType=new System.Type[] { typeof(CoreSpotlight.CSSearchableIndex), typeof(System.String), typeof(System.String), typeof(System.Boolean), typeof(Foundation.NSError) }, ReturnType=typeof(Foundation.NSUrl), Selector="fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:CoreSpotlight.CSSearchableIndexDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:CoreSpotlight.CSSearchableIndexDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:CoreSpotlight.CSSearchableIndexDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:CoreSpotlight.CSSearchableIndexDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReindexAllSearchableItems">
      <MemberSignature Language="C#" Value="public void ReindexAllSearchableItems (CoreSpotlight.CSSearchableIndex searchableIndex, Action acknowledgementHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReindexAllSearchableItems(class CoreSpotlight.CSSearchableIndex searchableIndex, class System.Action acknowledgementHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreSpotlight.ICSSearchableIndexDelegate.ReindexAllSearchableItems(CoreSpotlight.CSSearchableIndex,System.Action)" />
      <MemberSignature Language="F#" Value="abstract member ReindexAllSearchableItems : CoreSpotlight.CSSearchableIndex * Action -&gt; unit" Usage="iCSSearchableIndexDelegate.ReindexAllSearchableItems (searchableIndex, acknowledgementHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchableIndex" Type="CoreSpotlight.CSSearchableIndex" />
        <Parameter Name="acknowledgementHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="searchableIndex">To be added.</param>
        <param name="acknowledgementHandler">To be added.</param>
        <summary>Reindexes all items in the specified index and runs <paramref name="acknowledgementHandler" /> when finished.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReindexSearchableItems">
      <MemberSignature Language="C#" Value="public void ReindexSearchableItems (CoreSpotlight.CSSearchableIndex searchableIndex, string[] identifiers, Action acknowledgementHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReindexSearchableItems(class CoreSpotlight.CSSearchableIndex searchableIndex, string[] identifiers, class System.Action acknowledgementHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreSpotlight.ICSSearchableIndexDelegate.ReindexSearchableItems(CoreSpotlight.CSSearchableIndex,System.String[],System.Action)" />
      <MemberSignature Language="F#" Value="abstract member ReindexSearchableItems : CoreSpotlight.CSSearchableIndex * string[] * Action -&gt; unit" Usage="iCSSearchableIndexDelegate.ReindexSearchableItems (searchableIndex, identifiers, acknowledgementHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchableIndex" Type="CoreSpotlight.CSSearchableIndex" />
        <Parameter Name="identifiers" Type="System.String[]" />
        <Parameter Name="acknowledgementHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="searchableIndex">To be added.</param>
        <param name="identifiers">To be added.</param>
        <param name="acknowledgementHandler">To be added.</param>
        <summary>Reindexes the specified items in the specified index and runs <paramref name="acknowledgementHandler" /> when finished.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
