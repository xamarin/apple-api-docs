<Type Name="HKWorkout" FullName="HealthKit.HKWorkout">
  <TypeSignature Language="C#" Value="public class HKWorkout : HealthKit.HKSample" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HKWorkout extends HealthKit.HKSample" />
  <TypeSignature Language="DocId" Value="T:HealthKit.HKWorkout" />
  <TypeSignature Language="F#" Value="type HKWorkout = class&#xA;    inherit HKSample" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>HealthKit.HKSample</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("HKWorkout", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 2, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An <see cref="T:HealthKit.HKSample" /> that represents a physical workout.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/HealthKit/Reference/HKWorkout_Class/index.html">Apple documentation for <c>HKWorkout</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HKWorkout (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new HealthKit.HKWorkout : Foundation.NSCoder -&gt; HealthKit.HKWorkout" Usage="new HealthKit.HKWorkout coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HKWorkout (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new HealthKit.HKWorkout : Foundation.NSObjectFlag -&gt; HealthKit.HKWorkout" Usage="new HealthKit.HKWorkout t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal HKWorkout (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new HealthKit.HKWorkout : nativeint -&gt; HealthKit.HKWorkout" Usage="new HealthKit.HKWorkout handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="HealthKit.HKWorkout.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("workoutWithActivityType:startDate:endDate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <summary>Creates an activity that lasts from <paramref name="startDate" /> to <paramref name="endDate" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, HealthKit.HKWorkoutEvent[] workoutEvents, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, Foundation.NSDictionary metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, class HealthKit.HKWorkoutEvent[] workoutEvents, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class Foundation.NSDictionary metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,HealthKit.HKWorkoutEvent[],HealthKit.HKQuantity,HealthKit.HKQuantity,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * HealthKit.HKWorkoutEvent[] * HealthKit.HKQuantity * HealthKit.HKQuantity * Foundation.NSDictionary -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, workoutEvents, totalEnergyBurned, totalDistance, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:metadata:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="workoutEvents" Type="HealthKit.HKWorkoutEvent[]" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="workoutEvents">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalEnergyBurned">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalDistance">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="metadata">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates an activity that lasts from <paramref name="startDate" /> to <paramref name="endDate" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, HealthKit.HKWorkoutEvent[] workoutEvents, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, class HealthKit.HKWorkoutEvent[] workoutEvents, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,HealthKit.HKWorkoutEvent[],HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKMetadata)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * HealthKit.HKWorkoutEvent[] * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKMetadata -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, workoutEvents, totalEnergyBurned, totalDistance, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="workoutEvents" Type="HealthKit.HKWorkoutEvent[]" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="metadata" Type="HealthKit.HKMetadata" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="workoutEvents">To be added.</param>
        <param name="totalEnergyBurned">To be added.</param>
        <param name="totalDistance">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>Creates an activity that lasts from <paramref name="startDate" /> to <paramref name="endDate" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, double duration, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, Foundation.NSDictionary metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, float64 duration, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class Foundation.NSDictionary metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,System.Double,HealthKit.HKQuantity,HealthKit.HKQuantity,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * double * HealthKit.HKQuantity * HealthKit.HKQuantity * Foundation.NSDictionary -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, duration, totalEnergyBurned, totalDistance, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:metadata:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="duration" Type="System.Double" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="totalEnergyBurned">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalDistance">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="metadata">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates an activity that lasts from <paramref name="startDate" /> to <paramref name="endDate" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, double duration, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, float64 duration, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,System.Double,HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKMetadata)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * double * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKMetadata -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, duration, totalEnergyBurned, totalDistance, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="duration" Type="System.Double" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="metadata" Type="HealthKit.HKMetadata" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="totalEnergyBurned">To be added.</param>
        <param name="totalDistance">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>Creates an activity that lasts from <paramref name="startDate" /> to <paramref name="endDate" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, HealthKit.HKWorkoutEvent[] workoutEvents, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKDevice device, Foundation.NSDictionary metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, class HealthKit.HKWorkoutEvent[] workoutEvents, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKDevice device, class Foundation.NSDictionary metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,HealthKit.HKWorkoutEvent[],HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKDevice,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * HealthKit.HKWorkoutEvent[] * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKDevice * Foundation.NSDictionary -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, workoutEvents, totalEnergyBurned, totalDistance, device, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:device:metadata:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="workoutEvents" Type="HealthKit.HKWorkoutEvent[]" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="device" Type="HealthKit.HKDevice" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="workoutEvents">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalEnergyBurned">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalDistance">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="device">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="metadata">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates and returns a new <see cref="T:HealthKit.HKWorkout" /> with the provide values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, HealthKit.HKWorkoutEvent[] workoutEvents, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKDevice device, HealthKit.HKMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, class HealthKit.HKWorkoutEvent[] workoutEvents, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKDevice device, class HealthKit.HKMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,HealthKit.HKWorkoutEvent[],HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKDevice,HealthKit.HKMetadata)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * HealthKit.HKWorkoutEvent[] * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKDevice * HealthKit.HKMetadata -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, workoutEvents, totalEnergyBurned, totalDistance, device, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="workoutEvents" Type="HealthKit.HKWorkoutEvent[]" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="device" Type="HealthKit.HKDevice" />
        <Parameter Name="metadata" Type="HealthKit.HKMetadata" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="workoutEvents">To be added.</param>
        <param name="totalEnergyBurned">To be added.</param>
        <param name="totalDistance">To be added.</param>
        <param name="device">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>Creates and returns a new <see cref="T:HealthKit.HKWorkout" /> with the provide values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, double duration, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKDevice device, Foundation.NSDictionary metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, float64 duration, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKDevice device, class Foundation.NSDictionary metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,System.Double,HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKDevice,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * double * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKDevice * Foundation.NSDictionary -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, duration, totalEnergyBurned, totalDistance, device, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:device:metadata:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="duration" Type="System.Double" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="device" Type="HealthKit.HKDevice" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="totalEnergyBurned">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalDistance">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="device">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="metadata">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates and returns a new <see cref="T:HealthKit.HKWorkout" /> with the provide values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, double duration, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKDevice device, HealthKit.HKMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, float64 duration, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKDevice device, class HealthKit.HKMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,System.Double,HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKDevice,HealthKit.HKMetadata)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * double * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKDevice * HealthKit.HKMetadata -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, duration, totalEnergyBurned, totalDistance, device, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="duration" Type="System.Double" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="device" Type="HealthKit.HKDevice" />
        <Parameter Name="metadata" Type="HealthKit.HKMetadata" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="totalEnergyBurned">To be added.</param>
        <param name="totalDistance">To be added.</param>
        <param name="device">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>Creates and returns a new <see cref="T:HealthKit.HKWorkout" /> with the provide values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, HealthKit.HKWorkoutEvent[] workoutEvents, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKQuantity totalSwimmingStrokeCount, HealthKit.HKDevice device, Foundation.NSDictionary metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, class HealthKit.HKWorkoutEvent[] workoutEvents, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKQuantity totalSwimmingStrokeCount, class HealthKit.HKDevice device, class Foundation.NSDictionary metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,HealthKit.HKWorkoutEvent[],HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKDevice,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * HealthKit.HKWorkoutEvent[] * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKDevice * Foundation.NSDictionary -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, workoutEvents, totalEnergyBurned, totalDistance, totalSwimmingStrokeCount, device, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalSwimmingStrokeCount:device:metadata:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="workoutEvents" Type="HealthKit.HKWorkoutEvent[]" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalSwimmingStrokeCount" Type="HealthKit.HKQuantity" />
        <Parameter Name="device" Type="HealthKit.HKDevice" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="workoutEvents">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalEnergyBurned">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalDistance">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalSwimmingStrokeCount">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="device">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="metadata">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates and returns a new <see cref="T:HealthKit.HKWorkout" /> with the provide values..</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout Create (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, HealthKit.HKWorkoutEvent[] workoutEvents, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKQuantity totalSwimmingStrokeCount, HealthKit.HKDevice device, HealthKit.HKMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout Create(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, class HealthKit.HKWorkoutEvent[] workoutEvents, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKQuantity totalSwimmingStrokeCount, class HealthKit.HKDevice device, class HealthKit.HKMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.Create(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,HealthKit.HKWorkoutEvent[],HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKDevice,HealthKit.HKMetadata)" />
      <MemberSignature Language="F#" Value="static member Create : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * HealthKit.HKWorkoutEvent[] * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKDevice * HealthKit.HKMetadata -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.Create (workoutActivityType, startDate, endDate, workoutEvents, totalEnergyBurned, totalDistance, totalSwimmingStrokeCount, device, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="workoutEvents" Type="HealthKit.HKWorkoutEvent[]" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalSwimmingStrokeCount" Type="HealthKit.HKQuantity" />
        <Parameter Name="device" Type="HealthKit.HKDevice" />
        <Parameter Name="metadata" Type="HealthKit.HKMetadata" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="workoutEvents">To be added.</param>
        <param name="totalEnergyBurned">To be added.</param>
        <param name="totalDistance">To be added.</param>
        <param name="totalSwimmingStrokeCount">To be added.</param>
        <param name="device">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>Creates and returns a new <see cref="T:HealthKit.HKWorkout" /> with the provide values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFlightsClimbedWorkout">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout CreateFlightsClimbedWorkout (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, HealthKit.HKWorkoutEvent[] workoutEvents, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKQuantity totalFlightsClimbed, HealthKit.HKDevice device, Foundation.NSDictionary metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout CreateFlightsClimbedWorkout(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, class HealthKit.HKWorkoutEvent[] workoutEvents, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKQuantity totalFlightsClimbed, class HealthKit.HKDevice device, class Foundation.NSDictionary metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.CreateFlightsClimbedWorkout(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,HealthKit.HKWorkoutEvent[],HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKDevice,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member CreateFlightsClimbedWorkout : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * HealthKit.HKWorkoutEvent[] * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKDevice * Foundation.NSDictionary -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.CreateFlightsClimbedWorkout (workoutActivityType, startDate, endDate, workoutEvents, totalEnergyBurned, totalDistance, totalFlightsClimbed, device, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalFlightsClimbed:device:metadata:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="workoutEvents" Type="HealthKit.HKWorkoutEvent[]" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalFlightsClimbed" Type="HealthKit.HKQuantity" />
        <Parameter Name="device" Type="HealthKit.HKDevice" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="workoutEvents">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalEnergyBurned">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalDistance">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="totalFlightsClimbed">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="device">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="metadata">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFlightsClimbedWorkout">
      <MemberSignature Language="C#" Value="public static HealthKit.HKWorkout CreateFlightsClimbedWorkout (HealthKit.HKWorkoutActivityType workoutActivityType, Foundation.NSDate startDate, Foundation.NSDate endDate, HealthKit.HKWorkoutEvent[] workoutEvents, HealthKit.HKQuantity totalEnergyBurned, HealthKit.HKQuantity totalDistance, HealthKit.HKQuantity totalFlightsClimbed, HealthKit.HKDevice device, HealthKit.HKMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKWorkout CreateFlightsClimbedWorkout(valuetype HealthKit.HKWorkoutActivityType workoutActivityType, class Foundation.NSDate startDate, class Foundation.NSDate endDate, class HealthKit.HKWorkoutEvent[] workoutEvents, class HealthKit.HKQuantity totalEnergyBurned, class HealthKit.HKQuantity totalDistance, class HealthKit.HKQuantity totalFlightsClimbed, class HealthKit.HKDevice device, class HealthKit.HKMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKWorkout.CreateFlightsClimbedWorkout(HealthKit.HKWorkoutActivityType,Foundation.NSDate,Foundation.NSDate,HealthKit.HKWorkoutEvent[],HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKQuantity,HealthKit.HKDevice,HealthKit.HKMetadata)" />
      <MemberSignature Language="F#" Value="static member CreateFlightsClimbedWorkout : HealthKit.HKWorkoutActivityType * Foundation.NSDate * Foundation.NSDate * HealthKit.HKWorkoutEvent[] * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKQuantity * HealthKit.HKDevice * HealthKit.HKMetadata -&gt; HealthKit.HKWorkout" Usage="HealthKit.HKWorkout.CreateFlightsClimbedWorkout (workoutActivityType, startDate, endDate, workoutEvents, totalEnergyBurned, totalDistance, totalFlightsClimbed, device, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workoutActivityType" Type="HealthKit.HKWorkoutActivityType" />
        <Parameter Name="startDate" Type="Foundation.NSDate" />
        <Parameter Name="endDate" Type="Foundation.NSDate" />
        <Parameter Name="workoutEvents" Type="HealthKit.HKWorkoutEvent[]" />
        <Parameter Name="totalEnergyBurned" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalDistance" Type="HealthKit.HKQuantity" />
        <Parameter Name="totalFlightsClimbed" Type="HealthKit.HKQuantity" />
        <Parameter Name="device" Type="HealthKit.HKDevice" />
        <Parameter Name="metadata" Type="HealthKit.HKMetadata" />
      </Parameters>
      <Docs>
        <param name="workoutActivityType">To be added.</param>
        <param name="startDate">To be added.</param>
        <param name="endDate">To be added.</param>
        <param name="workoutEvents">To be added.</param>
        <param name="totalEnergyBurned">To be added.</param>
        <param name="totalDistance">To be added.</param>
        <param name="totalFlightsClimbed">To be added.</param>
        <param name="device">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual double Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Duration" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : double" Usage="HealthKit.HKWorkout.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("duration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the duration of the workout.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortIdentifierDuration">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SortIdentifierDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SortIdentifierDuration" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.SortIdentifierDuration" />
      <MemberSignature Language="F#" Value="member this.SortIdentifierDuration : Foundation.NSString" Usage="HealthKit.HKWorkout.SortIdentifierDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("HKWorkoutSortIdentifierDuration", "HealthKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant HKWorkoutSortIdentifierDuration</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortIdentifierTotalDistance">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SortIdentifierTotalDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SortIdentifierTotalDistance" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.SortIdentifierTotalDistance" />
      <MemberSignature Language="F#" Value="member this.SortIdentifierTotalDistance : Foundation.NSString" Usage="HealthKit.HKWorkout.SortIdentifierTotalDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("HKWorkoutSortIdentifierTotalDistance", "HealthKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant HKWorkoutSortIdentifierTotalDistance</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortIdentifierTotalEnergyBurned">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SortIdentifierTotalEnergyBurned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SortIdentifierTotalEnergyBurned" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.SortIdentifierTotalEnergyBurned" />
      <MemberSignature Language="F#" Value="member this.SortIdentifierTotalEnergyBurned : Foundation.NSString" Usage="HealthKit.HKWorkout.SortIdentifierTotalEnergyBurned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("HKWorkoutSortIdentifierTotalEnergyBurned", "HealthKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant HKWorkoutSortIdentifierTotalEnergyBurned</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortIdentifierTotalFlightsClimbed">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SortIdentifierTotalFlightsClimbed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SortIdentifierTotalFlightsClimbed" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.SortIdentifierTotalFlightsClimbed" />
      <MemberSignature Language="F#" Value="member this.SortIdentifierTotalFlightsClimbed : Foundation.NSString" Usage="HealthKit.HKWorkout.SortIdentifierTotalFlightsClimbed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("HKWorkoutSortIdentifierTotalFlightsClimbed", "HealthKit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortIdentifierTotalSwimmingStrokeCount">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SortIdentifierTotalSwimmingStrokeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SortIdentifierTotalSwimmingStrokeCount" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.SortIdentifierTotalSwimmingStrokeCount" />
      <MemberSignature Language="F#" Value="member this.SortIdentifierTotalSwimmingStrokeCount : Foundation.NSString" Usage="HealthKit.HKWorkout.SortIdentifierTotalSwimmingStrokeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("HKWorkoutSortIdentifierTotalSwimmingStrokeCount", "HealthKit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value that is associated with the HKWorkoutSortIdentifierTotalSwimmingStrokeCount constant.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalDistance">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKQuantity TotalDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class HealthKit.HKQuantity TotalDistance" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.TotalDistance" />
      <MemberSignature Language="F#" Value="member this.TotalDistance : HealthKit.HKQuantity" Usage="HealthKit.HKWorkout.TotalDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("totalDistance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("totalDistance", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKQuantity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total distance of the workout.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalEnergyBurned">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKQuantity TotalEnergyBurned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class HealthKit.HKQuantity TotalEnergyBurned" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.TotalEnergyBurned" />
      <MemberSignature Language="F#" Value="member this.TotalEnergyBurned : HealthKit.HKQuantity" Usage="HealthKit.HKWorkout.TotalEnergyBurned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("totalEnergyBurned")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("totalEnergyBurned", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKQuantity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total energy burned by the workout.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalFlightsClimbed">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKQuantity TotalFlightsClimbed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class HealthKit.HKQuantity TotalFlightsClimbed" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.TotalFlightsClimbed" />
      <MemberSignature Language="F#" Value="member this.TotalFlightsClimbed : HealthKit.HKQuantity" Usage="HealthKit.HKWorkout.TotalFlightsClimbed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("totalFlightsClimbed")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("totalFlightsClimbed", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKQuantity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalSwimmingStrokeCount">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKQuantity TotalSwimmingStrokeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class HealthKit.HKQuantity TotalSwimmingStrokeCount" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.TotalSwimmingStrokeCount" />
      <MemberSignature Language="F#" Value="member this.TotalSwimmingStrokeCount : HealthKit.HKQuantity" Usage="HealthKit.HKWorkout.TotalSwimmingStrokeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("totalSwimmingStrokeCount")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("totalSwimmingStrokeCount", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKQuantity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total number of swimming strokes.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkoutActivityType">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKWorkoutActivityType WorkoutActivityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype HealthKit.HKWorkoutActivityType WorkoutActivityType" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.WorkoutActivityType" />
      <MemberSignature Language="F#" Value="member this.WorkoutActivityType : HealthKit.HKWorkoutActivityType" Usage="HealthKit.HKWorkout.WorkoutActivityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("workoutActivityType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkoutActivityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the activity type of the workout.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkoutEvents">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKWorkoutEvent[] WorkoutEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class HealthKit.HKWorkoutEvent[] WorkoutEvents" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKWorkout.WorkoutEvents" />
      <MemberSignature Language="F#" Value="member this.WorkoutEvents : HealthKit.HKWorkoutEvent[]" Usage="HealthKit.HKWorkout.WorkoutEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("workoutEvents")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKWorkoutEvent[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of workout events that indicate when the user was or was not performing the workout activity.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
