<Type Name="HKUnit" FullName="HealthKit.HKUnit">
  <TypeSignature Language="C#" Value="public class HKUnit : Foundation.NSObject, Foundation.INSCopying, Foundation.INSSecureCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HKUnit extends Foundation.NSObject implements class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:HealthKit.HKUnit" />
  <TypeSignature Language="F#" Value="type HKUnit = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("HKUnit", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 2, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definitions and utility methods for manipulating measurements of mass, length, volume, and energy.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/HealthKit/Reference/HKUnit_Class/index.html">Apple documentation for <c>HKUnit</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HKUnit (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new HealthKit.HKUnit : Foundation.NSCoder -&gt; HealthKit.HKUnit" Usage="new HealthKit.HKUnit coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HKUnit (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new HealthKit.HKUnit : Foundation.NSObjectFlag -&gt; HealthKit.HKUnit" Usage="new HealthKit.HKUnit t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal HKUnit (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new HealthKit.HKUnit : nativeint -&gt; HealthKit.HKUnit" Usage="new HealthKit.HKUnit handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atmosphere">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Atmosphere { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Atmosphere" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Atmosphere" />
      <MemberSignature Language="F#" Value="member this.Atmosphere : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Atmosphere" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("atmosphereUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a pressure unit of 1 Atmosphere, equal to 101.325 kPa.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calorie">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Calorie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Calorie" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Calorie" />
      <MemberSignature Language="F#" Value="member this.Calorie : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Calorie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'SmallCalorie' or 'LargeCalorie' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'SmallCalorie' or 'LargeCalorie' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("calorieUnit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'SmallCalorie' or 'LargeCalorie' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'SmallCalorie' or 'LargeCalorie' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Developers should use 'SmallCalorie' or 'LargeCalorie' instead.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimeterOfWater">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CentimeterOfWater { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit CentimeterOfWater" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.CentimeterOfWater" />
      <MemberSignature Language="F#" Value="member this.CentimeterOfWater : HealthKit.HKUnit" Usage="HealthKit.HKUnit.CentimeterOfWater" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("centimeterOfWaterUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a pressure unit of 1 centimeter of water.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="HealthKit.HKUnit.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="hKUnit.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">Zone to use to allocate this object, or null to use the default zone.</param>
        <summary>Performs a copy of the underlying Objective-C object.</summary>
        <returns>This method performs a copy of the underlying Objective-C object state and returns a new instance of it.  It does not actually try to replicate any managed state.</returns>
        <remarks>Implementation of the INSCopyable interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Count" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Count" />
      <MemberSignature Language="F#" Value="member this.Count : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("countUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit to measure discrete scalar values.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJouleUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CreateJouleUnit (HealthKit.HKMetricPrefix prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit CreateJouleUnit(valuetype HealthKit.HKMetricPrefix prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.CreateJouleUnit(HealthKit.HKMetricPrefix)" />
      <MemberSignature Language="F#" Value="static member CreateJouleUnit : HealthKit.HKMetricPrefix -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.CreateJouleUnit prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("jouleUnitWithMetricPrefix:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="HealthKit.HKMetricPrefix" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Creates a unit for measuring energy in joules.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLiterUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CreateLiterUnit (HealthKit.HKMetricPrefix prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit CreateLiterUnit(valuetype HealthKit.HKMetricPrefix prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.CreateLiterUnit(HealthKit.HKMetricPrefix)" />
      <MemberSignature Language="F#" Value="static member CreateLiterUnit : HealthKit.HKMetricPrefix -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.CreateLiterUnit prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("literUnitWithMetricPrefix:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="HealthKit.HKMetricPrefix" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Creates a unit for measuring volume in liters.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeterUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CreateMeterUnit (HealthKit.HKMetricPrefix prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit CreateMeterUnit(valuetype HealthKit.HKMetricPrefix prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.CreateMeterUnit(HealthKit.HKMetricPrefix)" />
      <MemberSignature Language="F#" Value="static member CreateMeterUnit : HealthKit.HKMetricPrefix -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.CreateMeterUnit prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("meterUnitWithMetricPrefix:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="HealthKit.HKMetricPrefix" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Creates a unit for measuring length in meters.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMoleUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CreateMoleUnit (double gramsPerMole);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit CreateMoleUnit(float64 gramsPerMole) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.CreateMoleUnit(System.Double)" />
      <MemberSignature Language="F#" Value="static member CreateMoleUnit : double -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.CreateMoleUnit gramsPerMole" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("moleUnitWithMolarMass:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gramsPerMole" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="gramsPerMole">To be added.</param>
        <summary>Creates a unit for measuring quantities in moles.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMoleUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CreateMoleUnit (HealthKit.HKMetricPrefix prefix, double gramsPerMole);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit CreateMoleUnit(valuetype HealthKit.HKMetricPrefix prefix, float64 gramsPerMole) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.CreateMoleUnit(HealthKit.HKMetricPrefix,System.Double)" />
      <MemberSignature Language="F#" Value="static member CreateMoleUnit : HealthKit.HKMetricPrefix * double -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.CreateMoleUnit (prefix, gramsPerMole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("moleUnitWithMetricPrefix:molarMass:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="HealthKit.HKMetricPrefix" />
        <Parameter Name="gramsPerMole" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="gramsPerMole">To be added.</param>
        <summary>Creates a unit for measuring quantities in moles, multiplied by the specified prefix.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePascalUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CreatePascalUnit (HealthKit.HKMetricPrefix prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit CreatePascalUnit(valuetype HealthKit.HKMetricPrefix prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.CreatePascalUnit(HealthKit.HKMetricPrefix)" />
      <MemberSignature Language="F#" Value="static member CreatePascalUnit : HealthKit.HKMetricPrefix -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.CreatePascalUnit prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("pascalUnitWithMetricPrefix:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="HealthKit.HKMetricPrefix" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Creates a unit for measuring pressure in Pascals.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecondUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CreateSecondUnit (HealthKit.HKMetricPrefix prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit CreateSecondUnit(valuetype HealthKit.HKMetricPrefix prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.CreateSecondUnit(HealthKit.HKMetricPrefix)" />
      <MemberSignature Language="F#" Value="static member CreateSecondUnit : HealthKit.HKMetricPrefix -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.CreateSecondUnit prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("secondUnitWithMetricPrefix:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="HealthKit.HKMetricPrefix" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Creates a unit for measuring time in seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSiemenUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CreateSiemenUnit (HealthKit.HKMetricPrefix prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit CreateSiemenUnit(valuetype HealthKit.HKMetricPrefix prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.CreateSiemenUnit(HealthKit.HKMetricPrefix)" />
      <MemberSignature Language="F#" Value="static member CreateSiemenUnit : HealthKit.HKMetricPrefix -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.CreateSiemenUnit prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("siemenUnitWithMetricPrefix:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="HealthKit.HKMetricPrefix" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Creates a unit for measuring conductance in Siemens, multiplied the specified <paramref name="prefix" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CupImperialUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CupImperialUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit CupImperialUnit" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.CupImperialUnit" />
      <MemberSignature Language="F#" Value="member this.CupImperialUnit : HealthKit.HKUnit" Usage="HealthKit.HKUnit.CupImperialUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("cupImperialUnit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit of volume measure for Imperial cups.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CupUSUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit CupUSUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit CupUSUnit" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.CupUSUnit" />
      <MemberSignature Language="F#" Value="member this.CupUSUnit : HealthKit.HKUnit" Usage="HealthKit.HKUnit.CupUSUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("cupUSUnit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit of volume measure for US cups.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Day" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Day" />
      <MemberSignature Language="F#" Value="member this.Day : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("dayUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Creates a unit for measuring time in 24-hour days.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DegreeCelsius">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit DegreeCelsius { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit DegreeCelsius" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.DegreeCelsius" />
      <MemberSignature Language="F#" Value="member this.DegreeCelsius : HealthKit.HKUnit" Usage="HealthKit.HKUnit.DegreeCelsius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("degreeCelsiusUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Creates a unit for measuring temperature in degrees Celsius.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DegreeFahrenheit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit DegreeFahrenheit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit DegreeFahrenheit" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.DegreeFahrenheit" />
      <MemberSignature Language="F#" Value="member this.DegreeFahrenheit : HealthKit.HKUnit" Usage="HealthKit.HKUnit.DegreeFahrenheit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("degreeFahrenheitUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Creates a unit for measuring temperature in degrees Fahrenheit.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="hKUnit.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">The encoder object where the state of the object will be stored</param>
        <summary>Encodes the state of the object on the provided encoder</summary>
        <remarks>
          <para>This method is part of the <see cref="T:Foundation.NSCoding" /> protocol and is used by applications to preserve the state of the object into an archive.</para>
          <para>Users will typically create a <see cref="T:Foundation.NSKeyedArchiver" /> and then invoke the <see cref="M:Foundation.NSKeyedArchiver.ArchiveRootObjectToFile" /> which will call into this method</para>
          <para>If developers want to allow their object to be archived, they should override this method and store their state in using the provided <paramref name="encoder" /> parameter.   In addition, developers should also implement a constructor that takes an NSCoder argument and is exported with [Export ("initWithCoder:")]</para>
          <example>
            <code lang="C#"><![CDATA[public void override EncodeTo (NSCoder coder){
    coder.Encode (1, key: "version");
    coder.Encode (userName, key: "userName");
    coder.Encode (hostName, key: "hostName");]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FluidOunceImperialUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit FluidOunceImperialUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit FluidOunceImperialUnit" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.FluidOunceImperialUnit" />
      <MemberSignature Language="F#" Value="member this.FluidOunceImperialUnit : HealthKit.HKUnit" Usage="HealthKit.HKUnit.FluidOunceImperialUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("fluidOunceImperialUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit for measuring volume in imperial fluid ounces. An imperial fluid ounce is approximately 0.961 US fluid oz.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FluidOunceUSUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit FluidOunceUSUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit FluidOunceUSUnit" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.FluidOunceUSUnit" />
      <MemberSignature Language="F#" Value="member this.FluidOunceUSUnit : HealthKit.HKUnit" Usage="HealthKit.HKUnit.FluidOunceUSUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("fluidOunceUSUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit for measuring volume in US fluid ounces.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Foot">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Foot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Foot" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Foot" />
      <MemberSignature Language="F#" Value="member this.Foot : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Foot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("footUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit for measuring distance in feet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromEnergyFormatterUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit FromEnergyFormatterUnit (Foundation.NSEnergyFormatterUnit energyFormatterUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit FromEnergyFormatterUnit(valuetype Foundation.NSEnergyFormatterUnit energyFormatterUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.FromEnergyFormatterUnit(Foundation.NSEnergyFormatterUnit)" />
      <MemberSignature Language="F#" Value="static member FromEnergyFormatterUnit : Foundation.NSEnergyFormatterUnit -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.FromEnergyFormatterUnit energyFormatterUnit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("unitFromEnergyFormatterUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="energyFormatterUnit" Type="Foundation.NSEnergyFormatterUnit" />
      </Parameters>
      <Docs>
        <param name="energyFormatterUnit">To be added.</param>
        <summary>Creates an energy unit from an energy formatter.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromGramUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit FromGramUnit (HealthKit.HKMetricPrefix prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit FromGramUnit(valuetype HealthKit.HKMetricPrefix prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.FromGramUnit(HealthKit.HKMetricPrefix)" />
      <MemberSignature Language="F#" Value="static member FromGramUnit : HealthKit.HKMetricPrefix -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.FromGramUnit prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("gramUnitWithMetricPrefix:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="HealthKit.HKMetricPrefix" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Creates a unit for measuring mass in grams, multiplied by <paramref name="prefix" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromLengthFormatterUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit FromLengthFormatterUnit (Foundation.NSLengthFormatterUnit lengthFormatterUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit FromLengthFormatterUnit(valuetype Foundation.NSLengthFormatterUnit lengthFormatterUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.FromLengthFormatterUnit(Foundation.NSLengthFormatterUnit)" />
      <MemberSignature Language="F#" Value="static member FromLengthFormatterUnit : Foundation.NSLengthFormatterUnit -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.FromLengthFormatterUnit lengthFormatterUnit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("unitFromLengthFormatterUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lengthFormatterUnit" Type="Foundation.NSLengthFormatterUnit" />
      </Parameters>
      <Docs>
        <param name="lengthFormatterUnit">To be added.</param>
        <summary>Creates a length unit from a length formatter.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMassFormatterUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit FromMassFormatterUnit (Foundation.NSMassFormatterUnit massFormatterUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit FromMassFormatterUnit(valuetype Foundation.NSMassFormatterUnit massFormatterUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.FromMassFormatterUnit(Foundation.NSMassFormatterUnit)" />
      <MemberSignature Language="F#" Value="static member FromMassFormatterUnit : Foundation.NSMassFormatterUnit -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.FromMassFormatterUnit massFormatterUnit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("unitFromMassFormatterUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="massFormatterUnit" Type="Foundation.NSMassFormatterUnit" />
      </Parameters>
      <Docs>
        <param name="massFormatterUnit">To be added.</param>
        <summary>Creates a mass unit from a mass formatter.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit FromString (string aString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HealthKit.HKUnit FromString(string aString) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.FromString(System.String)" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; HealthKit.HKUnit" Usage="HealthKit.HKUnit.FromString aString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("unitFromString:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="aString">To be added.</param>
        <summary>Creates a unit by parsing <paramref name="aString" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/HealthKit/Reference/HKUnit_Class/index.html#//apple_ref/occ/clm/HKUnit/unitFromString:">Apple documentation for <c>unitFromString:</c></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyFormatterUnit">
      <MemberSignature Language="C#" Value="public static Foundation.NSEnergyFormatterUnit GetEnergyFormatterUnit (HealthKit.HKUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Foundation.NSEnergyFormatterUnit GetEnergyFormatterUnit(class HealthKit.HKUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.GetEnergyFormatterUnit(HealthKit.HKUnit)" />
      <MemberSignature Language="F#" Value="static member GetEnergyFormatterUnit : HealthKit.HKUnit -&gt; Foundation.NSEnergyFormatterUnit" Usage="HealthKit.HKUnit.GetEnergyFormatterUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("energyFormatterUnitFromUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSEnergyFormatterUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="HealthKit.HKUnit" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <summary>Creates an energy formatter for displaying <paramref name="unit" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLengthFormatterUnit">
      <MemberSignature Language="C#" Value="public static Foundation.NSLengthFormatterUnit GetLengthFormatterUnit (HealthKit.HKUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Foundation.NSLengthFormatterUnit GetLengthFormatterUnit(class HealthKit.HKUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.GetLengthFormatterUnit(HealthKit.HKUnit)" />
      <MemberSignature Language="F#" Value="static member GetLengthFormatterUnit : HealthKit.HKUnit -&gt; Foundation.NSLengthFormatterUnit" Usage="HealthKit.HKUnit.GetLengthFormatterUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("lengthFormatterUnitFromUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSLengthFormatterUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="HealthKit.HKUnit" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <summary>Creates a length formatter for displaying <paramref name="unit" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMassFormatterUnit">
      <MemberSignature Language="C#" Value="public static Foundation.NSMassFormatterUnit GetMassFormatterUnit (HealthKit.HKUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Foundation.NSMassFormatterUnit GetMassFormatterUnit(class HealthKit.HKUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.GetMassFormatterUnit(HealthKit.HKUnit)" />
      <MemberSignature Language="F#" Value="static member GetMassFormatterUnit : HealthKit.HKUnit -&gt; Foundation.NSMassFormatterUnit" Usage="HealthKit.HKUnit.GetMassFormatterUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("massFormatterUnitFromUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSMassFormatterUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="HealthKit.HKUnit" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <summary>Creates a mass formatter for displaying <paramref name="unit" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gram">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Gram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Gram" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Gram" />
      <MemberSignature Language="F#" Value="member this.Gram : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Gram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("gramUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit for measuring mass in grams.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Hour" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Hour" />
      <MemberSignature Language="F#" Value="member this.Hour : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("hourUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit for measuring time in hours.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inch">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Inch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Inch" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Inch" />
      <MemberSignature Language="F#" Value="member this.Inch : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Inch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("inchUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit for measuring length in inches.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternationalUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit InternationalUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit InternationalUnit" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.InternationalUnit" />
      <MemberSignature Language="F#" Value="member this.InternationalUnit : HealthKit.HKUnit" Usage="HealthKit.HKUnit.InternationalUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("internationalUnit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public virtual bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.IsNull" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="HealthKit.HKUnit.IsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isNull")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether all the dimensions in a unit cancel each other out. <see langword="true" /> if they cancel, otherwise <see langword="false" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Joule">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Joule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Joule" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Joule" />
      <MemberSignature Language="F#" Value="member this.Joule : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Joule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("jouleUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures energy in joules.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kelvin">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Kelvin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Kelvin" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Kelvin" />
      <MemberSignature Language="F#" Value="member this.Kelvin : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Kelvin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("kelvinUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures temperature in degrees Kelvin.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kilocalorie">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Kilocalorie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Kilocalorie" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Kilocalorie" />
      <MemberSignature Language="F#" Value="member this.Kilocalorie : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Kilocalorie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("kilocalorieUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures energy in kilocalories. Kilocalories are called "calories" in dietary usage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeCalorie">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit LargeCalorie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit LargeCalorie" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.LargeCalorie" />
      <MemberSignature Language="F#" Value="member this.LargeCalorie : HealthKit.HKUnit" Usage="HealthKit.HKUnit.LargeCalorie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("largeCalorieUnit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Liter">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Liter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Liter" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Liter" />
      <MemberSignature Language="F#" Value="member this.Liter : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Liter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("literUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures volume in liters.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Meter">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Meter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Meter" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Meter" />
      <MemberSignature Language="F#" Value="member this.Meter : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Meter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("meterUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures length in meters.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mile">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Mile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Mile" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Mile" />
      <MemberSignature Language="F#" Value="member this.Mile : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Mile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("mileUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures length in miles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MillimeterOfMercury">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit MillimeterOfMercury { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit MillimeterOfMercury" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.MillimeterOfMercury" />
      <MemberSignature Language="F#" Value="member this.MillimeterOfMercury : HealthKit.HKUnit" Usage="HealthKit.HKUnit.MillimeterOfMercury" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("millimeterOfMercuryUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures pressure in millimeters of mercury.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Minute" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Minute" />
      <MemberSignature Language="F#" Value="member this.Minute : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("minuteUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures time in minutes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MolarMassBloodGlucose">
      <MemberSignature Language="C#" Value="public const double MolarMassBloodGlucose = 180.155880000054;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MolarMassBloodGlucose = (180.155880000054)" />
      <MemberSignature Language="DocId" Value="F:HealthKit.HKUnit.MolarMassBloodGlucose" />
      <MemberSignature Language="F#" Value="val mutable MolarMassBloodGlucose : double" Usage="HealthKit.HKUnit.MolarMassBloodGlucose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>180.155880000054</MemberValue>
      <Docs>
        <summary>The molecular mass of blood glucose. Read-only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ounce">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Ounce { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Ounce" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Ounce" />
      <MemberSignature Language="F#" Value="member this.Ounce : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Ounce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("ounceUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures volume in US fluid ounces.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pascal">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Pascal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Pascal" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Pascal" />
      <MemberSignature Language="F#" Value="member this.Pascal : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Pascal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("pascalUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures pressure in Pascals.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Percent">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Percent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Percent" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Percent" />
      <MemberSignature Language="F#" Value="member this.Percent : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Percent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("percentUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures proportion in percentage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PintImperialUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit PintImperialUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit PintImperialUnit" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.PintImperialUnit" />
      <MemberSignature Language="F#" Value="member this.PintImperialUnit : HealthKit.HKUnit" Usage="HealthKit.HKUnit.PintImperialUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("pintImperialUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures volume in imperial pints.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PintUSUnit">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit PintUSUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit PintUSUnit" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.PintUSUnit" />
      <MemberSignature Language="F#" Value="member this.PintUSUnit : HealthKit.HKUnit" Usage="HealthKit.HKUnit.PintUSUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("pintUSUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures volume in US pints.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pound">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Pound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Pound" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Pound" />
      <MemberSignature Language="F#" Value="member this.Pound : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Pound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("poundUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures mass by the force that it exerts in pounds.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalUnit">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKUnit ReciprocalUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class HealthKit.HKUnit ReciprocalUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.ReciprocalUnit" />
      <MemberSignature Language="F#" Value="abstract member ReciprocalUnit : unit -&gt; HealthKit.HKUnit&#xA;override this.ReciprocalUnit : unit -&gt; HealthKit.HKUnit" Usage="hKUnit.ReciprocalUnit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("reciprocalUnit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a unit that is the reciprocal of the current unit.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Second" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Second" />
      <MemberSignature Language="F#" Value="member this.Second : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("secondUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures time in seconds.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Siemen">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Siemen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Siemen" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Siemen" />
      <MemberSignature Language="F#" Value="member this.Siemen : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Siemen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("siemenUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures conductance in Siemens.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallCalorie">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit SmallCalorie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit SmallCalorie" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.SmallCalorie" />
      <MemberSignature Language="F#" Value="member this.SmallCalorie : HealthKit.HKUnit" Usage="HealthKit.HKUnit.SmallCalorie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("smallCalorieUnit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stone">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Stone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Stone" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Stone" />
      <MemberSignature Language="F#" Value="member this.Stone : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Stone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("stoneUnit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit that measures mass in stones.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitDividedBy">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKUnit UnitDividedBy (HealthKit.HKUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class HealthKit.HKUnit UnitDividedBy(class HealthKit.HKUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.UnitDividedBy(HealthKit.HKUnit)" />
      <MemberSignature Language="F#" Value="abstract member UnitDividedBy : HealthKit.HKUnit -&gt; HealthKit.HKUnit&#xA;override this.UnitDividedBy : HealthKit.HKUnit -&gt; HealthKit.HKUnit" Usage="hKUnit.UnitDividedBy unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("unitDividedByUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="HealthKit.HKUnit" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <summary>Returns a unit that is the result of dividing <see langword="this" /> unit by <paramref name="unit" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitMultipliedBy">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKUnit UnitMultipliedBy (HealthKit.HKUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class HealthKit.HKUnit UnitMultipliedBy(class HealthKit.HKUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.UnitMultipliedBy(HealthKit.HKUnit)" />
      <MemberSignature Language="F#" Value="abstract member UnitMultipliedBy : HealthKit.HKUnit -&gt; HealthKit.HKUnit&#xA;override this.UnitMultipliedBy : HealthKit.HKUnit -&gt; HealthKit.HKUnit" Usage="hKUnit.UnitMultipliedBy unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("unitMultipliedByUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="HealthKit.HKUnit" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <summary>Returns a unit that is the result of multiplying <see langword="this" /> unit by <paramref name="unit" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitRaisedToPower">
      <MemberSignature Language="C#" Value="public virtual HealthKit.HKUnit UnitRaisedToPower (nint power);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class HealthKit.HKUnit UnitRaisedToPower(valuetype System.nint power) cil managed" />
      <MemberSignature Language="DocId" Value="M:HealthKit.HKUnit.UnitRaisedToPower(System.nint)" />
      <MemberSignature Language="F#" Value="abstract member UnitRaisedToPower : nint -&gt; HealthKit.HKUnit&#xA;override this.UnitRaisedToPower : nint -&gt; HealthKit.HKUnit" Usage="hKUnit.UnitRaisedToPower power" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("unitRaisedToPower:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="power" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="power">To be added.</param>
        <summary>Returns a unit that is the result of raising <see langword="this" /> unit by <paramref name="power" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitString">
      <MemberSignature Language="C#" Value="public virtual string UnitString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnitString" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.UnitString" />
      <MemberSignature Language="F#" Value="member this.UnitString : string" Usage="HealthKit.HKUnit.UnitString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("unitString")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a string representation of <see langword="this" /> unit.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Yard">
      <MemberSignature Language="C#" Value="public static HealthKit.HKUnit Yard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class HealthKit.HKUnit Yard" />
      <MemberSignature Language="DocId" Value="P:HealthKit.HKUnit.Yard" />
      <MemberSignature Language="F#" Value="member this.Yard : HealthKit.HKUnit" Usage="HealthKit.HKUnit.Yard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("yardUnit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>HealthKit.HKUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unit of length measure for a yard.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
