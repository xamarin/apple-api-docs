<Type Name="IPKPushRegistryDelegate" FullName="PushKit.IPKPushRegistryDelegate">
  <TypeSignature Language="C#" Value="public interface IPKPushRegistryDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPKPushRegistryDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:PushKit.IPKPushRegistryDelegate" />
  <TypeSignature Language="F#" Value="type IPKPushRegistryDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="PKPushRegistryDelegate", WrapperType=typeof(PushKit.PKPushRegistryDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidUpdatePushCredentials", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PushKit.PKPushRegistry), typeof(PushKit.PKPushCredentials), typeof(System.String) }, Selector="pushRegistry:didUpdatePushCredentials:forType:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidReceiveIncomingPush", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PushKit.PKPushRegistry), typeof(PushKit.PKPushPayload), typeof(System.String) }, Selector="pushRegistry:didReceiveIncomingPushWithPayload:forType:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidInvalidatePushToken", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(PushKit.PKPushRegistry), typeof(System.String) }, Selector="pushRegistry:didInvalidatePushTokenForType:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidReceiveIncomingPush", ParameterBlockProxy=new System.Type[] { null, null, null, typeof(ObjCRuntime.Trampolines/NIDAction) }, ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(PushKit.PKPushRegistry), typeof(PushKit.PKPushPayload), typeof(System.String), typeof(System.Action) }, Selector="pushRegistry:didReceiveIncomingPushWithPayload:forType:withCompletionHandler:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:PushKit.PKPushRegistryDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:PushKit.PKPushRegistryDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:PushKit.PKPushRegistryDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:PushKit.PKPushRegistryDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidReceiveIncomingPush">
      <MemberSignature Language="C#" Value="public void DidReceiveIncomingPush (PushKit.PKPushRegistry registry, PushKit.PKPushPayload payload, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReceiveIncomingPush(class PushKit.PKPushRegistry registry, class PushKit.PKPushPayload payload, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:PushKit.IPKPushRegistryDelegate.DidReceiveIncomingPush(PushKit.PKPushRegistry,PushKit.PKPushPayload,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DidReceiveIncomingPush : PushKit.PKPushRegistry * PushKit.PKPushPayload * string -&gt; unit" Usage="iPKPushRegistryDelegate.DidReceiveIncomingPush (registry, payload, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pushRegistry:didReceiveIncomingPushWithPayload:forType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use the 'DidReceiveIncomingPushWithPayload' overload accepting an 'Action' argument instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use the 'DidReceiveIncomingPushWithPayload' overload accepting an 'Action' argument instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registry" Type="PushKit.PKPushRegistry" />
        <Parameter Name="payload" Type="PushKit.PKPushPayload" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registry">To be added.</param>
        <param name="payload">To be added.</param>
        <param name="type">To be added.</param>
        <summary>Developers should not use this deprecated method. Developers should use the 'DidReceiveIncomingPushWithPayload' overload accepting an 'Action' argument instead.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdatePushCredentials">
      <MemberSignature Language="C#" Value="public void DidUpdatePushCredentials (PushKit.PKPushRegistry registry, PushKit.PKPushCredentials credentials, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdatePushCredentials(class PushKit.PKPushRegistry registry, class PushKit.PKPushCredentials credentials, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:PushKit.IPKPushRegistryDelegate.DidUpdatePushCredentials(PushKit.PKPushRegistry,PushKit.PKPushCredentials,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdatePushCredentials : PushKit.PKPushRegistry * PushKit.PKPushCredentials * string -&gt; unit" Usage="iPKPushRegistryDelegate.DidUpdatePushCredentials (registry, credentials, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pushRegistry:didUpdatePushCredentials:forType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registry" Type="PushKit.PKPushRegistry" />
        <Parameter Name="credentials" Type="PushKit.PKPushCredentials" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registry">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
