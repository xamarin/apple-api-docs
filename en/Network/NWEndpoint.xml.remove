<Type Name="NWEndpoint" FullName="Network.NWEndpoint">
  <TypeSignature Language="C#" Value="public class NWEndpoint : CoreFoundation.NativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NWEndpoint extends CoreFoundation.NativeObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreFoundation.NativeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>ObjCRuntime.TV(12, 0)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Endpoints represent a remote resource either a specific host and port or a service exposed via Bonjour (a zero-configuration network service discovery system)</summary>
    <remarks>
      <para>You can create two kinds of <see cref="T:Network.NWEndpoint" /> objects, endpoints that represent a specific host and port, or Bonjour endpoints.   These endpoints are provided to the <see cref="T:Network.NWConnection" /> class to specify where to connect to.</para>
      <para>
      </para>
      <para>To create a host/port endpoint, use the <see cref="M:Network.NWEndpoint.Create" /> method.   This method takes a string that can either be a hostname that needs to be resolved, a human readable IPV4 address or human readable IPV6 address.  Examples:</para>
      <para>
      </para>
      <code lang="C#"><![CDATA[var localHttpServer = NWEndpoint.Create ("127.0.0.1", "80");
var anotherLocalHttpSerer = NWEndpoint.Create ("localhost", "http"); ]]></code>
      <para>
      </para>
      <para>
      </para>
      <para>It is also possible to connect to Bonjour services (Apple’s zero-configuration system).   Bonjour services can be discovered dynamically in the current network and do not need to hardcode a port.   To create a Bonjour endpoint, call the <see cref="M:Network.NWEndpoint.CreateBonjourService" /> method and provide the service name, service type and service domain.</para>
      <para>
      </para>
      <code lang="C#"><![CDATA[var echoServer = NWEndpoint.CreateBonjourService ("hello", "_sample._tdp", "local");]]></code>
      <para>
      </para>
      <para>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NWEndpoint (IntPtr handle, bool owns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, bool owns) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="owns" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="owns">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The IP address in string form for the end point, only valid for endpoints of type <see cref="T:Network.NWEndpointType" /></summary>
        <value>An IP address either in IPV4 or IPV6 format</value>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BonjourServiceDomain">
      <MemberSignature Language="C#" Value="public string BonjourServiceDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BonjourServiceDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Bonjour service domain for endpoints of type Bonjour.</summary>
        <value>The Bonjour service domain, or <see langword="null" /> if this endpoint is not of type Bonjour.</value>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BonjourServiceName">
      <MemberSignature Language="C#" Value="public string BonjourServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BonjourServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Bonjour service name for endpoints of type Bonjour.</summary>
        <value>The Bonjour service name, or <see langword="null" /> if this endpoint is not of type Bonjour.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BonjourServiceType">
      <MemberSignature Language="C#" Value="public string BonjourServiceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BonjourServiceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Bonjour service type for endpoints of type Bonjour.</summary>
        <value>The Bonjour service type, or <see langword="null" /> if this endpoint is not of type Bonjour.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Network.NWEndpoint Create (string hostname, string port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Network.NWEndpoint Create(string hostname, string port) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Network.NWEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostname">A hostname, an IPV4-formatted address or an IPV6 formatted address.   Some examples include “www.microsoft.com”, “127.0.0.1”, “fe08::1”, “fe80:97ab:4111:927b:f0d2"</param>
        <param name="port">The number of the port to connect to, or a port name that will be matched against the service name database.   For a list of valid service names, see the man page for services(5) or the /etc/services file.   For example, you can pass “80” or “http”.</param>
        <summary>Creates an endpoint for the given hostname and port</summary>
        <returns>The endpoint, or null if there is an error in the parameters.</returns>
        <remarks>
          <para />
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBonjourService">
      <MemberSignature Language="C#" Value="public static Network.NWEndpoint CreateBonjourService (string name, string serviceType, string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Network.NWEndpoint CreateBonjourService(string name, string serviceType, string domain) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Network.NWEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceType" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Bonjour service name, for example “myFaxServer"</param>
        <param name="serviceType">Bonjour service type, for example “_example._tcp"</param>
        <param name="domain">Bonjour service domain, for example “local"</param>
        <summary>Creates an endpoint for a Bonjour Service.</summary>
        <returns>Returns an endpoint describing the Bonjour service to connect to, or null if there is a problem with one of the parameters.</returns>
        <remarks>
          <para>To learn more about the values for the properties here, consult Apple’s Bonjour Overview: <see cref="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/NetServices/Introduction.html#//apple_ref/doc/uid/TP40002445-SW1" /></para>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hostname">
      <MemberSignature Language="C#" Value="public string Hostname { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Hostname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hostname - valid for endpoints of type Host.</summary>
        <value>The hostname, or null if the endpoint is not of type host.</value>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public string Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Endpoint’s IP port - valid for endpoints of type Host or Address.</summary>
        <value>The port as a string, or null if the endpoint is not of type Host or Address.</value>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PortNumber">
      <MemberSignature Language="C#" Value="public ushort PortNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 PortNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Endpoint’s IP port number - valid for endpoints of type Host or Address.</summary>
        <value>The IP port number, or zero if the endpoint is not of type Host or Address.</value>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Network.NWEndpointType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Network.NWEndpointType Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Network.NWEndpointType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Describes this endpoint type.</summary>
        <value>The endpoint type.</value>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
