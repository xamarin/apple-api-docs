<Type Name="IINSetDefrosterSettingsInCarIntentHandling" FullName="Intents.IINSetDefrosterSettingsInCarIntentHandling">
  <TypeSignature Language="C#" Value="public interface IINSetDefrosterSettingsInCarIntentHandling : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IINSetDefrosterSettingsInCarIntentHandling implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Intents.IINSetDefrosterSettingsInCarIntentHandling" />
  <TypeSignature Language="F#" Value="type IINSetDefrosterSettingsInCarIntentHandling = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="INSetDefrosterSettingsInCarIntentHandling", WrapperType=typeof(Intents.INSetDefrosterSettingsInCarIntentHandlingWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="HandleSetDefrosterSettingsInCar", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="handleSetDefrosterSettingsInCar:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ConfirmSetDefrosterSettingsInCar", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="confirmSetDefrosterSettingsInCar:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ResolveEnable", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="resolveEnableForSetDefrosterSettingsInCar:withCompletion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ResolveDefroster", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="resolveDefrosterForSetDefrosterSettingsInCar:withCompletion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ResolveCarName", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="resolveCarNameForSetDefrosterSettingsInCar:withCompletion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="HandleSetDefrosterSettingsInCar", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Intents.INSetDefrosterSettingsInCarIntent), typeof(System.Action`1&lt;Intents.INSetDefrosterSettingsInCarIntentResponse&gt;) }, Selector="handleSetDefrosterSettingsInCar:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ConfirmSetDefrosterSettingsInCar", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Intents.INSetDefrosterSettingsInCarIntent), typeof(System.Action`1&lt;Intents.INSetDefrosterSettingsInCarIntentResponse&gt;) }, Selector="confirmSetDefrosterSettingsInCar:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ResolveEnable", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Intents.INSetDefrosterSettingsInCarIntent), typeof(System.Action`1&lt;Intents.INBooleanResolutionResult&gt;) }, Selector="resolveEnableForSetDefrosterSettingsInCar:withCompletion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ResolveDefroster", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Intents.INSetDefrosterSettingsInCarIntent), typeof(System.Action`1&lt;Intents.INCarDefrosterResolutionResult&gt;) }, Selector="resolveDefrosterForSetDefrosterSettingsInCar:withCompletion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ResolveCarName", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Intents.INSetDefrosterSettingsInCarIntent), typeof(System.Action`1&lt;Intents.INSpeakableStringResolutionResult&gt;) }, Selector="resolveCarNameForSetDefrosterSettingsInCar:withCompletion:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface defining handler method that, when implemented, must call <paramref name="completion" /> with an <see cref="T:Intents.INSetDefrosterSettingsInCarIntentResponse" /> appropriate to <paramref name="arg" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleSetDefrosterSettingsInCar">
      <MemberSignature Language="C#" Value="public void HandleSetDefrosterSettingsInCar (Intents.INSetDefrosterSettingsInCarIntent intent, Action&lt;Intents.INSetDefrosterSettingsInCarIntentResponse&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleSetDefrosterSettingsInCar(class Intents.INSetDefrosterSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INSetDefrosterSettingsInCarIntentResponse&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Intents.IINSetDefrosterSettingsInCarIntentHandling.HandleSetDefrosterSettingsInCar(Intents.INSetDefrosterSettingsInCarIntent,System.Action{Intents.INSetDefrosterSettingsInCarIntentResponse})" />
      <MemberSignature Language="F#" Value="abstract member HandleSetDefrosterSettingsInCar : Intents.INSetDefrosterSettingsInCarIntent * Action&lt;Intents.INSetDefrosterSettingsInCarIntentResponse&gt; -&gt; unit" Usage="iINSetDefrosterSettingsInCarIntentHandling.HandleSetDefrosterSettingsInCar (intent, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("handleSetDefrosterSettingsInCar:completion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Intents.INSetDefrosterSettingsInCarIntent" />
        <Parameter Name="completion" Type="System.Action&lt;Intents.INSetDefrosterSettingsInCarIntentResponse&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V55))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">Specifies the user's intention.</param>
        <param name="completion">Completion method that must be called by the override.</param>
        <summary>Developers must override this method and invoke the <see cref="T:System.Action`1" /> with an <see cref="T:Intents.INSetDefrosterSettingsInCarIntentResponse" /> appropriate to the <see cref="T:Intents.INSetDefrosterSettingsInCarIntent" />Â <paramref name="intent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
