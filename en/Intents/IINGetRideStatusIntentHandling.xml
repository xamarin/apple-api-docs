<Type Name="IINGetRideStatusIntentHandling" FullName="Intents.IINGetRideStatusIntentHandling">
  <TypeSignature Language="C#" Value="public interface IINGetRideStatusIntentHandling : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IINGetRideStatusIntentHandling implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Intents.IINGetRideStatusIntentHandling" />
  <TypeSignature Language="F#" Value="type IINGetRideStatusIntentHandling = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="INGetRideStatusIntentHandling", WrapperType=typeof(Intents.INGetRideStatusIntentHandlingWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="StartSendingUpdates", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Intents.INGetRideStatusIntent), typeof(Intents.IINGetRideStatusIntentResponseObserver) }, Selector="startSendingUpdatesForGetRideStatus:toObserver:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="StopSendingUpdates", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Intents.INGetRideStatusIntent) }, Selector="stopSendingUpdatesForGetRideStatus:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="HandleRideStatus", ParameterBlockProxy=new System.Type[] { null, typeof(ObjCRuntime.Trampolines/NIDActionArity1V90) }, ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Intents.INGetRideStatusIntent), typeof(System.Action`1&lt;Intents.INGetRideStatusIntentResponse&gt;) }, Selector="handleGetRideStatus:completion:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ConfirmRideStatus", ParameterBlockProxy=new System.Type[] { null, typeof(ObjCRuntime.Trampolines/NIDActionArity1V90) }, ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Intents.INGetRideStatusIntent), typeof(System.Action`1&lt;Intents.INGetRideStatusIntentResponse&gt;) }, Selector="confirmGetRideStatus:completion:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface defining handler method that, when implemented, must call <paramref name="completion" /> with an <see cref="T:Intents.INGetRideStatusIntentResponse" /> appropriate to <paramref name="arg" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleRideStatus">
      <MemberSignature Language="C#" Value="public void HandleRideStatus (Intents.INGetRideStatusIntent intent, Action&lt;Intents.INGetRideStatusIntentResponse&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleRideStatus(class Intents.INGetRideStatusIntent intent, class System.Action`1&lt;class Intents.INGetRideStatusIntentResponse&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Intents.IINGetRideStatusIntentHandling.HandleRideStatus(Intents.INGetRideStatusIntent,System.Action{Intents.INGetRideStatusIntentResponse})" />
      <MemberSignature Language="F#" Value="abstract member HandleRideStatus : Intents.INGetRideStatusIntent * Action&lt;Intents.INGetRideStatusIntentResponse&gt; -&gt; unit" Usage="iINGetRideStatusIntentHandling.HandleRideStatus (intent, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("handleGetRideStatus:completion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Intents.INGetRideStatusIntent" />
        <Parameter Name="completion" Type="System.Action&lt;Intents.INGetRideStatusIntentResponse&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V90))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">Specifies the user's intention.</param>
        <param name="completion">Completion method that must be called by the override.</param>
        <summary>Developers must override this method and invoke the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Action`%201&amp;scope=Xamarin" title="T:System.Action`1">T:System.Action`1</a></format> with an <see cref="T:Intents.INGetRideStatusIntentResponse" /> appropriate to the <see cref="T:Intents.INGetRideStatusIntent" />Â <paramref name="intent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSendingUpdates">
      <MemberSignature Language="C#" Value="public void StartSendingUpdates (Intents.INGetRideStatusIntent intent, Intents.IINGetRideStatusIntentResponseObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartSendingUpdates(class Intents.INGetRideStatusIntent intent, class Intents.IINGetRideStatusIntentResponseObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Intents.IINGetRideStatusIntentHandling.StartSendingUpdates(Intents.INGetRideStatusIntent,Intents.IINGetRideStatusIntentResponseObserver)" />
      <MemberSignature Language="F#" Value="abstract member StartSendingUpdates : Intents.INGetRideStatusIntent * Intents.IINGetRideStatusIntentResponseObserver -&gt; unit" Usage="iINGetRideStatusIntentHandling.StartSendingUpdates (intent, observer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("startSendingUpdatesForGetRideStatus:toObserver:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Intents.INGetRideStatusIntent" />
        <Parameter Name="observer" Type="Intents.IINGetRideStatusIntentResponseObserver" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <param name="observer">To be added.</param>
        <summary>Developers may call this method to begin sending updates about the ride status.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopSendingUpdates">
      <MemberSignature Language="C#" Value="public void StopSendingUpdates (Intents.INGetRideStatusIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopSendingUpdates(class Intents.INGetRideStatusIntent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Intents.IINGetRideStatusIntentHandling.StopSendingUpdates(Intents.INGetRideStatusIntent)" />
      <MemberSignature Language="F#" Value="abstract member StopSendingUpdates : Intents.INGetRideStatusIntent -&gt; unit" Usage="iINGetRideStatusIntentHandling.StopSendingUpdates intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stopSendingUpdatesForGetRideStatus:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Intents.INGetRideStatusIntent" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <summary>Developers may call this method to end the sending of updates about the ride status.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
