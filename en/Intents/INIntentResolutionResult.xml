<Type Name="INIntentResolutionResult" FullName="Intents.INIntentResolutionResult">
  <TypeSignature Language="C#" Value="public abstract class INIntentResolutionResult : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit INIntentResolutionResult extends Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("INIntentResolutionResult", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 2, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Abstract base class for the binding of values to parameters in an <see cref="T:Intent.INIntent" />.</summary>
    <remarks>
      <para>An <see cref="T:Intents.INIntent" /> may require certain data to complete (for instance, an <see cref="T:Intents.INSendMessageIntent" /> might need an <see cref="T:Intents.INPerson" /> or perhaps a string containing a phone number). Such data may or may not be provided the first time the user interacts with Siri or might be data the extension can provide or might be something for which the user is prompted. The <see cref="T:Intents.INIntentResolutionResult" /> hierarchy allows the developer to specify what data is needed and what data requires user interaction. </para>
      <para>The following example shows how an implementer of the <see cref="T:Intents.IINSearchForMessagesIntentHandling" /> interface might overload the <see cref="M:Intents.IINSearchForMessagesIntentHandling.ResolveRecipients" /> method, in certain scenarios calling the <c>completion</c> handler with <see cref="P:Intents.INIntentResolutionResult.NeedsValue" />, <see cref="M:INIntentResolutionResult.Unsupported" />, <see cref="M:Intents.INPersonResolutionResult.GetSuccess" />, or <see cref="M:Intents.INPersonResolutionResult.GetDisambiguation" /> as the situation dictates:</para>
      <example>
        <code lang="C#"><![CDATA[
[Export ("resolveRecipientsForSearchForMessages:withCompletion:")]
public void ResolveRecipients (INSendMessageIntent intent, Action<INPersonResolutionResult []> completion)
{
    var recipients = intent.Recipients;
    // If no recipients were provided we'll need to prompt for a value.
    if (recipients.Length == 0)
    {
        completion (new INPersonResolutionResult [] { (Intents.INPersonResolutionResult)INIntentResolutionResult.NeedsValue });
        return;
    }

    var resolutionResults = new List<INPersonResolutionResult> ();

    foreach (var recipient in recipients)
    {
        var matchingContacts = new INPerson [] { recipient }; // Implement your contact matching logic here to create an array of matching contacts
        if (matchingContacts.Length > 1)
        {
            // We need Siri's help to ask user to pick one from the matches.
            resolutionResults.Add (INPersonResolutionResult.GetDisambiguation (matchingContacts));
        }
        else if (matchingContacts.Length == 1)
        {
            // We have exactly one matching contact
            resolutionResults.Add (INPersonResolutionResult.GetSuccess (recipient));
        }
        else {
            // We have no contacts matching the description provided
            resolutionResults.Add ((Intents.INPersonResolutionResult)INIntentResolutionResult.Unsupported);
        }
}    ]]></code>
      </example>
    </remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/reference/Intents/INIntentResolutionResult">Apple documentation for <c>INIntentResolutionResult</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected INIntentResolutionResult (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected INIntentResolutionResult (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedsValue">
      <MemberSignature Language="C#" Value="public static Intents.INIntentResolutionResult NeedsValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Intents.INIntentResolutionResult NeedsValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Intents.INIntentResolutionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Factory method to create an <see cref="T:Intents.INIntentResolutionResult" /> object indicating that a value is required for the parameter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotRequired">
      <MemberSignature Language="C#" Value="public static Intents.INIntentResolutionResult NotRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Intents.INIntentResolutionResult NotRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Intents.INIntentResolutionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Factory method to create an <see cref="T:Intents.INIntentResolutionResult" /> object indicating that a value is not required for the parameter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsupported">
      <MemberSignature Language="C#" Value="public static Intents.INIntentResolutionResult Unsupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Intents.INIntentResolutionResult Unsupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Intents.INIntentResolutionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Factory method to create an <see cref="T:Intents.INIntentResolutionResult" /> object indicating that the developer's app does not support the parameter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
