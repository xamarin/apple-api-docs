<Type Name="INSFileProviderEnumerationObserver" FullName="FileProvider.INSFileProviderEnumerationObserver">
  <TypeSignature Language="C#" Value="public interface INSFileProviderEnumerationObserver : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSFileProviderEnumerationObserver implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:FileProvider.INSFileProviderEnumerationObserver" />
  <TypeSignature Language="F#" Value="type INSFileProviderEnumerationObserver = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSFileProviderEnumerationObserver", WrapperType=typeof(FileProvider.NSFileProviderEnumerationObserverWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidEnumerateItems", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(FileProvider.INSFileProviderItem[]) }, Selector="didEnumerateItems:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="FinishEnumerating", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSData) }, Selector="finishEnumeratingUpToPage:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="FinishEnumerating", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSError) }, Selector="finishEnumeratingWithError:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DidEnumerateItems">
      <MemberSignature Language="C#" Value="public void DidEnumerateItems (FileProvider.INSFileProviderItem[] updatedItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEnumerateItems(class FileProvider.INSFileProviderItem[] updatedItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:FileProvider.INSFileProviderEnumerationObserver.DidEnumerateItems(FileProvider.INSFileProviderItem[])" />
      <MemberSignature Language="F#" Value="abstract member DidEnumerateItems : FileProvider.INSFileProviderItem[] -&gt; unit" Usage="iNSFileProviderEnumerationObserver.DidEnumerateItems updatedItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("didEnumerateItems:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedItems" Type="FileProvider.INSFileProviderItem[]" />
      </Parameters>
      <Docs>
        <param name="updatedItems">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishEnumerating">
      <MemberSignature Language="C#" Value="public void FinishEnumerating (Foundation.NSData upToPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishEnumerating(class Foundation.NSData upToPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:FileProvider.INSFileProviderEnumerationObserver.FinishEnumerating(Foundation.NSData)" />
      <MemberSignature Language="F#" Value="abstract member FinishEnumerating : Foundation.NSData -&gt; unit" Usage="iNSFileProviderEnumerationObserver.FinishEnumerating upToPage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("finishEnumeratingUpToPage:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upToPage" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="upToPage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishEnumerating">
      <MemberSignature Language="C#" Value="public void FinishEnumerating (Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishEnumerating(class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:FileProvider.INSFileProviderEnumerationObserver.FinishEnumerating(Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member FinishEnumerating : Foundation.NSError -&gt; unit" Usage="iNSFileProviderEnumerationObserver.FinishEnumerating error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("finishEnumeratingWithError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
