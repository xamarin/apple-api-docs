<Type Name="IMTLBlitCommandEncoder" FullName="Metal.IMTLBlitCommandEncoder">
  <TypeSignature Language="C#" Value="public interface IMTLBlitCommandEncoder : IDisposable, Metal.IMTLCommandEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMTLBlitCommandEncoder implements class Metal.IMTLCommandEncoder, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Metal.IMTLCommandEncoder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="MTLBlitCommandEncoder", WrapperType=typeof(Metal.MTLBlitCommandEncoderWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CopyFromTexture", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CopyFromBuffer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="CopyFromBuffer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CopyFromTexture", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="CopyFromTexture", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GenerateMipmapsForTexture", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="generateMipmapsForTexture:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="FillBuffer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="fillBuffer:range:value:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CopyFromBuffer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="Update", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="updateFence:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="Wait", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="waitForFence:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Protocol for writing data into frame buffers.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyFromBuffer">
      <MemberSignature Language="C#" Value="public void CopyFromBuffer (Metal.IMTLBuffer sourceBuffer, nuint sourceOffset, Metal.IMTLBuffer destinationBuffer, nuint destinationOffset, nuint size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromBuffer(class Metal.IMTLBuffer sourceBuffer, valuetype System.nuint sourceOffset, class Metal.IMTLBuffer destinationBuffer, valuetype System.nuint destinationOffset, valuetype System.nuint size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="sourceOffset" Type="System.nuint" />
        <Parameter Name="destinationBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="destinationOffset" Type="System.nuint" />
        <Parameter Name="size" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="sourceBuffer">To be added.</param>
        <param name="sourceOffset">To be added.</param>
        <param name="destinationBuffer">To be added.</param>
        <param name="destinationOffset">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromBuffer">
      <MemberSignature Language="C#" Value="public void CopyFromBuffer (Metal.IMTLBuffer sourceBuffer, nuint sourceOffset, nuint sourceBytesPerRow, nuint sourceBytesPerImage, Metal.MTLSize sourceSize, Metal.IMTLTexture destinationTexture, nuint destinationSlice, nuint destinationLevel, Metal.MTLOrigin destinationOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromBuffer(class Metal.IMTLBuffer sourceBuffer, valuetype System.nuint sourceOffset, valuetype System.nuint sourceBytesPerRow, valuetype System.nuint sourceBytesPerImage, valuetype Metal.MTLSize sourceSize, class Metal.IMTLTexture destinationTexture, valuetype System.nuint destinationSlice, valuetype System.nuint destinationLevel, valuetype Metal.MTLOrigin destinationOrigin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="sourceOffset" Type="System.nuint" />
        <Parameter Name="sourceBytesPerRow" Type="System.nuint" />
        <Parameter Name="sourceBytesPerImage" Type="System.nuint" />
        <Parameter Name="sourceSize" Type="Metal.MTLSize" />
        <Parameter Name="destinationTexture" Type="Metal.IMTLTexture" />
        <Parameter Name="destinationSlice" Type="System.nuint" />
        <Parameter Name="destinationLevel" Type="System.nuint" />
        <Parameter Name="destinationOrigin" Type="Metal.MTLOrigin" />
      </Parameters>
      <Docs>
        <param name="sourceBuffer">To be added.</param>
        <param name="sourceOffset">To be added.</param>
        <param name="sourceBytesPerRow">To be added.</param>
        <param name="sourceBytesPerImage">To be added.</param>
        <param name="sourceSize">To be added.</param>
        <param name="destinationTexture">To be added.</param>
        <param name="destinationSlice">To be added.</param>
        <param name="destinationLevel">To be added.</param>
        <param name="destinationOrigin">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromTexture">
      <MemberSignature Language="C#" Value="public void CopyFromTexture (Metal.IMTLTexture sourceTexture, nuint sourceSlice, nuint sourceLevel, Metal.MTLOrigin sourceOrigin, Metal.MTLSize sourceSize, Metal.IMTLBuffer destinationBuffer, nuint destinationOffset, nuint destinatinBytesPerRow, nuint destinationBytesPerImage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromTexture(class Metal.IMTLTexture sourceTexture, valuetype System.nuint sourceSlice, valuetype System.nuint sourceLevel, valuetype Metal.MTLOrigin sourceOrigin, valuetype Metal.MTLSize sourceSize, class Metal.IMTLBuffer destinationBuffer, valuetype System.nuint destinationOffset, valuetype System.nuint destinatinBytesPerRow, valuetype System.nuint destinationBytesPerImage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTexture" Type="Metal.IMTLTexture" />
        <Parameter Name="sourceSlice" Type="System.nuint" />
        <Parameter Name="sourceLevel" Type="System.nuint" />
        <Parameter Name="sourceOrigin" Type="Metal.MTLOrigin" />
        <Parameter Name="sourceSize" Type="Metal.MTLSize" />
        <Parameter Name="destinationBuffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="destinationOffset" Type="System.nuint" />
        <Parameter Name="destinatinBytesPerRow" Type="System.nuint" />
        <Parameter Name="destinationBytesPerImage" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="sourceTexture">To be added.</param>
        <param name="sourceSlice">To be added.</param>
        <param name="sourceLevel">To be added.</param>
        <param name="sourceOrigin">To be added.</param>
        <param name="sourceSize">To be added.</param>
        <param name="destinationBuffer">To be added.</param>
        <param name="destinationOffset">To be added.</param>
        <param name="destinatinBytesPerRow">To be added.</param>
        <param name="destinationBytesPerImage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromTexture">
      <MemberSignature Language="C#" Value="public void CopyFromTexture (Metal.IMTLTexture sourceTexture, nuint sourceSlice, nuint sourceLevel, Metal.MTLOrigin sourceOrigin, Metal.MTLSize sourceSize, Metal.IMTLTexture destinationTexture, nuint destinationSlice, nuint destinationLevel, Metal.MTLOrigin destinationOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromTexture(class Metal.IMTLTexture sourceTexture, valuetype System.nuint sourceSlice, valuetype System.nuint sourceLevel, valuetype Metal.MTLOrigin sourceOrigin, valuetype Metal.MTLSize sourceSize, class Metal.IMTLTexture destinationTexture, valuetype System.nuint destinationSlice, valuetype System.nuint destinationLevel, valuetype Metal.MTLOrigin destinationOrigin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTexture" Type="Metal.IMTLTexture" />
        <Parameter Name="sourceSlice" Type="System.nuint" />
        <Parameter Name="sourceLevel" Type="System.nuint" />
        <Parameter Name="sourceOrigin" Type="Metal.MTLOrigin" />
        <Parameter Name="sourceSize" Type="Metal.MTLSize" />
        <Parameter Name="destinationTexture" Type="Metal.IMTLTexture" />
        <Parameter Name="destinationSlice" Type="System.nuint" />
        <Parameter Name="destinationLevel" Type="System.nuint" />
        <Parameter Name="destinationOrigin" Type="Metal.MTLOrigin" />
      </Parameters>
      <Docs>
        <param name="sourceTexture">To be added.</param>
        <param name="sourceSlice">To be added.</param>
        <param name="sourceLevel">To be added.</param>
        <param name="sourceOrigin">To be added.</param>
        <param name="sourceSize">To be added.</param>
        <param name="destinationTexture">To be added.</param>
        <param name="destinationSlice">To be added.</param>
        <param name="destinationLevel">To be added.</param>
        <param name="destinationOrigin">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBuffer">
      <MemberSignature Language="C#" Value="public void FillBuffer (Metal.IMTLBuffer buffer, Foundation.NSRange range, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillBuffer(class Metal.IMTLBuffer buffer, valuetype Foundation.NSRange range, unsigned int8 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fillBuffer:range:value:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Metal.IMTLBuffer" />
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="range">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMipmapsForTexture">
      <MemberSignature Language="C#" Value="public void GenerateMipmapsForTexture (Metal.IMTLTexture texture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateMipmapsForTexture(class Metal.IMTLTexture texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("generateMipmapsForTexture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="Metal.IMTLTexture" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
