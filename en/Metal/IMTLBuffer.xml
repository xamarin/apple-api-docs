<Type Name="IMTLBuffer" FullName="Metal.IMTLBuffer">
  <TypeSignature Language="C#" Value="public interface IMTLBuffer : IDisposable, Metal.IMTLResource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMTLBuffer implements class Metal.IMTLResource, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Metal.IMTLBuffer" />
  <TypeSignature Language="F#" Value="type IMTLBuffer = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IMTLResource" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Metal.IMTLResource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="MTLBuffer", WrapperType=typeof(Metal.MTLBufferWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RemoveAllDebugMarkers", Selector="removeAllDebugMarkers")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="length", IsProperty=true, IsRequired=true, IsStatic=false, Name="Length", PropertyType=typeof(System.nuint), Selector="length")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="contents", IsProperty=true, IsRequired=true, IsStatic=false, Name="Contents", PropertyType=typeof(System.IntPtr), Selector="contents")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateTexture", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(Metal.MTLTextureDescriptor), typeof(System.nuint), typeof(System.nuint) }, ReturnType=typeof(Metal.IMTLTexture), Selector="newTextureWithDescriptor:offset:bytesPerRow:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="AddDebugMarker", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(System.String), typeof(Foundation.NSRange) }, Selector="addDebugMarker:range:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>System protocol for raw data that is accessible in strides.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public IntPtr Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Contents" />
      <MemberSignature Language="DocId" Value="P:Metal.IMTLBuffer.Contents" />
      <MemberSignature Language="F#" Value="member this.Contents : nativeint" Usage="Metal.IMTLBuffer.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("contents")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTexture">
      <MemberSignature Language="C#" Value="public Metal.IMTLTexture CreateTexture (Metal.MTLTextureDescriptor descriptor, nuint offset, nuint bytesPerRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Metal.IMTLTexture CreateTexture(class Metal.MTLTextureDescriptor descriptor, valuetype System.nuint offset, valuetype System.nuint bytesPerRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Metal.IMTLBuffer.CreateTexture(Metal.MTLTextureDescriptor,System.nuint,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member CreateTexture : Metal.MTLTextureDescriptor * nuint * nuint -&gt; Metal.IMTLTexture" Usage="iMTLBuffer.CreateTexture (descriptor, offset, bytesPerRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newTextureWithDescriptor:offset:bytesPerRow:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="Metal.MTLTextureDescriptor" />
        <Parameter Name="offset" Type="System.nuint" />
        <Parameter Name="bytesPerRow" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="descriptor">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public nuint Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Length" />
      <MemberSignature Language="DocId" Value="P:Metal.IMTLBuffer.Length" />
      <MemberSignature Language="F#" Value="member this.Length : nuint" Usage="Metal.IMTLBuffer.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("length")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
