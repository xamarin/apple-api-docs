<Type Name="IMTLIndirectCommandBuffer" FullName="Metal.IMTLIndirectCommandBuffer">
  <TypeSignature Language="C#" Value="public interface IMTLIndirectCommandBuffer : IDisposable, Metal.IMTLResource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMTLIndirectCommandBuffer implements class Metal.IMTLResource, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Metal.IMTLResource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="MTLIndirectCommandBuffer", WrapperType=typeof(Metal.MTLIndirectCommandBufferWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="Reset", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="resetWithRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetCommand", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(Metal.IMTLIndirectRenderCommand), Selector="indirectRenderCommandAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="size", IsProperty=true, IsRequired=true, IsStatic=false, Name="Size", PropertyType=typeof(System.nuint), Selector="size")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface for the required methods of the protocol for containers that store commands that have been encoded by either the GPU or CPU.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public Metal.IMTLIndirectRenderCommand GetCommand (nuint commandIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Metal.IMTLIndirectRenderCommand GetCommand(valuetype System.nuint commandIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("indirectRenderCommandAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Metal.IMTLIndirectRenderCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="commandIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(valuetype Foundation.NSRange range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resetWithRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public nuint Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("size")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of commands in the buffer.</summary>
        <value>The number of commands in the buffer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
