<Type Name="CTRun" FullName="CoreText.CTRun">
  <TypeSignature Language="C#" Value="public class CTRun : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CTRun extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreText.CTRun" />
  <TypeSignature Language="F#" Value="type CTRun = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A glyph run. That is, a series of consecutive glyphs with the same attributes and direction.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cTRun.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CTRun object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CTRun class.</para>
          <para>Calling the Dispose method when the application is finished using the CTRun ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cTRun.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CTRun object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CTRun class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CTRun ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (CoreGraphics.CGContext context, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class CoreGraphics.CGContext context, valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.Draw(CoreGraphics.CGContext,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="member this.Draw : CoreGraphics.CGContext * Foundation.NSRange -&gt; unit" Usage="cTRun.Draw (context, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CoreGraphics.CGContext" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CTRun ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cTRun.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CTRun object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdvances">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGSize[] GetAdvances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGSize[] GetAdvances() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetAdvances" />
      <MemberSignature Language="F#" Value="member this.GetAdvances : unit -&gt; CoreGraphics.CGSize[]" Usage="cTRun.GetAdvances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdvances">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGSize[] GetAdvances (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGSize[] GetAdvances(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetAdvances(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="member this.GetAdvances : Foundation.NSRange -&gt; CoreGraphics.CGSize[]" Usage="cTRun.GetAdvances range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdvances">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGSize[] GetAdvances (Foundation.NSRange range, CoreGraphics.CGSize[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGSize[] GetAdvances(valuetype Foundation.NSRange range, valuetype CoreGraphics.CGSize[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetAdvances(Foundation.NSRange,CoreGraphics.CGSize[])" />
      <MemberSignature Language="F#" Value="member this.GetAdvances : Foundation.NSRange * CoreGraphics.CGSize[] -&gt; CoreGraphics.CGSize[]" Usage="cTRun.GetAdvances (range, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="buffer" Type="CoreGraphics.CGSize[]" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public CoreText.CTStringAttributes GetAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreText.CTStringAttributes GetAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetAttributes" />
      <MemberSignature Language="F#" Value="member this.GetAttributes : unit -&gt; CoreText.CTStringAttributes" Usage="cTRun.GetAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreText.CTStringAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetGlyphs" />
      <MemberSignature Language="F#" Value="member this.GetGlyphs : unit -&gt; uint16[]" Usage="cTRun.GetGlyphs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetGlyphs(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="member this.GetGlyphs : Foundation.NSRange -&gt; uint16[]" Usage="cTRun.GetGlyphs range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (Foundation.NSRange range, ushort[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(valuetype Foundation.NSRange range, unsigned int16[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetGlyphs(Foundation.NSRange,System.UInt16[])" />
      <MemberSignature Language="F#" Value="member this.GetGlyphs : Foundation.NSRange * uint16[] -&gt; uint16[]" Usage="cTRun.GetGlyphs (range, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="buffer" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageBounds">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGRect GetImageBounds (CoreGraphics.CGContext context, Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGRect GetImageBounds(class CoreGraphics.CGContext context, valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetImageBounds(CoreGraphics.CGContext,Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="member this.GetImageBounds : CoreGraphics.CGContext * Foundation.NSRange -&gt; CoreGraphics.CGRect" Usage="cTRun.GetImageBounds (context, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CoreGraphics.CGContext" />
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositions">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPoint[] GetPositions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGPoint[] GetPositions() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetPositions" />
      <MemberSignature Language="F#" Value="member this.GetPositions : unit -&gt; CoreGraphics.CGPoint[]" Usage="cTRun.GetPositions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositions">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPoint[] GetPositions (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGPoint[] GetPositions(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetPositions(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="member this.GetPositions : Foundation.NSRange -&gt; CoreGraphics.CGPoint[]" Usage="cTRun.GetPositions range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositions">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPoint[] GetPositions (Foundation.NSRange range, CoreGraphics.CGPoint[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGPoint[] GetPositions(valuetype Foundation.NSRange range, valuetype CoreGraphics.CGPoint[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetPositions(Foundation.NSRange,CoreGraphics.CGPoint[])" />
      <MemberSignature Language="F#" Value="member this.GetPositions : Foundation.NSRange * CoreGraphics.CGPoint[] -&gt; CoreGraphics.CGPoint[]" Usage="cTRun.GetPositions (range, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="buffer" Type="CoreGraphics.CGPoint[]" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringIndices">
      <MemberSignature Language="C#" Value="public nint[] GetStringIndices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nint[] GetStringIndices() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetStringIndices" />
      <MemberSignature Language="F#" Value="member this.GetStringIndices : unit -&gt; nint[]" Usage="cTRun.GetStringIndices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringIndices">
      <MemberSignature Language="C#" Value="public nint[] GetStringIndices (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nint[] GetStringIndices(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetStringIndices(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="member this.GetStringIndices : Foundation.NSRange -&gt; nint[]" Usage="cTRun.GetStringIndices range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringIndices">
      <MemberSignature Language="C#" Value="public nint[] GetStringIndices (Foundation.NSRange range, nint[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nint[] GetStringIndices(valuetype Foundation.NSRange range, valuetype System.nint[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetStringIndices(Foundation.NSRange,System.nint[])" />
      <MemberSignature Language="F#" Value="member this.GetStringIndices : Foundation.NSRange * nint[] -&gt; nint[]" Usage="cTRun.GetStringIndices (range, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="buffer" Type="System.nint[]" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypographicBounds">
      <MemberSignature Language="C#" Value="public double GetTypographicBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetTypographicBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetTypographicBounds" />
      <MemberSignature Language="F#" Value="member this.GetTypographicBounds : unit -&gt; double" Usage="cTRun.GetTypographicBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypographicBounds">
      <MemberSignature Language="C#" Value="public double GetTypographicBounds (Foundation.NSRange range, out nfloat ascent, out nfloat descent, out nfloat leading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetTypographicBounds(valuetype Foundation.NSRange range, [out] valuetype System.nfloat&amp; ascent, [out] valuetype System.nfloat&amp; descent, [out] valuetype System.nfloat&amp; leading) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTRun.GetTypographicBounds(Foundation.NSRange,System.nfloat@,System.nfloat@,System.nfloat@)" />
      <MemberSignature Language="F#" Value="member this.GetTypographicBounds : Foundation.NSRange *  *  *  -&gt; double" Usage="cTRun.GetTypographicBounds (range, ascent, descent, leading)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="ascent" Type="System.nfloat" RefType="out" />
        <Parameter Name="descent" Type="System.nfloat" RefType="out" />
        <Parameter Name="leading" Type="System.nfloat" RefType="out" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="ascent">To be added.</param>
        <param name="descent">To be added.</param>
        <param name="leading">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphCount">
      <MemberSignature Language="C#" Value="public nint GlyphCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint GlyphCount" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTRun.GlyphCount" />
      <MemberSignature Language="F#" Value="member this.GlyphCount : nint" Usage="CoreText.CTRun.GlyphCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTRun.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreText.CTRun.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public CoreText.CTRunStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreText.CTRunStatus Status" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTRun.Status" />
      <MemberSignature Language="F#" Value="member this.Status : CoreText.CTRunStatus" Usage="CoreText.CTRun.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreText.CTRunStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringRange">
      <MemberSignature Language="C#" Value="public Foundation.NSRange StringRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSRange StringRange" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTRun.StringRange" />
      <MemberSignature Language="F#" Value="member this.StringRange : Foundation.NSRange" Usage="CoreText.CTRun.StringRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextMatrix">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGAffineTransform TextMatrix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGAffineTransform TextMatrix" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTRun.TextMatrix" />
      <MemberSignature Language="F#" Value="member this.TextMatrix : CoreGraphics.CGAffineTransform" Usage="CoreText.CTRun.TextMatrix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGAffineTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
