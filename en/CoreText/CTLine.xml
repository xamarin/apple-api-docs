<Type Name="CTLine" FullName="CoreText.CTLine">
  <TypeSignature Language="C#" Value="public class CTLine : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CTLine extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreText.CTLine" />
  <TypeSignature Language="F#" Value="type CTLine = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A line of text, comprising an array of <see cref="T:CoreText.CTRun" />s.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/SimpleTextInput/">SimpleTextInput</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CTLine (Foundation.NSAttributedString value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSAttributedString value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.#ctor(Foundation.NSAttributedString)" />
      <MemberSignature Language="F#" Value="new CoreText.CTLine : Foundation.NSAttributedString -&gt; CoreText.CTLine" Usage="new CoreText.CTLine value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="Foundation.NSAttributedString" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cTLine.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CTLine object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CTLine class.</para>
          <para>Calling the Dispose method when the application is finished using the CTLine ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cTLine.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CTLine object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CTLine class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CTLine ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (CoreGraphics.CGContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class CoreGraphics.CGContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.Draw(CoreGraphics.CGContext)" />
      <MemberSignature Language="F#" Value="member this.Draw : CoreGraphics.CGContext -&gt; unit" Usage="cTLine.Draw context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateCaretOffsets">
      <MemberSignature Language="C#" Value="public void EnumerateCaretOffsets (CoreText.CTLine.CaretEdgeEnumerator enumerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateCaretOffsets(class CoreText.CTLine/CaretEdgeEnumerator enumerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.EnumerateCaretOffsets(CoreText.CTLine.CaretEdgeEnumerator)" />
      <MemberSignature Language="F#" Value="member this.EnumerateCaretOffsets : CoreText.CTLine.CaretEdgeEnumerator -&gt; unit" Usage="cTLine.EnumerateCaretOffsets enumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumerator" Type="CoreText.CTLine+CaretEdgeEnumerator" />
      </Parameters>
      <Docs>
        <param name="enumerator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CTLine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cTLine.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CTLine object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGRect GetBounds (CoreText.CTLineBoundsOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGRect GetBounds(valuetype CoreText.CTLineBoundsOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetBounds(CoreText.CTLineBoundsOptions)" />
      <MemberSignature Language="F#" Value="member this.GetBounds : CoreText.CTLineBoundsOptions -&gt; CoreGraphics.CGRect" Usage="cTLine.GetBounds options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="CoreText.CTLineBoundsOptions" />
      </Parameters>
      <Docs>
        <param name="options">Determines the kind of typographical information to return.</param>
        <summary>Returns the bounds of the line as a rectangle, based on the specified <see cref="T:CoreText.CTLineBoundsOptions" />.</summary>
        <returns>The bounding rectangle based on the parameter you pass on the options.</returns>
        <remarks>
          <para>
	    This function can return different bounds based on the options passed.    
	  </para>
          <para>
            <img href="xamarin-media/CoreText/_images/CoreTextBoundOptions.png" />
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphRuns">
      <MemberSignature Language="C#" Value="public CoreText.CTRun[] GetGlyphRuns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreText.CTRun[] GetGlyphRuns() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetGlyphRuns" />
      <MemberSignature Language="F#" Value="member this.GetGlyphRuns : unit -&gt; CoreText.CTRun[]" Usage="cTLine.GetGlyphRuns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreText.CTRun[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageBounds">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGRect GetImageBounds (CoreGraphics.CGContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreGraphics.CGRect GetImageBounds(class CoreGraphics.CGContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetImageBounds(CoreGraphics.CGContext)" />
      <MemberSignature Language="F#" Value="member this.GetImageBounds : CoreGraphics.CGContext -&gt; CoreGraphics.CGRect" Usage="cTLine.GetImageBounds context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJustifiedLine">
      <MemberSignature Language="C#" Value="public CoreText.CTLine GetJustifiedLine (nfloat justificationFactor, double justificationWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreText.CTLine GetJustifiedLine(valuetype System.nfloat justificationFactor, float64 justificationWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetJustifiedLine(System.nfloat,System.Double)" />
      <MemberSignature Language="F#" Value="member this.GetJustifiedLine : nfloat * double -&gt; CoreText.CTLine" Usage="cTLine.GetJustifiedLine (justificationFactor, justificationWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreText.CTLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="justificationFactor" Type="System.nfloat" />
        <Parameter Name="justificationWidth" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="justificationFactor">To be added.</param>
        <param name="justificationWidth">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOffsetForStringIndex">
      <MemberSignature Language="C#" Value="public nfloat GetOffsetForStringIndex (nint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nfloat GetOffsetForStringIndex(valuetype System.nint charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetOffsetForStringIndex(System.nint)" />
      <MemberSignature Language="F#" Value="member this.GetOffsetForStringIndex : nint -&gt; nfloat" Usage="cTLine.GetOffsetForStringIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOffsetForStringIndex">
      <MemberSignature Language="C#" Value="public nfloat GetOffsetForStringIndex (nint charIndex, out nfloat secondaryOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nfloat GetOffsetForStringIndex(valuetype System.nint charIndex, [out] valuetype System.nfloat&amp; secondaryOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetOffsetForStringIndex(System.nint,System.nfloat@)" />
      <MemberSignature Language="F#" Value="member this.GetOffsetForStringIndex : nint *  -&gt; nfloat" Usage="cTLine.GetOffsetForStringIndex (charIndex, secondaryOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.nint" />
        <Parameter Name="secondaryOffset" Type="System.nfloat" RefType="out" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <param name="secondaryOffset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPenOffsetForFlush">
      <MemberSignature Language="C#" Value="public double GetPenOffsetForFlush (nfloat flushFactor, double flushWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetPenOffsetForFlush(valuetype System.nfloat flushFactor, float64 flushWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetPenOffsetForFlush(System.nfloat,System.Double)" />
      <MemberSignature Language="F#" Value="member this.GetPenOffsetForFlush : nfloat * double -&gt; double" Usage="cTLine.GetPenOffsetForFlush (flushFactor, flushWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flushFactor" Type="System.nfloat" />
        <Parameter Name="flushWidth" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="flushFactor">To be added.</param>
        <param name="flushWidth">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringIndexForPosition">
      <MemberSignature Language="C#" Value="public nint GetStringIndexForPosition (CoreGraphics.CGPoint position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.nint GetStringIndexForPosition(valuetype CoreGraphics.CGPoint position) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetStringIndexForPosition(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.GetStringIndexForPosition : CoreGraphics.CGPoint -&gt; nint" Usage="cTLine.GetStringIndexForPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTruncatedLine">
      <MemberSignature Language="C#" Value="public CoreText.CTLine GetTruncatedLine (double width, CoreText.CTLineTruncation truncationType, CoreText.CTLine truncationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreText.CTLine GetTruncatedLine(float64 width, valuetype CoreText.CTLineTruncation truncationType, class CoreText.CTLine truncationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetTruncatedLine(System.Double,CoreText.CTLineTruncation,CoreText.CTLine)" />
      <MemberSignature Language="F#" Value="member this.GetTruncatedLine : double * CoreText.CTLineTruncation * CoreText.CTLine -&gt; CoreText.CTLine" Usage="cTLine.GetTruncatedLine (width, truncationType, truncationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreText.CTLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="truncationType" Type="CoreText.CTLineTruncation" />
        <Parameter Name="truncationToken" Type="CoreText.CTLine" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="truncationType">To be added.</param>
        <param name="truncationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypographicBounds">
      <MemberSignature Language="C#" Value="public double GetTypographicBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetTypographicBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetTypographicBounds" />
      <MemberSignature Language="F#" Value="member this.GetTypographicBounds : unit -&gt; double" Usage="cTLine.GetTypographicBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the typorgraphic width of the line.</summary>
        <returns>The width of the line, or zero if there are any errors.</returns>
        <remarks>
          <para>
	    Use the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=M:CoreText.CTLine.GetTypographicBounds(out float, out float, out float)&amp;scope=Xamarin" title="M:CoreText.CTLine.GetTypographicBounds(out float, out float, out float)">M:CoreText.CTLine.GetTypographicBounds(out float, out float, out float)</a></format> method to retrieve more information about the typographical features of the line.
	  </para>
          <para>
	    Starting with iOS 6.0, the <see cref="M:CoreText.CTLine.GetBounds(CoreText.CTLineBoundsOptions)" /> provides finer typorgraphical information than this method.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypographicBounds">
      <MemberSignature Language="C#" Value="public double GetTypographicBounds (out nfloat ascent, out nfloat descent, out nfloat leading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetTypographicBounds([out] valuetype System.nfloat&amp; ascent, [out] valuetype System.nfloat&amp; descent, [out] valuetype System.nfloat&amp; leading) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTLine.GetTypographicBounds(System.nfloat@,System.nfloat@,System.nfloat@)" />
      <MemberSignature Language="F#" Value="member this.GetTypographicBounds :  *  *  -&gt; double" Usage="cTLine.GetTypographicBounds (ascent, descent, leading)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascent" Type="System.nfloat" RefType="out" />
        <Parameter Name="descent" Type="System.nfloat" RefType="out" />
        <Parameter Name="leading" Type="System.nfloat" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ascent">Returns the ascent of the line.</param>
        <param name="descent">Returns the descent of the line.</param>
        <param name="leading">Returns the leading of the line.</param>
        <summary>Returns the typographic information about the line.</summary>
        <returns>The width of the line, or zero if there are any errors.</returns>
        <remarks>
          <para>
	    Starting with iOS 6.0, the <see cref="M:CoreText.CTLine.GetBounds(CoreText.CTLineBoundsOptions)" /> provides finer typorgraphical information than this method.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphCount">
      <MemberSignature Language="C#" Value="public nint GlyphCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint GlyphCount" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTLine.GlyphCount" />
      <MemberSignature Language="F#" Value="member this.GlyphCount : nint" Usage="CoreText.CTLine.GlyphCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTLine.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreText.CTLine.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringRange">
      <MemberSignature Language="C#" Value="public Foundation.NSRange StringRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSRange StringRange" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTLine.StringRange" />
      <MemberSignature Language="F#" Value="member this.StringRange : Foundation.NSRange" Usage="CoreText.CTLine.StringRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingWhitespaceWidth">
      <MemberSignature Language="C#" Value="public double TrailingWhitespaceWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TrailingWhitespaceWidth" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTLine.TrailingWhitespaceWidth" />
      <MemberSignature Language="F#" Value="member this.TrailingWhitespaceWidth : double" Usage="CoreText.CTLine.TrailingWhitespaceWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
