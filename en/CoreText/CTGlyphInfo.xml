<Type Name="CTGlyphInfo" FullName="CoreText.CTGlyphInfo">
  <TypeSignature Language="C#" Value="public class CTGlyphInfo : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CTGlyphInfo extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreText.CTGlyphInfo" />
  <TypeSignature Language="F#" Value="type CTGlyphInfo = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides the ability to override the Unicode-to-glyph mapping for a <see cref="T:CoreText.CTFont" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CTGlyphInfo (string glyphName, CoreText.CTFont font, string baseString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string glyphName, class CoreText.CTFont font, string baseString) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTGlyphInfo.#ctor(System.String,CoreText.CTFont,System.String)" />
      <MemberSignature Language="F#" Value="new CoreText.CTGlyphInfo : string * CoreText.CTFont * string -&gt; CoreText.CTGlyphInfo" Usage="new CoreText.CTGlyphInfo (glyphName, font, baseString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="glyphName" Type="System.String" />
        <Parameter Name="font" Type="CoreText.CTFont" />
        <Parameter Name="baseString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="glyphName">To be added.</param>
        <param name="font">To be added.</param>
        <param name="baseString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CTGlyphInfo (ushort cid, CoreText.CTCharacterCollection collection, string baseString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int16 cid, valuetype CoreText.CTCharacterCollection collection, string baseString) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTGlyphInfo.#ctor(System.UInt16,CoreText.CTCharacterCollection,System.String)" />
      <MemberSignature Language="F#" Value="new CoreText.CTGlyphInfo : uint16 * CoreText.CTCharacterCollection * string -&gt; CoreText.CTGlyphInfo" Usage="new CoreText.CTGlyphInfo (cid, collection, baseString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cid" Type="System.UInt16" />
        <Parameter Name="collection" Type="CoreText.CTCharacterCollection" />
        <Parameter Name="baseString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cid">To be added.</param>
        <param name="collection">To be added.</param>
        <param name="baseString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CTGlyphInfo (ushort glyph, CoreText.CTFont font, string baseString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int16 glyph, class CoreText.CTFont font, string baseString) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTGlyphInfo.#ctor(System.UInt16,CoreText.CTFont,System.String)" />
      <MemberSignature Language="F#" Value="new CoreText.CTGlyphInfo : uint16 * CoreText.CTFont * string -&gt; CoreText.CTGlyphInfo" Usage="new CoreText.CTGlyphInfo (glyph, font, baseString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt16" />
        <Parameter Name="font" Type="CoreText.CTFont" />
        <Parameter Name="baseString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="font">To be added.</param>
        <param name="baseString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCollection">
      <MemberSignature Language="C#" Value="public CoreText.CTCharacterCollection CharacterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreText.CTCharacterCollection CharacterCollection" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTGlyphInfo.CharacterCollection" />
      <MemberSignature Language="F#" Value="member this.CharacterCollection : CoreText.CTCharacterCollection" Usage="CoreText.CTGlyphInfo.CharacterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreText.CTCharacterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterIdentifier">
      <MemberSignature Language="C#" Value="public ushort CharacterIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 CharacterIdentifier" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTGlyphInfo.CharacterIdentifier" />
      <MemberSignature Language="F#" Value="member this.CharacterIdentifier : uint16" Usage="CoreText.CTGlyphInfo.CharacterIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTGlyphInfo.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cTGlyphInfo.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CTGlyphInfo object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CTGlyphInfo class.</para>
          <para>Calling the Dispose method when the application is finished using the CTGlyphInfo ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTGlyphInfo.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cTGlyphInfo.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CTGlyphInfo object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CTGlyphInfo class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CTGlyphInfo ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CTGlyphInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTGlyphInfo.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cTGlyphInfo.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CTGlyphInfo object</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphName">
      <MemberSignature Language="C#" Value="public string GlyphName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GlyphName" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTGlyphInfo.GlyphName" />
      <MemberSignature Language="F#" Value="member this.GlyphName : string" Usage="CoreText.CTGlyphInfo.GlyphName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreText.CTGlyphInfo.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreText.CTGlyphInfo.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreText.CTGlyphInfo.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cTGlyphInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
