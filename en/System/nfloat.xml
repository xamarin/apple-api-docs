<Type Name="nfloat" FullName="System.nfloat">
  <TypeSignature Language="C#" Value="public struct nfloat : IComparable, IComparable&lt;nfloat&gt;, IConvertible, IEquatable&lt;nfloat&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit nfloat extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.nfloat&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.nfloat&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.nfloat" />
  <TypeSignature Language="F#" Value="type nfloat = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.nfloat&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.nfloat&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{v,nq}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Native floating point (single precision on 32-bit platforms, double precision on 64-bit platforms)</summary>
    <remarks>
      <para>This data type is a floating point value that uses the natural size of the host architecture to store its value.  On 32-bit systems, this uses <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Single&amp;scope=Xamarin" title="T:System.Single">T:System.Single</a></format> for storage and on 64-bit systems it uses <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double&amp;scope=Xamarin" title="T:System.Double">T:System.Double</a></format> for storage.  </para>
      <para>
      </para>
      <para>As an optimization, the compiler and runtime have special knowledge of this data type, so while there is no dedicated set of IL instructions to deal with variable-size floating point values, the runtime will transform uses of nfloat into their native underlying representation transparently.</para>
      <para>This type is defined in lowercase because it makes it feel like a C# data type when used in C# source code.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public nfloat (double v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.#ctor(System.Double)" />
      <MemberSignature Language="F#" Value="new nfloat : double -&gt; nfloat" Usage="new System.nfloat v" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>Initializes an nfloat from a double value.   On 32 bit platforms, this might be a lossy initialization.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public nfloat (float v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.#ctor(System.Single)" />
      <MemberSignature Language="F#" Value="new nfloat : single -&gt; nfloat" Usage="new System.nfloat v" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>Initializes an nfloat from a float value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (nfloat value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.nfloat value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.CompareTo(System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : nfloat -&gt; int&#xA;override this.CompareTo : nfloat -&gt; int" Usage="nfloat.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Compares this instance to a specified nfloat floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified nfloat floating-point number.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.CompareTo(System.Object)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="nfloat.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">An object to compare, or null.</param>
        <summary>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</summary>
        <returns>
          <para>A signed number indicating the relative values of this instance and <paramref name="value" />.</para>
          <list type="table">
            <listheader>
              <term>
                <para>Value </para>
              </term>
              <description>
                <para>Description </para>
              </description>
            </listheader>
            <item>
              <term>
                <para>A negative integer </para>
              </term>
              <description>
                <para>This instance is less than <paramref name="value" />.</para>
                <para>-or- </para>
                <para>This instance is not a number (<see cref="F:System.nfloat.NaN" />) and <paramref name="value" /> is a number. </para>
              </description>
            </item>
            <item>
              <term>
                <para>Zero </para>
              </term>
              <description>
                <para>This instance is equal to <paramref name="value" />.</para>
                <para>-or- </para>
                <para>This instance and <paramref name="value" /> are both nfloat.NaN, <see cref="F:System.nfloat.PositiveInfinity" />, or <see cref="F:System.nfloat.NegativeInfinity" /></para>
              </description>
            </item>
            <item>
              <term>
                <para>A positive integer </para>
              </term>
              <description>
                <para>This instance is greater than <paramref name="value" />.</para>
                <para>-or- </para>
                <para>This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.nfloat.NaN" />).</para>
                <para>-or- </para>
                <para>
                  <paramref name="value" /> is null. </para>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <para>The <paramref name="value" /> parameter must be null or an instance of nfloat; otherwise, an exception is thrown. Any instance of <see cref="T:System.nfloat" />, regardless of its value, is considered greater than null.</para>
          <para>Values must be identical to be considered equal. Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits. Because of this, the return value of the <see cref="M:System.nfloat.CompareTo(System.Object)" /> method at times may seem surprising. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyArray">
      <MemberSignature Language="C#" Value="public static void CopyArray (IntPtr source, nfloat[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyArray(native int source, valuetype System.nfloat[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.CopyArray(System.IntPtr,System.nfloat[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyArray : nativeint * nfloat[] * int * int -&gt; unit" Usage="System.nfloat.CopyArray (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.nfloat[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyArray">
      <MemberSignature Language="C#" Value="public static void CopyArray (nfloat[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyArray(valuetype System.nfloat[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.CopyArray(System.nfloat[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyArray : nfloat[] * int * nativeint * int -&gt; unit" Usage="System.nfloat.CopyArray (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.nfloat[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public static readonly nfloat Epsilon;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.nfloat Epsilon" />
      <MemberSignature Language="DocId" Value="F:System.nfloat.Epsilon" />
      <MemberSignature Language="F#" Value=" staticval mutable Epsilon : nfloat" Usage="System.nfloat.Epsilon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the smallest positive <see cref="T:System.nfloat" /> value that is greater than zero. This field is constant.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (nfloat obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.nfloat obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.Equals(System.nfloat)" />
      <MemberSignature Language="F#" Value="override this.Equals : nfloat -&gt; bool" Usage="nfloat.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Returns a value indicating whether this instance and a specified <see cref="T:System.nfloat" /> object represent the same value.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.Equals(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nfloat.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.GetHashCode" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nfloat.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.GetTypeCode" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="nfloat.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Type%20Code&amp;scope=Xamarin" title="T:System.TypeCode">T:System.TypeCode</a></format> for the underlying storage on this platform, either the typecode for <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double&amp;scope=Xamarin" title="T:System.Double">T:System.Double</a></format> or the typecode for <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Single&amp;scope=Xamarin" title="T:System.Single">T:System.Single</a></format>.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinity">
      <MemberSignature Language="C#" Value="public static bool IsInfinity (nfloat f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinity(valuetype System.nfloat f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.IsInfinity(System.nfloat)" />
      <MemberSignature Language="F#" Value="static member IsInfinity : nfloat -&gt; bool" Usage="System.nfloat.IsInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="f">An nfloat floating pointer number.</param>
        <summary>Returns a value indicating whether the specified number evaluates to negative or positive infinity.</summary>
        <returns>true if <paramref name="d" /> evaluates to <see cref="F:System.nfloat.PositiveInfinity" /> or <see cref="F:System.nfloat.NegativeInfinity" />; otherwise, false.</returns>
        <remarks>Floating-point operations return <see cref="F:System.nfloat.PositiveInfinity" /> or <see cref="F:System.nfloat.NegativeInfinity" /> to signal an overflow condition.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public static bool IsNaN (nfloat f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNaN(valuetype System.nfloat f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.IsNaN(System.nfloat)" />
      <MemberSignature Language="F#" Value="static member IsNaN : nfloat -&gt; bool" Usage="System.nfloat.IsNaN f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="f">An nfloat floating point number.</param>
        <summary>Returns a value that indicates whether the specified value is not a number (<see cref="F:System.nfloat.NaN" />).</summary>
        <returns>true if <paramref name="d" /> evaluates to <see cref="F:System.nfloat.NaN" />; otherwise, false.</returns>
        <remarks>
          <para>
            <see cref="M:System.nfloat.IsNaN(System.nfloat)" /> returns false if a <see cref="T:System.nfloat" /> value is either <see cref="F:System.nfloat.PositiveInfinity" /> or <see cref="F:System.nfloat.NegativeInfinity" />. To test for these values, use the <see cref="M:System.nfloat.IsInfinity(System.nfloat)" />, <see cref="M:System.nfloat.IsPositiveInfinity(System.nfloat)" />, and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20Is%20Negative%20Infinity(%20Systemnfloat%20)&amp;scope=Xamarin" title="M:System.Double.IsNegativeInfinity(System.nfloat)">M:System.Double.IsNegativeInfinity(System.nfloat)</a></format> methods.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public static bool IsNegativeInfinity (nfloat f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegativeInfinity(valuetype System.nfloat f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.IsNegativeInfinity(System.nfloat)" />
      <MemberSignature Language="F#" Value="static member IsNegativeInfinity : nfloat -&gt; bool" Usage="System.nfloat.IsNegativeInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public static bool IsPositiveInfinity (nfloat f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPositiveInfinity(valuetype System.nfloat f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.IsPositiveInfinity(System.nfloat)" />
      <MemberSignature Language="F#" Value="static member IsPositiveInfinity : nfloat -&gt; bool" Usage="System.nfloat.IsPositiveInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly nfloat MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.nfloat MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.nfloat.MaxValue" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : nfloat" Usage="System.nfloat.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the largest possible value of a <see cref="T:System.nfloat" />. This field is constant.</summary>
        <remarks>
          <para>The value of this constant is either float.MaxValue or double.MaxValue depending on the host architecture.</para>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly nfloat MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.nfloat MinValue" />
      <MemberSignature Language="DocId" Value="F:System.nfloat.MinValue" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : nfloat" Usage="System.nfloat.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the smallest possible value of a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double&amp;scope=Xamarin" title="T:System.Double">T:System.Double</a></format>. This field is constant.</summary>
        <remarks>
          <para>The value of this constant is either float.MinValue or double.MinValue depending on the host architecture.</para>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public static readonly nfloat NaN;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.nfloat NaN" />
      <MemberSignature Language="DocId" Value="F:System.nfloat.NaN" />
      <MemberSignature Language="F#" Value=" staticval mutable NaN : nfloat" Usage="System.nfloat.NaN" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public static readonly nfloat NegativeInfinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.nfloat NegativeInfinity" />
      <MemberSignature Language="DocId" Value="F:System.nfloat.NegativeInfinity" />
      <MemberSignature Language="F#" Value=" staticval mutable NegativeInfinity : nfloat" Usage="System.nfloat.NegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static nfloat operator + (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Addition(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Addition(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( + ) : nfloat * nfloat -&gt; nfloat" Usage="l + r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static nfloat operator -- (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Decrement(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Decrement(System.nfloat)" />
      <MemberSignature Language="F#" Value="static member op_Decrement : nfloat -&gt; nfloat" Usage="System.nfloat.op_Decrement v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static nfloat operator / (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Division(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Division(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( / ) : nfloat * nfloat -&gt; nfloat" Usage="l / r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Equality(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( = ) : nfloat * nfloat -&gt; bool" Usage="l = r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator nfloat (decimal v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Explicit(valuetype System.Decimal v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.Decimal)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; nfloat" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator nfloat (double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Explicit(float64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.Double)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; nfloat" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator nfloat (IntPtr v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Explicit(native int v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.IntPtr)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nativeint -&gt; nfloat" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.Byte" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; byte" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.Char" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; char" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.Decimal" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; decimal" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.Int16" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; int16" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.Int32" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; int" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.Int64" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; int64" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator IntPtr (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.IntPtr" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; nativeint" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.SByte" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; sbyte" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.Single" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; single" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.UInt16" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; uint16" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.UInt32" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; uint32" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Explicit(System.nfloat)~System.UInt64" />
      <MemberSignature Language="F#" Value="static member op_Explicit : nfloat -&gt; uint64" Usage="System.nfloat.op_Explicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_GreaterThan(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : nfloat * nfloat -&gt; bool" Usage="l &gt; r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_GreaterThanOrEqual(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : nfloat * nfloat -&gt; bool" Usage="l &gt;= r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(unsigned int8 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.Byte)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (char v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(char v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.Char)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : char -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(int16 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.Int16)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.Int32)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (long v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(int64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.Int64)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator double (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Implicit(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.nfloat)~System.Double" />
      <MemberSignature Language="F#" Value="static member op_Implicit : nfloat -&gt; double" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (sbyte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(int8 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.SByte)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(float32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.Single)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : single -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (ushort v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(unsigned int16 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.UInt16)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (uint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(unsigned int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.UInt32)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator nfloat (ulong v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Implicit(unsigned int64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Implicit(System.UInt64)~System.nfloat" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; nfloat" Usage="System.nfloat.op_Implicit v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static nfloat operator ++ (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Increment(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Increment(System.nfloat)" />
      <MemberSignature Language="F#" Value="static member op_Increment : nfloat -&gt; nfloat" Usage="System.nfloat.op_Increment v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Inequality(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member op_Inequality : nfloat * nfloat -&gt; bool" Usage="System.nfloat.op_Inequality (l, r)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_LessThan(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : nfloat * nfloat -&gt; bool" Usage="l &lt; r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_LessThanOrEqual(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : nfloat * nfloat -&gt; bool" Usage="l &lt;= r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static nfloat operator % (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Modulus(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Modulus(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( % ) : nfloat * nfloat -&gt; nfloat" Usage="l % r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static nfloat operator * (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Multiply(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Multiply(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( * ) : nfloat * nfloat -&gt; nfloat" Usage="l * r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static nfloat operator - (nfloat l, nfloat r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_Subtraction(valuetype System.nfloat l, valuetype System.nfloat r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_Subtraction(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( - ) : nfloat * nfloat -&gt; nfloat" Usage="l - r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.nfloat" />
        <Parameter Name="r" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static nfloat operator - (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_UnaryNegation(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_UnaryNegation(System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : nfloat -&gt; nfloat" Usage="- v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static nfloat operator + (nfloat v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.nfloat op_UnaryPlus(valuetype System.nfloat v) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.op_UnaryPlus(System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : nfloat -&gt; nfloat" Usage="+ v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static nfloat Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.Parse(System.String)" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; nfloat" Usage="System.nfloat.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">A string that contains a number to convert.</param>
        <summary>Converts the string representation of a number to its double-precision floating-point number equivalent.</summary>
        <returns>A nfloat floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
        <remarks>
          <para>The <paramref name="s" /> parameter can contain the current culture's <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Positive%20Infinity%20Symbol&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol">P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Negative%20Infinity%20Symbol&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol">P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Na%20NSymbol&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.NaNSymbol">P:System.Globalization.NumberFormatInfo.NaNSymbol</a></format>, or a string of the form: </para>
          <para>[ws][sign][integral-digits[,]]integral-digits[.[fractional-digits]][E[sign]exponential-digits][ws] </para>
          <para>Elements in square brackets ([ and ]) are optional. The following table describes each element.</para>
          <list type="table">
            <listheader>
              <term>
                <para>Element</para>
              </term>
              <description>
                <para>Description</para>
              </description>
            </listheader>
            <item>
              <term>
                <para>ws</para>
              </term>
              <description>
                <para>A series of white-space characters. </para>
              </description>
            </item>
            <item>
              <term>
                <para>sign</para>
              </term>
              <description>
                <para>A negative sign symbol (-) or a positive sign symbol (+). Only a leading sign can be used. </para>
              </description>
            </item>
            <item>
              <term>
                <para>integral-digits</para>
              </term>
              <description>
                <para>A series of digits ranging from 0 to 9 that specify the integral part of the number. Runs of integral-digits can be partitioned by a group-separator symbol. For example, in some cultures a comma (,) separates groups of thousands. The integral-digits element can be absent if the string contains the fractional-digits element. </para>
              </description>
            </item>
            <item>
              <term>
                <para>,</para>
              </term>
              <description>
                <para>A culture-specific thousands separator symbol.</para>
              </description>
            </item>
            <item>
              <term>
                <para>. </para>
              </term>
              <description>
                <para>A culture-specific decimal point symbol. </para>
              </description>
            </item>
            <item>
              <term>
                <para>fractional-digits</para>
              </term>
              <description>
                <para>A series of digits ranging from 0 to 9 that specify the fractional part of the number. </para>
              </description>
            </item>
            <item>
              <term>
                <para>E </para>
              </term>
              <description>
                <para>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation. </para>
              </description>
            </item>
            <item>
              <term>
                <para>exponential-digits</para>
              </term>
              <description>
                <para>A series of digits ranging from 0 to 9 that specify an exponent. </para>
              </description>
            </item>
          </list>
          <para>The <paramref name="s" /> parameter is interpreted using a combination of the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Styles%20Float&amp;scope=Xamarin" title="F:System.Globalization.NumberStyles.Float">F:System.Globalization.NumberStyles.Float</a></format> and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Styles%20Allow%20Thousands&amp;scope=Xamarin" title="F:System.Globalization.NumberStyles.AllowThousands">F:System.Globalization.NumberStyles.AllowThousands</a></format> flags. This means that white space and thousands separators are allowed, for example, while currency symbols are not. For finer control over which style elements are permitted in <paramref name="s" /> for the parse operation to succeed, call the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20Parse(%20System%20String%20,System%20Globalization%20Number%20Styles%20)&amp;scope=Xamarin" title="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">M:System.Double.Parse(System.String,System.Globalization.NumberStyles)</a></format> or the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20Parse(%20System%20String%20,System%20Globalization%20Number%20Styles%20,System%20IFormat%20Provider%20)&amp;scope=Xamarin" title="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)</a></format> method. </para>
          <para>The <paramref name="s" /> parameter is interpreted using the formatting information in a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info&amp;scope=Xamarin" title="T:System.Globalization.NumberFormatInfo">T:System.Globalization.NumberFormatInfo</a></format> object that is initialized for the current thread culture. For more information, see <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Current%20Info&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.CurrentInfo">P:System.Globalization.NumberFormatInfo.CurrentInfo</a></format>. To parse a string using the formatting information of some other culture, call the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20Parse(%20System%20String%20,System%20IFormat%20Provider%20)&amp;scope=Xamarin" title="M:System.Double.Parse(System.String,System.IFormatProvider)">M:System.Double.Parse(System.String,System.IFormatProvider)</a></format> or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20Parse(%20System%20String%20,System%20Globalization%20Number%20Styles%20,System%20IFormat%20Provider%20)&amp;scope=Xamarin" title="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)</a></format> method.</para>
          <para>Ordinarily, if you pass the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20Parse&amp;scope=Xamarin" title="M:System.Double.Parse*">M:System.Double.Parse*</a></format> method a string that is created by calling the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20To%20String&amp;scope=Xamarin" title="M:System.Double.ToString*">M:System.Double.ToString*</a></format> method, the original <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double&amp;scope=Xamarin" title="T:System.Double">T:System.Double</a></format> value is returned. However, because of a loss of precision, the values may not be equal. In addition, attempting to parse the string representation of either <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20Min%20Value&amp;scope=Xamarin" title="F:System.Double.MinValue">F:System.Double.MinValue</a></format> or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double%20Max%20Value&amp;scope=Xamarin" title="F:System.Double.MaxValue">F:System.Double.MaxValue</a></format> throws an <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Overflow%20Exception&amp;scope=Xamarin" title="T:System.OverflowException">T:System.OverflowException</a></format>, as the following example illustrates. </para>
          <para>code reference: System.Double.Parse#3</para>
          <para>If a separator is encountered in the <paramref name="s" /> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Currency%20Decimal%20Separator&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator">P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Number%20Decimal%20Separator&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator">P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Currency%20Group%20Separator&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator">P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator</a></format>, and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Number%20Group%20Separator&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator">P:System.Globalization.NumberFormatInfo.NumberGroupSeparator</a></format>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static nfloat Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; nfloat" Usage="System.nfloat.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static nfloat Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; nfloat" Usage="System.nfloat.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">A string that contains a number to convert.</param>
        <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s" />.</param>
        <summary>Converts the string representation of a number in a specified culture-specific format to its double-precision floating-point number equivalent.</summary>
        <returns>A nfloat floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</returns>
        <remarks>
          <para>This overload of the <see cref="M:System.nfloat.Parse(System.String,System.IFormatProvider)" /> method is typically used to convert text that can be formatted in a variety of ways to a <see cref="T:System.nfloat" /> value. For example, it can be used to convert the text that is entered by a user into an HTML text box to a numeric value.</para>
          <para>The <paramref name="s" /> parameter is interpreted using a combination of the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Styles%20Float&amp;scope=Xamarin" title="F:System.Globalization.NumberStyles.Float">F:System.Globalization.NumberStyles.Float</a></format> and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Styles%20Allow%20Thousands&amp;scope=Xamarin" title="F:System.Globalization.NumberStyles.AllowThousands">F:System.Globalization.NumberStyles.AllowThousands</a></format> flags. The <paramref name="s" /> parameter can contain <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Positive%20Infinity%20Symbol&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol">P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Negative%20Infinity%20Symbol&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol">P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol</a></format>, or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Na%20NSymbol&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.NaNSymbol">P:System.Globalization.NumberFormatInfo.NaNSymbol</a></format> for the culture specified by <paramref name="provider" />, or it can contain a string of the form: </para>
          <para>[ws][sign]integral-digits[.[fractional-digits]][E[sign]exponential-digits][ws] </para>
          <para>Optional elements are framed in square brackets ([ and ]). Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</para>
          <list type="table">
            <listheader>
              <term>
                <para>Element</para>
              </term>
              <description>
                <para>Description</para>
              </description>
            </listheader>
            <item>
              <term>
                <para>ws</para>
              </term>
              <description>
                <para>A series of white-space characters. </para>
              </description>
            </item>
            <item>
              <term>
                <para>sign</para>
              </term>
              <description>
                <para>A negative sign symbol (-) or a positive sign symbol (+). </para>
              </description>
            </item>
            <item>
              <term>
                <para>integral-digits</para>
              </term>
              <description>
                <para>A series of digits ranging from 0 to 9 that specify the integral part of the number. Runs of integral-digits can be partitioned by a group-separator symbol. For example, in some cultures a comma (,) separates groups of thousands. The integral-digits element can be absent if the string contains the fractional-digits element. </para>
              </description>
            </item>
            <item>
              <term>
                <para>. </para>
              </term>
              <description>
                <para>A culture-specific decimal point symbol. </para>
              </description>
            </item>
            <item>
              <term>
                <para>fractional-digits</para>
              </term>
              <description>
                <para>A series of digits ranging from 0 to 9 that specify the fractional part of the number. </para>
              </description>
            </item>
            <item>
              <term>
                <para>E </para>
              </term>
              <description>
                <para>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation. </para>
              </description>
            </item>
            <item>
              <term>
                <para>exponential-digits</para>
              </term>
              <description>
                <para>A series of digits ranging from 0 to 9 that specify an exponent. </para>
              </description>
            </item>
          </list>
          <para>
          </para>
          <para>The <paramref name="provider" /> parameter is an <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20IFormat%20Provider&amp;scope=Xamarin" title="T:System.IFormatProvider">T:System.IFormatProvider</a></format> implementation whose <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20IFormat%20Provider%20Get%20Format(%20System%20Type%20)&amp;scope=Xamarin" title="M:System.IFormatProvider.GetFormat(System.Type)">M:System.IFormatProvider.GetFormat(System.Type)</a></format> method returns a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info&amp;scope=Xamarin" title="T:System.Globalization.NumberFormatInfo">T:System.Globalization.NumberFormatInfo</a></format> object that supplies culture-specific information used in interpreting the format of <paramref name="s" />. Typically, it is a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info&amp;scope=Xamarin" title="T:System.Globalization.NumberFormatInfo">T:System.Globalization.NumberFormatInfo</a></format> or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Culture%20Info&amp;scope=Xamarin" title="T:System.Globalization.CultureInfo">T:System.Globalization.CultureInfo</a></format> object. If <paramref name="provider" /> is null or a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info&amp;scope=Xamarin" title="T:System.Globalization.NumberFormatInfo">T:System.Globalization.NumberFormatInfo</a></format> cannot be obtained, the formatting information for the current system culture is used. </para>
          <para>Ordinarily, if you pass the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Systemnfloat%20Parse&amp;scope=Xamarin" title="M:System.nfloat.Parse*">M:System.nfloat.Parse*</a></format> method a string that is created by calling the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Systemnfloat%20To%20String&amp;scope=Xamarin" title="M:System.nfloat.ToString*">M:System.nfloat.ToString*</a></format> method, the original <see cref="T:System.nfloat" /> value is returned. However, because of a loss of precision, the values may not be equal. In addition, attempting to parse the string representation of either <see cref="F:System.nfloat.MinValue" /> or <see cref="F:System.nfloat.MaxValue" /> throws an <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Overflow%20Exception&amp;scope=Xamarin" title="T:System.OverflowException">T:System.OverflowException</a></format>.</para>
          <para>If a separator is encountered in the <paramref name="s" /> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Currency%20Decimal%20Separator&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator">P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Number%20Decimal%20Separator&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator">P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Currency%20Group%20Separator&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator">P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator</a></format>, and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Globalization%20Number%20Format%20Info%20Number%20Group%20Separator&amp;scope=Xamarin" title="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator">P:System.Globalization.NumberFormatInfo.NumberGroupSeparator</a></format>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static nfloat Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; nfloat" Usage="System.nfloat.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="C#" Value="public static readonly nfloat PositiveInfinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.nfloat PositiveInfinity" />
      <MemberSignature Language="DocId" Value="F:System.nfloat.PositiveInfinity" />
      <MemberSignature Language="F#" Value=" staticval mutable PositiveInfinity : nfloat" Usage="System.nfloat.PositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public static readonly int Size;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 Size" />
      <MemberSignature Language="DocId" Value="F:System.nfloat.Size" />
      <MemberSignature Language="F#" Value=" staticval mutable Size : int" Usage="System.nfloat.Size" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type targetType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type targetType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="targetType">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nfloat.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.ToString(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="nfloat.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.ToString(System.String)" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="nfloat.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="nfloat.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out nfloat result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.nfloat&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.TryParse(System.String,System.nfloat@)" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.nfloat.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.nfloat" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out nfloat result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.nfloat&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.nfloat.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.nfloat@)" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.nfloat.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.nfloat" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
