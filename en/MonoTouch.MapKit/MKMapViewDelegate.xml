<Type Name="MKMapViewDelegate" FullName="MonoTouch.MapKit.MKMapViewDelegate">
  <TypeSignature Language="C#" Value="public class MKMapViewDelegate : MonoTouch.Foundation.NSObject, IDisposable, MonoTouch.MapKit.IMKMapViewDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MKMapViewDelegate extends MonoTouch.Foundation.NSObject implements class MonoTouch.MapKit.IMKMapViewDelegate, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="old">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="new">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.MapKit.IMKMapViewDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("MKMapViewDelegate", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Used to receive notifications from an MKMapView.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="http://samples.xamarin.com/Samples/ByGuid?guid=167dc2bb-abca-4dc6-b6db-af97a040b57b">Example_ContentControls</related>
    <related type="sample" href="http://samples.xamarin.com/Samples/ByGuid?guid=230c6a25-7d55-4257-ac7c-b8d5a802cc25">Protocols_Delegates_Events</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MKMapViewDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MKMapViewDelegate (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MKMapViewDelegate (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When you invoke the constructor that takes the NSObjectFlag.Empty you taking advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to you.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is your responsibility to completely initialize the object if you chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if your constructors invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, you should instead chain to the proper constructor in your class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MKMapViewDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoTouch.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalloutAccessoryControlTapped">
      <MemberSignature Language="C#" Value="public virtual void CalloutAccessoryControlTapped (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView view, MonoTouch.UIKit.UIControl control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalloutAccessoryControlTapped(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView view, class MonoTouch.UIKit.UIControl control) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:annotationView:calloutAccessoryControlTapped:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
        <Parameter Name="control" Type="MonoTouch.UIKit.UIControl" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="view">To be added.</param>
        <param name="control">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedDragState">
      <MemberSignature Language="C#" Value="public virtual void ChangedDragState (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView annotationView, MonoTouch.MapKit.MKAnnotationViewDragState newState, MonoTouch.MapKit.MKAnnotationViewDragState oldState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangedDragState(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView annotationView, valuetype MonoTouch.MapKit.MKAnnotationViewDragState newState, valuetype MonoTouch.MapKit.MKAnnotationViewDragState oldState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:annotationView:didChangeDragState:fromOldState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="annotationView" Type="MonoTouch.MapKit.MKAnnotationView" />
        <Parameter Name="newState" Type="MonoTouch.MapKit.MKAnnotationViewDragState" />
        <Parameter Name="oldState" Type="MonoTouch.MapKit.MKAnnotationViewDragState" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="annotationView">To be added.</param>
        <param name="newState">To be added.</param>
        <param name="oldState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddAnnotationViews">
      <MemberSignature Language="C#" Value="public virtual void DidAddAnnotationViews (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView[] views);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddAnnotationViews(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView[] views) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:didAddAnnotationViews:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="views" Type="MonoTouch.MapKit.MKAnnotationView[]" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="views">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddOverlayRenderers">
      <MemberSignature Language="C#" Value="public virtual void DidAddOverlayRenderers (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKOverlayRenderer[] renderers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddOverlayRenderers(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKOverlayRenderer[] renderers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:didAddOverlayRenderers:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(7, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="renderers" Type="MonoTouch.MapKit.MKOverlayRenderer[]" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="renderers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddOverlayViews">
      <MemberSignature Language="C#" Value="public virtual void DidAddOverlayViews (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKOverlayView overlayViews);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddOverlayViews(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKOverlayView overlayViews) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:didAddOverlayViews:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Since iOS 7 it is recommended that you use DidAddOverlayRenderers", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="overlayViews" Type="MonoTouch.MapKit.MKOverlayView" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="overlayViews">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChageUserTrackingMode">
      <MemberSignature Language="C#" Value="public virtual void DidChageUserTrackingMode (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKUserTrackingMode mode, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChageUserTrackingMode(class MonoTouch.MapKit.MKMapView mapView, valuetype MonoTouch.MapKit.MKUserTrackingMode mode, bool animated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:didChangeUserTrackingMode:animated:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(5, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="mode" Type="MonoTouch.MapKit.MKUserTrackingMode" />
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="mode">To be added.</param>
        <param name="animated">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDeselectAnnotationView">
      <MemberSignature Language="C#" Value="public virtual void DidDeselectAnnotationView (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDeselectAnnotationView(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:didDeselectAnnotationView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFailToLocateUser">
      <MemberSignature Language="C#" Value="public virtual void DidFailToLocateUser (MonoTouch.MapKit.MKMapView mapView, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFailToLocateUser(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:didFailToLocateUserWithError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishRenderingMap">
      <MemberSignature Language="C#" Value="public virtual void DidFinishRenderingMap (MonoTouch.MapKit.MKMapView mapView, bool fullyRendered);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishRenderingMap(class MonoTouch.MapKit.MKMapView mapView, bool fullyRendered) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapViewDidFinishRenderingMap:fullyRendered:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(7, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="fullyRendered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="fullyRendered">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSelectAnnotationView">
      <MemberSignature Language="C#" Value="public virtual void DidSelectAnnotationView (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSelectAnnotationView(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:didSelectAnnotationView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStopLocatingUser">
      <MemberSignature Language="C#" Value="public virtual void DidStopLocatingUser (MonoTouch.MapKit.MKMapView mapView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidStopLocatingUser(class MonoTouch.MapKit.MKMapView mapView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapViewDidStopLocatingUser:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateUserLocation">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateUserLocation (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKUserLocation userLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateUserLocation(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKUserLocation userLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:didUpdateUserLocation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="userLocation" Type="MonoTouch.MapKit.MKUserLocation" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="userLocation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewForAnnotation">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.MapKit.MKAnnotationView GetViewForAnnotation (MonoTouch.MapKit.MKMapView mapView, MonoTouch.Foundation.NSObject annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.MapKit.MKAnnotationView GetViewForAnnotation(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.Foundation.NSObject annotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:viewForAnnotation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.MapKit.MKAnnotationView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="annotation" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="annotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewForOverlay">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.MapKit.MKOverlayView GetViewForOverlay (MonoTouch.MapKit.MKMapView mapView, MonoTouch.Foundation.NSObject overlay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.MapKit.MKOverlayView GetViewForOverlay(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.Foundation.NSObject overlay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:viewForOverlay:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Since iOS 7 it is recommnended that you use GetRendererForOverlay", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.MapKit.MKOverlayView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="overlay" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="overlay">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadingMapFailed">
      <MemberSignature Language="C#" Value="public virtual void LoadingMapFailed (MonoTouch.MapKit.MKMapView mapView, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadingMapFailed(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapViewDidFailLoadingMap:withError:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapLoaded">
      <MemberSignature Language="C#" Value="public virtual void MapLoaded (MonoTouch.MapKit.MKMapView mapView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MapLoaded(class MonoTouch.MapKit.MKMapView mapView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapViewDidFinishLoadingMap:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverlayRenderer">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.MapKit.MKOverlayRenderer OverlayRenderer (MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.IMKOverlay overlay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.MapKit.MKOverlayRenderer OverlayRenderer(class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.IMKOverlay overlay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:rendererForOverlay:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(7, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.MapKit.MKOverlayRenderer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="overlay" Type="MonoTouch.MapKit.IMKOverlay" />
      </Parameters>
      <Docs>
        <param name="mapView">The <see cref="T:MonoTouch.MapKit.MKMapView" /> being rendered.</param>
        <param name="overlay">The overlay requiring a renderer.</param>
        <summary>Calculates he <see cref="T:MonoTouch.MapKit.MKOverlayRenderer" /> appropriate to the <paramref name="overlay" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>iOS distinguishes between the <see cref="T:MonoTouch.MapKit.MKOverlay" />, which represents the geometry of an overlay, and it's visual presentation. Prior to iOS 7, overlays were rendered using <see cref="T:MonoTouch.MapKit.MKOverlayView" />s. In iOS 7, these classes have been deprecated, and overlays now use the more efficient subclasses of <see cref="T:MonoTouch.MapKit.MKOverlayRenderer" />. </para>
          <para>To create an overlay and its renderer, application developers must add the overlay to the <see cref="T:MonoTouch.MapKit.MKMapView" /> and return the renderer either using the <see cref="M:MonoTouch.MapKit.MKMapView.OverlayRenderer" /> property or by overriding the <see cref="M:MonoTouch.MapKit.MKMapViewDelegate.OverlayRenderer" /> method.</para>
          <para>This method dynamically calculates the renderer, allowing the application developer to reuse renderers with identical properties or to change properties dynamically.</para>
        </remarks>
        <altmember cref="P:MonoTouch.MapKit.MKMapView.OverlayRenderer" />
      </Docs>
    </Member>
    <Member MemberName="RegionChanged">
      <MemberSignature Language="C#" Value="public virtual void RegionChanged (MonoTouch.MapKit.MKMapView mapView, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegionChanged(class MonoTouch.MapKit.MKMapView mapView, bool animated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:regionDidChangeAnimated:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="animated">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionWillChange">
      <MemberSignature Language="C#" Value="public virtual void RegionWillChange (MonoTouch.MapKit.MKMapView mapView, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegionWillChange(class MonoTouch.MapKit.MKMapView mapView, bool animated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapView:regionWillChangeAnimated:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <param name="animated">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillStartLoadingMap">
      <MemberSignature Language="C#" Value="public virtual void WillStartLoadingMap (MonoTouch.MapKit.MKMapView mapView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillStartLoadingMap(class MonoTouch.MapKit.MKMapView mapView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapViewWillStartLoadingMap:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillStartLocatingUser">
      <MemberSignature Language="C#" Value="public virtual void WillStartLocatingUser (MonoTouch.MapKit.MKMapView mapView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillStartLocatingUser(class MonoTouch.MapKit.MKMapView mapView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapViewWillStartLocatingUser:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillStartRenderingMap">
      <MemberSignature Language="C#" Value="public virtual void WillStartRenderingMap (MonoTouch.MapKit.MKMapView mapView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillStartRenderingMap(class MonoTouch.MapKit.MKMapView mapView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapViewWillStartRenderingMap:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(7, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
      </Parameters>
      <Docs>
        <param name="mapView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
