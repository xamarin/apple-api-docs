<Type Name="IMDLMeshBufferAllocator" FullName="ModelIO.IMDLMeshBufferAllocator">
  <TypeSignature Language="C#" Value="public interface IMDLMeshBufferAllocator : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMDLMeshBufferAllocator implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="MDLMeshBufferAllocator", WrapperType=typeof(ModelIO.MDLMeshBufferAllocatorWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateZone", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(ModelIO.IMDLMeshBufferZone), Selector="newZone:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateZone", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(ModelIO.IMDLMeshBufferZone), Selector="newZoneForBuffersWithSize:andType:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateBuffer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(ModelIO.IMDLMeshBuffer), Selector="newBuffer:type:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateBuffer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(ModelIO.IMDLMeshBuffer), Selector="newBufferWithData:type:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateBuffer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(ModelIO.IMDLMeshBuffer), Selector="newBufferFromZone:length:type:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateBuffer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(ModelIO.IMDLMeshBuffer), Selector="newBufferFromZone:data:type:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Interface representing the required methods (if any) of the protocol <see cref="T:ModelIO.MDLMeshBufferAllocator" />.</para>
    </summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:ModelIO.MDLMeshBufferAllocator" />.</para>
      <para>If you create objects that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:ModelIO.MDLMeshBufferAllocator" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:ModelIO.MDLMeshBufferAllocator_Extensions" /> class as extension methods to the interface, allowing you to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateBuffer">
      <MemberSignature Language="C#" Value="public ModelIO.IMDLMeshBuffer CreateBuffer (Foundation.NSData data, ModelIO.MDLMeshBufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ModelIO.IMDLMeshBuffer CreateBuffer(class Foundation.NSData data, valuetype ModelIO.MDLMeshBufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newBufferWithData:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="type" Type="ModelIO.MDLMeshBufferType" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="type">To be added.</param>
        <summary>Creates a new buffer from the specified data, of the specified type, in the default zone of the implementor.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuffer">
      <MemberSignature Language="C#" Value="public ModelIO.IMDLMeshBuffer CreateBuffer (nuint length, ModelIO.MDLMeshBufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ModelIO.IMDLMeshBuffer CreateBuffer(valuetype System.nuint length, valuetype ModelIO.MDLMeshBufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newBuffer:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.nuint" />
        <Parameter Name="type" Type="ModelIO.MDLMeshBufferType" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuffer">
      <MemberSignature Language="C#" Value="public ModelIO.IMDLMeshBuffer CreateBuffer (ModelIO.IMDLMeshBufferZone zone, Foundation.NSData data, ModelIO.MDLMeshBufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ModelIO.IMDLMeshBuffer CreateBuffer(class ModelIO.IMDLMeshBufferZone zone, class Foundation.NSData data, valuetype ModelIO.MDLMeshBufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newBufferFromZone:data:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="ModelIO.IMDLMeshBufferZone" />
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="type" Type="ModelIO.MDLMeshBufferType" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <param name="data">To be added.</param>
        <param name="type">To be added.</param>
        <summary>Creates a new buffer from the specified data, of the specified type, in the specified zone.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuffer">
      <MemberSignature Language="C#" Value="public ModelIO.IMDLMeshBuffer CreateBuffer (ModelIO.IMDLMeshBufferZone zone, nuint length, ModelIO.MDLMeshBufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ModelIO.IMDLMeshBuffer CreateBuffer(class ModelIO.IMDLMeshBufferZone zone, valuetype System.nuint length, valuetype ModelIO.MDLMeshBufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newBufferFromZone:length:type:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="ModelIO.IMDLMeshBufferZone" />
        <Parameter Name="length" Type="System.nuint" />
        <Parameter Name="type" Type="ModelIO.MDLMeshBufferType" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <param name="length">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateZone">
      <MemberSignature Language="C#" Value="public ModelIO.IMDLMeshBufferZone CreateZone (nuint capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ModelIO.IMDLMeshBufferZone CreateZone(valuetype System.nuint capacity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBufferZone</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <summary>Creates a new zone with the specified capacity.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateZone">
      <MemberSignature Language="C#" Value="public ModelIO.IMDLMeshBufferZone CreateZone (Foundation.NSNumber[] sizes, Foundation.NSNumber[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ModelIO.IMDLMeshBufferZone CreateZone(class Foundation.NSNumber[] sizes, class Foundation.NSNumber[] types) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newZoneForBuffersWithSize:andType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBufferZone</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizes" Type="Foundation.NSNumber[]" />
        <Parameter Name="types" Type="Foundation.NSNumber[]" />
      </Parameters>
      <Docs>
        <param name="sizes">To be added.</param>
        <param name="types">To be added.</param>
        <summary>Creates a new zone that is large enough to contain buffers from the list of sizes and corresponding types.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
