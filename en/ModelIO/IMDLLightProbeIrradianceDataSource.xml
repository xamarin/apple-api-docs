<Type Name="IMDLLightProbeIrradianceDataSource" FullName="ModelIO.IMDLLightProbeIrradianceDataSource">
  <TypeSignature Language="C#" Value="public interface IMDLLightProbeIrradianceDataSource : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMDLLightProbeIrradianceDataSource implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ModelIO.IMDLLightProbeIrradianceDataSource" />
  <TypeSignature Language="F#" Value="type IMDLLightProbeIrradianceDataSource = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="MDLLightProbeIrradianceDataSource", WrapperType=typeof(ModelIO.MDLLightProbeIrradianceDataSourceWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetSphericalHarmonicsCoefficients", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(Foundation.NSData), Selector="sphericalHarmonicsCoefficientsAtPosition:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.UnsafeUnretained, GetterSelector="boundingBox", IsProperty=true, IsRequired=true, IsStatic=false, Name="BoundingBox", PropertyType=typeof(ModelIO.MDLAxisAlignedBoundingBox), Selector="boundingBox", SetterSelector="setBoundingBox:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="sphericalHarmonicsLevel", IsProperty=true, IsRequired=false, IsStatic=false, Name="SphericalHarmonicsLevel", PropertyType=typeof(System.nuint), Selector="sphericalHarmonicsLevel", SetterSelector="setSphericalHarmonicsLevel:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetSphericalHarmonicsCoefficients", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(OpenTK.Vector3) }, ReturnType=typeof(Foundation.NSData), Selector="sphericalHarmonicsCoefficientsAtPosition:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:ModelIO.MDLLightProbeIrradianceDataSource" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:ModelIO.MDLLightProbeIrradianceDataSource" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:ModelIO.MDLLightProbeIrradianceDataSource" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:ModelIO.MDLLightProbeIrradianceDataSource_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BoundingBox">
      <MemberSignature Language="C#" Value="public ModelIO.MDLAxisAlignedBoundingBox BoundingBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ModelIO.MDLAxisAlignedBoundingBox BoundingBox" />
      <MemberSignature Language="DocId" Value="P:ModelIO.IMDLLightProbeIrradianceDataSource.BoundingBox" />
      <MemberSignature Language="F#" Value="member this.BoundingBox : ModelIO.MDLAxisAlignedBoundingBox with get, set" Usage="ModelIO.IMDLLightProbeIrradianceDataSource.BoundingBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("boundingBox")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setBoundingBox:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("boundingBox", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setBoundingBox:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.MDLAxisAlignedBoundingBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
