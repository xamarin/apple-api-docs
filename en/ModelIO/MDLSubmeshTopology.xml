<Type Name="MDLSubmeshTopology" FullName="ModelIO.MDLSubmeshTopology">
  <TypeSignature Language="C#" Value="public class MDLSubmeshTopology : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MDLSubmeshTopology extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:ModelIO.MDLSubmeshTopology" />
  <TypeSignature Language="F#" Value="type MDLSubmeshTopology = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("MDLSubmeshTopology", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Describes the topology of the vertices that are indexed by a submesh's index buffers.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/ModelIO/Reference/MDLSubmeshTopology_Class/index.html">Apple documentation for <c>MDLSubmeshTopology</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLSubmeshTopology ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLSubmeshTopology.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MDLSubmeshTopology (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLSubmeshTopology.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLSubmeshTopology : Foundation.NSObjectFlag -&gt; ModelIO.MDLSubmeshTopology" Usage="new ModelIO.MDLSubmeshTopology t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLSubmeshTopology (ModelIO.MDLSubmesh submesh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class ModelIO.MDLSubmesh submesh) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLSubmeshTopology.#ctor(ModelIO.MDLSubmesh)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLSubmeshTopology : ModelIO.MDLSubmesh -&gt; ModelIO.MDLSubmeshTopology" Usage="new ModelIO.MDLSubmeshTopology submesh" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithSubmesh:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="submesh" Type="ModelIO.MDLSubmesh" />
      </Parameters>
      <Docs>
        <param name="submesh">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MDLSubmeshTopology (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLSubmeshTopology.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLSubmeshTopology : nativeint -&gt; ModelIO.MDLSubmeshTopology" Usage="new ModelIO.MDLSubmeshTopology handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="ModelIO.MDLSubmeshTopology.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeCreaseCount">
      <MemberSignature Language="C#" Value="public virtual nuint EdgeCreaseCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint EdgeCreaseCount" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.EdgeCreaseCount" />
      <MemberSignature Language="F#" Value="member this.EdgeCreaseCount : nuint with get, set" Usage="ModelIO.MDLSubmeshTopology.EdgeCreaseCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("edgeCreaseCount")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setEdgeCreaseCount:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("edgeCreaseCount", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setEdgeCreaseCount:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of creases that are contained in the edge crease buffers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeCreaseIndices">
      <MemberSignature Language="C#" Value="public virtual ModelIO.IMDLMeshBuffer EdgeCreaseIndices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ModelIO.IMDLMeshBuffer EdgeCreaseIndices" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.EdgeCreaseIndices" />
      <MemberSignature Language="F#" Value="member this.EdgeCreaseIndices : ModelIO.IMDLMeshBuffer with get, set" Usage="ModelIO.MDLSubmeshTopology.EdgeCreaseIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("edgeCreaseIndices")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setEdgeCreaseIndices:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("edgeCreaseIndices", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setEdgeCreaseIndices:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the mesh buffer that contains the indices to the vertices that define the edges that crease during subdivision.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeCreases">
      <MemberSignature Language="C#" Value="public virtual ModelIO.IMDLMeshBuffer EdgeCreases { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ModelIO.IMDLMeshBuffer EdgeCreases" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.EdgeCreases" />
      <MemberSignature Language="F#" Value="member this.EdgeCreases : ModelIO.IMDLMeshBuffer with get, set" Usage="ModelIO.MDLSubmeshTopology.EdgeCreases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("edgeCreases")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setEdgeCreases:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("edgeCreases", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setEdgeCreases:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the mesh buffer that contains edge smoothness data that correlates with the vertex pairs that are contained in <see cref="P:ModelIO.MDLSubmeshTopology.EdgeCreaseIndices" /> property.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceCount">
      <MemberSignature Language="C#" Value="public virtual nuint FaceCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint FaceCount" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.FaceCount" />
      <MemberSignature Language="F#" Value="member this.FaceCount : nuint with get, set" Usage="ModelIO.MDLSubmeshTopology.FaceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("faceCount")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setFaceCount:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("faceCount", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setFaceCount:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of faces in the submesh.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceTopology">
      <MemberSignature Language="C#" Value="public virtual ModelIO.IMDLMeshBuffer FaceTopology { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ModelIO.IMDLMeshBuffer FaceTopology" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.FaceTopology" />
      <MemberSignature Language="F#" Value="member this.FaceTopology : ModelIO.IMDLMeshBuffer with get, set" Usage="ModelIO.MDLSubmeshTopology.FaceTopology" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("faceTopology")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setFaceTopology:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("faceTopology", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setFaceTopology:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a mesh buffer that contains the number of faces for each corresponding face in the mesh's index buffer.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HoleCount">
      <MemberSignature Language="C#" Value="public virtual nuint HoleCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint HoleCount" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.HoleCount" />
      <MemberSignature Language="F#" Value="member this.HoleCount : nuint with get, set" Usage="ModelIO.MDLSubmeshTopology.HoleCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("holeCount")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setHoleCount:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("holeCount", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setHoleCount:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of holes in the hole buffer.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Holes">
      <MemberSignature Language="C#" Value="public virtual ModelIO.IMDLMeshBuffer Holes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ModelIO.IMDLMeshBuffer Holes" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.Holes" />
      <MemberSignature Language="F#" Value="member this.Holes : ModelIO.IMDLMeshBuffer with get, set" Usage="ModelIO.MDLSubmeshTopology.Holes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("holes")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setHoles:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("holes", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setHoles:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a mesh buffer that contains indices into the submesh's mesh buffer, thus indicating which faces are to be treated as holes when rendering.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexCreaseCount">
      <MemberSignature Language="C#" Value="public virtual nuint VertexCreaseCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint VertexCreaseCount" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.VertexCreaseCount" />
      <MemberSignature Language="F#" Value="member this.VertexCreaseCount : nuint with get, set" Usage="ModelIO.MDLSubmeshTopology.VertexCreaseCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("vertexCreaseCount")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setVertexCreaseCount:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("vertexCreaseCount", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVertexCreaseCount:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of values in the <see cref="P:ModelIO.MDLSubmeshTopology.VertexCreaseIndices" /> property.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexCreaseIndices">
      <MemberSignature Language="C#" Value="public virtual ModelIO.IMDLMeshBuffer VertexCreaseIndices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ModelIO.IMDLMeshBuffer VertexCreaseIndices" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.VertexCreaseIndices" />
      <MemberSignature Language="F#" Value="member this.VertexCreaseIndices : ModelIO.IMDLMeshBuffer with get, set" Usage="ModelIO.MDLSubmeshTopology.VertexCreaseIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("vertexCreaseIndices")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setVertexCreaseIndices:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("vertexCreaseIndices", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVertexCreaseIndices:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the indices of vertices that are to be treated as creases.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexCreases">
      <MemberSignature Language="C#" Value="public virtual ModelIO.IMDLMeshBuffer VertexCreases { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ModelIO.IMDLMeshBuffer VertexCreases" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLSubmeshTopology.VertexCreases" />
      <MemberSignature Language="F#" Value="member this.VertexCreases : ModelIO.IMDLMeshBuffer with get, set" Usage="ModelIO.MDLSubmeshTopology.VertexCreases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("vertexCreases")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setVertexCreases:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("vertexCreases", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVertexCreases:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ModelIO.IMDLMeshBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the sparse mesh buffer that contains vertex smoothness data that are indexed by <see cref="P:ModelIO.MDLSubmeshTopology.VertexCreaseIndices" /> property</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
