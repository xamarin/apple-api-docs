<Type Name="IMDLTransformComponent" FullName="ModelIO.IMDLTransformComponent">
  <TypeSignature Language="C#" Value="public interface IMDLTransformComponent : IDisposable, ModelIO.IMDLComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMDLTransformComponent implements class ModelIO.IMDLComponent, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ModelIO.IMDLTransformComponent" />
  <TypeSignature Language="F#" Value="type IMDLTransformComponent = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IMDLComponent" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ModelIO.IMDLComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="MDLTransformComponent", WrapperType=typeof(ModelIO.MDLTransformComponentWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.UnsafeUnretained, GetterSelector="matrix", IsProperty=true, IsRequired=true, IsStatic=false, Name="Matrix", PropertyType=typeof(OpenTK.Matrix4), Selector="matrix", SetterSelector="setMatrix:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="resetsTransform", IsProperty=true, IsRequired=false, IsStatic=false, Name="ResetsTransform", PropertyType=typeof(System.Boolean), Selector="resetsTransform", SetterSelector="setResetsTransform:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="minimumTime", IsProperty=true, IsRequired=true, IsStatic=false, Name="MinimumTime", PropertyType=typeof(System.Double), Selector="minimumTime")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="maximumTime", IsProperty=true, IsRequired=true, IsStatic=false, Name="MaximumTime", PropertyType=typeof(System.Double), Selector="maximumTime")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Copy, GetterSelector="keyTimes", IsProperty=true, IsRequired=false, IsStatic=false, Name="KeyTimes", PropertyType=typeof(Foundation.NSNumber[]), Selector="keyTimes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="SetLocalTransform", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(OpenTK.Matrix4), typeof(System.Double) }, Selector="setLocalTransform:forTime:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="SetLocalTransform", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(OpenTK.Matrix4) }, Selector="setLocalTransform:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetLocalTransform", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(System.Double) }, ReturnType=typeof(OpenTK.Matrix4), Selector="localTransformAtTime:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=true, Name="CreateGlobalTransform", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ModelIO.MDLObject), typeof(System.Double) }, ReturnType=typeof(OpenTK.Matrix4), Selector="globalTransformWithObject:atTime:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:ModelIO.IMDLTransformComponent" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:ModelIO.IMDLTransformComponent" />.</para>
      <para>If you create objects that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:ModelIO.IMDLTransformComponent" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:ModelIO.MDLTransformComponent_Extensions" /> class as extension methods to the interface, allowing you to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Matrix">
      <MemberSignature Language="C#" Value="public OpenTK.Matrix4 Matrix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Matrix4 Matrix" />
      <MemberSignature Language="DocId" Value="P:ModelIO.IMDLTransformComponent.Matrix" />
      <MemberSignature Language="F#" Value="member this.Matrix : OpenTK.Matrix4 with get, set" Usage="ModelIO.IMDLTransformComponent.Matrix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("matrix", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMatrix:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Matrix4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the matrix of the transform at the earliest specified time.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTime">
      <MemberSignature Language="C#" Value="public double MaximumTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaximumTime" />
      <MemberSignature Language="DocId" Value="P:ModelIO.IMDLTransformComponent.MaximumTime" />
      <MemberSignature Language="F#" Value="member this.MaximumTime : double" Usage="ModelIO.IMDLTransformComponent.MaximumTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maximumTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the last specified time in the transformation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumTime">
      <MemberSignature Language="C#" Value="public double MinimumTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinimumTime" />
      <MemberSignature Language="DocId" Value="P:ModelIO.IMDLTransformComponent.MinimumTime" />
      <MemberSignature Language="F#" Value="member this.MinimumTime : double" Usage="ModelIO.IMDLTransformComponent.MinimumTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minimumTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the first specified time in the transformation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
