<Type Name="MDLTransform" FullName="ModelIO.MDLTransform">
  <TypeSignature Language="C#" Value="public class MDLTransform : Foundation.NSObject, Foundation.INSCopying, IDisposable, ModelIO.IMDLTransformComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MDLTransform extends Foundation.NSObject implements class Foundation.INSCopying, class ModelIO.IMDLComponent, class ModelIO.IMDLTransformComponent, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ModelIO.MDLTransform" />
  <TypeSignature Language="F#" Value="type MDLTransform = class&#xA;    inherit NSObject&#xA;    interface IMDLComponent&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IMDLTransformComponent&#xA;    interface INSCopying" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ModelIO.IMDLComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ModelIO.IMDLTransformComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MDLTransform", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents static and animated coordinate transformations.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/ModelIO/Reference/MDLTransform_Class/index.html">Apple documentation for <c>MDLTransform</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MDLTransform (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLTransform : Foundation.NSObjectFlag -&gt; ModelIO.MDLTransform" Usage="new ModelIO.MDLTransform t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLTransform (ModelIO.IMDLTransformComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class ModelIO.IMDLTransformComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor(ModelIO.IMDLTransformComponent)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLTransform : ModelIO.IMDLTransformComponent -&gt; ModelIO.MDLTransform" Usage="new ModelIO.MDLTransform component" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithTransformComponent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="component" Type="ModelIO.IMDLTransformComponent" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <summary>Creates a new MDLTransform from the specified transform component.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLTransform (OpenTK.Matrix4 matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype OpenTK.Matrix4 matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor(OpenTK.Matrix4)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLTransform : OpenTK.Matrix4 -&gt; ModelIO.MDLTransform" Usage="new ModelIO.MDLTransform matrix" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithMatrix:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use the '(MatrixFloat4x4)' overload instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="matrix" Type="OpenTK.Matrix4" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <summary>Creates a new MDLTransform from the specified matrix.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLTransform (OpenTK.NMatrix4 matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype OpenTK.NMatrix4 matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor(OpenTK.NMatrix4)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLTransform : OpenTK.NMatrix4 -&gt; ModelIO.MDLTransform" Usage="new ModelIO.MDLTransform matrix" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="matrix" Type="OpenTK.NMatrix4" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <summary>Creates a new MDLTransform from the specified matrix.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MDLTransform (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLTransform : nativeint -&gt; ModelIO.MDLTransform" Usage="new ModelIO.MDLTransform handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLTransform (ModelIO.IMDLTransformComponent component, bool resetsTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class ModelIO.IMDLTransformComponent component, bool resetsTransform) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor(ModelIO.IMDLTransformComponent,System.Boolean)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLTransform : ModelIO.IMDLTransformComponent * bool -&gt; ModelIO.MDLTransform" Usage="new ModelIO.MDLTransform (component, resetsTransform)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithTransformComponent:resetsTransform:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="component" Type="ModelIO.IMDLTransformComponent" />
        <Parameter Name="resetsTransform" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <param name="resetsTransform">To be added.</param>
        <summary>Creates a new transform that represents the specified transform <paramref name="component" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLTransform (OpenTK.Matrix4 matrix, bool resetsTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype OpenTK.Matrix4 matrix, bool resetsTransform) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor(OpenTK.Matrix4,System.Boolean)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLTransform : OpenTK.Matrix4 * bool -&gt; ModelIO.MDLTransform" Usage="new ModelIO.MDLTransform (matrix, resetsTransform)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithMatrix:resetsTransform:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use the '(MatrixFloat4x4, bool)' overload instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="matrix" Type="OpenTK.Matrix4" />
        <Parameter Name="resetsTransform" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <param name="resetsTransform">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MDLTransform (OpenTK.NMatrix4 matrix, bool resetsTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype OpenTK.NMatrix4 matrix, bool resetsTransform) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.#ctor(OpenTK.NMatrix4,System.Boolean)" />
      <MemberSignature Language="F#" Value="new ModelIO.MDLTransform : OpenTK.NMatrix4 * bool -&gt; ModelIO.MDLTransform" Usage="new ModelIO.MDLTransform (matrix, resetsTransform)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="matrix" Type="OpenTK.NMatrix4" />
        <Parameter Name="resetsTransform" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <param name="resetsTransform">To be added.</param>
        <summary>Creates a new MDLTransform from the specified matrix.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="ModelIO.MDLTransform.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="mDLTransform.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">Zone to use to allocate this object, or null to use the default zone.</param>
        <summary>Performs a copy of the underlying Objective-C object.</summary>
        <returns>This method performs a copy of the underlying Objective-C object state and returns a new instance of it.  It does not actually try to replicate any managed state.</returns>
        <remarks>Implementation of the INSCopyable interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalTransform">
      <MemberSignature Language="C#" Value="public static OpenTK.Matrix4 CreateGlobalTransform (ModelIO.MDLObject obj, double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.Matrix4 CreateGlobalTransform(class ModelIO.MDLObject obj, float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.CreateGlobalTransform(ModelIO.MDLObject,System.Double)" />
      <MemberSignature Language="F#" Value="static member CreateGlobalTransform : ModelIO.MDLObject * double -&gt; OpenTK.Matrix4" Usage="ModelIO.MDLTransform.CreateGlobalTransform (obj, atTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("globalTransformWithObject:atTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'CreateGlobalTransform4x4' instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Matrix4</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="ModelIO.MDLObject" />
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="atTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalTransform4x4">
      <MemberSignature Language="C#" Value="public static OpenTK.NMatrix4 CreateGlobalTransform4x4 (ModelIO.MDLObject obj, double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.NMatrix4 CreateGlobalTransform4x4(class ModelIO.MDLObject obj, float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.CreateGlobalTransform4x4(ModelIO.MDLObject,System.Double)" />
      <MemberSignature Language="F#" Value="static member CreateGlobalTransform4x4 : ModelIO.MDLObject * double -&gt; OpenTK.NMatrix4" Usage="ModelIO.MDLTransform.CreateGlobalTransform4x4 (obj, atTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.NMatrix4</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="ModelIO.MDLObject" />
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="obj">The object that represents the spatial transform.</param>
        <param name="atTime">The time at which to apply the transform.</param>
        <summary>Creates and returns a global transform for the specified object at the specified time.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalTransform">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Matrix4 GetLocalTransform (double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Matrix4 GetLocalTransform(float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.GetLocalTransform(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member GetLocalTransform : double -&gt; OpenTK.Matrix4&#xA;override this.GetLocalTransform : double -&gt; OpenTK.Matrix4" Usage="mDLTransform.GetLocalTransform atTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("localTransformAtTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Matrix4</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="atTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRotation">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 GetRotation (double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Vector3 GetRotation(float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.GetRotation(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member GetRotation : double -&gt; OpenTK.Vector3&#xA;override this.GetRotation : double -&gt; OpenTK.Vector3" Usage="mDLTransform.GetRotation atTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rotationAtTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="atTime">To be added.</param>
        <summary>Returns the rotation of the transform at the specified time.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRotationMatrix">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Matrix4 GetRotationMatrix (double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Matrix4 GetRotationMatrix(float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.GetRotationMatrix(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member GetRotationMatrix : double -&gt; OpenTK.Matrix4&#xA;override this.GetRotationMatrix : double -&gt; OpenTK.Matrix4" Usage="mDLTransform.GetRotationMatrix atTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rotationMatrixAtTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'GetRotationMatrix4x4' instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Matrix4</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="atTime">To be added.</param>
        <summary>Returns the rotation of the transform at the specified time.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRotationMatrix4x4">
      <MemberSignature Language="C#" Value="public OpenTK.NMatrix4 GetRotationMatrix4x4 (double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype OpenTK.NMatrix4 GetRotationMatrix4x4(float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.GetRotationMatrix4x4(System.Double)" />
      <MemberSignature Language="F#" Value="member this.GetRotationMatrix4x4 : double -&gt; OpenTK.NMatrix4" Usage="mDLTransform.GetRotationMatrix4x4 atTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.NMatrix4</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="atTime">The time at which to get the rotation matrix.</param>
        <summary>&gt;Returns the rotation of the transform at the specified time.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScale">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 GetScale (double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Vector3 GetScale(float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.GetScale(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member GetScale : double -&gt; OpenTK.Vector3&#xA;override this.GetScale : double -&gt; OpenTK.Vector3" Usage="mDLTransform.GetScale atTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scaleAtTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="atTime">To be added.</param>
        <summary>Returns the scale of the transform at the specified time.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShear">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 GetShear (double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Vector3 GetShear(float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.GetShear(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member GetShear : double -&gt; OpenTK.Vector3&#xA;override this.GetShear : double -&gt; OpenTK.Vector3" Usage="mDLTransform.GetShear atTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("shearAtTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="atTime">To be added.</param>
        <summary>Returns the shear of the transform at the specified time.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTranslation">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 GetTranslation (double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Vector3 GetTranslation(float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.GetTranslation(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member GetTranslation : double -&gt; OpenTK.Vector3&#xA;override this.GetTranslation : double -&gt; OpenTK.Vector3" Usage="mDLTransform.GetTranslation atTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("translationAtTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="atTime">To be added.</param>
        <summary>Returns the translation of the transform at the specified time.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyTimes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] KeyTimes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] KeyTimes" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.KeyTimes" />
      <MemberSignature Language="F#" Value="member this.KeyTimes : Foundation.NSNumber[]" Usage="ModelIO.MDLTransform.KeyTimes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("keyTimes", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matrix">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Matrix4 Matrix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Matrix4 Matrix" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.Matrix" />
      <MemberSignature Language="F#" Value="member this.Matrix : OpenTK.Matrix4 with get, set" Usage="ModelIO.MDLTransform.Matrix" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ModelIO.IMDLTransformComponent.Matrix</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("matrix", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMatrix:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Matrix4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the matrix that represents the coordinate transformation relative to the parent.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTime">
      <MemberSignature Language="C#" Value="public virtual double MaximumTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaximumTime" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.MaximumTime" />
      <MemberSignature Language="F#" Value="member this.MaximumTime : double" Usage="ModelIO.MDLTransform.MaximumTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ModelIO.IMDLTransformComponent.MaximumTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maximumTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the timestamp of the last timed data item in the transform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumTime">
      <MemberSignature Language="C#" Value="public virtual double MinimumTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinimumTime" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.MinimumTime" />
      <MemberSignature Language="F#" Value="member this.MinimumTime : double" Usage="ModelIO.MDLTransform.MinimumTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ModelIO.IMDLTransformComponent.MinimumTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minimumTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the timestamp of the first timed data item in the transform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetsTransform">
      <MemberSignature Language="C#" Value="public virtual bool ResetsTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetsTransform" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.ResetsTransform" />
      <MemberSignature Language="F#" Value="member this.ResetsTransform : bool with get, set" Usage="ModelIO.MDLTransform.ResetsTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("resetsTransform")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setResetsTransform:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector3 Rotation" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.Rotation" />
      <MemberSignature Language="F#" Value="member this.Rotation : OpenTK.Vector3 with get, set" Usage="ModelIO.MDLTransform.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("rotation", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRotation:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the rotation aspect of the transformation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector3 Scale" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.Scale" />
      <MemberSignature Language="F#" Value="member this.Scale : OpenTK.Vector3 with get, set" Usage="ModelIO.MDLTransform.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("scale", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setScale:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the componentwise scale factors of the transform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIdentity">
      <MemberSignature Language="C#" Value="public virtual void SetIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetIdentity" />
      <MemberSignature Language="F#" Value="abstract member SetIdentity : unit -&gt; unit&#xA;override this.SetIdentity : unit -&gt; unit" Usage="mDLTransform.SetIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setIdentity")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Makes the transform identical to the identity transform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalTransform">
      <MemberSignature Language="C#" Value="public virtual void SetLocalTransform (OpenTK.Matrix4 transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocalTransform(valuetype OpenTK.Matrix4 transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetLocalTransform(OpenTK.Matrix4)" />
      <MemberSignature Language="F#" Value="abstract member SetLocalTransform : OpenTK.Matrix4 -&gt; unit&#xA;override this.SetLocalTransform : OpenTK.Matrix4 -&gt; unit" Usage="mDLTransform.SetLocalTransform transform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setLocalTransform:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="OpenTK.Matrix4" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <summary>Causes this transform to represent the specified static transform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalTransform">
      <MemberSignature Language="C#" Value="public virtual void SetLocalTransform (OpenTK.Matrix4 transform, double time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocalTransform(valuetype OpenTK.Matrix4 transform, float64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetLocalTransform(OpenTK.Matrix4,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetLocalTransform : OpenTK.Matrix4 * double -&gt; unit&#xA;override this.SetLocalTransform : OpenTK.Matrix4 * double -&gt; unit" Usage="mDLTransform.SetLocalTransform (transform, time)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setLocalTransform:forTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="OpenTK.Matrix4" />
        <Parameter Name="time" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="time">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMatrix">
      <MemberSignature Language="C#" Value="public virtual void SetMatrix (OpenTK.Matrix4 matrix, double time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMatrix(valuetype OpenTK.Matrix4 matrix, float64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetMatrix(OpenTK.Matrix4,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetMatrix : OpenTK.Matrix4 * double -&gt; unit&#xA;override this.SetMatrix : OpenTK.Matrix4 * double -&gt; unit" Usage="mDLTransform.SetMatrix (matrix, time)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setMatrix:forTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'SetMatrix4x4' instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="OpenTK.Matrix4" />
        <Parameter Name="time" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <param name="time">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMatrix4x4">
      <MemberSignature Language="C#" Value="public void SetMatrix4x4 (OpenTK.NMatrix4 matrix, double time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMatrix4x4(valuetype OpenTK.NMatrix4 matrix, float64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetMatrix4x4(OpenTK.NMatrix4,System.Double)" />
      <MemberSignature Language="F#" Value="member this.SetMatrix4x4 : OpenTK.NMatrix4 * double -&gt; unit" Usage="mDLTransform.SetMatrix4x4 (matrix, time)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="OpenTK.NMatrix4" />
        <Parameter Name="time" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <param name="time">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRotation">
      <MemberSignature Language="C#" Value="public virtual void SetRotation (OpenTK.Vector3 rotation, double time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRotation(valuetype OpenTK.Vector3 rotation, float64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetRotation(OpenTK.Vector3,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetRotation : OpenTK.Vector3 * double -&gt; unit&#xA;override this.SetRotation : OpenTK.Vector3 * double -&gt; unit" Usage="mDLTransform.SetRotation (rotation, time)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setRotation:forTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotation" Type="OpenTK.Vector3" />
        <Parameter Name="time" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rotation">To be added.</param>
        <param name="time">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="C#" Value="public virtual void SetScale (OpenTK.Vector3 scale, double time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScale(valuetype OpenTK.Vector3 scale, float64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetScale(OpenTK.Vector3,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetScale : OpenTK.Vector3 * double -&gt; unit&#xA;override this.SetScale : OpenTK.Vector3 * double -&gt; unit" Usage="mDLTransform.SetScale (scale, time)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setScale:forTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="OpenTK.Vector3" />
        <Parameter Name="time" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <param name="time">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShear">
      <MemberSignature Language="C#" Value="public virtual void SetShear (OpenTK.Vector3 scale, double time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShear(valuetype OpenTK.Vector3 scale, float64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetShear(OpenTK.Vector3,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetShear : OpenTK.Vector3 * double -&gt; unit&#xA;override this.SetShear : OpenTK.Vector3 * double -&gt; unit" Usage="mDLTransform.SetShear (scale, time)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setShear:forTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="OpenTK.Vector3" />
        <Parameter Name="time" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <param name="time">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTranslation">
      <MemberSignature Language="C#" Value="public virtual void SetTranslation (OpenTK.Vector3 translation, double time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTranslation(valuetype OpenTK.Vector3 translation, float64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:ModelIO.MDLTransform.SetTranslation(OpenTK.Vector3,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetTranslation : OpenTK.Vector3 * double -&gt; unit&#xA;override this.SetTranslation : OpenTK.Vector3 * double -&gt; unit" Usage="mDLTransform.SetTranslation (translation, time)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setTranslation:forTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="translation" Type="OpenTK.Vector3" />
        <Parameter Name="time" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="translation">To be added.</param>
        <param name="time">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 Shear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector3 Shear" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.Shear" />
      <MemberSignature Language="F#" Value="member this.Shear : OpenTK.Vector3 with get, set" Usage="ModelIO.MDLTransform.Shear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("shear", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setShear:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the shear of the transform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 Translation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector3 Translation" />
      <MemberSignature Language="DocId" Value="P:ModelIO.MDLTransform.Translation" />
      <MemberSignature Language="F#" Value="member this.Translation : OpenTK.Vector3 with get, set" Usage="ModelIO.MDLTransform.Translation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("translation", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTranslation:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the translation of the transform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
