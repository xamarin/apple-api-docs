<Type Name="CGPDFDictionary" FullName="MonoTouch.CoreGraphics.CGPDFDictionary">
  <TypeSignature Language="C#" Value="public class CGPDFDictionary : MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGPDFDictionary extends System.Object implements class MonoTouch.ObjCRuntime.INativeObject" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a PDF Dictionary.</summary>
    <remarks>Dictionaries are used extensively in the PDF file format.
    Instances of this class represent dictionaries in your documents
    and the methods in this class can be used to look up the values in
    the dictionary or iterate over all of the elements of
    it.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGPDFDictionary (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply (Action&lt;string,MonoTouch.CoreGraphics.CGPDFObject&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply(class System.Action`2&lt;string, class MonoTouch.CoreGraphics.CGPDFObject&gt; callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.String,MonoTouch.CoreGraphics.CGPDFObject&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply (Action&lt;string,object&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply(class System.Action`2&lt;string, object&gt; callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the Apply(Action&lt;string,CGPDFObject&gt; method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">The method or lambda to be invoked for each element in the dictionary.</param>
        <summary>Iterates over all the elements in the dictionary, invoking the provided callback method for each element.</summary>
        <remarks>
          <para>This method is used to iterate over all of the elements in the dictionary without having to know the names of the keys in the dictionary. </para>
          <para>The callback is invoked with the name of the
	  dictionary key and an boxed object.  The type of the boxed
	  object in the callback is one of: null value, boolean, int,
	  float, string, CGPDFArray, CGPDFDictionary or
	  CGPDFStream.
	</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of items on this dictionary.</summary>
        <value>
        </value>
        <remarks>You can iterate over the dictionary elements by using the Apply method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArray">
      <MemberSignature Language="C#" Value="public bool GetArray (string key, out MonoTouch.CoreGraphics.CGPDFArray array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetArray(string key, class MonoTouch.CoreGraphics.CGPDFArray array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="array" Type="MonoTouch.CoreGraphics.CGPDFArray&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The name of the element to get out of the dictionary.</param>
        <param name="array">The array, if the function returns true.</param>
        <summary>Looks up an array value by name on the dictionary.</summary>
        <returns>true if the value was found on the dictionary and the out parameter set to the value.   If the value is false, the result of the out parameter is undefined.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (string key, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean(string key, bool result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The name of the element to get out of the dictionary.</param>
        <param name="result">The boolean value, if the function returns true.</param>
        <summary>Looks up a boolean value by name on the dictionary.</summary>
        <returns>true if the value was found on the dictionary and the out parameter set to the value.   If the value is false, the result of the out parameter is undefined.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDictionary">
      <MemberSignature Language="C#" Value="public bool GetDictionary (string key, out MonoTouch.CoreGraphics.CGPDFDictionary result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetDictionary(string key, class MonoTouch.CoreGraphics.CGPDFDictionary result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="MonoTouch.CoreGraphics.CGPDFDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The name of the element to get out of the dictionary.</param>
        <param name="result">The dictionary, if the function returns true.</param>
        <summary>Looks up a dictionary value by name on the dictionary.</summary>
        <returns>true if the value was found on the dictionary and the out parameter set to the value.   If the value is false, the result of the out parameter is undefined.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public bool GetFloat (string key, out float result);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetFloat(string key, float32 result) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public bool GetFloat (string key, out nfloat result);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetFloat(string key, valuetype System.nfloat result) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Single&amp;" RefType="out" apistyle="classic" />
        <Parameter Name="result" Type="System.nfloat&amp;" RefType="out" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="key">The name of the element to get out of the dictionary.</param>
        <param name="result">The float value, if the function returns true.</param>
        <summary>Looks up a float value by name on the dictionary.</summary>
        <returns>true if the value was found on the dictionary and the out parameter set to the value.   If the value is false, the result of the out parameter is undefined.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInt">
      <MemberSignature Language="C#" Value="public bool GetInt (string key, out int result);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetInt(string key, int32 result) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public bool GetInt (string key, out nint result);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetInt(string key, valuetype System.nint result) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" apistyle="classic" />
        <Parameter Name="result" Type="System.nint&amp;" RefType="out" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="key">The name of the element to get out of the dictionary.</param>
        <param name="result">The integer, if the function returns true.</param>
        <summary>Looks up an integer value by name on the dictionary.</summary>
        <returns>true if the value was found on the dictionary and the out parameter set to the value.   If the value is false, the result of the out parameter is undefined.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public bool GetName (string key, out string result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetName(string key, string result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The name of the element to get out of the dictionary.</param>
        <param name="result">The name, if the function returns true.</param>
        <summary>Looks up a name in the dictionary.</summary>
        <returns>true if the value was found on the dictionary and the out parameter set to the value.   If the value is false, the result of the out parameter is undefined.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public bool GetStream (string key, out MonoTouch.CoreGraphics.CGPDFStream result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStream(string key, class MonoTouch.CoreGraphics.CGPDFStream result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="MonoTouch.CoreGraphics.CGPDFStream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The name of the element to get out of the dictionary.</param>
        <param name="result">The stream, if the function returns true.</param>
        <summary>Looks up a CGPDFStream in the dictionary.</summary>
        <returns>true if the value was found on the dictionary and the out parameter set to the value.   If the value is false, the result of the out parameter is undefined.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public bool GetString (string key, out string result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetString(string key, string result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The name of the element to get out of the dictionary.</param>
        <param name="result">The string, if the function returns true.</param>
        <summary>Looks up a string in the dictionary.</summary>
        <returns>true if the value was found on the dictionary and the out parameter set to the value.   If the value is false, the result of the out parameter is undefined.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
