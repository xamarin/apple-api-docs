<Type Name="CGShading" FullName="MonoTouch.CoreGraphics.CGShading">
  <TypeSignature Language="C#" Value="public class CGShading : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGShading extends System.Object implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A type that represents a Quartz shading.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGShading (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAxial">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGShading CreateAxial (MonoTouch.CoreGraphics.CGColorSpace colorspace, System.Drawing.PointF start, System.Drawing.PointF end, MonoTouch.CoreGraphics.CGFunction function, bool extendStart, bool extendEnd);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreGraphics.CGShading CreateAxial(class MonoTouch.CoreGraphics.CGColorSpace colorspace, valuetype System.Drawing.PointF start, valuetype System.Drawing.PointF end, class MonoTouch.CoreGraphics.CGFunction function, bool extendStart, bool extendEnd) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGShading CreateAxial (MonoTouch.CoreGraphics.CGColorSpace colorspace, MonoTouch.CoreGraphics.CGPoint start, MonoTouch.CoreGraphics.CGPoint end, MonoTouch.CoreGraphics.CGFunction function, bool extendStart, bool extendEnd);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreGraphics.CGShading CreateAxial(class MonoTouch.CoreGraphics.CGColorSpace colorspace, valuetype MonoTouch.CoreGraphics.CGPoint start, valuetype MonoTouch.CoreGraphics.CGPoint end, class MonoTouch.CoreGraphics.CGFunction function, bool extendStart, bool extendEnd) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGShading</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorspace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
        <Parameter Name="start" Type="System.Drawing.PointF" apistyle="classic" />
        <Parameter Name="end" Type="System.Drawing.PointF" apistyle="classic" />
        <Parameter Name="function" Type="MonoTouch.CoreGraphics.CGFunction" />
        <Parameter Name="extendStart" Type="System.Boolean" />
        <Parameter Name="extendEnd" Type="System.Boolean" />
        <Parameter Name="start" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        <Parameter Name="end" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="colorspace">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="function">To be added.</param>
        <param name="extendStart">To be added.</param>
        <param name="extendEnd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRadial">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGShading CreateRadial (MonoTouch.CoreGraphics.CGColorSpace colorspace, System.Drawing.PointF start, float startRadius, System.Drawing.PointF end, float endRadius, MonoTouch.CoreGraphics.CGFunction function, bool extendStart, bool extendEnd);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreGraphics.CGShading CreateRadial(class MonoTouch.CoreGraphics.CGColorSpace colorspace, valuetype System.Drawing.PointF start, float32 startRadius, valuetype System.Drawing.PointF end, float32 endRadius, class MonoTouch.CoreGraphics.CGFunction function, bool extendStart, bool extendEnd) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGShading CreateRadial (MonoTouch.CoreGraphics.CGColorSpace colorspace, MonoTouch.CoreGraphics.CGPoint start, nfloat startRadius, MonoTouch.CoreGraphics.CGPoint end, nfloat endRadius, MonoTouch.CoreGraphics.CGFunction function, bool extendStart, bool extendEnd);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreGraphics.CGShading CreateRadial(class MonoTouch.CoreGraphics.CGColorSpace colorspace, valuetype MonoTouch.CoreGraphics.CGPoint start, valuetype System.nfloat startRadius, valuetype MonoTouch.CoreGraphics.CGPoint end, valuetype System.nfloat endRadius, class MonoTouch.CoreGraphics.CGFunction function, bool extendStart, bool extendEnd) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGShading</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorspace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
        <Parameter Name="start" Type="System.Drawing.PointF" apistyle="classic" />
        <Parameter Name="startRadius" Type="System.Single" apistyle="classic" />
        <Parameter Name="end" Type="System.Drawing.PointF" apistyle="classic" />
        <Parameter Name="endRadius" Type="System.Single" apistyle="classic" />
        <Parameter Name="function" Type="MonoTouch.CoreGraphics.CGFunction" />
        <Parameter Name="extendStart" Type="System.Boolean" />
        <Parameter Name="extendEnd" Type="System.Boolean" />
        <Parameter Name="start" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        <Parameter Name="startRadius" Type="System.nfloat" apistyle="unified" />
        <Parameter Name="end" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        <Parameter Name="endRadius" Type="System.nfloat" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="colorspace">To be added.</param>
        <param name="start">To be added.</param>
        <param name="startRadius">To be added.</param>
        <param name="end">To be added.</param>
        <param name="endRadius">To be added.</param>
        <param name="function">To be added.</param>
        <param name="extendStart">To be added.</param>
        <param name="extendEnd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGShading object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGShading class.</para>
          <para>Calling the Dispose method when you are finished using the CGShading ensures that all external resources used by this managed object are released as soon as possible.  Once you have invoked the Dispose method, the object is no longer useful and you should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGShading object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGShading class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when you are finished using the CGShading ensures that all external resources used by this managed object are released as soon as possible.  Once you have invoked the Dispose method, the object is no longer useful and you should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGShading ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGShading object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
