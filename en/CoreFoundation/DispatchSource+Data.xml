<Type Name="DispatchSource+Data" FullName="CoreFoundation.DispatchSource+Data">
  <TypeSignature Language="C#" Value="public class DispatchSource.Data : CoreFoundation.DispatchSource" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit DispatchSource/Data extends CoreFoundation.DispatchSource" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreFoundation.DispatchSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Base class for dispatch sources that allow applications to trigger an event handler on the target queue.</summary>
    <remarks>
      <para>Applications can post data onto a <see cref="T:CoreFoundation.DispatchSource+Data" /> by calling the <see cref="M:CoreFoundation.DispatchSource+Data.MergeData" /> method.   The data is surfaced is then available in to the handler in the <see cref="P:CoreFoundation.DispatchSource+Data.PendingData" /> property.   </para>
      <para>
      </para>
      <para>If multiple calls to MergeData are done, the result surfaced by PendingData will depend on whether you created a <see cref="T:CoreFoundation.DispatchSource+DataAdd" /> which will add the values together or a <see cref="T:CoreFoundation.DispatchSource+DataOr" /> which will or the values together.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="MergeData">
      <MemberSignature Language="C#" Value="public void MergeData (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeData(native int value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value">Data to be posted to the event source.</param>
        <summary>Posts the specific value and triggers the event handler on the target queue.</summary>
        <remarks>
          <para>Applications can post data onto a <see cref="T:CoreFoundation.DispatchSource+Data" /> by calling the <see cref="M:CoreFoundation.DispatchSource+Data.MergeData" /> method.   The data is surfaced is then available in to the handler in the <see cref="P:CoreFoundation.DispatchSource+Data.PendingData" /> property.   </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PendingData">
      <MemberSignature Language="C#" Value="public IntPtr PendingData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int PendingData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the data that has been posted for this event source.</summary>
        <value>The result of the data posted to the data dispatch source.</value>
        <remarks>
          <para>If multiple calls to MergeData are done, the result surfaced by PendingData will depend on whether you created a <see cref="T:CoreFoundation.DispatchSource+DataAdd" /> which will add the values together or a <see cref="T:CoreFoundation.DispatchSource+DataOr" /> which will or the values together.</para>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
