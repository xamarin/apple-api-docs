<Type Name="CFMessagePort" FullName="CoreFoundation.CFMessagePort">
  <TypeSignature Language="C#" Value="public class CFMessagePort : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CFMessagePort extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A communication channel between multiple threads on the local device.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="protected void Check ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Check() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Method that developers can call from their own subclasses to ensure that the port has not been disposed.</summary>
        <remarks>This method raises an ObjectDisposedException if the Handle has been set to IntPtr.Zero (indicating that the object has been disposed).</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLocalPort">
      <MemberSignature Language="C#" Value="public static CoreFoundation.CFMessagePort CreateLocalPort (string name, CoreFoundation.CFMessagePort.CFMessagePortCallBack callback, CoreFoundation.CFAllocator allocator = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreFoundation.CFMessagePort CreateLocalPort(string name, class CoreFoundation.CFMessagePort/CFMessagePortCallBack callback, class CoreFoundation.CFAllocator allocator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreFoundation.CFMessagePort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="CoreFoundation.CFMessagePort+CFMessagePortCallBack" />
        <Parameter Name="allocator" Type="CoreFoundation.CFAllocator" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="allocator">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRemotePort">
      <MemberSignature Language="C#" Value="public static CoreFoundation.CFMessagePort CreateRemotePort (CoreFoundation.CFAllocator allocator, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreFoundation.CFMessagePort CreateRemotePort(class CoreFoundation.CFAllocator allocator, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreFoundation.CFMessagePort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allocator" Type="CoreFoundation.CFAllocator" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="allocator">To be added.</param>
        <param name="name">To be added.</param>
        <summary>Deprecated.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRunLoopSource">
      <MemberSignature Language="C#" Value="public CoreFoundation.CFRunLoopSource CreateRunLoopSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreFoundation.CFRunLoopSource CreateRunLoopSource() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreFoundation.CFRunLoopSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a CFRunLoopSource object for a CFMessagePort object.</summary>
        <returns>The new CFRunLoopSource object for listening port</returns>
        <remarks>Method returns loop which is not added to any run loop. Use <see cref="M:CoreFoundation.CFRunLoop.AddSource" /> to activate the loop.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CFMessagePort object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CFMessagePort class.</para>
          <para>Calling the Dispose method when the application is finished using the CFMessagePort ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CFMessagePort object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CFMessagePort class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CFMessagePort ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CFMessagePort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CFMessagePort object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidating a message port prevents the port from ever sending or receiving any more messages. </summary>
        <remarks>The message port is not deallocated after invalidation, however <see cref="P:CoreFoundation.CFMessagePort.IsValid" /> property is set to be true.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidationCallback">
      <MemberSignature Language="C#" Value="public Action InvalidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action InvalidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the invalidation callback method for a CFMessagePort object.</summary>
        <value>Delegate</value>
        <remarks>Set null value to remove callback. Callback will be fired on message on port invalidation.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRemote">
      <MemberSignature Language="C#" Value="public bool IsRemote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRemote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Boolean value that indicates whether a current instance of CFMessagePort object represents a remote port.</summary>
        <value>Boolean value.</value>
        <remarks>Property returns true if CFMessagePort is remote.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a boolean value that indicates whether a CFMessagePort object is valid.</summary>
        <value>Boolean value.</value>
        <remarks>Property indicates whether message port can send or receive messages.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The registered name of message port.</summary>
        <value>String representation of message port's name.</value>
        <remarks> Property returns null if port have no name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public CoreFoundation.CFMessagePortSendRequestStatus SendRequest (int msgid, Foundation.NSData data, double sendTimeout, double rcvTimeout, Foundation.NSString replyMode, out Foundation.NSData returnData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreFoundation.CFMessagePortSendRequestStatus SendRequest(int32 msgid, class Foundation.NSData data, float64 sendTimeout, float64 rcvTimeout, class Foundation.NSString replyMode, class Foundation.NSData returnData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreFoundation.CFMessagePortSendRequestStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msgid" Type="System.Int32" />
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="sendTimeout" Type="System.Double" />
        <Parameter Name="rcvTimeout" Type="System.Double" />
        <Parameter Name="replyMode" Type="Foundation.NSString" />
        <Parameter Name="returnData" Type="Foundation.NSData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="msgid">To be added.</param>
        <param name="data">To be added.</param>
        <param name="sendTimeout">To be added.</param>
        <param name="rcvTimeout">To be added.</param>
        <param name="replyMode">To be added.</param>
        <param name="returnData">To be added.</param>
        <summary>Sends a message to the port.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDispatchQueue">
      <MemberSignature Language="C#" Value="public void SetDispatchQueue (CoreFoundation.DispatchQueue queue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDispatchQueue(class CoreFoundation.DispatchQueue queue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="CoreFoundation.DispatchQueue" />
      </Parameters>
      <Docs>
        <param name="queue">To be added.</param>
        <summary>Schedules message port’s callbacks on the specified dispatch queue.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
