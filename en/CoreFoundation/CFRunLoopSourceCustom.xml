<Type Name="CFRunLoopSourceCustom" FullName="CoreFoundation.CFRunLoopSourceCustom">
  <TypeSignature Language="C#" Value="public abstract class CFRunLoopSourceCustom : CoreFoundation.CFRunLoopSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CFRunLoopSourceCustom extends CoreFoundation.CFRunLoopSource" />
  <TypeSignature Language="DocId" Value="T:CoreFoundation.CFRunLoopSourceCustom" />
  <TypeSignature Language="F#" Value="type CFRunLoopSourceCustom = class&#xA;    inherit CFRunLoopSource" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreFoundation.CFRunLoopSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>An abstract <see cref="T:CoreFoundation.CFRunLoop" /> that, when extended, gives the application developer fine-grained control over lifecycle events. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CFRunLoopSourceCustom ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.CFRunLoopSourceCustom.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.CFRunLoopSourceCustom.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="cFRunLoopSourceCustom.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CFRunLoopSourceCustom object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CFRunLoopSourceCustom class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CFRunLoopSourceCustom ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancel">
      <MemberSignature Language="C#" Value="protected abstract void OnCancel (CoreFoundation.CFRunLoop loop, Foundation.NSString mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancel(class CoreFoundation.CFRunLoop loop, class Foundation.NSString mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.CFRunLoopSourceCustom.OnCancel(CoreFoundation.CFRunLoop,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="abstract member OnCancel : CoreFoundation.CFRunLoop * Foundation.NSString -&gt; unit" Usage="cFRunLoopSourceCustom.OnCancel (loop, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loop" Type="CoreFoundation.CFRunLoop" />
        <Parameter Name="mode" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="loop">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPerform">
      <MemberSignature Language="C#" Value="protected abstract void OnPerform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPerform() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.CFRunLoopSourceCustom.OnPerform" />
      <MemberSignature Language="F#" Value="abstract member OnPerform : unit -&gt; unit" Usage="cFRunLoopSourceCustom.OnPerform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSchedule">
      <MemberSignature Language="C#" Value="protected abstract void OnSchedule (CoreFoundation.CFRunLoop loop, Foundation.NSString mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSchedule(class CoreFoundation.CFRunLoop loop, class Foundation.NSString mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreFoundation.CFRunLoopSourceCustom.OnSchedule(CoreFoundation.CFRunLoop,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="abstract member OnSchedule : CoreFoundation.CFRunLoop * Foundation.NSString -&gt; unit" Usage="cFRunLoopSourceCustom.OnSchedule (loop, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loop" Type="CoreFoundation.CFRunLoop" />
        <Parameter Name="mode" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="loop">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
