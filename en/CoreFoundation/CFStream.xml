<Type Name="CFStream" FullName="CoreFoundation.CFStream">
  <TypeSignature Language="C#" Value="public abstract class CFStream : MonoTouch.CoreFoundation.CFType, IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CFStream extends MonoTouch.CoreFoundation.CFType implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.CoreFoundation.CFType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An abstract class that defines a stream for reading or writing bytes.</summary>
    <remarks>
      <format type="text/html">
        <h2>Converting CFStreams to NSStreams</h2>
      </format>
      <para>
	If you need to turn a CFStream into an NSStream, or an
	NSStream subclass, you can do so by surfacing an NSStream
	version of the method like this:
      </para>
      <example>
        <code lang="c#"><![CDATA[
CFReadStream readStream;
CFWriteStream writeStream;
CFStream.CreatePairWithSocketToHost("www.google.com", 80, out readStream, out writeStream);

// 
// Get NSStream variatns
//
_inputStream = ObjCRuntime.Runtime.GetNSObject<NSInputStream>(readStream.Handle);
_outputStream =
ObjCRuntime.Runtime.GetNSObject<NSOutputStream>(writeStream.Handle);
]]></code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CFStream (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAcceptBytesEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoTouch.CoreFoundation.CFStream.StreamEventArgs&gt; CanAcceptBytesEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoTouch.CoreFoundation.CFStream/StreamEventArgs&gt; CanAcceptBytesEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoTouch.CoreFoundation.CFStream+StreamEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckError">
      <MemberSignature Language="C#" Value="protected void CheckError ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckError() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckHandle">
      <MemberSignature Language="C#" Value="protected void CheckHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckHandle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoTouch.CoreFoundation.CFStream.StreamEventArgs&gt; ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoTouch.CoreFoundation.CFStream/StreamEventArgs&gt; ClosedEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoTouch.CoreFoundation.CFStream+StreamEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBoundPair">
      <MemberSignature Language="C#" Value="public static void CreateBoundPair (out MonoTouch.CoreFoundation.CFReadStream readStream, out MonoTouch.CoreFoundation.CFWriteStream writeStream, nint bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateBoundPair(class MonoTouch.CoreFoundation.CFReadStream readStream, class MonoTouch.CoreFoundation.CFWriteStream writeStream, valuetype System.nint bufferSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readStream" Type="MonoTouch.CoreFoundation.CFReadStream&amp;" RefType="out" />
        <Parameter Name="writeStream" Type="MonoTouch.CoreFoundation.CFWriteStream&amp;" RefType="out" />
        <Parameter Name="bufferSize" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="readStream">On return, contains a stream that can
	be used to read data from the other endpoint.</param>
        <param name="writeStream">On return, contains a stream that
	can be used to write data that is later read by the readStream.</param>
        <param name="bufferSize">Size of the buffer used to
	communicate the writing stream to the reading stream.</param>
        <summary>Creates two streams that act as a pipe.   They are bound together, what is
	written on the writing stream can be read by the reading
	stream. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForHTTPRequest">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreServices.CFHTTPStream CreateForHTTPRequest (MonoTouch.CoreServices.CFHTTPMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreServices.CFHTTPStream CreateForHTTPRequest(class MonoTouch.CoreServices.CFHTTPMessage request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use 'NSUrlSession'.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use 'NSUrlSession'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreServices.CFHTTPStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.CoreServices.CFHTTPMessage" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForStreamedHTTPRequest">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreServices.CFHTTPStream CreateForStreamedHTTPRequest (MonoTouch.CoreServices.CFHTTPMessage request, MonoTouch.CoreFoundation.CFReadStream body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreServices.CFHTTPStream CreateForStreamedHTTPRequest(class MonoTouch.CoreServices.CFHTTPMessage request, class MonoTouch.CoreFoundation.CFReadStream body) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreServices.CFHTTPStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.CoreServices.CFHTTPMessage" />
        <Parameter Name="body" Type="MonoTouch.CoreFoundation.CFReadStream" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="body">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForStreamedHTTPRequest">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreServices.CFHTTPStream CreateForStreamedHTTPRequest (MonoTouch.CoreServices.CFHTTPMessage request, MonoTouch.Foundation.NSInputStream body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.CoreServices.CFHTTPStream CreateForStreamedHTTPRequest(class MonoTouch.CoreServices.CFHTTPMessage request, class MonoTouch.Foundation.NSInputStream body) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreServices.CFHTTPStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.CoreServices.CFHTTPMessage" />
        <Parameter Name="body" Type="MonoTouch.Foundation.NSInputStream" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="body">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePairWithPeerSocketSignature">
      <MemberSignature Language="C#" Value="public static void CreatePairWithPeerSocketSignature (System.Net.Sockets.AddressFamily family, System.Net.Sockets.SocketType type, System.Net.Sockets.ProtocolType proto, System.Net.IPEndPoint endpoint, out MonoTouch.CoreFoundation.CFReadStream readStream, out MonoTouch.CoreFoundation.CFWriteStream writeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreatePairWithPeerSocketSignature(valuetype System.Net.Sockets.AddressFamily family, valuetype System.Net.Sockets.SocketType type, valuetype System.Net.Sockets.ProtocolType proto, class System.Net.IPEndPoint endpoint, class MonoTouch.CoreFoundation.CFReadStream readStream, class MonoTouch.CoreFoundation.CFWriteStream writeStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="type" Type="System.Net.Sockets.SocketType" />
        <Parameter Name="proto" Type="System.Net.Sockets.ProtocolType" />
        <Parameter Name="endpoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="readStream" Type="MonoTouch.CoreFoundation.CFReadStream&amp;" RefType="out" />
        <Parameter Name="writeStream" Type="MonoTouch.CoreFoundation.CFWriteStream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="family">Address family to use.</param>
        <param name="type">Desired socket type.</param>
        <param name="proto">Desired protocol type.</param>
        <param name="endpoint">Endpoint to connect to.</param>
        <param name="readStream">On return, contains a stream that can
	be used to read from that end point.</param>
        <param name="writeStream">On return, contains a stream that
	can be used to write to the end point.</param>
        <summary>Creates a reading and a writing CFStream to an
        endpoint that are configured to use a specific socket address
        family, a socket type and a protocol.</summary>
        <remarks>
          <para>
	    Use this method when you need more control over the type
	    of connection that you need.   Unlike the other methods in
	    CFStream which default to TCP/IP streams (which sets protocol to
	    Internet, socket type to stream and protocol to TCP) with
	    this method you can specify those parameter individually.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePairWithSocket">
      <MemberSignature Language="C#" Value="public static void CreatePairWithSocket (MonoTouch.CoreFoundation.CFSocket socket, out MonoTouch.CoreFoundation.CFReadStream readStream, out MonoTouch.CoreFoundation.CFWriteStream writeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreatePairWithSocket(class MonoTouch.CoreFoundation.CFSocket socket, class MonoTouch.CoreFoundation.CFReadStream readStream, class MonoTouch.CoreFoundation.CFWriteStream writeStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="MonoTouch.CoreFoundation.CFSocket" />
        <Parameter Name="readStream" Type="MonoTouch.CoreFoundation.CFReadStream&amp;" RefType="out" />
        <Parameter Name="writeStream" Type="MonoTouch.CoreFoundation.CFWriteStream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="socket">Existing socket.</param>
        <param name="readStream">On return, contains a stream that can
	be used to read from that end point.</param>
        <param name="writeStream">On return, contains a stream that
	can be used to write to the end point.</param>
        <summary>Creates a reading and a writing CFStream on top of an
	existing socket.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePairWithSocketToHost">
      <MemberSignature Language="C#" Value="public static void CreatePairWithSocketToHost (System.Net.IPEndPoint endpoint, out MonoTouch.CoreFoundation.CFReadStream readStream, out MonoTouch.CoreFoundation.CFWriteStream writeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreatePairWithSocketToHost(class System.Net.IPEndPoint endpoint, class MonoTouch.CoreFoundation.CFReadStream readStream, class MonoTouch.CoreFoundation.CFWriteStream writeStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="readStream" Type="MonoTouch.CoreFoundation.CFReadStream&amp;" RefType="out" />
        <Parameter Name="writeStream" Type="MonoTouch.CoreFoundation.CFWriteStream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="endpoint">Endpoint to connect to.</param>
        <param name="readStream">On return, contains a stream that can
	be used to read from that end point.</param>
        <param name="writeStream">On return, contains a stream that
	can be used to write to the end point.</param>
        <summary>Creates a reading and a writing CFStreams that are connected over
	TCP/IP to the specified endpoint.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePairWithSocketToHost">
      <MemberSignature Language="C#" Value="public static void CreatePairWithSocketToHost (string host, int port, out MonoTouch.CoreFoundation.CFReadStream readStream, out MonoTouch.CoreFoundation.CFWriteStream writeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreatePairWithSocketToHost(string host, int32 port, class MonoTouch.CoreFoundation.CFReadStream readStream, class MonoTouch.CoreFoundation.CFWriteStream writeStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="readStream" Type="MonoTouch.CoreFoundation.CFReadStream&amp;" RefType="out" />
        <Parameter Name="writeStream" Type="MonoTouch.CoreFoundation.CFWriteStream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="host">Hostname to connect to.</param>
        <param name="port">TCP port to connect to .</param>
        <param name="readStream">On return, contains a stream that can
	be used to read from that end point.</param>
        <param name="writeStream">On return, contains a stream that
	can be used to write to the end point.</param>
        <summary>Creates a reading and a writing CFStreams that are connected over
	TCP/IP to the specified host and port.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CFStream object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CFStream class.</para>
          <para>Calling the Dispose method when the application is finished using the CFStream ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CFStream object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CFStream class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CFStream ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoClose">
      <MemberSignature Language="C#" Value="protected abstract void DoClose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DoClose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoGetProperty">
      <MemberSignature Language="C#" Value="protected abstract IntPtr DoGetProperty (MonoTouch.Foundation.NSString name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int DoGetProperty(class MonoTouch.Foundation.NSString name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="MonoTouch.Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoGetStatus">
      <MemberSignature Language="C#" Value="protected abstract MonoTouch.CoreFoundation.CFStreamStatus DoGetStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype MonoTouch.CoreFoundation.CFStreamStatus DoGetStatus() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreFoundation.CFStreamStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoOpen">
      <MemberSignature Language="C#" Value="protected abstract bool DoOpen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DoOpen() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoSetClient">
      <MemberSignature Language="C#" Value="protected abstract bool DoSetClient (MonoTouch.CoreFoundation.CFStream.CFStreamCallback callback, nint eventTypes, IntPtr context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DoSetClient(class MonoTouch.CoreFoundation.CFStream/CFStreamCallback callback, valuetype System.nint eventTypes, native int context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="MonoTouch.CoreFoundation.CFStream+CFStreamCallback" />
        <Parameter Name="eventTypes" Type="System.nint" />
        <Parameter Name="context" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="eventTypes">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoSetProperty">
      <MemberSignature Language="C#" Value="protected abstract bool DoSetProperty (MonoTouch.Foundation.NSString name, MonoTouch.ObjCRuntime.INativeObject value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DoSetProperty(class MonoTouch.Foundation.NSString name, class MonoTouch.ObjCRuntime.INativeObject value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="MonoTouch.Foundation.NSString" />
        <Parameter Name="value" Type="MonoTouch.ObjCRuntime.INativeObject" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (MonoTouch.CoreFoundation.CFRunLoop runLoop, MonoTouch.Foundation.NSString runLoopMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class MonoTouch.CoreFoundation.CFRunLoop runLoop, class MonoTouch.Foundation.NSString runLoopMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runLoop" Type="MonoTouch.CoreFoundation.CFRunLoop" />
        <Parameter Name="runLoopMode" Type="MonoTouch.Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="runLoop">To be added.</param>
        <param name="runLoopMode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoTouch.CoreFoundation.CFStream.StreamEventArgs&gt; ErrorEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoTouch.CoreFoundation.CFStream/StreamEventArgs&gt; ErrorEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoTouch.CoreFoundation.CFStream+StreamEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CFStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CFStream object</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetError">
      <MemberSignature Language="C#" Value="public abstract MonoTouch.CoreFoundation.CFException GetError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.CoreFoundation.CFException GetError() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreFoundation.CFException</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatus">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreFoundation.CFStreamStatus GetStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype MonoTouch.CoreFoundation.CFStreamStatus GetStatus() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreFoundation.CFStreamStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBytesAvailableEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoTouch.CoreFoundation.CFStream.StreamEventArgs&gt; HasBytesAvailableEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoTouch.CoreFoundation.CFStream/StreamEventArgs&gt; HasBytesAvailableEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoTouch.CoreFoundation.CFStream+StreamEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCallback">
      <MemberSignature Language="C#" Value="protected virtual void OnCallback (MonoTouch.CoreFoundation.CFStreamEventType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCallback(valuetype MonoTouch.CoreFoundation.CFStreamEventType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoTouch.CoreFoundation.CFStreamEventType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCanAcceptBytesEvent">
      <MemberSignature Language="C#" Value="protected virtual void OnCanAcceptBytesEvent (MonoTouch.CoreFoundation.CFStream.StreamEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanAcceptBytesEvent(class MonoTouch.CoreFoundation.CFStream/StreamEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MonoTouch.CoreFoundation.CFStream+StreamEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosedEvent">
      <MemberSignature Language="C#" Value="protected virtual void OnClosedEvent (MonoTouch.CoreFoundation.CFStream.StreamEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosedEvent(class MonoTouch.CoreFoundation.CFStream/StreamEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MonoTouch.CoreFoundation.CFStream+StreamEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnErrorEvent">
      <MemberSignature Language="C#" Value="protected virtual void OnErrorEvent (MonoTouch.CoreFoundation.CFStream.StreamEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnErrorEvent(class MonoTouch.CoreFoundation.CFStream/StreamEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MonoTouch.CoreFoundation.CFStream+StreamEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHasBytesAvailableEvent">
      <MemberSignature Language="C#" Value="protected virtual void OnHasBytesAvailableEvent (MonoTouch.CoreFoundation.CFStream.StreamEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHasBytesAvailableEvent(class MonoTouch.CoreFoundation.CFStream/StreamEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MonoTouch.CoreFoundation.CFStream+StreamEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpenCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenCompleted (MonoTouch.CoreFoundation.CFStream.StreamEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenCompleted(class MonoTouch.CoreFoundation.CFStream/StreamEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MonoTouch.CoreFoundation.CFStream+StreamEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenCompletedEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoTouch.CoreFoundation.CFStream.StreamEventArgs&gt; OpenCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoTouch.CoreFoundation.CFStream/StreamEventArgs&gt; OpenCompletedEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoTouch.CoreFoundation.CFStream+StreamEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDispatchQueue">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreFoundation.DispatchQueue ReadDispatchQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreFoundation.DispatchQueue ReadDispatchQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 9, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreFoundation.DispatchQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleWithRunLoop">
      <MemberSignature Language="C#" Value="protected abstract void ScheduleWithRunLoop (MonoTouch.CoreFoundation.CFRunLoop loop, MonoTouch.Foundation.NSString mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScheduleWithRunLoop(class MonoTouch.CoreFoundation.CFRunLoop loop, class MonoTouch.Foundation.NSString mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loop" Type="MonoTouch.CoreFoundation.CFRunLoop" />
        <Parameter Name="mode" Type="MonoTouch.Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="loop">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnscheduleFromRunLoop">
      <MemberSignature Language="C#" Value="protected abstract void UnscheduleFromRunLoop (MonoTouch.CoreFoundation.CFRunLoop loop, MonoTouch.Foundation.NSString mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UnscheduleFromRunLoop(class MonoTouch.CoreFoundation.CFRunLoop loop, class MonoTouch.Foundation.NSString mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loop" Type="MonoTouch.CoreFoundation.CFRunLoop" />
        <Parameter Name="mode" Type="MonoTouch.Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="loop">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDispatchQueue">
      <MemberSignature Language="C#" Value="public MonoTouch.CoreFoundation.DispatchQueue WriteDispatchQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreFoundation.DispatchQueue WriteDispatchQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 9, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreFoundation.DispatchQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>