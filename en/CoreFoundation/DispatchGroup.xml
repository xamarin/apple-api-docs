<Type Name="DispatchGroup" FullName="CoreFoundation.DispatchGroup">
  <TypeSignature Language="C#" Value="public class DispatchGroup : CoreFoundation.DispatchObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatchGroup extends CoreFoundation.DispatchObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreFoundation.DispatchObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages group of code blocks allows for aggregate synchronization.</summary>
    <remarks>Code block can be executed on different dispatch queues but managed as a group.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static CoreFoundation.DispatchGroup Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreFoundation.DispatchGroup Create() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreFoundation.DispatchGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new dispatch group.</summary>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchAsync">
      <MemberSignature Language="C#" Value="public void DispatchAsync (CoreFoundation.DispatchQueue queue, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DispatchAsync(class CoreFoundation.DispatchQueue queue, class System.Action action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="CoreFoundation.DispatchQueue" />
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="queue">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public void Enter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enter() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Explicitly sets that a code block is beeing managed by the group.</summary>
        <remarks>It can be used to manually manage dispatch group tasks by incrementing the current count of outstanding tasks in the group.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public void Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Leave() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases a code block association with the group.</summary>
        <remarks>It can be used to manually manage dispatch group tasks by decrementing the current count of outstanding tasks in the group.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public void Notify (CoreFoundation.DispatchQueue queue, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Notify(class CoreFoundation.DispatchQueue queue, class System.Action action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="CoreFoundation.DispatchQueue" />
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="queue">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (CoreFoundation.DispatchTime timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype CoreFoundation.DispatchTime timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="CoreFoundation.DispatchTime" />
      </Parameters>
      <Docs>
        <param name="timeout">A DispatchTime that represents the number of nanoseconds to wait.</param>
        <summary>Waits synchronously for all blocks in the group to complete or the specified timeout has elapsed.</summary>
        <returns>true if all code blockes finished before timeout otherwise false.</returns>
        <remarks>The caller of this method blocks until all blocks in the group complete or a time-out occurs.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>