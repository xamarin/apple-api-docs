<Type Name="SecPublicPrivateKeyAttrs" FullName="Security.SecPublicPrivateKeyAttrs">
  <TypeSignature Language="C#" Value="public class SecPublicPrivateKeyAttrs : Foundation.DictionaryContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecPublicPrivateKeyAttrs extends Foundation.DictionaryContainer" />
  <TypeSignature Language="DocId" Value="T:Security.SecPublicPrivateKeyAttrs" />
  <TypeSignature Language="F#" Value="type SecPublicPrivateKeyAttrs = class&#xA;    inherit DictionaryContainer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.DictionaryContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains attributes for creating and using public-private key pairs.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecPublicPrivateKeyAttrs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecPublicPrivateKeyAttrs.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new default <see cref="T:Security.SecPublicPrivateKeyAttrs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecPublicPrivateKeyAttrs (Foundation.NSDictionary dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSDictionary dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecPublicPrivateKeyAttrs.#ctor(Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="new Security.SecPublicPrivateKeyAttrs : Foundation.NSDictionary -&gt; Security.SecPublicPrivateKeyAttrs" Usage="new Security.SecPublicPrivateKeyAttrs dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dictionary" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="dictionary">A dictionary of <see cref="T:Security.SecKeyGenerationParameters" /> values.</param>
        <summary>Creates a new <see cref="T:Security.SecPublicPrivateKeyAttrs" /> with the parameters that were specified in the supplied <paramref name="dictionary" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationTag">
      <MemberSignature Language="C#" Value="public Foundation.NSData ApplicationTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData ApplicationTag" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.ApplicationTag" />
      <MemberSignature Language="F#" Value="member this.ApplicationTag : Foundation.NSData with get, set" Usage="Security.SecPublicPrivateKeyAttrs.ApplicationTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the application's private tag.</summary>
        <value>The application's private tag.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; CanDecrypt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.CanDecrypt" />
      <MemberSignature Language="F#" Value="member this.CanDecrypt : Nullable&lt;bool&gt; with get, set" Usage="Security.SecPublicPrivateKeyAttrs.CanDecrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether the key pair can be used for decryption.</summary>
        <value>A  Boolean value that controls whether the key pair can be used for decryption.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDerive">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; CanDerive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; CanDerive" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.CanDerive" />
      <MemberSignature Language="F#" Value="member this.CanDerive : Nullable&lt;bool&gt; with get, set" Usage="Security.SecPublicPrivateKeyAttrs.CanDerive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether the key pair can be used for key derivation.</summary>
        <value>A  Boolean value that controls whether the key pair can be used for key derivation.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; CanEncrypt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.CanEncrypt" />
      <MemberSignature Language="F#" Value="member this.CanEncrypt : Nullable&lt;bool&gt; with get, set" Usage="Security.SecPublicPrivateKeyAttrs.CanEncrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether the key pair can be used for encryption.</summary>
        <value>A Boolean value that controls whether the key pair can be used for encryption.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSign">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; CanSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; CanSign" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.CanSign" />
      <MemberSignature Language="F#" Value="member this.CanSign : Nullable&lt;bool&gt; with get, set" Usage="Security.SecPublicPrivateKeyAttrs.CanSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether the key pair can be used for signing.</summary>
        <value>A Boolean value that controls whether the key pair can be used for signing.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUnwrap">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; CanUnwrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; CanUnwrap" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.CanUnwrap" />
      <MemberSignature Language="F#" Value="member this.CanUnwrap : Nullable&lt;bool&gt; with get, set" Usage="Security.SecPublicPrivateKeyAttrs.CanUnwrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether the key pair can be used for key unwrapping.</summary>
        <value>A Boolean value that controls whether the key pair can be used for key unwrapping.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanVerify">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; CanVerify { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; CanVerify" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.CanVerify" />
      <MemberSignature Language="F#" Value="member this.CanVerify : Nullable&lt;bool&gt; with get, set" Usage="Security.SecPublicPrivateKeyAttrs.CanVerify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether the key pair can be used for verifying signatures.</summary>
        <value>A Boolean value that controls whether the key pair can be used for verifying signatures.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectiveKeySize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; EffectiveKeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; EffectiveKeySize" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.EffectiveKeySize" />
      <MemberSignature Language="F#" Value="member this.EffectiveKeySize : Nullable&lt;int&gt; with get, set" Usage="Security.SecPublicPrivateKeyAttrs.EffectiveKeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that describes the minimum size of attack that can defeat the key pair. This value can be significantly smaller than the actual key size.</summary>
        <value>A value that describes the minimum size of attack that can defeat the key pair. This value can be significantly smaller than the actual key size.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPermanent">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsPermanent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsPermanent" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.IsPermanent" />
      <MemberSignature Language="F#" Value="member this.IsPermanent : Nullable&lt;bool&gt; with get, set" Usage="Security.SecPublicPrivateKeyAttrs.IsPermanent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether the key pair is permanent.</summary>
        <value>A Boolean value that controls whether the key pair is permanent.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Security.SecPublicPrivateKeyAttrs.Label" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="Security.SecPublicPrivateKeyAttrs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the label for the key pair.</summary>
        <value>The label for the key pair.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
