<Type Name="SecKey" FullName="Security.SecKey">
  <TypeSignature Language="C#" Value="public class SecKey : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecKey extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Security.SecKey" />
  <TypeSignature Language="F#" Value="type SecKey = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Encapsulates a security key, one half of a public-private key-pair.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecKey (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Security.SecKey : nativeint -&gt; Security.SecKey" Usage="new Security.SecKey handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the unmanaged version of SecKey object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects.</summary>
        <remarks>Returns the managed wrapper that represents the security key.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecKey (IntPtr handle, bool owns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, bool owns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.#ctor(System.IntPtr,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Security.SecKey : nativeint * bool -&gt; Security.SecKey" Usage="new Security.SecKey (handle, owns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="owns" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the unmanaged version of SecKey object.</param>
        <param name="owns">Pass true if managed code already owns a reference to the object. Â Pass false otherwise, which will invoke retain on the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:Security.SecKey.BlockSize" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int" Usage="Security.SecKey.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the block size of the key.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Security.SecKey Create (Foundation.NSData keyData, Foundation.NSDictionary parameters, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Security.SecKey Create(class Foundation.NSData keyData, class Foundation.NSDictionary parameters, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Create(Foundation.NSData,Foundation.NSDictionary,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member Create : Foundation.NSData * Foundation.NSDictionary *  -&gt; Security.SecKey" Usage="Security.SecKey.Create (keyData, parameters, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="Foundation.NSData" />
        <Parameter Name="parameters" Type="Foundation.NSDictionary" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyData">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Security.SecKey Create (Foundation.NSData keyData, Security.SecKeyType keyType, Security.SecKeyClass keyClass, int keySizeInBits, Foundation.NSDictionary parameters, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Security.SecKey Create(class Foundation.NSData keyData, valuetype Security.SecKeyType keyType, valuetype Security.SecKeyClass keyClass, int32 keySizeInBits, class Foundation.NSDictionary parameters, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Create(Foundation.NSData,Security.SecKeyType,Security.SecKeyClass,System.Int32,Foundation.NSDictionary,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member Create : Foundation.NSData * Security.SecKeyType * Security.SecKeyClass * int * Foundation.NSDictionary *  -&gt; Security.SecKey" Usage="Security.SecKey.Create (keyData, keyType, keyClass, keySizeInBits, parameters, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="Foundation.NSData" />
        <Parameter Name="keyType" Type="Security.SecKeyType" />
        <Parameter Name="keyClass" Type="Security.SecKeyClass" />
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="parameters" Type="Foundation.NSDictionary" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyData">To be added.</param>
        <param name="keyType">To be added.</param>
        <param name="keyClass">To be added.</param>
        <param name="keySizeInBits">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptedData">
      <MemberSignature Language="C#" Value="public Foundation.NSData CreateDecryptedData (Security.SecKeyAlgorithm algorithm, Foundation.NSData ciphertext, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData CreateDecryptedData(valuetype Security.SecKeyAlgorithm algorithm, class Foundation.NSData ciphertext, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.CreateDecryptedData(Security.SecKeyAlgorithm,Foundation.NSData,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.CreateDecryptedData : Security.SecKeyAlgorithm * Foundation.NSData *  -&gt; Foundation.NSData" Usage="secKey.CreateDecryptedData (algorithm, ciphertext, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Security.SecKeyAlgorithm" />
        <Parameter Name="ciphertext" Type="Foundation.NSData" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="ciphertext">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptedData">
      <MemberSignature Language="C#" Value="public Foundation.NSData CreateEncryptedData (Security.SecKeyAlgorithm algorithm, Foundation.NSData plaintext, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData CreateEncryptedData(valuetype Security.SecKeyAlgorithm algorithm, class Foundation.NSData plaintext, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.CreateEncryptedData(Security.SecKeyAlgorithm,Foundation.NSData,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.CreateEncryptedData : Security.SecKeyAlgorithm * Foundation.NSData *  -&gt; Foundation.NSData" Usage="secKey.CreateEncryptedData (algorithm, plaintext, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Security.SecKeyAlgorithm" />
        <Parameter Name="plaintext" Type="Foundation.NSData" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="plaintext">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRandomKey">
      <MemberSignature Language="C#" Value="public static Security.SecKey CreateRandomKey (Foundation.NSDictionary parameters, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Security.SecKey CreateRandomKey(class Foundation.NSDictionary parameters, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.CreateRandomKey(Foundation.NSDictionary,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member CreateRandomKey : Foundation.NSDictionary *  -&gt; Security.SecKey" Usage="Security.SecKey.CreateRandomKey (parameters, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Foundation.NSDictionary" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameters">A dictionary of <see cref="T:Security.SecKeyGenerationParameters" /> values, keyed by keys from <see cref="T:Security.SecKeyParameters" />.</param>
        <param name="error">A location in which to write codes for any errors that occur.</param>
        <summary>Creates and returns a new key pair.</summary>
        <returns>A new key pair.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRandomKey">
      <MemberSignature Language="C#" Value="public static Security.SecKey CreateRandomKey (Security.SecKeyGenerationParameters parameters, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Security.SecKey CreateRandomKey(class Security.SecKeyGenerationParameters parameters, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.CreateRandomKey(Security.SecKeyGenerationParameters,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member CreateRandomKey : Security.SecKeyGenerationParameters *  -&gt; Security.SecKey" Usage="Security.SecKey.CreateRandomKey (parameters, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Security.SecKeyGenerationParameters" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameters">A parameter object for specifying details about the key pair to create.</param>
        <param name="error">A location in which to write codes for any errors that occur.</param>
        <summary>Creates and returns a new key pair.</summary>
        <returns>A new key pair.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRandomKey">
      <MemberSignature Language="C#" Value="public static Security.SecKey CreateRandomKey (Security.SecKeyType keyType, int keySizeInBits, Foundation.NSDictionary parameters, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Security.SecKey CreateRandomKey(valuetype Security.SecKeyType keyType, int32 keySizeInBits, class Foundation.NSDictionary parameters, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.CreateRandomKey(Security.SecKeyType,System.Int32,Foundation.NSDictionary,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member CreateRandomKey : Security.SecKeyType * int * Foundation.NSDictionary *  -&gt; Security.SecKey" Usage="Security.SecKey.CreateRandomKey (keyType, keySizeInBits, parameters, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="Security.SecKeyType" />
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="parameters" Type="Foundation.NSDictionary" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyType">Whether to create a DSA elliptic curve or RSA key.</param>
        <param name="keySizeInBits">To be added.</param>
        <param name="parameters">A dictionary of <see cref="T:Security.SecKeyGenerationParameters" /> values, keyed by keys from <see cref="T:Security.SecKeyParameters" />.</param>
        <param name="error">A location in which to write codes for any errors that occur.</param>
        <summary>Creates and returns a new key pair.</summary>
        <returns>A new key pair.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public Foundation.NSData CreateSignature (Security.SecKeyAlgorithm algorithm, Foundation.NSData dataToSign, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData CreateSignature(valuetype Security.SecKeyAlgorithm algorithm, class Foundation.NSData dataToSign, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.CreateSignature(Security.SecKeyAlgorithm,Foundation.NSData,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.CreateSignature : Security.SecKeyAlgorithm * Foundation.NSData *  -&gt; Foundation.NSData" Usage="secKey.CreateSignature (algorithm, dataToSign, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Security.SecKeyAlgorithm" />
        <Parameter Name="dataToSign" Type="Foundation.NSData" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="dataToSign">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode Decrypt (Security.SecPadding padding, byte[] cipherText, out byte[] plainText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode Decrypt(valuetype Security.SecPadding padding, unsigned int8[] cipherText, [out] unsigned int8[]&amp; plainText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Decrypt(Security.SecPadding,System.Byte[],System.Byte[]@)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : Security.SecPadding * byte[] *  -&gt; Security.SecStatusCode" Usage="secKey.Decrypt (padding, cipherText, plainText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="cipherText" Type="System.Byte[]" />
        <Parameter Name="plainText" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="cipherText">To be added.</param>
        <param name="plainText">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode Decrypt (Security.SecPadding padding, IntPtr cipherText, nint cipherTextLen, IntPtr plainText, ref nint plainTextLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode Decrypt(valuetype Security.SecPadding padding, native int cipherText, valuetype System.nint cipherTextLen, native int plainText, valuetype System.nint&amp; plainTextLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Decrypt(Security.SecPadding,System.IntPtr,System.nint,System.IntPtr,System.nint@)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : Security.SecPadding * nativeint * nint * nativeint *  -&gt; Security.SecStatusCode" Usage="secKey.Decrypt (padding, cipherText, cipherTextLen, plainText, plainTextLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="cipherText" Type="System.IntPtr" />
        <Parameter Name="cipherTextLen" Type="System.nint" />
        <Parameter Name="plainText" Type="System.IntPtr" />
        <Parameter Name="plainTextLen" Type="System.nint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="cipherText">To be added.</param>
        <param name="cipherTextLen">To be added.</param>
        <param name="plainText">To be added.</param>
        <param name="plainTextLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secKey.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the SecKey object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the SecKey class.</para>
          <para>Calling the Dispose method when the application is finished using the SecKey ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="secKey.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the SecKey object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the SecKey class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the SecKey ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode Encrypt (Security.SecPadding padding, byte[] plainText, byte[] cipherText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode Encrypt(valuetype Security.SecPadding padding, unsigned int8[] plainText, unsigned int8[] cipherText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Encrypt(Security.SecPadding,System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.Encrypt : Security.SecPadding * byte[] * byte[] -&gt; Security.SecStatusCode" Usage="secKey.Encrypt (padding, plainText, cipherText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="plainText" Type="System.Byte[]" />
        <Parameter Name="cipherText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="plainText">To be added.</param>
        <param name="cipherText">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode Encrypt (Security.SecPadding padding, byte[] plainText, out byte[] cipherText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode Encrypt(valuetype Security.SecPadding padding, unsigned int8[] plainText, [out] unsigned int8[]&amp; cipherText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Encrypt(Security.SecPadding,System.Byte[],System.Byte[]@)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : Security.SecPadding * byte[] *  -&gt; Security.SecStatusCode" Usage="secKey.Encrypt (padding, plainText, cipherText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="plainText" Type="System.Byte[]" />
        <Parameter Name="cipherText" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="plainText">To be added.</param>
        <param name="cipherText">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode Encrypt (Security.SecPadding padding, IntPtr plainText, nint plainTextLen, IntPtr cipherText, ref nint cipherTextLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode Encrypt(valuetype Security.SecPadding padding, native int plainText, valuetype System.nint plainTextLen, native int cipherText, valuetype System.nint&amp; cipherTextLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Encrypt(Security.SecPadding,System.IntPtr,System.nint,System.IntPtr,System.nint@)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : Security.SecPadding * nativeint * nint * nativeint *  -&gt; Security.SecStatusCode" Usage="secKey.Encrypt (padding, plainText, plainTextLen, cipherText, cipherTextLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="plainText" Type="System.IntPtr" />
        <Parameter Name="plainTextLen" Type="System.nint" />
        <Parameter Name="cipherText" Type="System.IntPtr" />
        <Parameter Name="cipherTextLen" Type="System.nint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="plainText">To be added.</param>
        <param name="plainTextLen">To be added.</param>
        <param name="cipherText">To be added.</param>
        <param name="cipherTextLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SecKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="secKey.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the SecKey object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKeyPair">
      <MemberSignature Language="C#" Value="public static Security.SecStatusCode GenerateKeyPair (Foundation.NSDictionary parameters, out Security.SecKey publicKey, out Security.SecKey privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Security.SecStatusCode GenerateKeyPair(class Foundation.NSDictionary parameters, [out] class Security.SecKey&amp; publicKey, [out] class Security.SecKey&amp; privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GenerateKeyPair(Foundation.NSDictionary,Security.SecKey@,Security.SecKey@)" />
      <MemberSignature Language="F#" Value="static member GenerateKeyPair : Foundation.NSDictionary *  *  -&gt; Security.SecStatusCode" Usage="Security.SecKey.GenerateKeyPair (parameters, publicKey, privateKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Foundation.NSDictionary" />
        <Parameter Name="publicKey" Type="Security.SecKey" RefType="out" />
        <Parameter Name="privateKey" Type="Security.SecKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameters">A dictionary of key pair parameters.</param>
        <param name="publicKey">A location to store the public key.</param>
        <param name="privateKey">A location to store the private key.</param>
        <summary>Generates a key pair from the provided values.</summary>
        <returns>A status code for the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKeyPair">
      <MemberSignature Language="C#" Value="public static Security.SecStatusCode GenerateKeyPair (Security.SecKeyType type, int keySizeInBits, Security.SecPublicPrivateKeyAttrs publicAndPrivateKeyAttrs, out Security.SecKey publicKey, out Security.SecKey privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Security.SecStatusCode GenerateKeyPair(valuetype Security.SecKeyType type, int32 keySizeInBits, class Security.SecPublicPrivateKeyAttrs publicAndPrivateKeyAttrs, [out] class Security.SecKey&amp; publicKey, [out] class Security.SecKey&amp; privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GenerateKeyPair(Security.SecKeyType,System.Int32,Security.SecPublicPrivateKeyAttrs,Security.SecKey@,Security.SecKey@)" />
      <MemberSignature Language="F#" Value="static member GenerateKeyPair : Security.SecKeyType * int * Security.SecPublicPrivateKeyAttrs *  *  -&gt; Security.SecStatusCode" Usage="Security.SecKey.GenerateKeyPair (type, keySizeInBits, publicAndPrivateKeyAttrs, publicKey, privateKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Advice("On iOS this method applies the attributes to both public and private key. To apply different attributes to each key, use 'GenerateKeyPair (SecKeyType, int, SecPublicPrivateKeyAttrs, SecPublicPrivateKeyAttrs, out SecKey, out SecKey)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Security.SecKeyType" />
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="publicAndPrivateKeyAttrs" Type="Security.SecPublicPrivateKeyAttrs" />
        <Parameter Name="publicKey" Type="Security.SecKey" RefType="out" />
        <Parameter Name="privateKey" Type="Security.SecKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">The type of key pair to generate.</param>
        <param name="keySizeInBits">The key size, in bits</param>
        <param name="publicAndPrivateKeyAttrs">Atributes for the keys in the pair.</param>
        <param name="publicKey">A location to store the public key.</param>
        <param name="privateKey">A location to store the private key.</param>
        <summary>Generates a key pair from the provided values.</summary>
        <returns>A status code for the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKeyPair">
      <MemberSignature Language="C#" Value="public static Security.SecStatusCode GenerateKeyPair (Security.SecKeyType type, int keySizeInBits, Security.SecPublicPrivateKeyAttrs publicKeyAttrs, Security.SecPublicPrivateKeyAttrs privateKeyAttrs, out Security.SecKey publicKey, out Security.SecKey privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Security.SecStatusCode GenerateKeyPair(valuetype Security.SecKeyType type, int32 keySizeInBits, class Security.SecPublicPrivateKeyAttrs publicKeyAttrs, class Security.SecPublicPrivateKeyAttrs privateKeyAttrs, [out] class Security.SecKey&amp; publicKey, [out] class Security.SecKey&amp; privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GenerateKeyPair(Security.SecKeyType,System.Int32,Security.SecPublicPrivateKeyAttrs,Security.SecPublicPrivateKeyAttrs,Security.SecKey@,Security.SecKey@)" />
      <MemberSignature Language="F#" Value="static member GenerateKeyPair : Security.SecKeyType * int * Security.SecPublicPrivateKeyAttrs * Security.SecPublicPrivateKeyAttrs *  *  -&gt; Security.SecStatusCode" Usage="Security.SecKey.GenerateKeyPair (type, keySizeInBits, publicKeyAttrs, privateKeyAttrs, publicKey, privateKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Security.SecKeyType" />
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="publicKeyAttrs" Type="Security.SecPublicPrivateKeyAttrs" />
        <Parameter Name="privateKeyAttrs" Type="Security.SecPublicPrivateKeyAttrs" />
        <Parameter Name="publicKey" Type="Security.SecKey" RefType="out" />
        <Parameter Name="privateKey" Type="Security.SecKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">The type of key pair to generate.</param>
        <param name="keySizeInBits">The key size, in bits</param>
        <param name="publicKeyAttrs">The public key attributes.</param>
        <param name="privateKeyAttrs">The private key attributes.</param>
        <param name="publicKey">A location to store the public key.</param>
        <param name="privateKey">A location to store the private key.</param>
        <summary>Generates a key pair from the provided values.</summary>
        <returns>A status code for the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary GetAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary GetAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GetAttributes" />
      <MemberSignature Language="F#" Value="member this.GetAttributes : unit -&gt; Foundation.NSDictionary" Usage="secKey.GetAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalRepresentation">
      <MemberSignature Language="C#" Value="public Foundation.NSData GetExternalRepresentation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData GetExternalRepresentation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GetExternalRepresentation" />
      <MemberSignature Language="F#" Value="member this.GetExternalRepresentation : unit -&gt; Foundation.NSData" Usage="secKey.GetExternalRepresentation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalRepresentation">
      <MemberSignature Language="C#" Value="public Foundation.NSData GetExternalRepresentation (out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData GetExternalRepresentation([out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GetExternalRepresentation(Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.GetExternalRepresentation :  -&gt; Foundation.NSData" Usage="secKey.GetExternalRepresentation error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyExchangeResult">
      <MemberSignature Language="C#" Value="public Foundation.NSData GetKeyExchangeResult (Security.SecKeyAlgorithm algorithm, Security.SecKey publicKey, Foundation.NSDictionary parameters, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData GetKeyExchangeResult(valuetype Security.SecKeyAlgorithm algorithm, class Security.SecKey publicKey, class Foundation.NSDictionary parameters, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GetKeyExchangeResult(Security.SecKeyAlgorithm,Security.SecKey,Foundation.NSDictionary,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.GetKeyExchangeResult : Security.SecKeyAlgorithm * Security.SecKey * Foundation.NSDictionary *  -&gt; Foundation.NSData" Usage="secKey.GetKeyExchangeResult (algorithm, publicKey, parameters, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Security.SecKeyAlgorithm" />
        <Parameter Name="publicKey" Type="Security.SecKey" />
        <Parameter Name="parameters" Type="Foundation.NSDictionary" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="publicKey">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyExchangeResult">
      <MemberSignature Language="C#" Value="public Foundation.NSData GetKeyExchangeResult (Security.SecKeyAlgorithm algorithm, Security.SecKey publicKey, Security.SecKeyKeyExchangeParameter parameters, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData GetKeyExchangeResult(valuetype Security.SecKeyAlgorithm algorithm, class Security.SecKey publicKey, class Security.SecKeyKeyExchangeParameter parameters, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GetKeyExchangeResult(Security.SecKeyAlgorithm,Security.SecKey,Security.SecKeyKeyExchangeParameter,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.GetKeyExchangeResult : Security.SecKeyAlgorithm * Security.SecKey * Security.SecKeyKeyExchangeParameter *  -&gt; Foundation.NSData" Usage="secKey.GetKeyExchangeResult (algorithm, publicKey, parameters, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Security.SecKeyAlgorithm" />
        <Parameter Name="publicKey" Type="Security.SecKey" />
        <Parameter Name="parameters" Type="Security.SecKeyKeyExchangeParameter" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="publicKey">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="public Security.SecKey GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Security.SecKey GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GetPublicKey" />
      <MemberSignature Language="F#" Value="member this.GetPublicKey : unit -&gt; Security.SecKey" Usage="secKey.GetPublicKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/Security.framework/Security&quot; as &quot;SecKeyGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.GetTypeID" />
      <MemberSignature Language="F#" Value="static member GetTypeID : unit -&gt; nint" Usage="Security.SecKey.GetTypeID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the Security.SecKey type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID(System.IntPtr)" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isSecKey = (CFType.GetTypeID (foo.Handle) == SecKey.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:Security.SecKey.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="Security.SecKey.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlgorithmSupported">
      <MemberSignature Language="C#" Value="public bool IsAlgorithmSupported (Security.SecKeyOperationType operation, Security.SecKeyAlgorithm algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAlgorithmSupported(valuetype Security.SecKeyOperationType operation, valuetype Security.SecKeyAlgorithm algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.IsAlgorithmSupported(Security.SecKeyOperationType,Security.SecKeyAlgorithm)" />
      <MemberSignature Language="F#" Value="member this.IsAlgorithmSupported : Security.SecKeyOperationType * Security.SecKeyAlgorithm -&gt; bool" Usage="secKey.IsAlgorithmSupported (operation, algorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Security.SecKeyOperationType" />
        <Parameter Name="algorithm" Type="Security.SecKeyAlgorithm" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="algorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawSign">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode RawSign (Security.SecPadding padding, byte[] dataToSign, out byte[] result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode RawSign(valuetype Security.SecPadding padding, unsigned int8[] dataToSign, [out] unsigned int8[]&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.RawSign(Security.SecPadding,System.Byte[],System.Byte[]@)" />
      <MemberSignature Language="F#" Value="member this.RawSign : Security.SecPadding * byte[] *  -&gt; Security.SecStatusCode" Usage="secKey.RawSign (padding, dataToSign, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="dataToSign" Type="System.Byte[]" />
        <Parameter Name="result" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="dataToSign">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawSign">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode RawSign (Security.SecPadding padding, IntPtr dataToSign, int dataToSignLen, out byte[] result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode RawSign(valuetype Security.SecPadding padding, native int dataToSign, int32 dataToSignLen, [out] unsigned int8[]&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.RawSign(Security.SecPadding,System.IntPtr,System.Int32,System.Byte[]@)" />
      <MemberSignature Language="F#" Value="member this.RawSign : Security.SecPadding * nativeint * int *  -&gt; Security.SecStatusCode" Usage="secKey.RawSign (padding, dataToSign, dataToSignLen, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="dataToSign" Type="System.IntPtr" />
        <Parameter Name="dataToSignLen" Type="System.Int32" />
        <Parameter Name="result" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="dataToSign">To be added.</param>
        <param name="dataToSignLen">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawVerify">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode RawVerify (Security.SecPadding padding, byte[] signedData, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode RawVerify(valuetype Security.SecPadding padding, unsigned int8[] signedData, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.RawVerify(Security.SecPadding,System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.RawVerify : Security.SecPadding * byte[] * byte[] -&gt; Security.SecStatusCode" Usage="secKey.RawVerify (padding, signedData, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="signedData" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="signedData">To be added.</param>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawVerify">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode RawVerify (Security.SecPadding padding, IntPtr signedData, int signedDataLen, IntPtr signature, int signatureLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode RawVerify(valuetype Security.SecPadding padding, native int signedData, int32 signedDataLen, native int signature, int32 signatureLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.RawVerify(Security.SecPadding,System.IntPtr,System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RawVerify : Security.SecPadding * nativeint * int * nativeint * int -&gt; Security.SecStatusCode" Usage="secKey.RawVerify (padding, signedData, signedDataLen, signature, signatureLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Security.SecPadding" />
        <Parameter Name="signedData" Type="System.IntPtr" />
        <Parameter Name="signedDataLen" Type="System.Int32" />
        <Parameter Name="signature" Type="System.IntPtr" />
        <Parameter Name="signatureLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <param name="signedData">To be added.</param>
        <param name="signedDataLen">To be added.</param>
        <param name="signature">To be added.</param>
        <param name="signatureLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public bool VerifySignature (Security.SecKeyAlgorithm algorithm, Foundation.NSData signedData, Foundation.NSData signature, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifySignature(valuetype Security.SecKeyAlgorithm algorithm, class Foundation.NSData signedData, class Foundation.NSData signature, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecKey.VerifySignature(Security.SecKeyAlgorithm,Foundation.NSData,Foundation.NSData,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.VerifySignature : Security.SecKeyAlgorithm * Foundation.NSData * Foundation.NSData *  -&gt; bool" Usage="secKey.VerifySignature (algorithm, signedData, signature, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(3, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Security.SecKeyAlgorithm" />
        <Parameter Name="signedData" Type="Foundation.NSData" />
        <Parameter Name="signature" Type="Foundation.NSData" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="signedData">To be added.</param>
        <param name="signature">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
