<Type Name="SecRecord" FullName="Security.SecRecord">
  <TypeSignature Language="C#" Value="public class SecRecord : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecRecord extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Security.SecRecord" />
  <TypeSignature Language="F#" Value="type SecRecord = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Tracks a set of properties from the keychain.</summary>
    <remarks>
      <para>
	This represents a set of properties on a keychain record.   It
	can be used to query the keychain by filling out a few of the
	properties and calling one of the Query methods on the <see cref="T:Security.SecKeyChain" /> class and it is
	also used as a result from some of the same Query methods.
      </para>
      <para>
	You would typically use it like this:
      </para>
      <example>
        <code lang="C#"><![CDATA[
var query = new SecRecord (SecKind.InternetPassword) {
   Server = "bugzilla.novell.com",
   Account = "miguel"
};
var password = SecKeyChain.QueryAsData (query);
Console.WriteLine ("The password for the account is: {0}", password);
]]></code>
      </example>
    </remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/LineLayout/">Keychain</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecRecord (Security.SecCertificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Security.SecCertificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.#ctor(Security.SecCertificate)" />
      <MemberSignature Language="F#" Value="new Security.SecRecord : Security.SecCertificate -&gt; Security.SecRecord" Usage="new Security.SecRecord certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="Security.SecCertificate" />
      </Parameters>
      <Docs>
        <param name="certificate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecRecord (Security.SecIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Security.SecIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.#ctor(Security.SecIdentity)" />
      <MemberSignature Language="F#" Value="new Security.SecRecord : Security.SecIdentity -&gt; Security.SecRecord" Usage="new Security.SecRecord identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="Security.SecIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecRecord (Security.SecKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Security.SecKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.#ctor(Security.SecKey)" />
      <MemberSignature Language="F#" Value="new Security.SecRecord : Security.SecKey -&gt; Security.SecRecord" Usage="new Security.SecRecord key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="Security.SecKey" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecRecord (Security.SecKind secKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Security.SecKind secKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.#ctor(Security.SecKind)" />
      <MemberSignature Language="F#" Value="new Security.SecRecord : Security.SecKind -&gt; Security.SecRecord" Usage="new Security.SecRecord secKind" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="secKind" Type="Security.SecKind" />
      </Parameters>
      <Docs>
        <param name="secKind">Determines the class for this record.</param>
        <summary>Creates a keychain record.</summary>
        <remarks>
          <para>
When you create a SecRecord you need to specify the kind of record that you will be matching using one of the SecKind values, and you must set also:

</para>
          <list type="bullet">
            <item>
              <term>One or more attributes to match (AccessGroup, Accessible, Account, ApplicationLabel, ApplicationTag, AuthenticationType, CanDecrypt, CanDerive, CanEncrypt, CanSign, CanUnwrap, CanVerify, CanWrap, CertificateEncoding, CertificateType, Comment, CreationDate, Creator, CreatorType, Description, EffectiveKeySize, Generic, Invisible, IsNegative, IsPermanent, Issuer, KeyClass, KeySizeInBits, KeyType, Label, ModificationDate, Path, Port, Protocol, PublicKeyHash, SecurityDomain, SerialNumber, Server, Service, Subject, SubjectKeyID)</term>
            </item>
            <item>
              <term>Optional search attributes, used to determine how the search is performed.   You do this by setting any of the Match properties in the class (MatchCaseInsensitive, MatchEmailAddressIfPresent, MatchIssuers, MatchItemList, MatchPolicy, MatchSubjectContains, MatchTrustedOnly, MatchValidOnDate)  </term>
            </item>
          </list>
          <para>
          </para>
          <para>
Once the class is constructed, you can pass this to the Query, Add, Remove or Update methods on the SecKeyChain class.
</para>
          <example>
            <code lang="C#"><![CDATA[
var query = new SecRecord (SecKind.InternetPassword) {
   Sever = "bugzilla.novell.com",
   Account = "miguel"
};
var password = SecKeyChain.QueryAsData (query);
Console.WriteLine ("The password for the account is: {0}", password);

  ]]></code>
          </example>
          <para>Internally this is setting the kSecClass key to one of the kSec* values as specifed by the SecKind.   On MacOS X the only supported value is InternetPassword, while iOS offers a wider range of options.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessControl">
      <MemberSignature Language="C#" Value="public Security.SecAccessControl AccessControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Security.SecAccessControl AccessControl" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.AccessControl" />
      <MemberSignature Language="F#" Value="member this.AccessControl : Security.SecAccessControl with get, set" Usage="Security.SecRecord.AccessControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecAccessControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Access control for the item.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessGroup">
      <MemberSignature Language="C#" Value="public string AccessGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessGroup" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.AccessGroup" />
      <MemberSignature Language="F#" Value="member this.AccessGroup : string with get, set" Usage="Security.SecRecord.AccessGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Access group name. </summary>
        <value />
        <remarks>Access groups are used to share information between applications that share the same access group.    Applications that wish to do this, need to register the access group on their keychain-access-group entitlement.   This value must be set when the item is added to the keychain for the second application to be able to look it up.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessible">
      <MemberSignature Language="C#" Value="public Security.SecAccessible Accessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Security.SecAccessible Accessible" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Accessible" />
      <MemberSignature Language="F#" Value="member this.Accessible : Security.SecAccessible with get, set" Usage="Security.SecRecord.Accessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecAccessible</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When should the keychain information be accessed.</summary>
        <value />
        <remarks>Applications should use the most restrictive possible value for this property.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public string Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Account" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Account" />
      <MemberSignature Language="F#" Value="member this.Account : string with get, set" Usage="Security.SecRecord.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Accout name.</summary>
        <value />
        <remarks>Used by GenericPassword and InternetPassword kinds.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationLabel">
      <MemberSignature Language="C#" Value="public string ApplicationLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationLabel" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.ApplicationLabel" />
      <MemberSignature Language="F#" Value="member this.ApplicationLabel : string with get, set" Usage="Security.SecRecord.ApplicationLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An application-level tag, used to identify this key.</summary>
        <value />
        <remarks>Intended for your program to use as an identifier that you can lookup.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationTag">
      <MemberSignature Language="C#" Value="public Foundation.NSData ApplicationTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData ApplicationTag" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.ApplicationTag" />
      <MemberSignature Language="F#" Value="member this.ApplicationTag : Foundation.NSData with get, set" Usage="Security.SecRecord.ApplicationTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To store your application data.</summary>
        <value />
        <remarks>You can use this to store application-level binary data in the form of an NSData source.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationContext">
      <MemberSignature Language="C#" Value="public LocalAuthentication.LAContext AuthenticationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class LocalAuthentication.LAContext AuthenticationContext" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.AuthenticationContext" />
      <MemberSignature Language="F#" Value="member this.AuthenticationContext : LocalAuthentication.LAContext with get, set" Usage="Security.SecRecord.AuthenticationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>LocalAuthentication.LAContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public Security.SecAuthenticationType AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Security.SecAuthenticationType AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.AuthenticationType" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : Security.SecAuthenticationType with get, set" Usage="Security.SecRecord.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecAuthenticationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The authentication type.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationUI">
      <MemberSignature Language="C#" Value="public Security.SecAuthenticationUI AuthenticationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Security.SecAuthenticationUI AuthenticationUI" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.AuthenticationUI" />
      <MemberSignature Language="F#" Value="member this.AuthenticationUI : Security.SecAuthenticationUI with get, set" Usage="Security.SecRecord.AuthenticationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecAuthenticationUI</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CanDecrypt" />
      <MemberSignature Language="F#" Value="member this.CanDecrypt : bool with get, set" Usage="Security.SecRecord.CanDecrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this cryptographic key can be used to decrypt data.</summary>
        <value />
        <remarks>For keys, whether this can be used to decrypt data.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDerive">
      <MemberSignature Language="C#" Value="public bool CanDerive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDerive" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CanDerive" />
      <MemberSignature Language="F#" Value="member this.CanDerive : bool with get, set" Usage="Security.SecRecord.CanDerive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this key can be used to derive another key.</summary>
        <value />
        <remarks>For keys, whether this can be used to derive another key.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CanEncrypt" />
      <MemberSignature Language="F#" Value="member this.CanEncrypt : bool with get, set" Usage="Security.SecRecord.CanEncrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this cryptographic key can be used to encrypt data.</summary>
        <value />
        <remarks>For keys, this determines whether the key can be used to encrypt data.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSign">
      <MemberSignature Language="C#" Value="public bool CanSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSign" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CanSign" />
      <MemberSignature Language="F#" Value="member this.CanSign : bool with get, set" Usage="Security.SecRecord.CanSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this key can be used to sign data.</summary>
        <value />
        <remarks>For keys, whether this can be used to sign.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUnwrap">
      <MemberSignature Language="C#" Value="public bool CanUnwrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUnwrap" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CanUnwrap" />
      <MemberSignature Language="F#" Value="member this.CanUnwrap : bool with get, set" Usage="Security.SecRecord.CanUnwrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this key can be used to unwrap another key.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanVerify">
      <MemberSignature Language="C#" Value="public bool CanVerify { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanVerify" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CanVerify" />
      <MemberSignature Language="F#" Value="member this.CanVerify : bool with get, set" Usage="Security.SecRecord.CanVerify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this key can be used to verify a digital signature.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrap">
      <MemberSignature Language="C#" Value="public bool CanWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrap" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CanWrap" />
      <MemberSignature Language="F#" Value="member this.CanWrap : bool with get, set" Usage="Security.SecRecord.CanWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this key can be used to wrap another key.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateEncoding">
      <MemberSignature Language="C#" Value="public Foundation.NSNumber CertificateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber CertificateEncoding" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CertificateEncoding" />
      <MemberSignature Language="F#" Value="member this.CertificateEncoding : Foundation.NSNumber" Usage="Security.SecRecord.CertificateEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The encoding used for the certificate.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateType">
      <MemberSignature Language="C#" Value="public Foundation.NSNumber CertificateType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber CertificateType" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CertificateType" />
      <MemberSignature Language="F#" Value="member this.CertificateType : Foundation.NSNumber" Usage="Security.SecRecord.CertificateType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A certificate type.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Security.SecRecord Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Security.SecRecord Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.Clone" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; Security.SecRecord" Usage="secRecord.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecRecord</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Makes a copy of this SecRecord.</summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Comment" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="Security.SecRecord.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used editable comment for this record.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationDate">
      <MemberSignature Language="C#" Value="public Foundation.NSDate CreationDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate CreationDate" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CreationDate" />
      <MemberSignature Language="F#" Value="member this.CreationDate : Foundation.NSDate with get, set" Usage="Security.SecRecord.CreationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Creation date for this item.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Creator" />
      <MemberSignature Language="F#" Value="member this.Creator : int with get, set" Usage="Security.SecRecord.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Creator key, a 32-bit value</summary>
        <value />
        <remarks>A 32 bit value used to flag the entry with the creator key.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatorType">
      <MemberSignature Language="C#" Value="public int CreatorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CreatorType" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.CreatorType" />
      <MemberSignature Language="F#" Value="member this.CreatorType : int with get, set" Usage="Security.SecRecord.CreatorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Item's type.   32-bit value.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Description" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Security.SecRecord.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>User visible description of this item.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secRecord.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the SecRecord object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the SecRecord class.</para>
          <para>Calling the Dispose method when the application is finished using the SecRecord ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="secRecord.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the SecRecord object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the SecRecord class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the SecRecord ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectiveKeySize">
      <MemberSignature Language="C#" Value="public int EffectiveKeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EffectiveKeySize" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.EffectiveKeySize" />
      <MemberSignature Language="F#" Value="member this.EffectiveKeySize : int with get, set" Usage="Security.SecRecord.EffectiveKeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Number of effective bits on the key.</summary>
        <value />
        <remarks>The number of effective bits on the key.   Contrast this with the KeySize that might be larger, but contains padding.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SecRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="secRecord.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the SecRecord object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generic">
      <MemberSignature Language="C#" Value="public Foundation.NSData Generic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData Generic" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Generic" />
      <MemberSignature Language="F#" Value="member this.Generic : Foundation.NSData with get, set" Usage="Security.SecRecord.Generic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Generic password's NSData storage.</summary>
        <value>Items of kind GenericPassword use this field to store item-specific data.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCertificate">
      <MemberSignature Language="C#" Value="public Security.SecCertificate GetCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Security.SecCertificate GetCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.GetCertificate" />
      <MemberSignature Language="F#" Value="member this.GetCertificate : unit -&gt; Security.SecCertificate" Usage="secRecord.GetCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecCertificate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentity">
      <MemberSignature Language="C#" Value="public Security.SecIdentity GetIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Security.SecIdentity GetIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.GetIdentity" />
      <MemberSignature Language="F#" Value="member this.GetIdentity : unit -&gt; Security.SecIdentity" Usage="secRecord.GetIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public Security.SecKey GetKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Security.SecKey GetKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.GetKey" />
      <MemberSignature Language="F#" Value="member this.GetKey : unit -&gt; Security.SecKey" Usage="secRecord.GetKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetValueRef&lt;T&gt; () where T : class, ObjCRuntime.INativeObject;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetValueRef&lt;class (class ObjCRuntime.INativeObject) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.GetValueRef``1" />
      <MemberSignature Language="F#" Value="member this.GetValueRef : unit -&gt; 'T (requires 'T : null and 'T :&gt; ObjCRuntime.INativeObject)" Usage="secRecord.GetValueRef " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The desired strong type of the value to
	get, one of <see cref="T:Security.SecCertificate" /><see cref="T:Security.SecIdentity" /> or <see cref="T:Security.SecKey" />.</typeparam>
        <summary>Returns the associated Certificate, Identity, or Key stored in this record.</summary>
        <returns>The return value, if present shoudl be one of the
	allowed types <see cref="T:Security.SecCertificate" /><see cref="T:Security.SecIdentity" /> or <see cref="T:Security.SecKey" />.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invisible">
      <MemberSignature Language="C#" Value="public bool Invisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Invisible" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Invisible" />
      <MemberSignature Language="F#" Value="member this.Invisible : bool with get, set" Usage="Security.SecRecord.Invisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set, the item is not displayed to the user.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExtractable">
      <MemberSignature Language="C#" Value="public bool IsExtractable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExtractable" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.IsExtractable" />
      <MemberSignature Language="F#" Value="member this.IsExtractable : bool with get, set" Usage="Security.SecRecord.IsExtractable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegative">
      <MemberSignature Language="C#" Value="public bool IsNegative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNegative" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.IsNegative" />
      <MemberSignature Language="F#" Value="member this.IsNegative : bool with get, set" Usage="Security.SecRecord.IsNegative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether there is a valid password associated.</summary>
        <value />
        <remarks>You can set this flag if you want to force the user to enter the password every time he needs to use the item.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPermanent">
      <MemberSignature Language="C#" Value="public bool IsPermanent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPermanent" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.IsPermanent" />
      <MemberSignature Language="F#" Value="member this.IsPermanent : bool with get, set" Usage="Security.SecRecord.IsPermanent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSensitive">
      <MemberSignature Language="C#" Value="public bool IsSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSensitive" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.IsSensitive" />
      <MemberSignature Language="F#" Value="member this.IsSensitive : bool with get, set" Usage="Security.SecRecord.IsSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public Foundation.NSData Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData Issuer" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Issuer" />
      <MemberSignature Language="F#" Value="member this.Issuer : Foundation.NSData" Usage="Security.SecRecord.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>X.500 Issuer certificate name as an NSData block.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyClass">
      <MemberSignature Language="C#" Value="public Security.SecKeyClass KeyClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Security.SecKeyClass KeyClass" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.KeyClass" />
      <MemberSignature Language="F#" Value="member this.KeyClass : Security.SecKeyClass with get, set" Usage="Security.SecRecord.KeyClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecKeyClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The key class.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySizeInBits">
      <MemberSignature Language="C#" Value="public int KeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.KeySizeInBits" />
      <MemberSignature Language="F#" Value="member this.KeySizeInBits : int with get, set" Usage="Security.SecRecord.KeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bitsize for the key, contrast this with EffectiveKeySize.</summary>
        <value />
        <remarks>This determines the number of bits in the key.   This can contain padding, contrast this with EffectiveKeySize.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public Security.SecKeyType KeyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Security.SecKeyType KeyType" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.KeyType" />
      <MemberSignature Language="F#" Value="member this.KeyType : Security.SecKeyType with get, set" Usage="Security.SecRecord.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecKeyType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The key type.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Label" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="Security.SecRecord.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>User visible label for this item.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCaseInsensitive">
      <MemberSignature Language="C#" Value="public bool MatchCaseInsensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchCaseInsensitive" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.MatchCaseInsensitive" />
      <MemberSignature Language="F#" Value="member this.MatchCaseInsensitive : bool with get, set" Usage="Security.SecRecord.MatchCaseInsensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether matches should be case insensitive</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchEmailAddressIfPresent">
      <MemberSignature Language="C#" Value="public string MatchEmailAddressIfPresent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MatchEmailAddressIfPresent" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.MatchEmailAddressIfPresent" />
      <MemberSignature Language="F#" Value="member this.MatchEmailAddressIfPresent : string with get, set" Usage="Security.SecRecord.MatchEmailAddressIfPresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchIssuers">
      <MemberSignature Language="C#" Value="public Foundation.NSData[] MatchIssuers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData[] MatchIssuers" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.MatchIssuers" />
      <MemberSignature Language="F#" Value="member this.MatchIssuers : Foundation.NSData[] with get, set" Usage="Security.SecRecord.MatchIssuers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchItemList">
      <MemberSignature Language="C#" Value="public Security.SecKeyChain[] MatchItemList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Security.SecKeyChain[] MatchItemList" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.MatchItemList" />
      <MemberSignature Language="F#" Value="member this.MatchItemList : Security.SecKeyChain[] with get, set" Usage="Security.SecRecord.MatchItemList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecKeyChain[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchPolicy">
      <MemberSignature Language="C#" Value="public Security.SecPolicy MatchPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Security.SecPolicy MatchPolicy" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.MatchPolicy" />
      <MemberSignature Language="F#" Value="member this.MatchPolicy : Security.SecPolicy with get, set" Usage="Security.SecRecord.MatchPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchSubjectContains">
      <MemberSignature Language="C#" Value="public string MatchSubjectContains { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MatchSubjectContains" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.MatchSubjectContains" />
      <MemberSignature Language="F#" Value="member this.MatchSubjectContains : string with get, set" Usage="Security.SecRecord.MatchSubjectContains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTrustedOnly">
      <MemberSignature Language="C#" Value="public bool MatchTrustedOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchTrustedOnly" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.MatchTrustedOnly" />
      <MemberSignature Language="F#" Value="member this.MatchTrustedOnly : bool with get, set" Usage="Security.SecRecord.MatchTrustedOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchValidOnDate">
      <MemberSignature Language="C#" Value="public Foundation.NSDate MatchValidOnDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate MatchValidOnDate" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.MatchValidOnDate" />
      <MemberSignature Language="F#" Value="member this.MatchValidOnDate : Foundation.NSDate with get, set" Usage="Security.SecRecord.MatchValidOnDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationDate">
      <MemberSignature Language="C#" Value="public Foundation.NSDate ModificationDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate ModificationDate" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.ModificationDate" />
      <MemberSignature Language="F#" Value="member this.ModificationDate : Foundation.NSDate with get, set" Usage="Security.SecRecord.ModificationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Path" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Security.SecRecord.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Path component of an InternetPassword.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistentReference">
      <MemberSignature Language="C#" Value="public bool PersistentReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentReference" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.PersistentReference" />
      <MemberSignature Language="F#" Value="member this.PersistentReference : bool with get, set" Usage="Security.SecRecord.PersistentReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.TV(11, 0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Watch(4, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Port" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="Security.SecRecord.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Port component of an InternetPassword</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protocol">
      <MemberSignature Language="C#" Value="public Security.SecProtocol Protocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Security.SecProtocol Protocol" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Protocol" />
      <MemberSignature Language="F#" Value="member this.Protocol : Security.SecProtocol with get, set" Usage="Security.SecRecord.Protocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Protocol component of an InternetPassword.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKeyHash">
      <MemberSignature Language="C#" Value="public Foundation.NSData PublicKeyHash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData PublicKeyHash" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.PublicKeyHash" />
      <MemberSignature Language="F#" Value="member this.PublicKeyHash : Foundation.NSData" Usage="Security.SecRecord.PublicKeyHash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Public key hash</summary>
        <value />
        <remarks>The public key hash, used by certificates.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityDomain">
      <MemberSignature Language="C#" Value="public string SecurityDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityDomain" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.SecurityDomain" />
      <MemberSignature Language="F#" Value="member this.SecurityDomain : string with get, set" Usage="Security.SecRecord.SecurityDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Security domain for InternetPassword items.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public Foundation.NSData SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData SerialNumber" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.SerialNumber" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : Foundation.NSData" Usage="Security.SecRecord.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Serial number for the certificate.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public string Server { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Server" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Server" />
      <MemberSignature Language="F#" Value="member this.Server : string with get, set" Usage="Security.SecRecord.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Server component for an InternetPassword</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Service">
      <MemberSignature Language="C#" Value="public string Service { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Service" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Service" />
      <MemberSignature Language="F#" Value="member this.Service : string with get, set" Usage="Security.SecRecord.Service" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Service associated with an InternetPassword.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (Security.SecCertificate cert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(class Security.SecCertificate cert) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.SetCertificate(Security.SecCertificate)" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : Security.SecCertificate -&gt; unit" Usage="secRecord.SetCertificate cert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cert" Type="Security.SecCertificate" />
      </Parameters>
      <Docs>
        <param name="cert">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIdentity">
      <MemberSignature Language="C#" Value="public void SetIdentity (Security.SecIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIdentity(class Security.SecIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.SetIdentity(Security.SecIdentity)" />
      <MemberSignature Language="F#" Value="member this.SetIdentity : Security.SecIdentity -&gt; unit" Usage="secRecord.SetIdentity identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="Security.SecIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public void SetKey (Security.SecKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetKey(class Security.SecKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.SetKey(Security.SecKey)" />
      <MemberSignature Language="F#" Value="member this.SetKey : Security.SecKey -&gt; unit" Usage="secRecord.SetKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Security.SecKey" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueRef">
      <MemberSignature Language="C#" Value="public void SetValueRef (ObjCRuntime.INativeObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueRef(class ObjCRuntime.INativeObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.SetValueRef(ObjCRuntime.INativeObject)" />
      <MemberSignature Language="F#" Value="member this.SetValueRef : ObjCRuntime.INativeObject -&gt; unit" Usage="secRecord.SetValueRef value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="ObjCRuntime.INativeObject" />
      </Parameters>
      <Docs>
        <param name="value">An object of type <see cref="T:Security.SecCertificate" /><see cref="T:Security.SecIdentity" /> or <see cref="T:Security.SecKey" />.</param>
        <summary>Use this to add a certificate, identity or key to the record.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Subject" />
      <MemberSignature Language="F#" Value="member this.Subject : string" Usage="Security.SecRecord.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>X.500 Subject name stored as an NSData.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectKeyID">
      <MemberSignature Language="C#" Value="public Foundation.NSData SubjectKeyID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData SubjectKeyID" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.SubjectKeyID" />
      <MemberSignature Language="F#" Value="member this.SubjectKeyID : Foundation.NSData" Usage="Security.SecRecord.SubjectKeyID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SubjectKeyID of the certificate.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronizable">
      <MemberSignature Language="C#" Value="public bool Synchronizable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Synchronizable" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.Synchronizable" />
      <MemberSignature Language="F#" Value="member this.Synchronizable : bool with get, set" Usage="Security.SecRecord.Synchronizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizableAny">
      <MemberSignature Language="C#" Value="public bool SynchronizableAny { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SynchronizableAny" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.SynchronizableAny" />
      <MemberSignature Language="F#" Value="member this.SynchronizableAny : bool with get, set" Usage="Security.SecRecord.SynchronizableAny" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncViewHint">
      <MemberSignature Language="C#" Value="public string SyncViewHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SyncViewHint" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.SyncViewHint" />
      <MemberSignature Language="F#" Value="member this.SyncViewHint : string with get, set" Usage="Security.SecRecord.SyncViewHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary ToDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary ToDictionary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Security.SecRecord.ToDictionary" />
      <MemberSignature Language="F#" Value="member this.ToDictionary : unit -&gt; Foundation.NSDictionary" Usage="secRecord.ToDictionary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenID">
      <MemberSignature Language="C#" Value="public Security.SecTokenID TokenID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Security.SecTokenID TokenID" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.TokenID" />
      <MemberSignature Language="F#" Value="member this.TokenID : Security.SecTokenID with get, set" Usage="Security.SecRecord.TokenID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecTokenID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNoAuthenticationUI">
      <MemberSignature Language="C#" Value="public bool UseNoAuthenticationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNoAuthenticationUI" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.UseNoAuthenticationUI" />
      <MemberSignature Language="F#" Value="member this.UseNoAuthenticationUI : bool with get, set" Usage="Security.SecRecord.UseNoAuthenticationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, "Use AuthenticationUI property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Developers should use AuthenticationUI property</summary>
        <value>
          <para />
        </value>
        <remarks>Setting this value will return an error condition if the item requires a user interface to authenticate.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOperationPrompt">
      <MemberSignature Language="C#" Value="public string UseOperationPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UseOperationPrompt" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.UseOperationPrompt" />
      <MemberSignature Language="F#" Value="member this.UseOperationPrompt : string with get, set" Usage="Security.SecRecord.UseOperationPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>User facing description of the kind of authentication that the application is trying to perform</summary>
        <value>
          <para />
        </value>
        <remarks>Set this value to a string that will be displayed to the user when the authentication takes place for the item to give the user some context for the request.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueData">
      <MemberSignature Language="C#" Value="public Foundation.NSData ValueData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData ValueData" />
      <MemberSignature Language="DocId" Value="P:Security.SecRecord.ValueData" />
      <MemberSignature Language="F#" Value="member this.ValueData : Foundation.NSData with get, set" Usage="Security.SecRecord.ValueData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The value data to store.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
