<Type Name="SecTrust" FullName="Security.SecTrust">
  <TypeSignature Language="C#" Value="public class SecTrust : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecTrust extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A trust level. A trust object combines a certificate with a policy or policies. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecTrust (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecTrust (Security.SecCertificate certificate, Security.SecPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Security.SecCertificate certificate, class Security.SecPolicy policy) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="Security.SecCertificate" />
        <Parameter Name="policy" Type="Security.SecPolicy" />
      </Parameters>
      <Docs>
        <param name="certificate">To be added.</param>
        <param name="policy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecTrust (System.Security.Cryptography.X509Certificates.X509Certificate certificate, Security.SecPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class Security.SecPolicy policy) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="policy" Type="Security.SecPolicy" />
      </Parameters>
      <Docs>
        <param name="certificate">The certificate to be evaluated.</param>
        <param name="policy">The policy to be used to evaluate the trust.</param>
        <summary>Create a new instance based on the certificate, to be evaluated, and a policy, to be applied.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecTrust (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, Security.SecPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class Security.SecPolicy policy) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="policy" Type="Security.SecPolicy" />
      </Parameters>
      <Docs>
        <param name="certificate">The certificate to be evaluated.</param>
        <param name="policy">The policy to be used to evaluate the trust.</param>
        <summary>Create a new instance based on the certificate, to be evaluated, and a policy, to be applied</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecTrust (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates, Security.SecPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates, class Security.SecPolicy policy) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="policy" Type="Security.SecPolicy" />
      </Parameters>
      <Docs>
        <param name="certificates">A collection of X.509 certificates</param>
        <param name="policy">The policy to be used to evaluate the trust.</param>
        <summary>Create a new instance based on the certificate, to be evaluated, and a policy, to be applied.</summary>
        <remarks>The first certificate (in the collection) is the one to be evaluated, the others will be used to build a chain of trust.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecTrust (System.Security.Cryptography.X509Certificates.X509CertificateCollection certificates, Security.SecPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509CertificateCollection certificates, class Security.SecPolicy policy) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="policy" Type="Security.SecPolicy" />
      </Parameters>
      <Docs>
        <param name="certificates">A collection of X.509 certificates</param>
        <param name="policy">The policy to be used to evaluate the trust.</param>
        <summary>Create a new instance based on the certificate, to be evaluated, and a policy, to be applied.</summary>
        <remarks>The first certificate (in the collection) is the one to be evaluated, the others will be used to build a chain of trust.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of certificates used for evaluation.</summary>
        <value>The number of certificates.</value>
        <remarks>There can be more and different certificates than the one provided to the constructor.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the SecTrust object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the SecTrust class.</para>
          <para>Calling the Dispose method when the application is finished using the SecTrust ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the SecTrust object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the SecTrust class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the SecTrust ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public Security.SecTrustResult Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecTrustResult Evaluate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecTrustResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Evaluate the trust of the certificate using the policy.</summary>
        <returns>A code that describe if the certificate can be trusted and, if so, under which circumstances.</returns>
        <remarks>In general both Proceed and Unspecified means you can trust the certificate, other values means it should not be trusted.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SecTrust ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the SecTrust object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAnchorCertificates">
      <MemberSignature Language="C#" Value="public Security.SecCertificate[] GetCustomAnchorCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Security.SecCertificate[] GetCustomAnchorCertificates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecCertificate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExceptions">
      <MemberSignature Language="C#" Value="public Foundation.NSData GetExceptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData GetExceptions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicies">
      <MemberSignature Language="C#" Value="public Security.SecPolicy[] GetPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Security.SecPolicy[] GetPolicies() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecPolicy[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="public Security.SecKey GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Security.SecKey GetPublicKey() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the public key of the evaluated certificate.</summary>
        <returns>A SecKey instance of the certificate's public key.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResult">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary GetResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary GetResult() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrustResult">
      <MemberSignature Language="C#" Value="public Security.SecTrustResult GetTrustResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecTrustResult GetTrustResult() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Security.SecTrustResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/Security.framework/Security&quot; as &quot;SecTrustGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the MonoTouch.Security.SecTrust type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isSecTrust = (CFType.GetTypeID (foo.Handle) == SecTrust.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVerifyTime">
      <MemberSignature Language="C#" Value="public double GetVerifyTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetVerifyTime() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the verification time.</summary>
        <returns>To be added.</returns>
        <remarks>This is often used for digital signatures.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Security.SecCertificate this[nint index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Security.SecCertificate Item(valuetype System.nint)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecCertificate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="index">Index of the certificate to retrieve.</param>
        <summary>Get one of the certificate used to evaluate the trust.</summary>
        <value>The specified SecCertificate instance.</value>
        <remarks>There can be more and different certificates than the one provided to the constructor.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkFetchAllowed">
      <MemberSignature Language="C#" Value="public bool NetworkFetchAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NetworkFetchAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAnchorCertificates">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode SetAnchorCertificates (Security.SecCertificate[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode SetAnchorCertificates(class Security.SecCertificate[] array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Security.SecCertificate[]" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAnchorCertificates">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode SetAnchorCertificates (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode SetAnchorCertificates(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
      </Parameters>
      <Docs>
        <param name="certificates">A collection of anchor (trusted root) certificates.</param>
        <summary>Provide your own collection of trusted certificate for the evaluation.</summary>
        <returns>An error code.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAnchorCertificates">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode SetAnchorCertificates (System.Security.Cryptography.X509Certificates.X509CertificateCollection certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode SetAnchorCertificates(class System.Security.Cryptography.X509Certificates.X509CertificateCollection certificates) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
      </Parameters>
      <Docs>
        <param name="certificates">A collection of anchor (trusted root) certificates.</param>
        <summary>Provide your own collection of trusted certificate for the evaluation.</summary>
        <returns>An error code.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAnchorCertificatesOnly">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode SetAnchorCertificatesOnly (bool anchorCertificatesOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode SetAnchorCertificatesOnly(bool anchorCertificatesOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchorCertificatesOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="anchorCertificatesOnly">true if only the supplied anchors should be used, false if the system anchors should also be used</param>
        <summary>Specify if only the supplied anchor certificates should be used.</summary>
        <returns>An error code.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public bool SetExceptions (Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetExceptions(class Foundation.NSData data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOCSPResponse">
      <MemberSignature Language="C#" Value="public void SetOCSPResponse (Foundation.NSArray ocspResponses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOCSPResponse(class Foundation.NSArray ocspResponses) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ocspResponses" Type="Foundation.NSArray" />
      </Parameters>
      <Docs>
        <param name="ocspResponses">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOCSPResponse">
      <MemberSignature Language="C#" Value="public void SetOCSPResponse (Foundation.NSData ocspResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOCSPResponse(class Foundation.NSData ocspResponse) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ocspResponse" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="ocspResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOCSPResponse">
      <MemberSignature Language="C#" Value="public void SetOCSPResponse (System.Collections.Generic.IEnumerable&lt;Foundation.NSData&gt; ocspResponses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOCSPResponse(class System.Collections.Generic.IEnumerable`1&lt;class Foundation.NSData&gt; ocspResponses) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ocspResponses" Type="System.Collections.Generic.IEnumerable&lt;Foundation.NSData&gt;" />
      </Parameters>
      <Docs>
        <param name="ocspResponses">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPolicies">
      <MemberSignature Language="C#" Value="public void SetPolicies (Foundation.NSArray policies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPolicies(class Foundation.NSArray policies) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policies" Type="Foundation.NSArray" />
      </Parameters>
      <Docs>
        <param name="policies">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPolicies">
      <MemberSignature Language="C#" Value="public void SetPolicies (System.Collections.Generic.IEnumerable&lt;Security.SecPolicy&gt; policies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPolicies(class System.Collections.Generic.IEnumerable`1&lt;class Security.SecPolicy&gt; policies) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policies" Type="System.Collections.Generic.IEnumerable&lt;Security.SecPolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="policies">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPolicy">
      <MemberSignature Language="C#" Value="public void SetPolicy (Security.SecPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPolicy(class Security.SecPolicy policy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="Security.SecPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVerifyDate">
      <MemberSignature Language="C#" Value="public Security.SecStatusCode SetVerifyDate (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Security.SecStatusCode SetVerifyDate(valuetype System.DateTime date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Security.SecStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">Date for which the verification should made.</param>
        <summary>Set the date at which the trust is to be evaluated.</summary>
        <returns>An error code.</returns>
        <remarks>This is often used for digital signatures.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
