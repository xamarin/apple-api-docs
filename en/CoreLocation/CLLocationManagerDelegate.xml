<Type Name="CLLocationManagerDelegate" FullName="CoreLocation.CLLocationManagerDelegate">
  <TypeSignature Language="C#" Value="public class CLLocationManagerDelegate : Foundation.NSObject, CoreLocation.ICLLocationManagerDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CLLocationManagerDelegate extends Foundation.NSObject implements class CoreLocation.ICLLocationManagerDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreLocation.CLLocationManagerDelegate" />
  <TypeSignature Language="F#" Value="type CLLocationManagerDelegate = class&#xA;    inherit NSObject&#xA;    interface ICLLocationManagerDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CoreLocation.ICLLocationManagerDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("CLLocationManagerDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Virtual methods on this class receive notifications from the CLLocationManager.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/CoreLocation/">Example_CoreLocation</related>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManagerDelegate_Protocol/index.html">Apple documentation for <c>CLLocationManagerDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CLLocationManagerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CLLocationManagerDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreLocation.CLLocationManagerDelegate : Foundation.NSObjectFlag -&gt; CoreLocation.CLLocationManagerDelegate" Usage="new CoreLocation.CLLocationManagerDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CLLocationManagerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreLocation.CLLocationManagerDelegate : nativeint -&gt; CoreLocation.CLLocationManagerDelegate" Usage="new CoreLocation.CLLocationManagerDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationChanged">
      <MemberSignature Language="C#" Value="public virtual void AuthorizationChanged (CoreLocation.CLLocationManager manager, CoreLocation.CLAuthorizationStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthorizationChanged(class CoreLocation.CLLocationManager manager, valuetype CoreLocation.CLAuthorizationStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.AuthorizationChanged(CoreLocation.CLLocationManager,CoreLocation.CLAuthorizationStatus)" />
      <MemberSignature Language="F#" Value="abstract member AuthorizationChanged : CoreLocation.CLLocationManager * CoreLocation.CLAuthorizationStatus -&gt; unit&#xA;override this.AuthorizationChanged : CoreLocation.CLLocationManager * CoreLocation.CLAuthorizationStatus -&gt; unit" Usage="cLLocationManagerDelegate.AuthorizationChanged (manager, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didChangeAuthorizationStatus:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="status" Type="CoreLocation.CLAuthorizationStatus" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="status">The new authorization status of the application.</param>
        <summary>The authorization status of the application has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredUpdatesFinished">
      <MemberSignature Language="C#" Value="public virtual void DeferredUpdatesFinished (CoreLocation.CLLocationManager manager, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeferredUpdatesFinished(class CoreLocation.CLLocationManager manager, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.DeferredUpdatesFinished(CoreLocation.CLLocationManager,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DeferredUpdatesFinished : CoreLocation.CLLocationManager * Foundation.NSError -&gt; unit&#xA;override this.DeferredUpdatesFinished : CoreLocation.CLLocationManager * Foundation.NSError -&gt; unit" Usage="cLLocationManagerDelegate.DeferredUpdatesFinished (manager, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didFinishDeferredUpdatesWithError:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="error">The reason deferred updates are no longer available.</param>
        <summary>Location updates will no longer be deferred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDetermineState">
      <MemberSignature Language="C#" Value="public virtual void DidDetermineState (CoreLocation.CLLocationManager manager, CoreLocation.CLRegionState state, CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDetermineState(class CoreLocation.CLLocationManager manager, valuetype CoreLocation.CLRegionState state, class CoreLocation.CLRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.DidDetermineState(CoreLocation.CLLocationManager,CoreLocation.CLRegionState,CoreLocation.CLRegion)" />
      <MemberSignature Language="F#" Value="abstract member DidDetermineState : CoreLocation.CLLocationManager * CoreLocation.CLRegionState * CoreLocation.CLRegion -&gt; unit&#xA;override this.DidDetermineState : CoreLocation.CLLocationManager * CoreLocation.CLRegionState * CoreLocation.CLRegion -&gt; unit" Usage="cLLocationManagerDelegate.DidDetermineState (manager, state, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didDetermineState:forRegion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="state" Type="CoreLocation.CLRegionState" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="state">The new state of the region.</param>
        <param name="region">To be added.</param>
        <summary>The <paramref name="state" /> of the <paramref name="region" /> has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRangeBeacons">
      <MemberSignature Language="C#" Value="public virtual void DidRangeBeacons (CoreLocation.CLLocationManager manager, CoreLocation.CLBeacon[] beacons, CoreLocation.CLBeaconRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRangeBeacons(class CoreLocation.CLLocationManager manager, class CoreLocation.CLBeacon[] beacons, class CoreLocation.CLBeaconRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.DidRangeBeacons(CoreLocation.CLLocationManager,CoreLocation.CLBeacon[],CoreLocation.CLBeaconRegion)" />
      <MemberSignature Language="F#" Value="abstract member DidRangeBeacons : CoreLocation.CLLocationManager * CoreLocation.CLBeacon[] * CoreLocation.CLBeaconRegion -&gt; unit&#xA;override this.DidRangeBeacons : CoreLocation.CLLocationManager * CoreLocation.CLBeacon[] * CoreLocation.CLBeaconRegion -&gt; unit" Usage="cLLocationManagerDelegate.DidRangeBeacons (manager, beacons, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didRangeBeacons:inRegion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="beacons" Type="CoreLocation.CLBeacon[]" />
        <Parameter Name="region" Type="CoreLocation.CLBeaconRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="beacons">The ranged <see cref="T:CoreLocation.CLBeacon" />s.</param>
        <param name="region">To be added.</param>
        <summary>Range information was generated for <paramref name="beacons" /> in <paramref name="region" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStartMonitoringForRegion">
      <MemberSignature Language="C#" Value="public virtual void DidStartMonitoringForRegion (CoreLocation.CLLocationManager manager, CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidStartMonitoringForRegion(class CoreLocation.CLLocationManager manager, class CoreLocation.CLRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.DidStartMonitoringForRegion(CoreLocation.CLLocationManager,CoreLocation.CLRegion)" />
      <MemberSignature Language="F#" Value="abstract member DidStartMonitoringForRegion : CoreLocation.CLLocationManager * CoreLocation.CLRegion -&gt; unit&#xA;override this.DidStartMonitoringForRegion : CoreLocation.CLLocationManager * CoreLocation.CLRegion -&gt; unit" Usage="cLLocationManagerDelegate.DidStartMonitoringForRegion (manager, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didStartMonitoringForRegion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">To be added.</param>
        <summary>Monitoring began for <paramref name="region" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidVisit">
      <MemberSignature Language="C#" Value="public virtual void DidVisit (CoreLocation.CLLocationManager manager, CoreLocation.CLVisit visit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidVisit(class CoreLocation.CLLocationManager manager, class CoreLocation.CLVisit visit) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.DidVisit(CoreLocation.CLLocationManager,CoreLocation.CLVisit)" />
      <MemberSignature Language="F#" Value="abstract member DidVisit : CoreLocation.CLLocationManager * CoreLocation.CLVisit -&gt; unit&#xA;override this.DidVisit : CoreLocation.CLLocationManager * CoreLocation.CLVisit -&gt; unit" Usage="cLLocationManagerDelegate.DidVisit (manager, visit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didVisit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="visit" Type="CoreLocation.CLVisit" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="visit">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Failed">
      <MemberSignature Language="C#" Value="public virtual void Failed (CoreLocation.CLLocationManager manager, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Failed(class CoreLocation.CLLocationManager manager, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.Failed(CoreLocation.CLLocationManager,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member Failed : CoreLocation.CLLocationManager * Foundation.NSError -&gt; unit&#xA;override this.Failed : CoreLocation.CLLocationManager * Foundation.NSError -&gt; unit" Usage="cLLocationManagerDelegate.Failed (manager, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didFailWithError:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="error">The error that occurred.</param>
        <summary>A failure occurred while updating locations.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationsUpdated">
      <MemberSignature Language="C#" Value="public virtual void LocationsUpdated (CoreLocation.CLLocationManager manager, CoreLocation.CLLocation[] locations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LocationsUpdated(class CoreLocation.CLLocationManager manager, class CoreLocation.CLLocation[] locations) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.LocationsUpdated(CoreLocation.CLLocationManager,CoreLocation.CLLocation[])" />
      <MemberSignature Language="F#" Value="abstract member LocationsUpdated : CoreLocation.CLLocationManager * CoreLocation.CLLocation[] -&gt; unit&#xA;override this.LocationsUpdated : CoreLocation.CLLocationManager * CoreLocation.CLLocation[] -&gt; unit" Usage="cLLocationManagerDelegate.LocationsUpdated (manager, locations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didUpdateLocations:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="locations" Type="CoreLocation.CLLocation[]" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="locations">To be added.</param>
        <summary>The device has generated <paramref name="locations" /> updates.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationUpdatesPaused">
      <MemberSignature Language="C#" Value="public virtual void LocationUpdatesPaused (CoreLocation.CLLocationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LocationUpdatesPaused(class CoreLocation.CLLocationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.LocationUpdatesPaused(CoreLocation.CLLocationManager)" />
      <MemberSignature Language="F#" Value="abstract member LocationUpdatesPaused : CoreLocation.CLLocationManager -&gt; unit&#xA;override this.LocationUpdatesPaused : CoreLocation.CLLocationManager -&gt; unit" Usage="cLLocationManagerDelegate.LocationUpdatesPaused manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManagerDidPauseLocationUpdates:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <summary>Location updating has been paused.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationUpdatesResumed">
      <MemberSignature Language="C#" Value="public virtual void LocationUpdatesResumed (CoreLocation.CLLocationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LocationUpdatesResumed(class CoreLocation.CLLocationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.LocationUpdatesResumed(CoreLocation.CLLocationManager)" />
      <MemberSignature Language="F#" Value="abstract member LocationUpdatesResumed : CoreLocation.CLLocationManager -&gt; unit&#xA;override this.LocationUpdatesResumed : CoreLocation.CLLocationManager -&gt; unit" Usage="cLLocationManagerDelegate.LocationUpdatesResumed manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManagerDidResumeLocationUpdates:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <summary>Location updating has restarted after pausing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MonitoringFailed">
      <MemberSignature Language="C#" Value="public virtual void MonitoringFailed (CoreLocation.CLLocationManager manager, CoreLocation.CLRegion region, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MonitoringFailed(class CoreLocation.CLLocationManager manager, class CoreLocation.CLRegion region, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.MonitoringFailed(CoreLocation.CLLocationManager,CoreLocation.CLRegion,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member MonitoringFailed : CoreLocation.CLLocationManager * CoreLocation.CLRegion * Foundation.NSError -&gt; unit&#xA;override this.MonitoringFailed : CoreLocation.CLLocationManager * CoreLocation.CLRegion * Foundation.NSError -&gt; unit" Usage="cLLocationManagerDelegate.MonitoringFailed (manager, region, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:monitoringDidFailForRegion:withError:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">To be added.</param>
        <param name="error">The cause of the failure.</param>
        <summary>Monitoring <paramref name="region" /> failed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangingBeaconsDidFailForRegion">
      <MemberSignature Language="C#" Value="public virtual void RangingBeaconsDidFailForRegion (CoreLocation.CLLocationManager manager, CoreLocation.CLBeaconRegion region, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RangingBeaconsDidFailForRegion(class CoreLocation.CLLocationManager manager, class CoreLocation.CLBeaconRegion region, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.RangingBeaconsDidFailForRegion(CoreLocation.CLLocationManager,CoreLocation.CLBeaconRegion,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member RangingBeaconsDidFailForRegion : CoreLocation.CLLocationManager * CoreLocation.CLBeaconRegion * Foundation.NSError -&gt; unit&#xA;override this.RangingBeaconsDidFailForRegion : CoreLocation.CLLocationManager * CoreLocation.CLBeaconRegion * Foundation.NSError -&gt; unit" Usage="cLLocationManagerDelegate.RangingBeaconsDidFailForRegion (manager, region, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:rangingBeaconsDidFailForRegion:withError:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="CoreLocation.CLBeaconRegion" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
          <paramref name="error" /> occurred while attempting to get range data from <paramref name="region" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionEntered">
      <MemberSignature Language="C#" Value="public virtual void RegionEntered (CoreLocation.CLLocationManager manager, CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegionEntered(class CoreLocation.CLLocationManager manager, class CoreLocation.CLRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.RegionEntered(CoreLocation.CLLocationManager,CoreLocation.CLRegion)" />
      <MemberSignature Language="F#" Value="abstract member RegionEntered : CoreLocation.CLLocationManager * CoreLocation.CLRegion -&gt; unit&#xA;override this.RegionEntered : CoreLocation.CLLocationManager * CoreLocation.CLRegion -&gt; unit" Usage="cLLocationManagerDelegate.RegionEntered (manager, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didEnterRegion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">The region entered.</param>
        <summary>Called when the device enters a monitored region.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionLeft">
      <MemberSignature Language="C#" Value="public virtual void RegionLeft (CoreLocation.CLLocationManager manager, CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegionLeft(class CoreLocation.CLLocationManager manager, class CoreLocation.CLRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.RegionLeft(CoreLocation.CLLocationManager,CoreLocation.CLRegion)" />
      <MemberSignature Language="F#" Value="abstract member RegionLeft : CoreLocation.CLLocationManager * CoreLocation.CLRegion -&gt; unit&#xA;override this.RegionLeft : CoreLocation.CLLocationManager * CoreLocation.CLRegion -&gt; unit" Usage="cLLocationManagerDelegate.RegionLeft (manager, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didExitRegion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">The region left.</param>
        <summary>Called when the device leaves a monitored region.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldDisplayHeadingCalibration">
      <MemberSignature Language="C#" Value="public virtual bool ShouldDisplayHeadingCalibration (CoreLocation.CLLocationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldDisplayHeadingCalibration(class CoreLocation.CLLocationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.ShouldDisplayHeadingCalibration(CoreLocation.CLLocationManager)" />
      <MemberSignature Language="F#" Value="abstract member ShouldDisplayHeadingCalibration : CoreLocation.CLLocationManager -&gt; bool&#xA;override this.ShouldDisplayHeadingCalibration : CoreLocation.CLLocationManager -&gt; bool" Usage="cLLocationManagerDelegate.ShouldDisplayHeadingCalibration manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManagerShouldDisplayHeadingCalibration:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <summary>The system believes that the magnetometer should be calibrated.</summary>
        <returns>Return <see langword="true" /> to allow the calibration dialog.</returns>
        <remarks>
          <para>This method will be executed when the system believes that the magnetometer (compass) requires calibration, either because it has not been calibrated recently or because a large change in the local magnetic field was detected.</para>
          <para>Application developers may override this method to return <see langword="false" />, in which case the calibration dialog will not appear.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedHeading">
      <MemberSignature Language="C#" Value="public virtual void UpdatedHeading (CoreLocation.CLLocationManager manager, CoreLocation.CLHeading newHeading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedHeading(class CoreLocation.CLLocationManager manager, class CoreLocation.CLHeading newHeading) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.UpdatedHeading(CoreLocation.CLLocationManager,CoreLocation.CLHeading)" />
      <MemberSignature Language="F#" Value="abstract member UpdatedHeading : CoreLocation.CLLocationManager * CoreLocation.CLHeading -&gt; unit&#xA;override this.UpdatedHeading : CoreLocation.CLLocationManager * CoreLocation.CLHeading -&gt; unit" Usage="cLLocationManagerDelegate.UpdatedHeading (manager, newHeading)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didUpdateHeading:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="newHeading" Type="CoreLocation.CLHeading" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="newHeading">The new heading.</param>
        <summary>The device's heading has been updated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedLocation">
      <MemberSignature Language="C#" Value="public virtual void UpdatedLocation (CoreLocation.CLLocationManager manager, CoreLocation.CLLocation newLocation, CoreLocation.CLLocation oldLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedLocation(class CoreLocation.CLLocationManager manager, class CoreLocation.CLLocation newLocation, class CoreLocation.CLLocation oldLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLLocationManagerDelegate.UpdatedLocation(CoreLocation.CLLocationManager,CoreLocation.CLLocation,CoreLocation.CLLocation)" />
      <MemberSignature Language="F#" Value="abstract member UpdatedLocation : CoreLocation.CLLocationManager * CoreLocation.CLLocation * CoreLocation.CLLocation -&gt; unit&#xA;override this.UpdatedLocation : CoreLocation.CLLocationManager * CoreLocation.CLLocation * CoreLocation.CLLocation -&gt; unit" Usage="cLLocationManagerDelegate.UpdatedLocation (manager, newLocation, oldLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("locationManager:didUpdateToLocation:fromLocation:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="CoreLocation.CLLocationManager" />
        <Parameter Name="newLocation" Type="CoreLocation.CLLocation" />
        <Parameter Name="oldLocation" Type="CoreLocation.CLLocation" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="newLocation">To be added.</param>
        <param name="oldLocation">To be added.</param>
        <summary>Developers should not use this deprecated method. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
