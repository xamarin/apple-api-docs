<Type Name="CLGeocoder" FullName="CoreLocation.CLGeocoder">
  <TypeSignature Language="C#" Value="public class CLGeocoder : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CLGeocoder extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:CoreLocation.CLGeocoder" />
  <TypeSignature Language="F#" Value="type CLGeocoder = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("CLGeocoder", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides support for converting between an address in
    text form and a location described using latitude and longitude or
    to convert from a latitue and longitude to a user-friendly
    location (street, city, state, country).</summary>
    <remarks>
      <para>Converting a latitude and longitude into a human-readable address is generally straightforward:</para>
      <example>
        <code lang="C#"><![CDATA[
async void GeocodeToConsoleAsync (string address) {
    var geoCoder = new CLGeocoder();
    var placemarks = await geoCoder.GeocodeAddressAsync(address);
    foreach (var placemark in placemarks) {
	      Console.WriteLine(placemark);
    }   
]]></code>
      </example>
      <para>As is reverse-geocoding:</para>
      <example>
        <code lang="C#"><![CDATA[
async void ReverseGeocodeToConsoleAsync (CLLocation location) {
    var geoCoder = new CLGeocoder();
    var placemarks = await geoCoder.ReverseGeocodeLocationAsync(location);
    foreach (var placemark in placemarks) {
	      Console.WriteLine(placemark);
    }          
}
          ]]></code>
      </example>
    </remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLGeocoder_class/index.html">Apple documentation for <c>CLGeocoder</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CLGeocoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CLGeocoder (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreLocation.CLGeocoder : Foundation.NSObjectFlag -&gt; CoreLocation.CLGeocoder" Usage="new CoreLocation.CLGeocoder t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CLGeocoder (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreLocation.CLGeocoder : nativeint -&gt; CoreLocation.CLGeocoder" Usage="new CoreLocation.CLGeocoder handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelGeocode">
      <MemberSignature Language="C#" Value="public virtual void CancelGeocode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelGeocode() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.CancelGeocode" />
      <MemberSignature Language="F#" Value="abstract member CancelGeocode : unit -&gt; unit&#xA;override this.CancelGeocode : unit -&gt; unit" Usage="cLGeocoder.CancelGeocode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("cancelGeocode")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels the geocoding attempt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:CoreLocation.CLGeocoder.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="CoreLocation.CLGeocoder.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodeAddress">
      <MemberSignature Language="C#" Value="public virtual void GeocodeAddress (Foundation.NSDictionary addressDictionary, CoreLocation.CLGeocodeCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GeocodeAddress(class Foundation.NSDictionary addressDictionary, class CoreLocation.CLGeocodeCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodeAddress(Foundation.NSDictionary,CoreLocation.CLGeocodeCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member GeocodeAddress : Foundation.NSDictionary * CoreLocation.CLGeocodeCompletionHandler -&gt; unit&#xA;override this.GeocodeAddress : Foundation.NSDictionary * CoreLocation.CLGeocodeCompletionHandler -&gt; unit" Usage="cLGeocoder.GeocodeAddress (addressDictionary, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("geocodeAddressDictionary:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'GeocodeAddress (string, CLRegion, NSLocale, CLGeocodeCompletionHandler)' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'GeocodeAddress (string, CLRegion, NSLocale, CLGeocodeCompletionHandler)' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.None, "Use 'GeocodeAddress (string, CLRegion, NSLocale, CLGeocodeCompletionHandler)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressDictionary" Type="Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="CoreLocation.CLGeocodeCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCLGeocodeCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addressDictionary">Addressbook dictionary to submit</param>
        <param name="completionHandler">Method to invoke when the request completes.</param>
        <summary>Developers should not use this deprecated method. Developers should use 'GeocodeAddress (string, CLRegion, NSLocale, CLGeocodeCompletionHandler)' instead.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodeAddress">
      <MemberSignature Language="C#" Value="public virtual void GeocodeAddress (string addressString, CoreLocation.CLGeocodeCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GeocodeAddress(string addressString, class CoreLocation.CLGeocodeCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodeAddress(System.String,CoreLocation.CLGeocodeCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member GeocodeAddress : string * CoreLocation.CLGeocodeCompletionHandler -&gt; unit&#xA;override this.GeocodeAddress : string * CoreLocation.CLGeocodeCompletionHandler -&gt; unit" Usage="cLGeocoder.GeocodeAddress (addressString, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("geocodeAddressString:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressString" Type="System.String" />
        <Parameter Name="completionHandler" Type="CoreLocation.CLGeocodeCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCLGeocodeCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addressString">Adress that you want to submit.</param>
        <param name="completionHandler">Method to invoke when the request completes.</param>
        <summary>Request a latitude/longitude location from a human readable address.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodeAddress">
      <MemberSignature Language="C#" Value="public virtual void GeocodeAddress (string addressString, CoreLocation.CLRegion region, CoreLocation.CLGeocodeCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GeocodeAddress(string addressString, class CoreLocation.CLRegion region, class CoreLocation.CLGeocodeCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodeAddress(System.String,CoreLocation.CLRegion,CoreLocation.CLGeocodeCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member GeocodeAddress : string * CoreLocation.CLRegion * CoreLocation.CLGeocodeCompletionHandler -&gt; unit&#xA;override this.GeocodeAddress : string * CoreLocation.CLRegion * CoreLocation.CLGeocodeCompletionHandler -&gt; unit" Usage="cLGeocoder.GeocodeAddress (addressString, region, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("geocodeAddressString:inRegion:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressString" Type="System.String" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
        <Parameter Name="completionHandler" Type="CoreLocation.CLGeocodeCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCLGeocodeCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addressString">Adress that you want to submit.</param>
        <param name="region">Region to limit the lookup for.</param>
        <param name="completionHandler">Method to invoke when the request completes.</param>
        <summary>Request a latitude/longitude location from a human readable address and region.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodeAddress">
      <MemberSignature Language="C#" Value="public virtual void GeocodeAddress (string addressString, CoreLocation.CLRegion region, Foundation.NSLocale locale, CoreLocation.CLGeocodeCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GeocodeAddress(string addressString, class CoreLocation.CLRegion region, class Foundation.NSLocale locale, class CoreLocation.CLGeocodeCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodeAddress(System.String,CoreLocation.CLRegion,Foundation.NSLocale,CoreLocation.CLGeocodeCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member GeocodeAddress : string * CoreLocation.CLRegion * Foundation.NSLocale * CoreLocation.CLGeocodeCompletionHandler -&gt; unit&#xA;override this.GeocodeAddress : string * CoreLocation.CLRegion * Foundation.NSLocale * CoreLocation.CLGeocodeCompletionHandler -&gt; unit" Usage="cLGeocoder.GeocodeAddress (addressString, region, locale, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("geocodeAddressString:inRegion:preferredLocale:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressString" Type="System.String" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
        <Parameter Name="locale" Type="Foundation.NSLocale" />
        <Parameter Name="completionHandler" Type="CoreLocation.CLGeocodeCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCLGeocodeCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addressString">To be added.</param>
        <param name="region">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="locale">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodeAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt; GeocodeAddressAsync (Foundation.NSDictionary addressDictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CoreLocation.CLPlacemark[]&gt; GeocodeAddressAsync(class Foundation.NSDictionary addressDictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodeAddressAsync(Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member GeocodeAddressAsync : Foundation.NSDictionary -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;&#xA;override this.GeocodeAddressAsync : Foundation.NSDictionary -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;" Usage="cLGeocoder.GeocodeAddressAsync addressDictionary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'GeocodeAddress (string, CLRegion, NSLocale, CLGeocodeCompletionHandler)' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'GeocodeAddress (string, CLRegion, NSLocale, CLGeocodeCompletionHandler)' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.None, "Use 'GeocodeAddress (string, CLRegion, NSLocale, CLGeocodeCompletionHandler)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressDictionary" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="addressDictionary">Addressbook dictionary to submit</param>
        <summary>Developers should not use this deprecated method. Developers should use 'GeocodeAddress (string, CLRegion, NSLocale, CLGeocodeCompletionHandler)' instead.</summary>
        <returns>
          <para>A task that represents the asynchronous GeocodeAddress operation.   The value of the TResult parameter is a <see cref="CoreLocation.CLGeocodeCompletionHandler" />.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodeAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt; GeocodeAddressAsync (string addressString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CoreLocation.CLPlacemark[]&gt; GeocodeAddressAsync(string addressString) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodeAddressAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GeocodeAddressAsync : string -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;&#xA;override this.GeocodeAddressAsync : string -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;" Usage="cLGeocoder.GeocodeAddressAsync addressString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addressString">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para>A task that represents the asynchronous GeocodeAddress operation.   The value of the TResult parameter is a <see cref="CoreLocation.CLGeocodeCompletionHandler" />.</para>
        </returns>
        <remarks>
          <example>
            <code lang="C#"><![CDATA[
  var addressString = "2 Park Plaza, Boston, MA, USA 02116";
  var geocoder = new CLGeocoder();
  var taskCoding = geocoder.GeocodeAddressAsync(addressString);
  taskCoding.ContinueWith((addresses) => {
  	foreach(var address in addresses.Result)
  	{
  		Console.WriteLine(address);
  	}
  });              
                ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodeAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt; GeocodeAddressAsync (string addressString, CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CoreLocation.CLPlacemark[]&gt; GeocodeAddressAsync(string addressString, class CoreLocation.CLRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodeAddressAsync(System.String,CoreLocation.CLRegion)" />
      <MemberSignature Language="F#" Value="abstract member GeocodeAddressAsync : string * CoreLocation.CLRegion -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;&#xA;override this.GeocodeAddressAsync : string * CoreLocation.CLRegion -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;" Usage="cLGeocoder.GeocodeAddressAsync (addressString, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressString" Type="System.String" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="addressString">To be added.</param>
        <param name="region">To be added.</param>
        <summary>Request a latitude/longitude location from a human readable address and region.</summary>
        <returns>A Task that represents the asynchronous geocoding operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodeAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt; GeocodeAddressAsync (string addressString, CoreLocation.CLRegion region, Foundation.NSLocale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CoreLocation.CLPlacemark[]&gt; GeocodeAddressAsync(string addressString, class CoreLocation.CLRegion region, class Foundation.NSLocale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodeAddressAsync(System.String,CoreLocation.CLRegion,Foundation.NSLocale)" />
      <MemberSignature Language="F#" Value="abstract member GeocodeAddressAsync : string * CoreLocation.CLRegion * Foundation.NSLocale -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;&#xA;override this.GeocodeAddressAsync : string * CoreLocation.CLRegion * Foundation.NSLocale -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;" Usage="cLGeocoder.GeocodeAddressAsync (addressString, region, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressString" Type="System.String" />
        <Parameter Name="region" Type="CoreLocation.CLRegion" />
        <Parameter Name="locale" Type="Foundation.NSLocale" />
      </Parameters>
      <Docs>
        <param name="addressString">To be added.</param>
        <param name="region">To be added.</param>
        <param name="locale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodePostalAddress">
      <MemberSignature Language="C#" Value="public virtual void GeocodePostalAddress (Contacts.CNPostalAddress postalAddress, CoreLocation.CLGeocodeCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GeocodePostalAddress(class Contacts.CNPostalAddress postalAddress, class CoreLocation.CLGeocodeCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodePostalAddress(Contacts.CNPostalAddress,CoreLocation.CLGeocodeCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member GeocodePostalAddress : Contacts.CNPostalAddress * CoreLocation.CLGeocodeCompletionHandler -&gt; unit&#xA;override this.GeocodePostalAddress : Contacts.CNPostalAddress * CoreLocation.CLGeocodeCompletionHandler -&gt; unit" Usage="cLGeocoder.GeocodePostalAddress (postalAddress, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("geocodePostalAddress:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postalAddress" Type="Contacts.CNPostalAddress" />
        <Parameter Name="completionHandler" Type="CoreLocation.CLGeocodeCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCLGeocodeCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="postalAddress">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodePostalAddress">
      <MemberSignature Language="C#" Value="public virtual void GeocodePostalAddress (Contacts.CNPostalAddress postalAddress, Foundation.NSLocale locale, CoreLocation.CLGeocodeCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GeocodePostalAddress(class Contacts.CNPostalAddress postalAddress, class Foundation.NSLocale locale, class CoreLocation.CLGeocodeCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodePostalAddress(Contacts.CNPostalAddress,Foundation.NSLocale,CoreLocation.CLGeocodeCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member GeocodePostalAddress : Contacts.CNPostalAddress * Foundation.NSLocale * CoreLocation.CLGeocodeCompletionHandler -&gt; unit&#xA;override this.GeocodePostalAddress : Contacts.CNPostalAddress * Foundation.NSLocale * CoreLocation.CLGeocodeCompletionHandler -&gt; unit" Usage="cLGeocoder.GeocodePostalAddress (postalAddress, locale, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("geocodePostalAddress:preferredLocale:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postalAddress" Type="Contacts.CNPostalAddress" />
        <Parameter Name="locale" Type="Foundation.NSLocale" />
        <Parameter Name="completionHandler" Type="CoreLocation.CLGeocodeCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCLGeocodeCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="postalAddress">To be added.</param>
        <param name="locale">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodePostalAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt; GeocodePostalAddressAsync (Contacts.CNPostalAddress postalAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CoreLocation.CLPlacemark[]&gt; GeocodePostalAddressAsync(class Contacts.CNPostalAddress postalAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodePostalAddressAsync(Contacts.CNPostalAddress)" />
      <MemberSignature Language="F#" Value="abstract member GeocodePostalAddressAsync : Contacts.CNPostalAddress -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;&#xA;override this.GeocodePostalAddressAsync : Contacts.CNPostalAddress -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;" Usage="cLGeocoder.GeocodePostalAddressAsync postalAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postalAddress" Type="Contacts.CNPostalAddress" />
      </Parameters>
      <Docs>
        <param name="postalAddress">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para>A task that represents the asynchronous GeocodePostalAddress operation.   The value of the TResult parameter is a CoreLocation.CLGeocodeCompletionHandler.</para>
        </returns>
        <remarks>
          <para copied="true">The GeocodePostalAddressAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeocodePostalAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt; GeocodePostalAddressAsync (Contacts.CNPostalAddress postalAddress, Foundation.NSLocale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CoreLocation.CLPlacemark[]&gt; GeocodePostalAddressAsync(class Contacts.CNPostalAddress postalAddress, class Foundation.NSLocale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.GeocodePostalAddressAsync(Contacts.CNPostalAddress,Foundation.NSLocale)" />
      <MemberSignature Language="F#" Value="abstract member GeocodePostalAddressAsync : Contacts.CNPostalAddress * Foundation.NSLocale -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;&#xA;override this.GeocodePostalAddressAsync : Contacts.CNPostalAddress * Foundation.NSLocale -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;" Usage="cLGeocoder.GeocodePostalAddressAsync (postalAddress, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postalAddress" Type="Contacts.CNPostalAddress" />
        <Parameter Name="locale" Type="Foundation.NSLocale" />
      </Parameters>
      <Docs>
        <param name="postalAddress">To be added.</param>
        <param name="locale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Geocoding">
      <MemberSignature Language="C#" Value="public virtual bool Geocoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Geocoding" />
      <MemberSignature Language="DocId" Value="P:CoreLocation.CLGeocoder.Geocoding" />
      <MemberSignature Language="F#" Value="member this.Geocoding : bool" Usage="CoreLocation.CLGeocoder.Geocoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isGeocoding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether a geocoding request is currently being processed.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:CoreLocation.CLGeocoder" /> is in the process of geocoding.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseGeocodeLocation">
      <MemberSignature Language="C#" Value="public virtual void ReverseGeocodeLocation (CoreLocation.CLLocation location, CoreLocation.CLGeocodeCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReverseGeocodeLocation(class CoreLocation.CLLocation location, class CoreLocation.CLGeocodeCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.ReverseGeocodeLocation(CoreLocation.CLLocation,CoreLocation.CLGeocodeCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member ReverseGeocodeLocation : CoreLocation.CLLocation * CoreLocation.CLGeocodeCompletionHandler -&gt; unit&#xA;override this.ReverseGeocodeLocation : CoreLocation.CLLocation * CoreLocation.CLGeocodeCompletionHandler -&gt; unit" Usage="cLGeocoder.ReverseGeocodeLocation (location, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("reverseGeocodeLocation:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreLocation.CLLocation" />
        <Parameter Name="completionHandler" Type="CoreLocation.CLGeocodeCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCLGeocodeCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="location">Location to look up.</param>
        <param name="completionHandler">Method to invoke when the reverse lookup has completed.</param>
        <summary>Requests a longitude/latitude to a human address.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseGeocodeLocation">
      <MemberSignature Language="C#" Value="public virtual void ReverseGeocodeLocation (CoreLocation.CLLocation location, Foundation.NSLocale locale, CoreLocation.CLGeocodeCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReverseGeocodeLocation(class CoreLocation.CLLocation location, class Foundation.NSLocale locale, class CoreLocation.CLGeocodeCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.ReverseGeocodeLocation(CoreLocation.CLLocation,Foundation.NSLocale,CoreLocation.CLGeocodeCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member ReverseGeocodeLocation : CoreLocation.CLLocation * Foundation.NSLocale * CoreLocation.CLGeocodeCompletionHandler -&gt; unit&#xA;override this.ReverseGeocodeLocation : CoreLocation.CLLocation * Foundation.NSLocale * CoreLocation.CLGeocodeCompletionHandler -&gt; unit" Usage="cLGeocoder.ReverseGeocodeLocation (location, locale, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("reverseGeocodeLocation:preferredLocale:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreLocation.CLLocation" />
        <Parameter Name="locale" Type="Foundation.NSLocale" />
        <Parameter Name="completionHandler" Type="CoreLocation.CLGeocodeCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCLGeocodeCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="locale">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseGeocodeLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt; ReverseGeocodeLocationAsync (CoreLocation.CLLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CoreLocation.CLPlacemark[]&gt; ReverseGeocodeLocationAsync(class CoreLocation.CLLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.ReverseGeocodeLocationAsync(CoreLocation.CLLocation)" />
      <MemberSignature Language="F#" Value="abstract member ReverseGeocodeLocationAsync : CoreLocation.CLLocation -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;&#xA;override this.ReverseGeocodeLocationAsync : CoreLocation.CLLocation -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;" Usage="cLGeocoder.ReverseGeocodeLocationAsync location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreLocation.CLLocation" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para>A task that represents the asynchronous ReverseGeocodeLocation operation.   The value of the TResult parameter is a <see cref="CoreLocation.CLGeocodeCompletionHandler" />.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseGeocodeLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt; ReverseGeocodeLocationAsync (CoreLocation.CLLocation location, Foundation.NSLocale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CoreLocation.CLPlacemark[]&gt; ReverseGeocodeLocationAsync(class CoreLocation.CLLocation location, class Foundation.NSLocale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreLocation.CLGeocoder.ReverseGeocodeLocationAsync(CoreLocation.CLLocation,Foundation.NSLocale)" />
      <MemberSignature Language="F#" Value="abstract member ReverseGeocodeLocationAsync : CoreLocation.CLLocation * Foundation.NSLocale -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;&#xA;override this.ReverseGeocodeLocationAsync : CoreLocation.CLLocation * Foundation.NSLocale -&gt; System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;" Usage="cLGeocoder.ReverseGeocodeLocationAsync (location, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreLocation.CLPlacemark[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreLocation.CLLocation" />
        <Parameter Name="locale" Type="Foundation.NSLocale" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="locale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
