<Type Name="IILMessageFilterQueryHandling" FullName="IdentityLookup.IILMessageFilterQueryHandling">
  <TypeSignature Language="C#" Value="public interface IILMessageFilterQueryHandling : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IILMessageFilterQueryHandling implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:IdentityLookup.IILMessageFilterQueryHandling" />
  <TypeSignature Language="F#" Value="type IILMessageFilterQueryHandling = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="ILMessageFilterQueryHandling", WrapperType=typeof(IdentityLookup.ILMessageFilterQueryHandlingWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="HandleQueryRequest", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="handleQueryRequest:context:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="HandleQueryRequest", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(IdentityLookup.ILMessageFilterQueryRequest), typeof(IdentityLookup.ILMessageFilterExtensionContext), typeof(System.Action`1&lt;IdentityLookup.ILMessageFilterQueryResponse&gt;) }, Selector="handleQueryRequest:context:completion:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface that is used by a message filter extension to respond to queries.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleQueryRequest">
      <MemberSignature Language="C#" Value="public void HandleQueryRequest (IdentityLookup.ILMessageFilterQueryRequest queryRequest, IdentityLookup.ILMessageFilterExtensionContext context, Action&lt;IdentityLookup.ILMessageFilterQueryResponse&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleQueryRequest(class IdentityLookup.ILMessageFilterQueryRequest queryRequest, class IdentityLookup.ILMessageFilterExtensionContext context, class System.Action`1&lt;class IdentityLookup.ILMessageFilterQueryResponse&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityLookup.IILMessageFilterQueryHandling.HandleQueryRequest(IdentityLookup.ILMessageFilterQueryRequest,IdentityLookup.ILMessageFilterExtensionContext,System.Action{IdentityLookup.ILMessageFilterQueryResponse})" />
      <MemberSignature Language="F#" Value="abstract member HandleQueryRequest : IdentityLookup.ILMessageFilterQueryRequest * IdentityLookup.ILMessageFilterExtensionContext * Action&lt;IdentityLookup.ILMessageFilterQueryResponse&gt; -&gt; unit" Usage="iILMessageFilterQueryHandling.HandleQueryRequest (queryRequest, context, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("handleQueryRequest:context:completion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryRequest" Type="IdentityLookup.ILMessageFilterQueryRequest" />
        <Parameter Name="context" Type="IdentityLookup.ILMessageFilterExtensionContext" />
        <Parameter Name="completion" Type="System.Action&lt;IdentityLookup.ILMessageFilterQueryResponse&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="queryRequest">The query for the message.</param>
        <param name="context">The app extension context for deferring requests.</param>
        <param name="completion">A handler that is run after the operation completes.</param>
        <summary>Evaluates the specified request in the provided context, and runs a handler when the operation is complete.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
