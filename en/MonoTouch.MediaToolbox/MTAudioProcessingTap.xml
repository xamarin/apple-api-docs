<Type Name="MTAudioProcessingTap" FullName="MonoTouch.MediaToolbox.MTAudioProcessingTap">
  <TypeSignature Language="C#" Value="public class MTAudioProcessingTap : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MTAudioProcessingTap extends System.Object implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 9, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Holds the state for an audio processing tap.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MTAudioProcessingTap (MonoTouch.MediaToolbox.MTAudioProcessingTapCallbacks callbacks, MonoTouch.MediaToolbox.MTAudioProcessingTapCreationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.MediaToolbox.MTAudioProcessingTapCallbacks callbacks, valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapCreationFlags flags) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbacks" Type="MonoTouch.MediaToolbox.MTAudioProcessingTapCallbacks" />
        <Parameter Name="flags" Type="MonoTouch.MediaToolbox.MTAudioProcessingTapCreationFlags" />
      </Parameters>
      <Docs>
        <param name="callbacks">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the MTAudioProcessingTap object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the MTAudioProcessingTap class.</para>
          <para>Calling the Dispose method when you are finished using the MTAudioProcessingTap ensures that all external resources used by this managed object are released as soon as possible.  Once you have invoked the Dispose method, the object is no longer useful and you should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the MTAudioProcessingTap object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the MTAudioProcessingTap class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when you are finished using the MTAudioProcessingTap ensures that all external resources used by this managed object are released as soon as possible.  Once you have invoked the Dispose method, the object is no longer useful and you should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MTAudioProcessingTap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the MTAudioProcessingTap object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceAudio">
      <MemberSignature Language="C#" Value="public MonoTouch.MediaToolbox.MTAudioProcessingTapError GetSourceAudio (long frames, ref MonoTouch.AudioToolbox.AudioBufferList bufferList, out MonoTouch.MediaToolbox.MTAudioProcessingTapFlags flags, out MonoTouch.CoreMedia.CMTimeRange timeRange, long framesProvided);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapError GetSourceAudio(int64 frames, class MonoTouch.AudioToolbox.AudioBufferList bufferList, valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapFlags flags, valuetype MonoTouch.CoreMedia.CMTimeRange timeRange, int64 framesProvided) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use overload with AudioBuffers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.MediaToolbox.MTAudioProcessingTapError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frames" Type="System.Int64" />
        <Parameter Name="bufferList" Type="MonoTouch.AudioToolbox.AudioBufferList&amp;" RefType="ref" />
        <Parameter Name="flags" Type="MonoTouch.MediaToolbox.MTAudioProcessingTapFlags&amp;" RefType="out" />
        <Parameter Name="timeRange" Type="MonoTouch.CoreMedia.CMTimeRange&amp;" RefType="out" />
        <Parameter Name="framesProvided" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="frames">To be added.</param>
        <param name="bufferList">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="timeRange">To be added.</param>
        <param name="framesProvided">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceAudio">
      <MemberSignature Language="C#" Value="public MonoTouch.MediaToolbox.MTAudioProcessingTapError GetSourceAudio (long frames, MonoTouch.AudioToolbox.AudioBuffers bufferList, out MonoTouch.MediaToolbox.MTAudioProcessingTapFlags flags, out MonoTouch.CoreMedia.CMTimeRange timeRange, long framesProvided);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapError GetSourceAudio(int64 frames, class MonoTouch.AudioToolbox.AudioBuffers bufferList, valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapFlags flags, valuetype MonoTouch.CoreMedia.CMTimeRange timeRange, int64 framesProvided) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetSourceAudio(int,AudioBuffers,out MTAudioProcessingTapFlags, out CMTimeRange, out int) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.MediaToolbox.MTAudioProcessingTapError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frames" Type="System.Int64" />
        <Parameter Name="bufferList" Type="MonoTouch.AudioToolbox.AudioBuffers" />
        <Parameter Name="flags" Type="MonoTouch.MediaToolbox.MTAudioProcessingTapFlags&amp;" RefType="out" />
        <Parameter Name="timeRange" Type="MonoTouch.CoreMedia.CMTimeRange&amp;" RefType="out" />
        <Parameter Name="framesProvided" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="frames">To be added.</param>
        <param name="bufferList">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="timeRange">To be added.</param>
        <param name="framesProvided">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceAudio">
      <MemberSignature Language="C#" Value="public MonoTouch.MediaToolbox.MTAudioProcessingTapError GetSourceAudio (int frames, MonoTouch.AudioToolbox.AudioBuffers bufferList, out MonoTouch.MediaToolbox.MTAudioProcessingTapFlags flags, out MonoTouch.CoreMedia.CMTimeRange timeRange, out int framesProvided);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapError GetSourceAudio(int32 frames, class MonoTouch.AudioToolbox.AudioBuffers bufferList, valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapFlags flags, valuetype MonoTouch.CoreMedia.CMTimeRange timeRange, int32 framesProvided) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public MonoTouch.MediaToolbox.MTAudioProcessingTapError GetSourceAudio (nint frames, MonoTouch.AudioToolbox.AudioBuffers bufferList, out MonoTouch.MediaToolbox.MTAudioProcessingTapFlags flags, out MonoTouch.CoreMedia.CMTimeRange timeRange, out nint framesProvided);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapError GetSourceAudio(valuetype System.nint frames, class MonoTouch.AudioToolbox.AudioBuffers bufferList, valuetype MonoTouch.MediaToolbox.MTAudioProcessingTapFlags flags, valuetype MonoTouch.CoreMedia.CMTimeRange timeRange, valuetype System.nint framesProvided) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.MediaToolbox.MTAudioProcessingTapError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frames" Type="System.Int32" apistyle="classic" />
        <Parameter Name="bufferList" Type="MonoTouch.AudioToolbox.AudioBuffers" />
        <Parameter Name="flags" Type="MonoTouch.MediaToolbox.MTAudioProcessingTapFlags&amp;" RefType="out" />
        <Parameter Name="timeRange" Type="MonoTouch.CoreMedia.CMTimeRange&amp;" RefType="out" />
        <Parameter Name="framesProvided" Type="System.Int32&amp;" RefType="out" apistyle="classic" />
        <Parameter Name="frames" Type="System.nint" apistyle="unified" />
        <Parameter Name="framesProvided" Type="System.nint&amp;" RefType="out" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="frames">To be added.</param>
        <param name="bufferList">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="timeRange">To be added.</param>
        <param name="framesProvided">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorage">
      <MemberSignature Language="C#" Value="public void* GetStorage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void* GetStorage() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
