<Type Name="GKPath" FullName="GameplayKit.GKPath">
  <TypeSignature Language="C#" Value="public class GKPath : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GKPath extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:GameplayKit.GKPath" />
  <TypeSignature Language="F#" Value="type GKPath = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("GKPath", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Holds a 2D polygonal path that can be followed by a <see cref="T:GameplayKit.GKAgent" />.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/GameplayKit/Reference/GKPath_Class/index.html">Apple documentation for <c>GKPath</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GKPath (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new GameplayKit.GKPath : Foundation.NSObjectFlag -&gt; GameplayKit.GKPath" Usage="new GameplayKit.GKPath t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal GKPath (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new GameplayKit.GKPath : nativeint -&gt; GameplayKit.GKPath" Usage="new GameplayKit.GKPath handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKPath (GameplayKit.GKGraphNode[] nodes, float radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class GameplayKit.GKGraphNode[] nodes, float32 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.#ctor(GameplayKit.GKGraphNode[],System.Single)" />
      <MemberSignature Language="F#" Value="new GameplayKit.GKPath : GameplayKit.GKGraphNode[] * single -&gt; GameplayKit.GKPath" Usage="new GameplayKit.GKPath (nodes, radius)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithGraphNodes:radius:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="nodes" Type="GameplayKit.GKGraphNode[]" />
        <Parameter Name="radius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <param name="radius">To be added.</param>
        <summary>Creates a new <see cref="T:GameplayKit.GKPath" /> from the specified <paramref name="nodes" /> with a width that is defined by <paramref name="radius" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKPath (GameplayKit.GKGraphNode2D[] graphNodes, float radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class GameplayKit.GKGraphNode2D[] graphNodes, float32 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.#ctor(GameplayKit.GKGraphNode2D[],System.Single)" />
      <MemberSignature Language="F#" Value="new GameplayKit.GKPath : GameplayKit.GKGraphNode2D[] * single -&gt; GameplayKit.GKPath" Usage="new GameplayKit.GKPath (graphNodes, radius)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="graphNodes" Type="GameplayKit.GKGraphNode2D[]" />
        <Parameter Name="radius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="graphNodes">To be added.</param>
        <param name="radius">To be added.</param>
        <summary>Creates a new <see cref="T:GameplayKit.GKPath" /> with the specified <paramref name="graphNodes" /> and <paramref name="radius" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKPath (OpenTK.Vector2[] points, float radius, bool cyclical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype OpenTK.Vector2[] points, float32 radius, bool cyclical) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.#ctor(OpenTK.Vector2[],System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="new GameplayKit.GKPath : OpenTK.Vector2[] * single * bool -&gt; GameplayKit.GKPath" Usage="new GameplayKit.GKPath (points, radius, cyclical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="points" Type="OpenTK.Vector2[]" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="cyclical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="cyclical">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKPath (OpenTK.Vector3[] points, float radius, bool cyclical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype OpenTK.Vector3[] points, float32 radius, bool cyclical) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.#ctor(OpenTK.Vector3[],System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="new GameplayKit.GKPath : OpenTK.Vector3[] * single * bool -&gt; GameplayKit.GKPath" Usage="new GameplayKit.GKPath (points, radius, cyclical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="points" Type="OpenTK.Vector3[]" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="cyclical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="cyclical">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:GameplayKit.GKPath.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="GameplayKit.GKPath.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cyclical">
      <MemberSignature Language="C#" Value="public virtual bool Cyclical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cyclical" />
      <MemberSignature Language="DocId" Value="P:GameplayKit.GKPath.Cyclical" />
      <MemberSignature Language="F#" Value="member this.Cyclical : bool with get, set" Usage="GameplayKit.GKPath.Cyclical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isCyclical")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setCyclical:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the <see cref="T:GameplayKit.GKPath" />'s last point connects to the first point.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromGraphNodes">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPath FromGraphNodes (GameplayKit.GKGraphNode[] nodes, float radius);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPath FromGraphNodes(class GameplayKit.GKGraphNode[] nodes, float32 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.FromGraphNodes(GameplayKit.GKGraphNode[],System.Single)" />
      <MemberSignature Language="F#" Value="static member FromGraphNodes : GameplayKit.GKGraphNode[] * single -&gt; GameplayKit.GKPath" Usage="GameplayKit.GKPath.FromGraphNodes (nodes, radius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pathWithGraphNodes:radius:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="GameplayKit.GKGraphNode[]" />
        <Parameter Name="radius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <param name="radius">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromGraphNodes">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPath FromGraphNodes (GameplayKit.GKGraphNode2D[] graphNodes, float radius);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPath FromGraphNodes(class GameplayKit.GKGraphNode2D[] graphNodes, float32 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.FromGraphNodes(GameplayKit.GKGraphNode2D[],System.Single)" />
      <MemberSignature Language="F#" Value="static member FromGraphNodes : GameplayKit.GKGraphNode2D[] * single -&gt; GameplayKit.GKPath" Usage="GameplayKit.GKPath.FromGraphNodes (graphNodes, radius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphNodes" Type="GameplayKit.GKGraphNode2D[]" />
        <Parameter Name="radius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="graphNodes">To be added.</param>
        <param name="radius">To be added.</param>
        <summary>Factory method to create a <see cref="T:GameplayKit.GKPath" /> with the specified <paramref name="graphNodes" /> and <paramref name="radius" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPoints">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPath FromPoints (OpenTK.Vector2[] points, float radius, bool cyclical);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPath FromPoints(valuetype OpenTK.Vector2[] points, float32 radius, bool cyclical) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.FromPoints(OpenTK.Vector2[],System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member FromPoints : OpenTK.Vector2[] * single * bool -&gt; GameplayKit.GKPath" Usage="GameplayKit.GKPath.FromPoints (points, radius, cyclical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="OpenTK.Vector2[]" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="cyclical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="cyclical">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPoints">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPath FromPoints (OpenTK.Vector3[] points, float radius, bool cyclical);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPath FromPoints(valuetype OpenTK.Vector3[] points, float32 radius, bool cyclical) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.FromPoints(OpenTK.Vector3[],System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member FromPoints : OpenTK.Vector3[] * single * bool -&gt; GameplayKit.GKPath" Usage="GameplayKit.GKPath.FromPoints (points, radius, cyclical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.TV(10, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="OpenTK.Vector3[]" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="cyclical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="cyclical">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPoint">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector2 GetPoint (nuint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Vector2 GetPoint(valuetype System.nuint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.GetPoint(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetPoint : nuint -&gt; OpenTK.Vector2&#xA;override this.GetPoint : nuint -&gt; OpenTK.Vector2" Usage="gKPath.GetPoint index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pointAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'GetVector2Point' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'GetVector2Point' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'GetVector2Point' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Developers should not use this deprecated method. Developers should use 'GetVector2Point' instead.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVector2Point">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector2 GetVector2Point (nuint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Vector2 GetVector2Point(valuetype System.nuint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.GetVector2Point(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetVector2Point : nuint -&gt; OpenTK.Vector2&#xA;override this.GetVector2Point : nuint -&gt; OpenTK.Vector2" Usage="gKPath.GetVector2Point index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("float2AtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Returns a 2-dimensional vector for the node at the specified <paramref name="index" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVector3Point">
      <MemberSignature Language="C#" Value="public virtual OpenTK.Vector3 GetVector3Point (nuint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype OpenTK.Vector3 GetVector3Point(valuetype System.nuint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:GameplayKit.GKPath.GetVector3Point(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetVector3Point : nuint -&gt; OpenTK.Vector3&#xA;override this.GetVector3Point : nuint -&gt; OpenTK.Vector3" Usage="gKPath.GetVector3Point index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("float3AtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Returns a 3-dimensional vector for the node at the specified <paramref name="index" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumPoints">
      <MemberSignature Language="C#" Value="public virtual nuint NumPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumPoints" />
      <MemberSignature Language="DocId" Value="P:GameplayKit.GKPath.NumPoints" />
      <MemberSignature Language="F#" Value="member this.NumPoints : nuint" Usage="GameplayKit.GKPath.NumPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("numPoints")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of points in the path.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public virtual float Radius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Radius" />
      <MemberSignature Language="DocId" Value="P:GameplayKit.GKPath.Radius" />
      <MemberSignature Language="F#" Value="member this.Radius : single with get, set" Usage="GameplayKit.GKPath.Radius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("radius")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRadius:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Any point in the <see cref="P:GameplayKit.GKPath.Radius" />-defined circle swept along the vertices is considered "inside" the <see cref="T:GameplayKit.GKPath" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
