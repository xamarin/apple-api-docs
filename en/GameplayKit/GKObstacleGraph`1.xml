<Type Name="GKObstacleGraph&lt;NodeType&gt;" FullName="GameplayKit.GKObstacleGraph&lt;NodeType&gt;">
  <TypeSignature Language="C#" Value="public class GKObstacleGraph&lt;NodeType&gt; : GameplayKit.GKObstacleGraph where NodeType : GKGraphNode2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GKObstacleGraph`1&lt;(class GameplayKit.GKGraphNode2D) NodeType&gt; extends GameplayKit.GKObstacleGraph" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="NodeType">
      <Constraints>
        <BaseTypeName>GameplayKit.GKGraphNode2D</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>GameplayKit.GKObstacleGraph</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("GKObstacleGraph", SkipRegistration=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="NodeType">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKObstacleGraph (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GKObstacleGraph (GameplayKit.GKPolygonObstacle[] obstacles, float bufferRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class GameplayKit.GKPolygonObstacle[] obstacles, float32 bufferRadius) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="obstacles" Type="GameplayKit.GKPolygonObstacle[]" />
        <Parameter Name="bufferRadius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="obstacles">To be added.</param>
        <param name="bufferRadius">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromObstacles">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKObstacleGraph&lt;NodeType&gt; FromObstacles (GameplayKit.GKPolygonObstacle[] obstacles, float bufferRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKObstacleGraph`1&lt;!NodeType&gt; FromObstacles(class GameplayKit.GKPolygonObstacle[] obstacles, float32 bufferRadius) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GameplayKit.GKObstacleGraph&lt;NodeType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obstacles" Type="GameplayKit.GKPolygonObstacle[]" />
        <Parameter Name="bufferRadius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="obstacles">To be added.</param>
        <param name="bufferRadius">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodes">
      <MemberSignature Language="C#" Value="public NodeType[] GetNodes (GameplayKit.GKPolygonObstacle obstacle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !NodeType[] GetNodes(class GameplayKit.GKPolygonObstacle obstacle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NodeType[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obstacle" Type="GameplayKit.GKPolygonObstacle" />
      </Parameters>
      <Docs>
        <param name="obstacle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
