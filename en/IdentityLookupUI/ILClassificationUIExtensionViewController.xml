<Type Name="ILClassificationUIExtensionViewController" FullName="IdentityLookupUI.ILClassificationUIExtensionViewController">
  <TypeSignature Language="C#" Value="public class ILClassificationUIExtensionViewController : UIKit.UIViewController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ILClassificationUIExtensionViewController extends UIKit.UIViewController" />
  <TypeSignature Language="DocId" Value="T:IdentityLookupUI.ILClassificationUIExtensionViewController" />
  <TypeSignature Language="F#" Value="type ILClassificationUIExtensionViewController = class&#xA;    inherit UIViewController" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UIKit.UIViewController</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("ILClassificationUIExtensionViewController", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Base class for view controllers for Unwanted Communication Reporting extensions.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/documentation/sms_and_call_reporting/sms_and_call_spam_reporting?language=objc">SMS and Call Spam Reporting</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ILClassificationUIExtensionViewController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityLookupUI.ILClassificationUIExtensionViewController.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new view controller for reporting unwanted communication.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ILClassificationUIExtensionViewController (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityLookupUI.ILClassificationUIExtensionViewController.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new IdentityLookupUI.ILClassificationUIExtensionViewController : Foundation.NSCoder -&gt; IdentityLookupUI.ILClassificationUIExtensionViewController" Usage="new IdentityLookupUI.ILClassificationUIExtensionViewController coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ILClassificationUIExtensionViewController (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityLookupUI.ILClassificationUIExtensionViewController.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new IdentityLookupUI.ILClassificationUIExtensionViewController : Foundation.NSObjectFlag -&gt; IdentityLookupUI.ILClassificationUIExtensionViewController" Usage="new IdentityLookupUI.ILClassificationUIExtensionViewController t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal ILClassificationUIExtensionViewController (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityLookupUI.ILClassificationUIExtensionViewController.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new IdentityLookupUI.ILClassificationUIExtensionViewController : nativeint -&gt; IdentityLookupUI.ILClassificationUIExtensionViewController" Usage="new IdentityLookupUI.ILClassificationUIExtensionViewController handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:IdentityLookupUI.ILClassificationUIExtensionViewController.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="IdentityLookupUI.ILClassificationUIExtensionViewController.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionContext">
      <MemberSignature Language="C#" Value="public virtual IdentityLookupUI.ILClassificationUIExtensionContext ExtensionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class IdentityLookupUI.ILClassificationUIExtensionContext ExtensionContext" />
      <MemberSignature Language="DocId" Value="P:IdentityLookupUI.ILClassificationUIExtensionViewController.ExtensionContext" />
      <MemberSignature Language="F#" Value="member this.ExtensionContext : IdentityLookupUI.ILClassificationUIExtensionContext" Usage="IdentityLookupUI.ILClassificationUIExtensionViewController.ExtensionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("extensionContext", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>IdentityLookupUI.ILClassificationUIExtensionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the extension context that tells whether the report is ready to submit.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationResponse">
      <MemberSignature Language="C#" Value="public virtual IdentityLookup.ILClassificationResponse GetClassificationResponse (IdentityLookup.ILClassificationRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class IdentityLookup.ILClassificationResponse GetClassificationResponse(class IdentityLookup.ILClassificationRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityLookupUI.ILClassificationUIExtensionViewController.GetClassificationResponse(IdentityLookup.ILClassificationRequest)" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationResponse : IdentityLookup.ILClassificationRequest -&gt; IdentityLookup.ILClassificationResponse&#xA;override this.GetClassificationResponse : IdentityLookup.ILClassificationRequest -&gt; IdentityLookup.ILClassificationResponse" Usage="iLClassificationUIExtensionViewController.GetClassificationResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("classificationResponseForRequest:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>IdentityLookup.ILClassificationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="IdentityLookup.ILClassificationRequest" />
      </Parameters>
      <Docs>
        <param name="request">The request whose status to query.</param>
        <summary>Returns a Boolean value that tells whether <paramref name="request" /> is ready to be submitted.</summary>
        <returns>A Boolean value that tells whether <paramref name="request" /> is ready to be submitted.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public virtual void Prepare (IdentityLookup.ILClassificationRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class IdentityLookup.ILClassificationRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:IdentityLookupUI.ILClassificationUIExtensionViewController.Prepare(IdentityLookup.ILClassificationRequest)" />
      <MemberSignature Language="F#" Value="abstract member Prepare : IdentityLookup.ILClassificationRequest -&gt; unit&#xA;override this.Prepare : IdentityLookup.ILClassificationRequest -&gt; unit" Usage="iLClassificationUIExtensionViewController.Prepare request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("prepareForClassificationRequest:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="IdentityLookup.ILClassificationRequest" />
      </Parameters>
      <Docs>
        <param name="request">The request that will be shown to the user.</param>
        <summary>Called just before <paramref name="request" /> is shown to the user.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
