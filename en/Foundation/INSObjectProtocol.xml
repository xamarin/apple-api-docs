<Type Name="INSObjectProtocol" FullName="Foundation.INSObjectProtocol">
  <TypeSignature Language="C#" Value="public interface INSObjectProtocol : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSObjectProtocol implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Foundation.INSObjectProtocol" />
  <TypeSignature Language="F#" Value="type INSObjectProtocol = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSObject", WrapperType=typeof(Foundation.NSObjectProtocolWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetNativeHash", ReturnType=typeof(System.nuint), Selector="hash")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DangerousRetain", ReturnType=typeof(Foundation.NSObject), Selector="retain")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DangerousRelease", Selector="release")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DangerousAutorelease", ReturnType=typeof(Foundation.NSObject), Selector="autorelease")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="description", IsProperty=true, IsRequired=true, IsStatic=false, Name="Description", PropertyType=typeof(System.String), Selector="description")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="debugDescription", IsProperty=true, IsRequired=false, IsStatic=false, Name="DebugDescription", PropertyType=typeof(System.String), Selector="debugDescription")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="superclass", IsProperty=true, IsRequired=true, IsStatic=false, Name="Superclass", PropertyType=typeof(ObjCRuntime.Class), Selector="superclass")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="class", IsProperty=true, IsRequired=true, IsStatic=false, Name="Class", PropertyType=typeof(ObjCRuntime.Class), Selector="class")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="self", IsProperty=true, IsRequired=true, IsStatic=false, Name="Self", PropertyType=typeof(Foundation.NSObject), Selector="self")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="isProxy", IsProperty=true, IsRequired=true, IsStatic=false, Name="IsProxy", PropertyType=typeof(System.Boolean), Selector="isProxy")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="retainCount", IsProperty=true, IsRequired=true, IsStatic=false, Name="RetainCount", PropertyType=typeof(System.nuint), Selector="retainCount")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="zone", IsProperty=true, IsRequired=true, IsStatic=false, Name="Zone", PropertyType=typeof(Foundation.NSZone), Selector="zone")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="IsEqual", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSObject) }, ReturnType=typeof(System.Boolean), Selector="isEqual:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="PerformSelector", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ObjCRuntime.Selector) }, ReturnType=typeof(Foundation.NSObject), Selector="performSelector:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="PerformSelector", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ObjCRuntime.Selector), typeof(Foundation.NSObject) }, ReturnType=typeof(Foundation.NSObject), Selector="performSelector:withObject:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="PerformSelector", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(ObjCRuntime.Selector), typeof(Foundation.NSObject), typeof(Foundation.NSObject) }, ReturnType=typeof(Foundation.NSObject), Selector="performSelector:withObject:withObject:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="IsKindOfClass", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ObjCRuntime.Class) }, ReturnType=typeof(System.Boolean), Selector="isKindOfClass:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="IsMemberOfClass", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ObjCRuntime.Class) }, ReturnType=typeof(System.Boolean), Selector="isMemberOfClass:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ConformsToProtocol", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(System.IntPtr) }, ReturnType=typeof(System.Boolean), Selector="conformsToProtocol:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="RespondsToSelector", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ObjCRuntime.Selector) }, ReturnType=typeof(System.Boolean), Selector="respondsToSelector:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Base-level object protocol required to be considered a first class Objective-C object.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public ObjCRuntime.Class Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ObjCRuntime.Class Class" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSObjectProtocol.Class" />
      <MemberSignature Language="F#" Value="member this.Class : ObjCRuntime.Class" Usage="Foundation.INSObjectProtocol.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("class")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ObjCRuntime.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformsToProtocol">
      <MemberSignature Language="C#" Value="public bool ConformsToProtocol (IntPtr aProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ConformsToProtocol(native int aProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.ConformsToProtocol(System.IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member ConformsToProtocol : nativeint -&gt; bool" Usage="iNSObjectProtocol.ConformsToProtocol aProtocol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("conformsToProtocol:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aProtocol" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="aProtocol">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAutorelease">
      <MemberSignature Language="C#" Value="public Foundation.NSObject DangerousAutorelease ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject DangerousAutorelease() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.DangerousAutorelease" />
      <MemberSignature Language="F#" Value="abstract member DangerousAutorelease : unit -&gt; Foundation.NSObject" Usage="iNSObjectProtocol.DangerousAutorelease " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("autorelease")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousRelease">
      <MemberSignature Language="C#" Value="public void DangerousRelease ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DangerousRelease() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.DangerousRelease" />
      <MemberSignature Language="F#" Value="abstract member DangerousRelease : unit -&gt; unit" Usage="iNSObjectProtocol.DangerousRelease " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("release")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousRetain">
      <MemberSignature Language="C#" Value="public Foundation.NSObject DangerousRetain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject DangerousRetain() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.DangerousRetain" />
      <MemberSignature Language="F#" Value="abstract member DangerousRetain : unit -&gt; Foundation.NSObject" Usage="iNSObjectProtocol.DangerousRetain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("retain")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSObjectProtocol.Description" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="Foundation.INSObjectProtocol.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("description")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeHash">
      <MemberSignature Language="C#" Value="public nuint GetNativeHash ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint GetNativeHash() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.GetNativeHash" />
      <MemberSignature Language="F#" Value="abstract member GetNativeHash : unit -&gt; nuint" Usage="iNSObjectProtocol.GetNativeHash " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("hash")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public bool IsEqual (Foundation.NSObject anObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEqual(class Foundation.NSObject anObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.IsEqual(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member IsEqual : Foundation.NSObject -&gt; bool" Usage="iNSObjectProtocol.IsEqual anObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isEqual:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anObject" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="anObject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKindOfClass">
      <MemberSignature Language="C#" Value="public bool IsKindOfClass (ObjCRuntime.Class aClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsKindOfClass(class ObjCRuntime.Class aClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.IsKindOfClass(ObjCRuntime.Class)" />
      <MemberSignature Language="F#" Value="abstract member IsKindOfClass : ObjCRuntime.Class -&gt; bool" Usage="iNSObjectProtocol.IsKindOfClass aClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isKindOfClass:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aClass" Type="ObjCRuntime.Class" />
      </Parameters>
      <Docs>
        <param name="aClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMemberOfClass">
      <MemberSignature Language="C#" Value="public bool IsMemberOfClass (ObjCRuntime.Class aClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsMemberOfClass(class ObjCRuntime.Class aClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.IsMemberOfClass(ObjCRuntime.Class)" />
      <MemberSignature Language="F#" Value="abstract member IsMemberOfClass : ObjCRuntime.Class -&gt; bool" Usage="iNSObjectProtocol.IsMemberOfClass aClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isMemberOfClass:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aClass" Type="ObjCRuntime.Class" />
      </Parameters>
      <Docs>
        <param name="aClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProxy">
      <MemberSignature Language="C#" Value="public bool IsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProxy" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSObjectProtocol.IsProxy" />
      <MemberSignature Language="F#" Value="member this.IsProxy : bool" Usage="Foundation.INSObjectProtocol.IsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isProxy")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelector">
      <MemberSignature Language="C#" Value="public Foundation.NSObject PerformSelector (ObjCRuntime.Selector aSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject PerformSelector(class ObjCRuntime.Selector aSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.PerformSelector(ObjCRuntime.Selector)" />
      <MemberSignature Language="F#" Value="abstract member PerformSelector : ObjCRuntime.Selector -&gt; Foundation.NSObject" Usage="iNSObjectProtocol.PerformSelector aSelector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performSelector:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSelector" Type="ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="aSelector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelector">
      <MemberSignature Language="C#" Value="public Foundation.NSObject PerformSelector (ObjCRuntime.Selector aSelector, Foundation.NSObject anObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject PerformSelector(class ObjCRuntime.Selector aSelector, class Foundation.NSObject anObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member PerformSelector : ObjCRuntime.Selector * Foundation.NSObject -&gt; Foundation.NSObject" Usage="iNSObjectProtocol.PerformSelector (aSelector, anObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performSelector:withObject:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="anObject" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="aSelector">To be added.</param>
        <param name="anObject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelector">
      <MemberSignature Language="C#" Value="public Foundation.NSObject PerformSelector (ObjCRuntime.Selector aSelector, Foundation.NSObject object1, Foundation.NSObject object2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject PerformSelector(class ObjCRuntime.Selector aSelector, class Foundation.NSObject object1, class Foundation.NSObject object2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member PerformSelector : ObjCRuntime.Selector * Foundation.NSObject * Foundation.NSObject -&gt; Foundation.NSObject" Usage="iNSObjectProtocol.PerformSelector (aSelector, object1, object2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performSelector:withObject:withObject:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSelector" Type="ObjCRuntime.Selector" />
        <Parameter Name="object1" Type="Foundation.NSObject" />
        <Parameter Name="object2" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="aSelector">To be added.</param>
        <param name="object1">To be added.</param>
        <param name="object2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RespondsToSelector">
      <MemberSignature Language="C#" Value="public bool RespondsToSelector (ObjCRuntime.Selector sel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RespondsToSelector(class ObjCRuntime.Selector sel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSObjectProtocol.RespondsToSelector(ObjCRuntime.Selector)" />
      <MemberSignature Language="F#" Value="abstract member RespondsToSelector : ObjCRuntime.Selector -&gt; bool" Usage="iNSObjectProtocol.RespondsToSelector sel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("respondsToSelector:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sel" Type="ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="sel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetainCount">
      <MemberSignature Language="C#" Value="public nuint RetainCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint RetainCount" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSObjectProtocol.RetainCount" />
      <MemberSignature Language="F#" Value="member this.RetainCount : nuint" Usage="Foundation.INSObjectProtocol.RetainCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("retainCount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="public Foundation.NSObject Self { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject Self" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSObjectProtocol.Self" />
      <MemberSignature Language="F#" Value="member this.Self : Foundation.NSObject" Usage="Foundation.INSObjectProtocol.Self" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("self")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Superclass">
      <MemberSignature Language="C#" Value="public ObjCRuntime.Class Superclass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ObjCRuntime.Class Superclass" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSObjectProtocol.Superclass" />
      <MemberSignature Language="F#" Value="member this.Superclass : ObjCRuntime.Class" Usage="Foundation.INSObjectProtocol.Superclass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("superclass")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ObjCRuntime.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="public Foundation.NSZone Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSZone Zone" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSObjectProtocol.Zone" />
      <MemberSignature Language="F#" Value="member this.Zone : Foundation.NSZone" Usage="Foundation.INSObjectProtocol.Zone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("zone")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
