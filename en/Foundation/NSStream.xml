<Type Name="NSStream" FullName="Foundation.NSStream">
  <TypeSignature Language="C#" Value="public class NSStream : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSStream extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSStream" />
  <TypeSignature Language="F#" Value="type NSStream = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSStream", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Abstract class for Foundation Streams. </summary>
    <remarks>
      <para>
	There are a number of properties that can be set on an NSStream by using the indexer on the stream and setting one of the available properties.   This is an abstract class, you will usually consume one of the concrete subclasses <see cref="T:Foundation.NSInputStream" /> or <see cref="T:Foundation.NSOutputStream" />.</para>
      <format type="text/html">
        <h2>Using Streams</h2>
        <div>Unless the application is polling for data to become available on the stream, NSStreams can be used as event-driven stream sources. To use a stream, application developers create it and set its <see cref="P:Foundation.NSStream.Delegate" /> property to point to a <see cref="T:Foundation.NSStreamDelegate" /> instance. This delegate will receive notifications when the connection has opened, when data can be written or read, and when the connection has terminated. Once this is setup, the developer registers the stream with a run loop, and waits for the notifications to be delivered to the delegate. Developers must call the Open method for the stream to start operating.</div>
      </format>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSStream_Class/index.html">Apple documentation for <c>NSStream</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSStream (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Foundation.NSStream : Foundation.NSObjectFlag -&gt; Foundation.NSStream" Usage="new Foundation.NSStream t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSStream (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Foundation.NSStream : nativeint -&gt; Foundation.NSStream" Usage="new Foundation.NSStream handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="Foundation.NSStream.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="nSStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("close")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the stream and releases resources associated with it.</summary>
        <remarks>
          <para>When a stream is closed it can no longer be used for reading or writing.   </para>
          <para />
          <para>If the stream has been scheduled to execute on a run loop, the stream is automatically unregistered from it.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBoundPair">
      <MemberSignature Language="C#" Value="public static void CreateBoundPair (out Foundation.NSInputStream readStream, out Foundation.NSOutputStream writeStream, nint bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateBoundPair([out] class Foundation.NSInputStream&amp; readStream, [out] class Foundation.NSOutputStream&amp; writeStream, valuetype System.nint bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.CreateBoundPair(Foundation.NSInputStream@,Foundation.NSOutputStream@,System.nint)" />
      <MemberSignature Language="F#" Value="static member CreateBoundPair :  *  * nint -&gt; unit" Usage="Foundation.NSStream.CreateBoundPair (readStream, writeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readStream" Type="Foundation.NSInputStream" RefType="out" />
        <Parameter Name="writeStream" Type="Foundation.NSOutputStream" RefType="out" />
        <Parameter Name="bufferSize" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="readStream">To be added.</param>
        <param name="writeStream">To be added.</param>
        <param name="bufferSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePairWithPeerSocketSignature">
      <MemberSignature Language="C#" Value="public static void CreatePairWithPeerSocketSignature (System.Net.Sockets.AddressFamily family, System.Net.Sockets.SocketType type, System.Net.Sockets.ProtocolType proto, System.Net.IPEndPoint endpoint, out Foundation.NSInputStream readStream, out Foundation.NSOutputStream writeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreatePairWithPeerSocketSignature(valuetype System.Net.Sockets.AddressFamily family, valuetype System.Net.Sockets.SocketType type, valuetype System.Net.Sockets.ProtocolType proto, class System.Net.IPEndPoint endpoint, [out] class Foundation.NSInputStream&amp; readStream, [out] class Foundation.NSOutputStream&amp; writeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.CreatePairWithPeerSocketSignature(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.IPEndPoint,Foundation.NSInputStream@,Foundation.NSOutputStream@)" />
      <MemberSignature Language="F#" Value="static member CreatePairWithPeerSocketSignature : System.Net.Sockets.AddressFamily * System.Net.Sockets.SocketType * System.Net.Sockets.ProtocolType * System.Net.IPEndPoint *  *  -&gt; unit" Usage="Foundation.NSStream.CreatePairWithPeerSocketSignature (family, type, proto, endpoint, readStream, writeStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="type" Type="System.Net.Sockets.SocketType" />
        <Parameter Name="proto" Type="System.Net.Sockets.ProtocolType" />
        <Parameter Name="endpoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="readStream" Type="Foundation.NSInputStream" RefType="out" />
        <Parameter Name="writeStream" Type="Foundation.NSOutputStream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="family">To be added.</param>
        <param name="type">To be added.</param>
        <param name="proto">To be added.</param>
        <param name="endpoint">To be added.</param>
        <param name="readStream">To be added.</param>
        <param name="writeStream">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePairWithSocket">
      <MemberSignature Language="C#" Value="public static void CreatePairWithSocket (CoreFoundation.CFSocket socket, out Foundation.NSInputStream readStream, out Foundation.NSOutputStream writeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreatePairWithSocket(class CoreFoundation.CFSocket socket, [out] class Foundation.NSInputStream&amp; readStream, [out] class Foundation.NSOutputStream&amp; writeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.CreatePairWithSocket(CoreFoundation.CFSocket,Foundation.NSInputStream@,Foundation.NSOutputStream@)" />
      <MemberSignature Language="F#" Value="static member CreatePairWithSocket : CoreFoundation.CFSocket *  *  -&gt; unit" Usage="Foundation.NSStream.CreatePairWithSocket (socket, readStream, writeStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="CoreFoundation.CFSocket" />
        <Parameter Name="readStream" Type="Foundation.NSInputStream" RefType="out" />
        <Parameter Name="writeStream" Type="Foundation.NSOutputStream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="socket">To be added.</param>
        <param name="readStream">To be added.</param>
        <param name="writeStream">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePairWithSocketToHost">
      <MemberSignature Language="C#" Value="public static void CreatePairWithSocketToHost (System.Net.IPEndPoint endpoint, out Foundation.NSInputStream readStream, out Foundation.NSOutputStream writeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreatePairWithSocketToHost(class System.Net.IPEndPoint endpoint, [out] class Foundation.NSInputStream&amp; readStream, [out] class Foundation.NSOutputStream&amp; writeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.CreatePairWithSocketToHost(System.Net.IPEndPoint,Foundation.NSInputStream@,Foundation.NSOutputStream@)" />
      <MemberSignature Language="F#" Value="static member CreatePairWithSocketToHost : System.Net.IPEndPoint *  *  -&gt; unit" Usage="Foundation.NSStream.CreatePairWithSocketToHost (endpoint, readStream, writeStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="readStream" Type="Foundation.NSInputStream" RefType="out" />
        <Parameter Name="writeStream" Type="Foundation.NSOutputStream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="readStream">To be added.</param>
        <param name="writeStream">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataWrittenToMemoryStream">
      <MemberSignature Language="C#" Value="public Foundation.NSData DataWrittenToMemoryStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData DataWrittenToMemoryStream" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.DataWrittenToMemoryStream" />
      <MemberSignature Language="F#" Value="member this.DataWrittenToMemoryStream : Foundation.NSData" Usage="Foundation.NSStream.DataWrittenToMemoryStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>NSData containing the stream data that you have written so far.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataWrittenToMemoryStreamKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DataWrittenToMemoryStreamKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DataWrittenToMemoryStreamKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.DataWrittenToMemoryStreamKey" />
      <MemberSignature Language="F#" Value="member this.DataWrittenToMemoryStreamKey : Foundation.NSString" Usage="Foundation.NSStream.DataWrittenToMemoryStreamKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamDataWrittenToMemoryStreamKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamDataWrittenToMemoryStreamKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public Foundation.INSStreamDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.INSStreamDelegate Delegate" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.Delegate" />
      <MemberSignature Language="F#" Value="member this.Delegate : Foundation.INSStreamDelegate with get, set" Usage="Foundation.NSStream.Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.INSStreamDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An instance of the Foundation.INSStreamDelegate model class which acts as the class delegate.</summary>
        <value>The instance of the Foundation.INSStreamDelegate model class</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>This is the strongly typed version of the object, developers should use the WeakDelegate property instead if they want to merely assign a class derived from NSObject that has been decorated with [Export] attributes.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nSStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the NSStream object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the NSStream class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the NSStream ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSError Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSError Error" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.Error" />
      <MemberSignature Language="F#" Value="member this.Error : Foundation.NSError" Usage="Foundation.NSStream.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("streamError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Current stream error (if any).</summary>
        <value>An error, or null if there are no errors.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileCurrentOffset">
      <MemberSignature Language="C#" Value="public Foundation.NSNumber FileCurrentOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber FileCurrentOffset" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.FileCurrentOffset" />
      <MemberSignature Language="F#" Value="member this.FileCurrentOffset : Foundation.NSNumber" Usage="Foundation.NSStream.FileCurrentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Absolute offset of the stream.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileCurrentOffsetKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString FileCurrentOffsetKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString FileCurrentOffsetKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.FileCurrentOffsetKey" />
      <MemberSignature Language="F#" Value="member this.FileCurrentOffsetKey : Foundation.NSString" Usage="Foundation.NSStream.FileCurrentOffsetKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamFileCurrentOffsetKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamFileCurrentOffsetKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundStreams">
      <MemberSignature Language="C#" Value="public static void GetBoundStreams (nuint bufferSize, out Foundation.NSInputStream inputStream, out Foundation.NSOutputStream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoundStreams(valuetype System.nuint bufferSize, [out] class Foundation.NSInputStream&amp; inputStream, [out] class Foundation.NSOutputStream&amp; outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.GetBoundStreams(System.nuint,Foundation.NSInputStream@,Foundation.NSOutputStream@)" />
      <MemberSignature Language="F#" Value="static member GetBoundStreams : nuint *  *  -&gt; unit" Usage="Foundation.NSStream.GetBoundStreams (bufferSize, inputStream, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("getBoundStreamsWithBufferSize:inputStream:outputStream:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.nuint" />
        <Parameter Name="inputStream" Type="Foundation.NSInputStream" RefType="out" />
        <Parameter Name="outputStream" Type="Foundation.NSOutputStream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bufferSize">To be added.</param>
        <param name="inputStream">To be added.</param>
        <param name="outputStream">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="protected virtual Foundation.NSObject GetProperty (Foundation.NSString key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Foundation.NSObject GetProperty(class Foundation.NSString key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.GetProperty(Foundation.NSString)" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : Foundation.NSString -&gt; Foundation.NSObject&#xA;override this.GetProperty : Foundation.NSString -&gt; Foundation.NSObject" Usage="nSStream.GetProperty key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("propertyForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamsToHost">
      <MemberSignature Language="C#" Value="public static void GetStreamsToHost (string hostname, nint port, out Foundation.NSInputStream inputStream, out Foundation.NSOutputStream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetStreamsToHost(string hostname, valuetype System.nint port, [out] class Foundation.NSInputStream&amp; inputStream, [out] class Foundation.NSOutputStream&amp; outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.GetStreamsToHost(System.String,System.nint,Foundation.NSInputStream@,Foundation.NSOutputStream@)" />
      <MemberSignature Language="F#" Value="static member GetStreamsToHost : string * nint *  *  -&gt; unit" Usage="Foundation.NSStream.GetStreamsToHost (hostname, port, inputStream, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("getStreamsToHostWithName:port:inputStream:outputStream:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.nint" />
        <Parameter Name="inputStream" Type="Foundation.NSInputStream" RefType="out" />
        <Parameter Name="outputStream" Type="Foundation.NSOutputStream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hostname">To be added.</param>
        <param name="port">To be added.</param>
        <param name="inputStream">To be added.</param>
        <param name="outputStream">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Foundation.NSObject this[Foundation.NSString key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject Item(class Foundation.NSString)" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.Item(Foundation.NSString)" />
      <MemberSignature Language="F#" Value="member this.Item(Foundation.NSString) : Foundation.NSObject with get, set" Usage="Foundation.NSStream.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="key">The property to set on the NSStream.</param>
        <summary>Sets a configuration key on the NSStream.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    The following is a list of possible keys that you can use, and the possible values to use
          </para>
          <para>
            <list type="table">
              <listheader>
                <term>Key</term>
                <description>Possible Values</description>
              </listheader>
              <item>
                <term>
                  <see cref="P:Foundation.NSStream.SocketSecurityLevelKey" />
                </term>
                <description>
                  <para>
		  The security level used by the SSL/TLS stack.   It should be one of:
                  </para>
                  <para>
                    <list type="bullet">
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocketSecurityLevelNone" />: No security level set for the stream.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocketSecurityLevelSslV2" />: Use SSLv2 on the stream.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocketSecurityLevelSslV3" />: Use SSLv3 on the stream.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocketSecurityLevelTlsV1" />: Use TLSv1 on the stream.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocketSecurityLevelNegotiatedSsl" />: Use the highest possible security protocol that can be negotiated on the stream.</term>
                      </item>
                    </list>
                  </para>
                </description>
              </item>
              <item>
                <term>
                  <see cref="P:Foundation.NSStream.SocksProxyConfigurationKey" />
                </term>
                <description>
                  <para>Set to a dictionary of configuration information for a SOCKS proxy.</para>
                  <para>The list of possible values in this dictionary include:</para>
                  <para>
                    <list type="bullet">
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocksProxyHostKey" />: NSString containing the SOCKS proxy host name.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocksProxyPortKey" />: NSNumber containing the SOCKS proxy host port.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocksProxyVersionKey" />: The SOCKS proxy server version, use <see cref="P:Foundation.NSStream.SocksProxyVersion4" />
		      or <see cref="P:Foundation.NSStream.SocksProxyVersion5" />.
		    </term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocksProxyUserKey" />: NSString containing the SOCKS proxy user name.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.SocksProxyPasswordKey" />: NSString containing the SOCKS proxy password.</term>
                      </item>
                    </list>
                  </para>
                </description>
              </item>
              <item>
                <term>
                  <see cref="P:Foundation.NSStream.DataWrittenToMemoryStreamKey" />
                </term>
                <description>Value is the NSData that is collecting data on the stream (get only).</description>
              </item>
              <item>
                <term>
                  <see cref="P:Foundation.NSStream.FileCurrentOffsetKey" />
                </term>
                <description>NSNumber containing the position on the stream.</description>
              </item>
              <item>
                <term>
                  <see cref="P:Foundation.NSStream.NetworkServiceType" />
                </term>
                <description>
                  <para>Type of service that the stream is providing, one of:</para>
                  <para>
                    <list type="bullet">
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.NetworkServiceTypeBackground" />: Background data.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.NetworkServiceTypeVideo" />: Video data.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.NetworkServiceTypeVoice" />: Voice service.</term>
                      </item>
                      <item>
                        <term>
                          <see cref="P:Foundation.NSStream.NetworkServiceTypeVoIP" />: Voice Over IP.</term>
                      </item>
                    </list>
                  </para>
                </description>
              </item>
            </list>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkServiceType">
      <MemberSignature Language="C#" Value="public static Foundation.NSString NetworkServiceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString NetworkServiceType" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.NetworkServiceType" />
      <MemberSignature Language="F#" Value="member this.NetworkServiceType : Foundation.NSString" Usage="Foundation.NSStream.NetworkServiceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamNetworkServiceType", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The low-level service type that this stream is providing.</summary>
        <value>
        </value>
        <remarks>This is the low-level token-based setting for the service type, in general, you can use the strongly typed ServiceType instead.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkServiceTypeBackground">
      <MemberSignature Language="C#" Value="public static Foundation.NSString NetworkServiceTypeBackground { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString NetworkServiceTypeBackground" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.NetworkServiceTypeBackground" />
      <MemberSignature Language="F#" Value="member this.NetworkServiceTypeBackground : Foundation.NSString" Usage="Foundation.NSStream.NetworkServiceTypeBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamNetworkServiceTypeBackground", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamNetworkServiceTypeBackground</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkServiceTypeCallSignaling">
      <MemberSignature Language="C#" Value="public static Foundation.NSString NetworkServiceTypeCallSignaling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString NetworkServiceTypeCallSignaling" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.NetworkServiceTypeCallSignaling" />
      <MemberSignature Language="F#" Value="member this.NetworkServiceTypeCallSignaling : Foundation.NSString" Usage="Foundation.NSStream.NetworkServiceTypeCallSignaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamNetworkServiceTypeCallSignaling", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkServiceTypeVideo">
      <MemberSignature Language="C#" Value="public static Foundation.NSString NetworkServiceTypeVideo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString NetworkServiceTypeVideo" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.NetworkServiceTypeVideo" />
      <MemberSignature Language="F#" Value="member this.NetworkServiceTypeVideo : Foundation.NSString" Usage="Foundation.NSStream.NetworkServiceTypeVideo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamNetworkServiceTypeVideo", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamNetworkServiceTypeVideo</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkServiceTypeVoice">
      <MemberSignature Language="C#" Value="public static Foundation.NSString NetworkServiceTypeVoice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString NetworkServiceTypeVoice" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.NetworkServiceTypeVoice" />
      <MemberSignature Language="F#" Value="member this.NetworkServiceTypeVoice : Foundation.NSString" Usage="Foundation.NSStream.NetworkServiceTypeVoice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamNetworkServiceTypeVoice", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamNetworkServiceTypeVoice</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkServiceTypeVoIP">
      <MemberSignature Language="C#" Value="public static Foundation.NSString NetworkServiceTypeVoIP { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString NetworkServiceTypeVoIP" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.NetworkServiceTypeVoIP" />
      <MemberSignature Language="F#" Value="member this.NetworkServiceTypeVoIP : Foundation.NSString" Usage="Foundation.NSStream.NetworkServiceTypeVoIP" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamNetworkServiceTypeVoIP", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamNetworkServiceTypeVoIP</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Foundation.NSStreamEventArgs&gt; OnEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Foundation.NSStreamEventArgs&gt; OnEvent" />
      <MemberSignature Language="DocId" Value="E:Foundation.NSStream.OnEvent" />
      <MemberSignature Language="F#" Value="member this.OnEvent : EventHandler&lt;Foundation.NSStreamEventArgs&gt; " Usage="member this.OnEvent : System.EventHandler&lt;Foundation.NSStreamEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Foundation.NSStreamEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.Open" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit&#xA;override this.Open : unit -&gt; unit" Usage="nSStream.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("open")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="public void Schedule (Foundation.NSRunLoop aRunLoop, Foundation.NSRunLoopMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Schedule(class Foundation.NSRunLoop aRunLoop, valuetype Foundation.NSRunLoopMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.Schedule(Foundation.NSRunLoop,Foundation.NSRunLoopMode)" />
      <MemberSignature Language="F#" Value="member this.Schedule : Foundation.NSRunLoop * Foundation.NSRunLoopMode -&gt; unit" Usage="nSStream.Schedule (aRunLoop, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aRunLoop" Type="Foundation.NSRunLoop" />
        <Parameter Name="mode" Type="Foundation.NSRunLoopMode" />
      </Parameters>
      <Docs>
        <param name="aRunLoop">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="public virtual void Schedule (Foundation.NSRunLoop aRunLoop, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Schedule(class Foundation.NSRunLoop aRunLoop, string mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.Schedule(Foundation.NSRunLoop,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Schedule : Foundation.NSRunLoop * string -&gt; unit&#xA;override this.Schedule : Foundation.NSRunLoop * string -&gt; unit" Usage="nSStream.Schedule (aRunLoop, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scheduleInRunLoop:forMode:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aRunLoop" Type="Foundation.NSRunLoop" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="aRunLoop">The run loop to run on.</param>
        <param name="mode">The runloop mode to run with (one of <see cref="T:Foundation.NSRunLoopMode" /> constants)</param>
        <summary>Schedules the stream to run on the specified run loop with the specified mode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceType">
      <MemberSignature Language="C#" Value="public Foundation.NSStreamServiceType ServiceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSStreamServiceType ServiceType" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.ServiceType" />
      <MemberSignature Language="F#" Value="member this.ServiceType : Foundation.NSStreamServiceType with get, set" Usage="Foundation.NSStream.ServiceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSStreamServiceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The service type that the stream is providing.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    The service type of an NSStream determine which kind of
	    service a stream is providing.  The Background and Video and
	    VoIP affect the audio routing and can control whether an application is suspended or not.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="protected virtual bool SetProperty (Foundation.NSObject property, Foundation.NSString key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetProperty(class Foundation.NSObject property, class Foundation.NSString key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.SetProperty(Foundation.NSObject,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : Foundation.NSObject * Foundation.NSString -&gt; bool&#xA;override this.SetProperty : Foundation.NSObject * Foundation.NSString -&gt; bool" Usage="nSStream.SetProperty (property, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setProperty:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Foundation.NSObject" />
        <Parameter Name="key" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="property">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketSecurityLevel">
      <MemberSignature Language="C#" Value="public Foundation.NSStreamSocketSecurityLevel SocketSecurityLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSStreamSocketSecurityLevel SocketSecurityLevel" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocketSecurityLevel" />
      <MemberSignature Language="F#" Value="member this.SocketSecurityLevel : Foundation.NSStreamSocketSecurityLevel with get, set" Usage="Foundation.NSStream.SocketSecurityLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSStreamSocketSecurityLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls the security protocol is used for the connection (none, SSL, TLS, negotiated).</summary>
        <value>The default does not use any security protocols.</value>
        <remarks>
          <para>
	    This setting allows developers to configure which security
	    protocol is used to transfer the data on the stream, from
	    nothing, to a specific version of Transport Layer Security
	    (TLS) to its predecessor Secure Socket Layer (SSL) or the
	    best possible.
	  </para>
          <para>
	    The recommended value is
	    NSStreamSocketSecurityLevel.NegotiatedSsl which will pick
	    the best available protocol between the client and the
	    server.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketSecurityLevelKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocketSecurityLevelKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocketSecurityLevelKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocketSecurityLevelKey" />
      <MemberSignature Language="F#" Value="member this.SocketSecurityLevelKey : Foundation.NSString" Usage="Foundation.NSStream.SocketSecurityLevelKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSocketSecurityLevelKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSocketSecurityLevelKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketSecurityLevelNegotiatedSsl">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocketSecurityLevelNegotiatedSsl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocketSecurityLevelNegotiatedSsl" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocketSecurityLevelNegotiatedSsl" />
      <MemberSignature Language="F#" Value="member this.SocketSecurityLevelNegotiatedSsl : Foundation.NSString" Usage="Foundation.NSStream.SocketSecurityLevelNegotiatedSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSocketSecurityLevelNegotiatedSSL", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSocketSecurityLevelNegotiatedSSL</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketSecurityLevelNone">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocketSecurityLevelNone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocketSecurityLevelNone" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocketSecurityLevelNone" />
      <MemberSignature Language="F#" Value="member this.SocketSecurityLevelNone : Foundation.NSString" Usage="Foundation.NSStream.SocketSecurityLevelNone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSocketSecurityLevelNone", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSocketSecurityLevelNone</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketSecurityLevelSslV2">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocketSecurityLevelSslV2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocketSecurityLevelSslV2" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocketSecurityLevelSslV2" />
      <MemberSignature Language="F#" Value="member this.SocketSecurityLevelSslV2 : Foundation.NSString" Usage="Foundation.NSStream.SocketSecurityLevelSslV2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSocketSecurityLevelSSLv2", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSocketSecurityLevelSSLv2</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketSecurityLevelSslV3">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocketSecurityLevelSslV3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocketSecurityLevelSslV3" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocketSecurityLevelSslV3" />
      <MemberSignature Language="F#" Value="member this.SocketSecurityLevelSslV3 : Foundation.NSString" Usage="Foundation.NSStream.SocketSecurityLevelSslV3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSocketSecurityLevelSSLv3", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSocketSecurityLevelSSLv3</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketSecurityLevelTlsV1">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocketSecurityLevelTlsV1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocketSecurityLevelTlsV1" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocketSecurityLevelTlsV1" />
      <MemberSignature Language="F#" Value="member this.SocketSecurityLevelTlsV1 : Foundation.NSString" Usage="Foundation.NSStream.SocketSecurityLevelTlsV1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSocketSecurityLevelTLSv1", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSocketSecurityLevelTLSv1</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketSslErrorDomain">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocketSslErrorDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocketSslErrorDomain" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocketSslErrorDomain" />
      <MemberSignature Language="F#" Value="member this.SocketSslErrorDomain : Foundation.NSString" Usage="Foundation.NSStream.SocketSslErrorDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSocketSSLErrorDomain", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSocketSSLErrorDomain</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksErrorDomain">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksErrorDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksErrorDomain" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksErrorDomain" />
      <MemberSignature Language="F#" Value="member this.SocksErrorDomain : Foundation.NSString" Usage="Foundation.NSStream.SocksErrorDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSErrorDomain", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSErrorDomain</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksOptions">
      <MemberSignature Language="C#" Value="public Foundation.NSStreamSocksOptions SocksOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSStreamSocksOptions SocksOptions" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksOptions" />
      <MemberSignature Language="F#" Value="member this.SocksOptions : Foundation.NSStreamSocksOptions with get, set" Usage="Foundation.NSStream.SocksOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSStreamSocksOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Settings for using a SOCKS proxy server.</summary>
        <value>.</value>
        <remarks>
          <example>
            <code lang="C#"><![CDATA[
myStream.SocksOptions = new NSStreamSocksOptions () {
    HostName = "socks.xamarin.com",
    HostPort = 12765,
    Username = settings.User,
    Passowrd = settings.Password,
    Version  = 5 /* SOCKS5 */
};
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksProxyConfigurationKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksProxyConfigurationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksProxyConfigurationKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksProxyConfigurationKey" />
      <MemberSignature Language="F#" Value="member this.SocksProxyConfigurationKey : Foundation.NSString" Usage="Foundation.NSStream.SocksProxyConfigurationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSProxyConfigurationKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSProxyConfigurationKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksProxyHostKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksProxyHostKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksProxyHostKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksProxyHostKey" />
      <MemberSignature Language="F#" Value="member this.SocksProxyHostKey : Foundation.NSString" Usage="Foundation.NSStream.SocksProxyHostKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSProxyHostKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSProxyHostKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksProxyPasswordKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksProxyPasswordKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksProxyPasswordKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksProxyPasswordKey" />
      <MemberSignature Language="F#" Value="member this.SocksProxyPasswordKey : Foundation.NSString" Usage="Foundation.NSStream.SocksProxyPasswordKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSProxyPasswordKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSProxyPasswordKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksProxyPortKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksProxyPortKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksProxyPortKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksProxyPortKey" />
      <MemberSignature Language="F#" Value="member this.SocksProxyPortKey : Foundation.NSString" Usage="Foundation.NSStream.SocksProxyPortKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSProxyPortKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSProxyPortKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksProxyUserKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksProxyUserKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksProxyUserKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksProxyUserKey" />
      <MemberSignature Language="F#" Value="member this.SocksProxyUserKey : Foundation.NSString" Usage="Foundation.NSStream.SocksProxyUserKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSProxyUserKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSProxyUserKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksProxyVersion4">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksProxyVersion4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksProxyVersion4" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksProxyVersion4" />
      <MemberSignature Language="F#" Value="member this.SocksProxyVersion4 : Foundation.NSString" Usage="Foundation.NSStream.SocksProxyVersion4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSProxyVersion4", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSProxyVersion4</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksProxyVersion5">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksProxyVersion5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksProxyVersion5" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksProxyVersion5" />
      <MemberSignature Language="F#" Value="member this.SocksProxyVersion5 : Foundation.NSString" Usage="Foundation.NSStream.SocksProxyVersion5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSProxyVersion5", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSProxyVersion5</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocksProxyVersionKey">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SocksProxyVersionKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SocksProxyVersionKey" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.SocksProxyVersionKey" />
      <MemberSignature Language="F#" Value="member this.SocksProxyVersionKey : Foundation.NSString" Usage="Foundation.NSStream.SocksProxyVersionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSStreamSOCKSProxyVersionKey", "Foundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level key: Represents the value associated with the constant NSStreamSOCKSProxyVersionKey</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSStreamStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSStreamStatus Status" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.Status" />
      <MemberSignature Language="F#" Value="member this.Status : Foundation.NSStreamStatus" Usage="Foundation.NSStream.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("streamStatus")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSStreamStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unschedule">
      <MemberSignature Language="C#" Value="public void Unschedule (Foundation.NSRunLoop aRunLoop, Foundation.NSRunLoopMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unschedule(class Foundation.NSRunLoop aRunLoop, valuetype Foundation.NSRunLoopMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.Unschedule(Foundation.NSRunLoop,Foundation.NSRunLoopMode)" />
      <MemberSignature Language="F#" Value="member this.Unschedule : Foundation.NSRunLoop * Foundation.NSRunLoopMode -&gt; unit" Usage="nSStream.Unschedule (aRunLoop, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aRunLoop" Type="Foundation.NSRunLoop" />
        <Parameter Name="mode" Type="Foundation.NSRunLoopMode" />
      </Parameters>
      <Docs>
        <param name="aRunLoop">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unschedule">
      <MemberSignature Language="C#" Value="public virtual void Unschedule (Foundation.NSRunLoop aRunLoop, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unschedule(class Foundation.NSRunLoop aRunLoop, string mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSStream.Unschedule(Foundation.NSRunLoop,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Unschedule : Foundation.NSRunLoop * string -&gt; unit&#xA;override this.Unschedule : Foundation.NSRunLoop * string -&gt; unit" Usage="nSStream.Unschedule (aRunLoop, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeFromRunLoop:forMode:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aRunLoop" Type="Foundation.NSRunLoop" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="aRunLoop">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject WeakDelegate" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSStream.WeakDelegate" />
      <MemberSignature Language="F#" Value="member this.WeakDelegate : Foundation.NSObject with get, set" Usage="Foundation.NSStream.WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("delegate", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDelegate:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An object that can respond to the delegate protocol for this type</summary>
        <value>The instance that will respond to events and data requests.</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>   Methods must be decorated with the [Export ("selectorName")] attribute to respond to each method from the protocol.   Alternatively use the Delegate method which is strongly typed and does not require the [Export] attributes on methods.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
