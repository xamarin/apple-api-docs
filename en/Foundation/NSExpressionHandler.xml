<Type Name="NSExpressionHandler" FullName="Foundation.NSExpressionHandler">
  <TypeSignature Language="C#" Value="public delegate void NSExpressionHandler(NSObject evaluatedObject, NSExpression[] expressions, NSMutableDictionary context);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed NSExpressionHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSExpressionHandler" />
  <TypeSignature Language="F#" Value="type NSExpressionHandler = delegate of NSObject * NSExpression[] * NSMutableDictionary -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="evaluatedObject" Type="Foundation.NSObject" />
    <Parameter Name="expressions" Type="Foundation.NSExpression[]" />
    <Parameter Name="context" Type="Foundation.NSMutableDictionary" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="evaluatedObject">To be added.</param>
    <param name="expressions">To be added.</param>
    <param name="context">To be added.</param>
    <summary>A delegate that specifies the target of the <see cref="M:Foundation.NSExpression.FromFunction" /> method.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
