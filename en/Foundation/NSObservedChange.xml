<Type Name="NSObservedChange" FullName="Foundation.NSObservedChange">
  <TypeSignature Language="C#" Value="public class NSObservedChange" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSObservedChange extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Changes that ocurred to an object being observed by Key-Value-Observing</summary>
    <remarks>
      <para>This class exposes the various components that were changes in a Key-Value-Observed property.</para>
      <para>These are merely accessors to the underlying NSDictionary that is provided to the <see cref="M:Foundation.NSObject.ObserveValue" /> method.</para>
      <para>Instances of this class are provided to your callback methods that you provide to <see cref="M:Foundation.NSObject.AddObserver" />.</para>
      <para>You can also create these objects if you have a dictionary that contains the keys from a key-value-observing change.   For example if you override the <see cref="M:Foundation.NSObject.ObserveValue" /> method.</para>
      <para />
      <example>
        <code lang="C#"><![CDATA[class MyObserved : NSObject {
    public override ObserveValue (NSString keyPath, NSObject ofObject, NSDictionary change, IntPtr context)
    {
        var change = new NSObservedChange (change);
        // Now you can access the details about the change with the
        // properties in the `change’ variable.

        if (context == MyObservedContext){
            //...
        }
        base.ObserveValue (keyPath, ofObject, change, context);
    }
}]]></code>
      </example>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSObservedChange (Foundation.NSDictionary source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSDictionary source) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public Foundation.NSKeyValueChange Change { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSKeyValueChange Change" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSKeyValueChange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Records the kind of change that was done to the property.</summary>
        <value>The current state of the changes being reported.</value>
        <remarks>You can use the value of this property to determine which information is available on the other properties of this class.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Indexes">
      <MemberSignature Language="C#" Value="public Foundation.NSIndexSet Indexes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSIndexSet Indexes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSIndexSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The indexes of the objects that were added, removed or changed.</summary>
        <value>To be added.</value>
        <remarks>This value is set if the Change property is one of </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrior">
      <MemberSignature Language="C#" Value="public bool IsPrior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this flag is true, this indicates that the observed method is being called before the change takes place.</summary>
        <value>
          <para></para>
          <para></para>
        </value>
        <remarks>For this property to have a value, the options passed to <see cref="M:Foundation.NSObject.AddObserver" /> method should contain the value <see cref="E:Foundation.NSKeyValueObseringOptions.Prior" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public Foundation.NSObject NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The new value being set on the observed property.</summary>
        <value>To be added.</value>
        <remarks>For this property to have a value, the options passed to <see cref="M:Foundation.NSObject.AddObserver" /> method should contain the value <see cref="E:Foundation.NSKeyValueObseringOptions." />New.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public Foundation.NSObject OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject OldValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The previous value on the observed property.</summary>
        <value>

The old value.
     
     </value>
        <remarks>For this property to have a value, the options passed to <see cref="M:Foundation.NSObject.AddObserver" /> method should contain the value <see cref="E:Foundation.NSKeyValueObseringOptions.Old" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>