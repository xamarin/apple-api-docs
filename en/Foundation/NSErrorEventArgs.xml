<Type Name="NSErrorEventArgs" FullName="Foundation.NSErrorEventArgs">
  <TypeSignature Language="C#" Value="public class NSErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSErrorEventArgs" />
  <TypeSignature Language="F#" Value="type NSErrorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:Foundation.NSErrorEventArgs.DidFailToLocateUser" /> and <see cref="E:Foundation.NSErrorEventArgs.LoadingMapFailed" />, <see cref="E:Foundation.NSErrorEventArgs.DeferredUpdatesFinished" /> and <see cref="E:Foundation.NSErrorEventArgs.Failed" /> and <see cref="E:Foundation.NSErrorEventArgs.Failed" /> and <see cref="E:Foundation.NSErrorEventArgs.AdvertisingStarted" />, <see cref="E:Foundation.NSErrorEventArgs.DiscoveredService" /> and <see cref="E:Foundation.NSErrorEventArgs.RssiUpdated" /> events.</summary>
    <remarks>
      <para>Use this class when you want to create event handlers that get an NSError.  </para>
      <example>
        <code lang="C#"><![CDATA[
public class Sample {
    public event EventHandler<NSErrorEventArgs> Failed;
}
]]></code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSErrorEventArgs (Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSErrorEventArgs.#ctor(Foundation.NSError)" />
      <MemberSignature Language="F#" Value="new Foundation.NSErrorEventArgs : Foundation.NSError -&gt; Foundation.NSErrorEventArgs" Usage="new Foundation.NSErrorEventArgs error" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">The underlying error.</param>
        <summary>Initializes a new instance of the NSErrorEventArgs class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Foundation.NSError Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSError Error" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSErrorEventArgs.Error" />
      <MemberSignature Language="F#" Value="member this.Error : Foundation.NSError" Usage="Foundation.NSErrorEventArgs.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the NSError value.</summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
