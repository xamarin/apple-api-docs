<Type Name="INSUrlConnectionDownloadDelegate" FullName="Foundation.INSUrlConnectionDownloadDelegate">
  <TypeSignature Language="C#" Value="public interface INSUrlConnectionDownloadDelegate : Foundation.INSUrlConnectionDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSUrlConnectionDownloadDelegate implements class Foundation.INSUrlConnectionDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Foundation.INSUrlConnectionDownloadDelegate" />
  <TypeSignature Language="F#" Value="type INSUrlConnectionDownloadDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSUrlConnectionDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSUrlConnectionDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NSURLConnectionDownloadDelegate", WrapperType=typeof(Foundation.NSUrlConnectionDownloadDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WroteData", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrlConnection), typeof(System.Int64), typeof(System.Int64), typeof(System.Int64) }, Selector="connection:didWriteData:totalBytesWritten:expectedTotalBytes:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ResumedDownloading", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrlConnection), typeof(System.Int64), typeof(System.Int64) }, Selector="connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="FinishedDownloading", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrlConnection), typeof(Foundation.NSUrl) }, Selector="connectionDidFinishDownloading:destinationURL:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:Foundation.NSUrlConnectionDownloadDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:Foundation.NSUrlConnectionDownloadDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:Foundation.NSUrlConnectionDownloadDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:Foundation.NSUrlConnectionDownloadDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinishedDownloading">
      <MemberSignature Language="C#" Value="public void FinishedDownloading (Foundation.NSUrlConnection connection, Foundation.NSUrl destinationUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishedDownloading(class Foundation.NSUrlConnection connection, class Foundation.NSUrl destinationUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.INSUrlConnectionDownloadDelegate.FinishedDownloading(Foundation.NSUrlConnection,Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member FinishedDownloading : Foundation.NSUrlConnection * Foundation.NSUrl -&gt; unit" Usage="iNSUrlConnectionDownloadDelegate.FinishedDownloading (connection, destinationUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("connectionDidFinishDownloading:destinationURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Foundation.NSUrlConnection" />
        <Parameter Name="destinationUrl" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="destinationUrl">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
