<Type Name="NSDateFormatter" FullName="Foundation.NSDateFormatter">
  <TypeSignature Language="C#" Value="public class NSDateFormatter : Foundation.NSFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSDateFormatter extends Foundation.NSFormatter" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSDateFormatter" />
  <TypeSignature Language="F#" Value="type NSDateFormatter = class&#xA;    inherit NSFormatter" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("NSDateFormatter", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Used to parse and render dates in various forms.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/RecipesAndPrinting/">RecipesAndPrinting</related>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSDateFormatter_Class/index.html">Apple documentation for <c>NSDateFormatter</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSDateFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSDateFormatter (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new Foundation.NSDateFormatter : Foundation.NSCoder -&gt; Foundation.NSDateFormatter" Usage="new Foundation.NSDateFormatter coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSDateFormatter (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Foundation.NSDateFormatter : Foundation.NSObjectFlag -&gt; Foundation.NSDateFormatter" Usage="new Foundation.NSDateFormatter t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSDateFormatter (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Foundation.NSDateFormatter : nativeint -&gt; Foundation.NSDateFormatter" Usage="new Foundation.NSDateFormatter handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AMSymbol">
      <MemberSignature Language="C#" Value="public virtual string AMSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMSymbol" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.AMSymbol" />
      <MemberSignature Language="F#" Value="member this.AMSymbol : string with get, set" Usage="Foundation.NSDateFormatter.AMSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("AMSymbol")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setAMSymbol:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The AM symbol for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Behavior">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDateFormatterBehavior Behavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSDateFormatterBehavior Behavior" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.Behavior" />
      <MemberSignature Language="F#" Value="member this.Behavior : Foundation.NSDateFormatterBehavior with get, set" Usage="Foundation.NSDateFormatter.Behavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("formatterBehavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setFormatterBehavior:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDateFormatterBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The NSDateFormatterBehavior object for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSCalendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSCalendar Calendar" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.Calendar" />
      <MemberSignature Language="F#" Value="member this.Calendar : Foundation.NSCalendar with get, set" Usage="Foundation.NSDateFormatter.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("calendar")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setCalendar:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("calendar", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setCalendar:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSCalendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The calendar for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="Foundation.NSDateFormatter.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateFormat">
      <MemberSignature Language="C#" Value="public virtual string DateFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateFormat" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.DateFormat" />
      <MemberSignature Language="F#" Value="member this.DateFormat : string with get, set" Usage="Foundation.NSDateFormatter.DateFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("dateFormat")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setDateFormat:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The date format string used by this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateStyle">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDateFormatterStyle DateStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSDateFormatterStyle DateStyle" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.DateStyle" />
      <MemberSignature Language="F#" Value="member this.DateStyle : Foundation.NSDateFormatterStyle with get, set" Usage="Foundation.NSDateFormatter.DateStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("dateStyle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setDateStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDateFormatterStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The date style used by this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBehavior">
      <MemberSignature Language="C#" Value="public static Foundation.NSDateFormatterBehavior DefaultBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Foundation.NSDateFormatterBehavior DefaultBehavior" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.DefaultBehavior" />
      <MemberSignature Language="F#" Value="member this.DefaultBehavior : Foundation.NSDateFormatterBehavior with get, set" Usage="Foundation.NSDateFormatter.DefaultBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("defaultFormatterBehavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setDefaultFormatterBehavior:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDateFormatterBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Factory method producing default NSDateFormatterBehavior.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate DefaultDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate DefaultDate" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.DefaultDate" />
      <MemberSignature Language="F#" Value="member this.DefaultDate : Foundation.NSDate with get, set" Usage="Foundation.NSDateFormatter.DefaultDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("defaultDate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setDefaultDate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("defaultDate", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setDefaultDate:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default date for this formatter.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoesRelativeDateFormatting">
      <MemberSignature Language="C#" Value="public virtual bool DoesRelativeDateFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoesRelativeDateFormatting" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.DoesRelativeDateFormatting" />
      <MemberSignature Language="F#" Value="member this.DoesRelativeDateFormatting : bool with get, set" Usage="Foundation.NSDateFormatter.DoesRelativeDateFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("doesRelativeDateFormatting")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setDoesRelativeDateFormatting:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EraSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] EraSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] EraSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.EraSymbols" />
      <MemberSignature Language="F#" Value="member this.EraSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.EraSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("eraSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setEraSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The array of era symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingContext">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSFormattingContext FormattingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSFormattingContext FormattingContext" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.FormattingContext" />
      <MemberSignature Language="F#" Value="member this.FormattingContext : Foundation.NSFormattingContext with get, set" Usage="Foundation.NSDateFormatter.FormattingContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 2, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("formattingContext")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 2, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setFormattingContext:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 2, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("formattingContext", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setFormattingContext:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSFormattingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratesCalendarDates">
      <MemberSignature Language="C#" Value="public virtual bool GeneratesCalendarDates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GeneratesCalendarDates" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.GeneratesCalendarDates" />
      <MemberSignature Language="F#" Value="member this.GeneratesCalendarDates : bool with get, set" Usage="Foundation.NSDateFormatter.GeneratesCalendarDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("generatesCalendarDates")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setGeneratesCalendarDates:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this method.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateFormatFromTemplate">
      <MemberSignature Language="C#" Value="public static string GetDateFormatFromTemplate (string template, nuint options, Foundation.NSLocale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDateFormatFromTemplate(string template, valuetype System.nuint options, class Foundation.NSLocale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.GetDateFormatFromTemplate(System.String,System.nuint,Foundation.NSLocale)" />
      <MemberSignature Language="F#" Value="static member GetDateFormatFromTemplate : string * nuint * Foundation.NSLocale -&gt; string" Usage="Foundation.NSDateFormatter.GetDateFormatFromTemplate (template, options, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("dateFormatFromTemplate:options:locale:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="options" Type="System.nuint" />
        <Parameter Name="locale" Type="Foundation.NSLocale" />
      </Parameters>
      <Docs>
        <param name="template">To be added.</param>
        <param name="options">To be added.</param>
        <param name="locale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GregorianStartDate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate GregorianStartDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate GregorianStartDate" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.GregorianStartDate" />
      <MemberSignature Language="F#" Value="member this.GregorianStartDate : Foundation.NSDate with get, set" Usage="Foundation.NSDateFormatter.GregorianStartDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("gregorianStartDate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setGregorianStartDate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("gregorianStartDate", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setGregorianStartDate:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The start date of the Gregorian calendar.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLenient">
      <MemberSignature Language="C#" Value="public virtual bool IsLenient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLenient" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.IsLenient" />
      <MemberSignature Language="F#" Value="member this.IsLenient : bool with get, set" Usage="Foundation.NSDateFormatter.IsLenient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isLenient")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setLenient:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this formatter uses heuristics when parsing a string.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSLocale Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSLocale Locale" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.Locale" />
      <MemberSignature Language="F#" Value="member this.Locale : Foundation.NSLocale with get, set" Usage="Foundation.NSDateFormatter.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("locale")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setLocale:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("locale", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setLocale:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSLocale</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The locale of this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LongEraSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] LongEraSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] LongEraSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.LongEraSymbols" />
      <MemberSignature Language="F#" Value="member this.LongEraSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.LongEraSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("longEraSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setLongEraSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The long era symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MonthSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] MonthSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.MonthSymbols" />
      <MemberSignature Language="F#" Value="member this.MonthSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.MonthSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("monthSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMonthSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The month symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate Parse (string date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSDate Parse(string date) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.Parse(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Parse : string -&gt; Foundation.NSDate&#xA;override this.Parse : string -&gt; Foundation.NSDate" Usage="nSDateFormatter.Parse date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("dateFromString:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="date">To be added.</param>
        <summary>Attempts to convert a string into an NSDate.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PMSymbol">
      <MemberSignature Language="C#" Value="public virtual string PMSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMSymbol" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.PMSymbol" />
      <MemberSignature Language="F#" Value="member this.PMSymbol : string with get, set" Usage="Foundation.NSDateFormatter.PMSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("PMSymbol")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setPMSymbol:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The PM symbol of this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuarterSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] QuarterSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] QuarterSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.QuarterSymbols" />
      <MemberSignature Language="F#" Value="member this.QuarterSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.QuarterSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("quarterSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setQuarterSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The quarter symbols of this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalizedDateFormatFromTemplate">
      <MemberSignature Language="C#" Value="public virtual void SetLocalizedDateFormatFromTemplate (string dateFormatTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocalizedDateFormatFromTemplate(string dateFormatTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.SetLocalizedDateFormatFromTemplate(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetLocalizedDateFormatFromTemplate : string -&gt; unit&#xA;override this.SetLocalizedDateFormatFromTemplate : string -&gt; unit" Usage="nSDateFormatter.SetLocalizedDateFormatFromTemplate dateFormatTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setLocalizedDateFormatFromTemplate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateFormatTemplate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateFormatTemplate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortMonthSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] ShortMonthSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortMonthSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.ShortMonthSymbols" />
      <MemberSignature Language="F#" Value="member this.ShortMonthSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.ShortMonthSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("shortMonthSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setShortMonthSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The short month symbols of this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortQuarterSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] ShortQuarterSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortQuarterSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.ShortQuarterSymbols" />
      <MemberSignature Language="F#" Value="member this.ShortQuarterSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.ShortQuarterSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("shortQuarterSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setShortQuarterSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The short quarter symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortStandaloneMonthSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] ShortStandaloneMonthSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortStandaloneMonthSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.ShortStandaloneMonthSymbols" />
      <MemberSignature Language="F#" Value="member this.ShortStandaloneMonthSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.ShortStandaloneMonthSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("shortStandaloneMonthSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setShortStandaloneMonthSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The standalone month symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortStandaloneQuarterSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] ShortStandaloneQuarterSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortStandaloneQuarterSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.ShortStandaloneQuarterSymbols" />
      <MemberSignature Language="F#" Value="member this.ShortStandaloneQuarterSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.ShortStandaloneQuarterSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("shortStandaloneQuarterSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setShortStandaloneQuarterSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The short standalone quarter symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortStandaloneWeekdaySymbols">
      <MemberSignature Language="C#" Value="public virtual string[] ShortStandaloneWeekdaySymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortStandaloneWeekdaySymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.ShortStandaloneWeekdaySymbols" />
      <MemberSignature Language="F#" Value="member this.ShortStandaloneWeekdaySymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.ShortStandaloneWeekdaySymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("shortStandaloneWeekdaySymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setShortStandaloneWeekdaySymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The short standalone weekday symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortWeekdaySymbols">
      <MemberSignature Language="C#" Value="public virtual string[] ShortWeekdaySymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortWeekdaySymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.ShortWeekdaySymbols" />
      <MemberSignature Language="F#" Value="member this.ShortWeekdaySymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.ShortWeekdaySymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("shortWeekdaySymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setShortWeekdaySymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The short weekday symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandaloneMonthSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] StandaloneMonthSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] StandaloneMonthSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.StandaloneMonthSymbols" />
      <MemberSignature Language="F#" Value="member this.StandaloneMonthSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.StandaloneMonthSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("standaloneMonthSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setStandaloneMonthSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The standalone month symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandaloneQuarterSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] StandaloneQuarterSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] StandaloneQuarterSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.StandaloneQuarterSymbols" />
      <MemberSignature Language="F#" Value="member this.StandaloneQuarterSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.StandaloneQuarterSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("standaloneQuarterSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setStandaloneQuarterSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The standalone quarter symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandaloneWeekdaySymbols">
      <MemberSignature Language="C#" Value="public virtual string[] StandaloneWeekdaySymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] StandaloneWeekdaySymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.StandaloneWeekdaySymbols" />
      <MemberSignature Language="F#" Value="member this.StandaloneWeekdaySymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.StandaloneWeekdaySymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("standaloneWeekdaySymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setStandaloneWeekdaySymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The standalone weekday symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeStyle">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDateFormatterStyle TimeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSDateFormatterStyle TimeStyle" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.TimeStyle" />
      <MemberSignature Language="F#" Value="member this.TimeStyle : Foundation.NSDateFormatterStyle with get, set" Usage="Foundation.NSDateFormatter.TimeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("timeStyle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setTimeStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDateFormatterStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The time style for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeZone">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSTimeZone TimeZone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSTimeZone TimeZone" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.TimeZone" />
      <MemberSignature Language="F#" Value="member this.TimeZone : Foundation.NSTimeZone with get, set" Usage="Foundation.NSDateFormatter.TimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("timeZone")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setTimeZone:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("timeZone", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setTimeZone:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The time zone for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLocalizedString">
      <MemberSignature Language="C#" Value="public static string ToLocalizedString (Foundation.NSDate date, Foundation.NSDateFormatterStyle dateStyle, Foundation.NSDateFormatterStyle timeStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToLocalizedString(class Foundation.NSDate date, valuetype Foundation.NSDateFormatterStyle dateStyle, valuetype Foundation.NSDateFormatterStyle timeStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.ToLocalizedString(Foundation.NSDate,Foundation.NSDateFormatterStyle,Foundation.NSDateFormatterStyle)" />
      <MemberSignature Language="F#" Value="static member ToLocalizedString : Foundation.NSDate * Foundation.NSDateFormatterStyle * Foundation.NSDateFormatterStyle -&gt; string" Usage="Foundation.NSDateFormatter.ToLocalizedString (date, dateStyle, timeStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("localizedStringFromDate:dateStyle:timeStyle:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="Foundation.NSDate" />
        <Parameter Name="dateStyle" Type="Foundation.NSDateFormatterStyle" />
        <Parameter Name="timeStyle" Type="Foundation.NSDateFormatterStyle" />
      </Parameters>
      <Docs>
        <param name="date">To be added.</param>
        <param name="dateStyle">To be added.</param>
        <param name="timeStyle">To be added.</param>
        <summary>Static method to create a localized string, using the specified date, dateStyle, and timeStyle.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public virtual string ToString (Foundation.NSDate date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class Foundation.NSDate date) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSDateFormatter.ToString(Foundation.NSDate)" />
      <MemberSignature Language="F#" Value="override this.ToString : Foundation.NSDate -&gt; string" Usage="nSDateFormatter.ToString date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("stringFromDate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="Foundation.NSDate" />
      </Parameters>
      <Docs>
        <param name="date">To be added.</param>
        <summary>Returns a string representation of the value of the current instance.</summary>
        <returns>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoDigitStartDate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate TwoDigitStartDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate TwoDigitStartDate" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.TwoDigitStartDate" />
      <MemberSignature Language="F#" Value="member this.TwoDigitStartDate : Foundation.NSDate with get, set" Usage="Foundation.NSDateFormatter.TwoDigitStartDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("twoDigitStartDate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setTwoDigitStartDate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("twoDigitStartDate", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setTwoDigitStartDate:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The earliest date that can be specified with a two-digit year specifier.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VeryShortMonthSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] VeryShortMonthSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] VeryShortMonthSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.VeryShortMonthSymbols" />
      <MemberSignature Language="F#" Value="member this.VeryShortMonthSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.VeryShortMonthSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("veryShortMonthSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVeryShortMonthSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The very short month symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VeryShortStandaloneMonthSymbols">
      <MemberSignature Language="C#" Value="public virtual string[] VeryShortStandaloneMonthSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] VeryShortStandaloneMonthSymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.VeryShortStandaloneMonthSymbols" />
      <MemberSignature Language="F#" Value="member this.VeryShortStandaloneMonthSymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.VeryShortStandaloneMonthSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("veryShortStandaloneMonthSymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVeryShortStandaloneMonthSymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The very short month symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VeryShortStandaloneWeekdaySymbols">
      <MemberSignature Language="C#" Value="public virtual string[] VeryShortStandaloneWeekdaySymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] VeryShortStandaloneWeekdaySymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.VeryShortStandaloneWeekdaySymbols" />
      <MemberSignature Language="F#" Value="member this.VeryShortStandaloneWeekdaySymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.VeryShortStandaloneWeekdaySymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("veryShortStandaloneWeekdaySymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVeryShortStandaloneWeekdaySymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The very short standalone weekday symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VeryShortWeekdaySymbols">
      <MemberSignature Language="C#" Value="public virtual string[] VeryShortWeekdaySymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] VeryShortWeekdaySymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.VeryShortWeekdaySymbols" />
      <MemberSignature Language="F#" Value="member this.VeryShortWeekdaySymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.VeryShortWeekdaySymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("veryShortWeekdaySymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVeryShortWeekdaySymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The very short weekday symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeekdaySymbols">
      <MemberSignature Language="C#" Value="public virtual string[] WeekdaySymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] WeekdaySymbols" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSDateFormatter.WeekdaySymbols" />
      <MemberSignature Language="F#" Value="member this.WeekdaySymbols : string[] with get, set" Usage="Foundation.NSDateFormatter.WeekdaySymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("weekdaySymbols")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setWeekdaySymbols:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The weekday symbols for this formatter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
