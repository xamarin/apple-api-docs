<Type Name="NSHttpCookie" FullName="Foundation.NSHttpCookie">
  <TypeSignature Language="C#" Value="public class NSHttpCookie : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSHttpCookie extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSHttpCookie" />
  <TypeSignature Language="F#" Value="type NSHttpCookie = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSHTTPCookie", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>HTTP Cookie</summary>
    <remarks>
      <para>
	For uses that only require a name and a value, with optional
	paths and domains, you can use one of the NSHTTPCookie
	constructors.   
      </para>
      <para>
	For more complex scenarios that also require one or more of
	comments, expiration, a port, a secure setting and a version,
	you can either use the constructor that takes an
	<format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Net%20Cookie&amp;scope=Xamarin" title="T:System.Net.Cookie">T:System.Net.Cookie</a></format>.
      </para>
      <para>
	Alternatively, you can create it by passing an
	NSDictionary to either the NSHttpCookie constructor or the
	<see cref="M:Foundation.NSHttpCookie.CookieFromProperties(Foundation.NSDictionary)" />
	method.
      </para>
      <example>
        <code lang="C#"><![CDATA[
var firstCookie = new NSHttpCookie ("visited", "yes");

// More advanced, initialize from a .NET cookie and 
// make it expire in 10 hours
var secondCookie = new NSHttpCookie (new Cookie () {
	Name = "visited",
	Value = "yes",
	Expires = DateTime.UtcNow + TimeSpan.FromHours (10);
});
	]]></code>
      </example>
      <para>
	The actual keys have to be one the public Key static fields
	from this class (<see cref="P:Foundation.NSHttpCookie.KeyName" />, <see cref="P:Foundation.NSHttpCookie.KeyValue" />, <see cref="P:Foundation.NSHttpCookie.KeyOriginUrl" />,
	<see cref="P:Foundation.NSHttpCookie.KeyVersion" />,
	<see cref="P:Foundation.NSHttpCookie.KeyDomain" />,
	<see cref="P:Foundation.NSHttpCookie.KeyPath" />,
	<see cref="P:Foundation.NSHttpCookie.KeySecure" />,
	<see cref="P:Foundation.NSHttpCookie.KeyExpires" />,
	<see cref="P:Foundation.NSHttpCookie.KeyComment" />,
	<see cref="P:Foundation.NSHttpCookie.KeyCommentUrl" />,
	<see cref="P:Foundation.NSHttpCookie.KeyDiscard" />,
	<see cref="P:Foundation.NSHttpCookie.KeyMaximumAge" /> and
	<see cref="P:Foundation.NSHttpCookie.KeyPort" />).
      </para>
      <example>
        <code lang="C#"><![CDATA[

// Long winded example using NSDictionary.

var properties = new NSDictionary (
    NSHttpCookie.KeyName, "visited-site", 
    NSHttpCookie.KeyValue, "yes", 
    NSHttpCookie.Comment,  "my-comment" );
var cookie = new NSHttpCookie (properties);
	]]></code>
      </example>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSHTTPCookie_Class/index.html">Apple documentation for <c>NSHTTPCookie</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (Foundation.NSDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.#ctor(Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="new Foundation.NSHttpCookie : Foundation.NSDictionary -&gt; Foundation.NSHttpCookie" Usage="new Foundation.NSHttpCookie properties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithProperties:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="properties" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Dictionary with the cookie values.</param>
        <summary>Creates a new NSHttpCookie</summary>
        <remarks>
          <para>
	    To instantiate instances of NSHTTPCookie you need to pass an
	    NSDictionary 
	  </para>
          <para>
	    The actual keys have to be one the public Key static
	    fields from this class (<see cref="P:Foundation.NSHttpCookie.KeyName" />, <see cref="P:Foundation.NSHttpCookie.KeyValue" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyOriginUrl" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyVersion" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyDomain" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyPath" />,
	    <see cref="P:Foundation.NSHttpCookie.KeySecure" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyExpires" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyComment" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyCommentUrl" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyDiscard" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyMaximumAge" />
	    and <see cref="P:Foundation.NSHttpCookie.KeyPort" />).

	    </para>
          <example>
            <code lang="C#"><![CDATA[
	      
var properties = NSDictionary.FromObjectsAndKeys (new object [] { "MyCookieValue" }, new object [] { NSHttpCookie.KeyValue });
var cookie = new NSHttpCookie (properties);
	      
	    ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSHttpCookie (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Foundation.NSHttpCookie : Foundation.NSObjectFlag -&gt; Foundation.NSHttpCookie" Usage="new Foundation.NSHttpCookie t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSHttpCookie (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Foundation.NSHttpCookie : nativeint -&gt; Foundation.NSHttpCookie" Usage="new Foundation.NSHttpCookie handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (System.Net.Cookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Cookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.#ctor(System.Net.Cookie)" />
      <MemberSignature Language="F#" Value="new Foundation.NSHttpCookie : System.Net.Cookie -&gt; Foundation.NSHttpCookie" Usage="new Foundation.NSHttpCookie cookie" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cookie" Type="System.Net.Cookie" />
      </Parameters>
      <Docs>
        <param name="cookie">An existing Cookie from the .NET framework</param>
        <summary>Create a new cookie from the supplied System.Net.Cookie instance properties</summary>
        <remarks>This constructor will throw an ArgumentNullException if `cookie` is null</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="F#" Value="new Foundation.NSHttpCookie : string * string -&gt; Foundation.NSHttpCookie" Usage="new Foundation.NSHttpCookie (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Cookie's name. Cannot be null.</param>
        <param name="value">Cookie's value. Cannot be null.</param>
        <summary>Create a new cookie with the supplied name and value.</summary>
        <remarks>A default Path and Domain will be used to ensure a valid instance is created.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (string name, string value, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="new Foundation.NSHttpCookie : string * string * string -&gt; Foundation.NSHttpCookie" Usage="new Foundation.NSHttpCookie (name, value, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Cookie's name. Cannot be null.</param>
        <param name="value">Cookie's value. Cannot be null.</param>
        <param name="path">Path where the cookie will be applied on the domain. Using "/" will send the cookie to every URL on the domain.</param>
        <summary>Create a new cookie with the supplied name, value and path.</summary>
        <remarks>A default Domain will be used to ensure a valid instance is created</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (string name, string value, string path, string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value, string path, string domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="new Foundation.NSHttpCookie : string * string * string * string -&gt; Foundation.NSHttpCookie" Usage="new Foundation.NSHttpCookie (name, value, path, domain)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Cookie's name. Cannot be null.</param>
        <param name="value">Cookie's value. Cannot be null.</param>
        <param name="path">Path where the cookie will be applied on the domain. Using "/" will send the cookie to every URL on the domain.</param>
        <param name="domain">Domain (e.g. xamarin.com) related to the cookie</param>
        <summary>Create a new cookie with the supplied name, value, path and domain.</summary>
        <remarks>An ArgumentNullException will be thrown if either `name` or `value` are null.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="Foundation.NSHttpCookie.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual string Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.Comment" />
      <MemberSignature Language="F#" Value="member this.Comment : string" Usage="Foundation.NSHttpCookie.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("comment")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The comment string.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentUrl">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl CommentUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl CommentUrl" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.CommentUrl" />
      <MemberSignature Language="F#" Value="member this.CommentUrl : Foundation.NSUrl" Usage="Foundation.NSHttpCookie.CommentUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("commentURL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The comment URL.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieFromProperties">
      <MemberSignature Language="C#" Value="public static Foundation.NSHttpCookie CookieFromProperties (Foundation.NSDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSHttpCookie CookieFromProperties(class Foundation.NSDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.CookieFromProperties(Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member CookieFromProperties : Foundation.NSDictionary -&gt; Foundation.NSHttpCookie" Usage="Foundation.NSHttpCookie.CookieFromProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cookieWithProperties:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSHttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Dictionary with the cookie values.</param>
        <summary>Factory method to create cookies.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
	    To instantiate instances of NSHTTPCookie you need to pass an
	    NSDictionary 
	  </para>
          <para>
	    The actual keys have to be one the public Key static
	    fields from this class (<see cref="P:Foundation.NSHttpCookie.KeyName" />, <see cref="P:Foundation.NSHttpCookie.KeyValue" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyOriginUrl" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyVersion" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyDomain" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyPath" />,
	    <see cref="P:Foundation.NSHttpCookie.KeySecure" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyExpires" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyComment" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyCommentUrl" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyDiscard" />,
	    <see cref="P:Foundation.NSHttpCookie.KeyMaximumAge" />
	    and <see cref="P:Foundation.NSHttpCookie.KeyPort" />).

	    </para>
          <example>
            <code lang="C#"><![CDATA[
	      
var properties = NSDictionary.FromObjectsAndKeys (new object [] { "MyCookieValue" }, new object [] { NSHttpCookie.KeyValue });
var cookie = new NSHttpCookie (properties);
	      
	    ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesWithResponseHeaderFields">
      <MemberSignature Language="C#" Value="public static Foundation.NSHttpCookie[] CookiesWithResponseHeaderFields (Foundation.NSDictionary headerFields, Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSHttpCookie[] CookiesWithResponseHeaderFields(class Foundation.NSDictionary headerFields, class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.CookiesWithResponseHeaderFields(Foundation.NSDictionary,Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="static member CookiesWithResponseHeaderFields : Foundation.NSDictionary * Foundation.NSUrl -&gt; Foundation.NSHttpCookie[]" Usage="Foundation.NSHttpCookie.CookiesWithResponseHeaderFields (headerFields, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cookiesWithResponseHeaderFields:forURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSHttpCookie[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerFields" Type="Foundation.NSDictionary" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="headerFields">To be added.</param>
        <param name="url">To be added.</param>
        <summary>The cookies corresponding to the specified response header fields for the specified URL.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.Domain" />
      <MemberSignature Language="F#" Value="member this.Domain : string" Usage="Foundation.NSHttpCookie.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("domain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The domain of the cookie.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresDate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate ExpiresDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate ExpiresDate" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.ExpiresDate" />
      <MemberSignature Language="F#" Value="member this.ExpiresDate : Foundation.NSDate" Usage="Foundation.NSHttpCookie.ExpiresDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("expiresDate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The expiration date of this cookie.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHttpOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsHttpOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHttpOnly" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.IsHttpOnly" />
      <MemberSignature Language="F#" Value="member this.IsHttpOnly : bool" Usage="Foundation.NSHttpCookie.IsHttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isHTTPOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this cookie should only be sent to HTTP servers per RFC 2965.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public virtual bool IsSecure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecure" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.IsSecure" />
      <MemberSignature Language="F#" Value="member this.IsSecure : bool" Usage="Foundation.NSHttpCookie.IsSecure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isSecure")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this cookie should only be sent over secure channels.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSessionOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsSessionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSessionOnly" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.IsSessionOnly" />
      <MemberSignature Language="F#" Value="member this.IsSessionOnly : bool" Usage="Foundation.NSHttpCookie.IsSessionOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isSessionOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this cookie should be discarded at the end of the session, ignoring the expiration date.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyComment">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyComment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyComment" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyComment" />
      <MemberSignature Language="F#" Value="member this.KeyComment : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyComment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieComment", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyCommentUrl">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyCommentUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyCommentUrl" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyCommentUrl" />
      <MemberSignature Language="F#" Value="member this.KeyCommentUrl : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyCommentUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieCommentURL", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDiscard">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyDiscard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyDiscard" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyDiscard" />
      <MemberSignature Language="F#" Value="member this.KeyDiscard : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyDiscard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieDiscard", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDomain">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyDomain" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyDomain" />
      <MemberSignature Language="F#" Value="member this.KeyDomain : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieDomain", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExpires">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyExpires { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyExpires" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyExpires" />
      <MemberSignature Language="F#" Value="member this.KeyExpires : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyExpires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieExpires", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyMaximumAge">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyMaximumAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyMaximumAge" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyMaximumAge" />
      <MemberSignature Language="F#" Value="member this.KeyMaximumAge : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyMaximumAge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieMaximumAge", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyName">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyName" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyName" />
      <MemberSignature Language="F#" Value="member this.KeyName : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieName", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyOriginUrl">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyOriginUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyOriginUrl" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyOriginUrl" />
      <MemberSignature Language="F#" Value="member this.KeyOriginUrl : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyOriginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieOriginURL", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPath">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyPath" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyPath" />
      <MemberSignature Language="F#" Value="member this.KeyPath : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookiePath", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPort">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyPort" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyPort" />
      <MemberSignature Language="F#" Value="member this.KeyPort : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookiePort", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySecure">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeySecure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeySecure" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeySecure" />
      <MemberSignature Language="F#" Value="member this.KeySecure : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeySecure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieSecure", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyValue" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyValue" />
      <MemberSignature Language="F#" Value="member this.KeyValue : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieValue", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyVersion">
      <MemberSignature Language="C#" Value="public static Foundation.NSString KeyVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString KeyVersion" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.KeyVersion" />
      <MemberSignature Language="F#" Value="member this.KeyVersion : Foundation.NSString" Usage="Foundation.NSHttpCookie.KeyVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("NSHTTPCookieVersion", "Foundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Foundation.NSHttpCookie.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This cookie's name.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.Path" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="Foundation.NSHttpCookie.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("path")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This cookie's path.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PortList">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] PortList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] PortList" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.PortList" />
      <MemberSignature Language="F#" Value="member this.PortList : Foundation.NSNumber[]" Usage="Foundation.NSHttpCookie.PortList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("portList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This cookie's port list.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.Properties" />
      <MemberSignature Language="F#" Value="member this.Properties : Foundation.NSDictionary" Usage="Foundation.NSHttpCookie.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("properties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This cookie's properties.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHeaderFieldsWithCookies">
      <MemberSignature Language="C#" Value="public static Foundation.NSDictionary RequestHeaderFieldsWithCookies (Foundation.NSHttpCookie[] cookies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDictionary RequestHeaderFieldsWithCookies(class Foundation.NSHttpCookie[] cookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSHttpCookie.RequestHeaderFieldsWithCookies(Foundation.NSHttpCookie[])" />
      <MemberSignature Language="F#" Value="static member RequestHeaderFieldsWithCookies : Foundation.NSHttpCookie[] -&gt; Foundation.NSDictionary" Usage="Foundation.NSHttpCookie.RequestHeaderFieldsWithCookies cookies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("requestHeaderFieldsWithCookies:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookies" Type="Foundation.NSHttpCookie[]" />
      </Parameters>
      <Docs>
        <param name="cookies">To be added.</param>
        <summary>A dictionary of header fields corresponding to the specified array of cookies.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.Value" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="Foundation.NSHttpCookie.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("value")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The value of this cookie.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public virtual nuint Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Version" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSHttpCookie.Version" />
      <MemberSignature Language="F#" Value="member this.Version : nuint" Usage="Foundation.NSHttpCookie.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("version")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The version of this cookie.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
