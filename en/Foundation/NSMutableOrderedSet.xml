<Type Name="NSMutableOrderedSet" FullName="Foundation.NSMutableOrderedSet">
  <TypeSignature Language="C#" Value="public class NSMutableOrderedSet : Foundation.NSOrderedSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSMutableOrderedSet extends Foundation.NSOrderedSet" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSMutableOrderedSet" />
  <TypeSignature Language="F#" Value="type NSMutableOrderedSet = class&#xA;    inherit NSOrderedSet" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSOrderedSet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("NSMutableOrderedSet", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A mutable <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:NSFoundation.NSOrderedSet&amp;scope=Xamarin" title="T:NSFoundation.NSOrderedSet">T:NSFoundation.NSOrderedSet</a></format>.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSMutableOrderedSet_Class/index.html">Apple documentation for <c>NSMutableOrderedSet</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : Foundation.NSCoder -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet (Foundation.NSObject start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObject start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : Foundation.NSObject -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet start" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithObject:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet (params Foundation.NSObject[] objs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObject[] objs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(Foundation.NSObject[])" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : Foundation.NSObject[] -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet objs" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objs" Type="Foundation.NSObject[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="objs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSMutableOrderedSet (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : Foundation.NSObjectFlag -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet (Foundation.NSOrderedSet source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSOrderedSet source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(Foundation.NSOrderedSet)" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : Foundation.NSOrderedSet -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithOrderedSet:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="Foundation.NSOrderedSet" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet (Foundation.NSSet source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSSet source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(Foundation.NSSet)" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : Foundation.NSSet -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithSet:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSMutableOrderedSet (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : nativeint -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet (nint capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.nint capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(System.nint)" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : nint -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCapacity:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet (params object[] objs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object[] objs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(System.Object[])" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : obj[] -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet objs" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="objs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSMutableOrderedSet (params string[] strings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] strings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.#ctor(System.String[])" />
      <MemberSignature Language="F#" Value="new Foundation.NSMutableOrderedSet : string[] -&gt; Foundation.NSMutableOrderedSet" Usage="new Foundation.NSMutableOrderedSet strings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strings" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="strings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (Foundation.NSObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class Foundation.NSObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.Add(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Add : Foundation.NSObject -&gt; unit&#xA;override this.Add : Foundation.NSObject -&gt; unit" Usage="nSMutableOrderedSet.Add obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addObject:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Adds the specified object to this set. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddObjects">
      <MemberSignature Language="C#" Value="public virtual void AddObjects (Foundation.NSObject[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddObjects(class Foundation.NSObject[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.AddObjects(Foundation.NSObject[])" />
      <MemberSignature Language="F#" Value="abstract member AddObjects : Foundation.NSObject[] -&gt; unit&#xA;override this.AddObjects : Foundation.NSObject[] -&gt; unit" Usage="nSMutableOrderedSet.AddObjects source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addObjectsFromArray:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Foundation.NSObject[]" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>Adds the specified objects to this set.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSMutableOrderedSet.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="Foundation.NSMutableOrderedSet.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExchangeObject">
      <MemberSignature Language="C#" Value="public virtual void ExchangeObject (nint first, nint second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExchangeObject(valuetype System.nint first, valuetype System.nint second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.ExchangeObject(System.nint,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member ExchangeObject : nint * nint -&gt; unit&#xA;override this.ExchangeObject : nint * nint -&gt; unit" Usage="nSMutableOrderedSet.ExchangeObject (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("exchangeObjectAtIndex:withObjectAtIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.nint" />
        <Parameter Name="second" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>Exchanges the objects at the specified indices.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (Foundation.NSObject obj, nint atIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class Foundation.NSObject obj, valuetype System.nint atIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.Insert(Foundation.NSObject,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member Insert : Foundation.NSObject * nint -&gt; unit&#xA;override this.Insert : Foundation.NSObject * nint -&gt; unit" Usage="nSMutableOrderedSet.Insert (obj, atIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("insertObject:atIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Foundation.NSObject" />
        <Parameter Name="atIndex" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="atIndex">To be added.</param>
        <summary>Inserts the specified object at the specified index.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertObjects">
      <MemberSignature Language="C#" Value="public virtual void InsertObjects (Foundation.NSObject[] objects, Foundation.NSIndexSet atIndexes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertObjects(class Foundation.NSObject[] objects, class Foundation.NSIndexSet atIndexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.InsertObjects(Foundation.NSObject[],Foundation.NSIndexSet)" />
      <MemberSignature Language="F#" Value="abstract member InsertObjects : Foundation.NSObject[] * Foundation.NSIndexSet -&gt; unit&#xA;override this.InsertObjects : Foundation.NSObject[] * Foundation.NSIndexSet -&gt; unit" Usage="nSMutableOrderedSet.InsertObjects (objects, atIndexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("insertObjects:atIndexes:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="Foundation.NSObject[]" />
        <Parameter Name="atIndexes" Type="Foundation.NSIndexSet" />
      </Parameters>
      <Docs>
        <param name="objects">To be added.</param>
        <param name="atIndexes">To be added.</param>
        <summary>Inserts the specified objects at the corresponding indices.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public virtual void Intersect (Foundation.NSOrderedSet intersectWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Intersect(class Foundation.NSOrderedSet intersectWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.Intersect(Foundation.NSOrderedSet)" />
      <MemberSignature Language="F#" Value="abstract member Intersect : Foundation.NSOrderedSet -&gt; unit&#xA;override this.Intersect : Foundation.NSOrderedSet -&gt; unit" Usage="nSMutableOrderedSet.Intersect intersectWith" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("intersectOrderedSet:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intersectWith" Type="Foundation.NSOrderedSet" />
      </Parameters>
      <Docs>
        <param name="intersectWith">To be added.</param>
        <summary>Removes from this set all objects that are not present in the other set.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public virtual void Intersect (Foundation.NSSet intersectWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Intersect(class Foundation.NSSet intersectWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.Intersect(Foundation.NSSet)" />
      <MemberSignature Language="F#" Value="abstract member Intersect : Foundation.NSSet -&gt; unit&#xA;override this.Intersect : Foundation.NSSet -&gt; unit" Usage="nSMutableOrderedSet.Intersect intersectWith" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("intersectSet:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intersectWith" Type="Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="intersectWith">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Foundation.NSObject this[nint idx] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject Item(valuetype System.nint)" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSMutableOrderedSet.Item(System.nint)" />
      <MemberSignature Language="F#" Value="member this.Item(nint) : Foundation.NSObject with get, set" Usage="Foundation.NSMutableOrderedSet.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idx" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="idx">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveObjects">
      <MemberSignature Language="C#" Value="public virtual void MoveObjects (Foundation.NSIndexSet indexSet, nint destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveObjects(class Foundation.NSIndexSet indexSet, valuetype System.nint destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.MoveObjects(Foundation.NSIndexSet,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member MoveObjects : Foundation.NSIndexSet * nint -&gt; unit&#xA;override this.MoveObjects : Foundation.NSIndexSet * nint -&gt; unit" Usage="nSMutableOrderedSet.MoveObjects (indexSet, destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("moveObjectsAtIndexes:toIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSet" Type="Foundation.NSIndexSet" />
        <Parameter Name="destination" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="indexSet">To be added.</param>
        <param name="destination">To be added.</param>
        <summary>Moves the objects currently at the specified indices so that they start at the specified destination index.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.Remove(System.nint)" />
      <MemberSignature Language="F#" Value="abstract member Remove : nint -&gt; unit&#xA;override this.Remove : nint -&gt; unit" Usage="nSMutableOrderedSet.Remove index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeObjectAtIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Removes the object at the specified index.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllObjects">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.RemoveAllObjects" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllObjects : unit -&gt; unit&#xA;override this.RemoveAllObjects : unit -&gt; unit" Usage="nSMutableOrderedSet.RemoveAllObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeAllObjects")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all objects from this set</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveObject">
      <MemberSignature Language="C#" Value="public virtual void RemoveObject (Foundation.NSObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveObject(class Foundation.NSObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.RemoveObject(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member RemoveObject : Foundation.NSObject -&gt; unit&#xA;override this.RemoveObject : Foundation.NSObject -&gt; unit" Usage="nSMutableOrderedSet.RemoveObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeObject:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Removes the specified object from this set.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveObjects">
      <MemberSignature Language="C#" Value="public virtual void RemoveObjects (Foundation.NSIndexSet indexSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveObjects(class Foundation.NSIndexSet indexSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.RemoveObjects(Foundation.NSIndexSet)" />
      <MemberSignature Language="F#" Value="abstract member RemoveObjects : Foundation.NSIndexSet -&gt; unit&#xA;override this.RemoveObjects : Foundation.NSIndexSet -&gt; unit" Usage="nSMutableOrderedSet.RemoveObjects indexSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeObjectsAtIndexes:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSet" Type="Foundation.NSIndexSet" />
      </Parameters>
      <Docs>
        <param name="indexSet">To be added.</param>
        <summary>Removes the objects at the specified indices from this set.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveObjects">
      <MemberSignature Language="C#" Value="public virtual void RemoveObjects (Foundation.NSObject[] objects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveObjects(class Foundation.NSObject[] objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.RemoveObjects(Foundation.NSObject[])" />
      <MemberSignature Language="F#" Value="abstract member RemoveObjects : Foundation.NSObject[] -&gt; unit&#xA;override this.RemoveObjects : Foundation.NSObject[] -&gt; unit" Usage="nSMutableOrderedSet.RemoveObjects objects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeObjectsInArray:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="Foundation.NSObject[]" />
      </Parameters>
      <Docs>
        <param name="objects">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveObjects">
      <MemberSignature Language="C#" Value="public virtual void RemoveObjects (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveObjects(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.RemoveObjects(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member RemoveObjects : Foundation.NSRange -&gt; unit&#xA;override this.RemoveObjects : Foundation.NSRange -&gt; unit" Usage="nSMutableOrderedSet.RemoveObjects range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeObjectsInRange:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual void Replace (nint objectAtIndex, Foundation.NSObject newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Replace(valuetype System.nint objectAtIndex, class Foundation.NSObject newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.Replace(System.nint,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Replace : nint * Foundation.NSObject -&gt; unit&#xA;override this.Replace : nint * Foundation.NSObject -&gt; unit" Usage="nSMutableOrderedSet.Replace (objectAtIndex, newObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("replaceObjectAtIndex:withObject:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectAtIndex" Type="System.nint" />
        <Parameter Name="newObject" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="objectAtIndex">To be added.</param>
        <param name="newObject">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceObjects">
      <MemberSignature Language="C#" Value="public virtual void ReplaceObjects (Foundation.NSIndexSet indexSet, Foundation.NSObject[] replacementObjects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceObjects(class Foundation.NSIndexSet indexSet, class Foundation.NSObject[] replacementObjects) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.ReplaceObjects(Foundation.NSIndexSet,Foundation.NSObject[])" />
      <MemberSignature Language="F#" Value="abstract member ReplaceObjects : Foundation.NSIndexSet * Foundation.NSObject[] -&gt; unit&#xA;override this.ReplaceObjects : Foundation.NSIndexSet * Foundation.NSObject[] -&gt; unit" Usage="nSMutableOrderedSet.ReplaceObjects (indexSet, replacementObjects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("replaceObjectsAtIndexes:withObjects:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSet" Type="Foundation.NSIndexSet" />
        <Parameter Name="replacementObjects" Type="Foundation.NSObject[]" />
      </Parameters>
      <Docs>
        <param name="indexSet">To be added.</param>
        <param name="replacementObjects">To be added.</param>
        <summary>Replaces the objects at the specified indices with the specified replacements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public virtual void SetObject (Foundation.NSObject obj, nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetObject(class Foundation.NSObject obj, valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.SetObject(Foundation.NSObject,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member SetObject : Foundation.NSObject * nint -&gt; unit&#xA;override this.SetObject : Foundation.NSObject * nint -&gt; unit" Usage="nSMutableOrderedSet.SetObject (obj, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setObject:atIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Foundation.NSObject" />
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="index">To be added.</param>
        <summary>Appends or replaces the object at the specified index.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (Foundation.NSComparator comparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class Foundation.NSComparator comparator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.Sort(Foundation.NSComparator)" />
      <MemberSignature Language="F#" Value="abstract member Sort : Foundation.NSComparator -&gt; unit&#xA;override this.Sort : Foundation.NSComparator -&gt; unit" Usage="nSMutableOrderedSet.Sort comparator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("sortUsingComparator:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparator" Type="Foundation.NSComparator">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSComparator))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="comparator">To be added.</param>
        <summary>Reorders the set according to the specified comparator.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (Foundation.NSSortOptions sortOptions, Foundation.NSComparator comparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(valuetype Foundation.NSSortOptions sortOptions, class Foundation.NSComparator comparator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.Sort(Foundation.NSSortOptions,Foundation.NSComparator)" />
      <MemberSignature Language="F#" Value="abstract member Sort : Foundation.NSSortOptions * Foundation.NSComparator -&gt; unit&#xA;override this.Sort : Foundation.NSSortOptions * Foundation.NSComparator -&gt; unit" Usage="nSMutableOrderedSet.Sort (sortOptions, comparator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("sortWithOptions:usingComparator:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortOptions" Type="Foundation.NSSortOptions" />
        <Parameter Name="comparator" Type="Foundation.NSComparator">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSComparator))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sortOptions">To be added.</param>
        <param name="comparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortRange">
      <MemberSignature Language="C#" Value="public virtual void SortRange (Foundation.NSRange range, Foundation.NSSortOptions sortOptions, Foundation.NSComparator comparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortRange(valuetype Foundation.NSRange range, valuetype Foundation.NSSortOptions sortOptions, class Foundation.NSComparator comparator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSMutableOrderedSet.SortRange(Foundation.NSRange,Foundation.NSSortOptions,Foundation.NSComparator)" />
      <MemberSignature Language="F#" Value="abstract member SortRange : Foundation.NSRange * Foundation.NSSortOptions * Foundation.NSComparator -&gt; unit&#xA;override this.SortRange : Foundation.NSRange * Foundation.NSSortOptions * Foundation.NSComparator -&gt; unit" Usage="nSMutableOrderedSet.SortRange (range, sortOptions, comparator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("sortRange:options:usingComparator:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="sortOptions" Type="Foundation.NSSortOptions" />
        <Parameter Name="comparator" Type="Foundation.NSComparator">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSComparator))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="sortOptions">To be added.</param>
        <param name="comparator">To be added.</param>
        <summary>Reorders the objects in the specified range according to the specified comparator.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
