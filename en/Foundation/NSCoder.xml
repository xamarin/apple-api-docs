<Type Name="NSCoder" FullName="Foundation.NSCoder">
  <TypeSignature Language="C#" Value="public class NSCoder : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSCoder extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSCoder" />
  <TypeSignature Language="F#" Value="type NSCoder = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("NSCoder", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serialization framework for NSObjects.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSCoder_Class/index.html">Apple documentation for <c>NSCoder</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSCoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSCoder (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Foundation.NSCoder : Foundation.NSObjectFlag -&gt; Foundation.NSCoder" Usage="new Foundation.NSCoder t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSCoder (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Foundation.NSCoder : nativeint -&gt; Foundation.NSCoder" Usage="new Foundation.NSCoder handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedClasses">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSSet AllowedClasses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSSet AllowedClasses" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSCoder.AllowedClasses" />
      <MemberSignature Language="F#" Value="member this.AllowedClasses : Foundation.NSSet" Usage="Foundation.NSCoder.AllowedClasses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("allowedClasses")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current set of coded classes that allow secure coding.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSCoder.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="Foundation.NSCoder.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.ContainsKey(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="nSCoder.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("containsValueForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Key to lookup.</param>
        <summary>Determines whether an encoded value is available for the specified key.</summary>
        <returns>True if the key is available to be decoded, false otherwise.</returns>
        <remarks>
	  Subclasses of NSCoder must implement this method if they support keyed coding.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBool">
      <MemberSignature Language="C#" Value="public virtual bool DecodeBool (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DecodeBool(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeBool(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecodeBool : string -&gt; bool&#xA;override this.DecodeBool : string -&gt; bool" Usage="nSCoder.DecodeBool key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeBoolForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <summary>Decodes the value at the specified key as a bool.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBytes">
      <MemberSignature Language="C#" Value="public byte[] DecodeBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecodeBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeBytes" />
      <MemberSignature Language="F#" Value="member this.DecodeBytes : unit -&gt; byte[]" Usage="nSCoder.DecodeBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Decodes the next item as an array of bytes.</summary>
        <returns>The array of bytes decoded from the stream.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBytes">
      <MemberSignature Language="C#" Value="public virtual IntPtr DecodeBytes (out nuint length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int DecodeBytes([out] valuetype System.nuint&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeBytes(System.nuint@)" />
      <MemberSignature Language="F#" Value="abstract member DecodeBytes :  -&gt; nativeint&#xA;override this.DecodeBytes :  -&gt; nativeint" Usage="nSCoder.DecodeBytes length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeBytesWithReturnedLength:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.nuint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length">Number of bytes in the returned block.</param>
        <summary>Low-level: decodes the next item into a memory block,
	and returns a pointer to it.</summary>
        <returns>Pointer to the block of memory that contains at least
	the number of bytes set on the lenght parameter.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBytes">
      <MemberSignature Language="C#" Value="public byte[] DecodeBytes (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecodeBytes(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeBytes(System.String)" />
      <MemberSignature Language="F#" Value="member this.DecodeBytes : string -&gt; byte[]" Usage="nSCoder.DecodeBytes key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <summary>Decodes the requested key as an array of bytes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBytes">
      <MemberSignature Language="C#" Value="public virtual IntPtr DecodeBytes (string key, out nuint length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int DecodeBytes(string key, [out] valuetype System.nuint&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeBytes(System.String,System.nuint@)" />
      <MemberSignature Language="F#" Value="abstract member DecodeBytes : string *  -&gt; nativeint&#xA;override this.DecodeBytes : string *  -&gt; nativeint" Usage="nSCoder.DecodeBytes (key, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeBytesForKey:returnedLength:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="length" Type="System.nuint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <param name="length">Number of bytes in the returned block.</param>
        <summary>Low-level: decodes the item with the associated key into a memory block,
	and returns a pointer to it.</summary>
        <returns>Pointer to the block of memory that contains at least
	the number of bytes set on the lenght parameter.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeDouble">
      <MemberSignature Language="C#" Value="public virtual double DecodeDouble (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DecodeDouble(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeDouble(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecodeDouble : string -&gt; double&#xA;override this.DecodeDouble : string -&gt; double" Usage="nSCoder.DecodeDouble key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeDoubleForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <summary>Decodes the value at the specified key as a double.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFloat">
      <MemberSignature Language="C#" Value="public virtual float DecodeFloat (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 DecodeFloat(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeFloat(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecodeFloat : string -&gt; single&#xA;override this.DecodeFloat : string -&gt; single" Usage="nSCoder.DecodeFloat key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeFloatForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <summary>Decodes the value at the specified key as a float.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeInt">
      <MemberSignature Language="C#" Value="public virtual int DecodeInt (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DecodeInt(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeInt(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecodeInt : string -&gt; int&#xA;override this.DecodeInt : string -&gt; int" Usage="nSCoder.DecodeInt key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeInt32ForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <summary>Decodes the value at the specified key as an int.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLong">
      <MemberSignature Language="C#" Value="public virtual long DecodeLong (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 DecodeLong(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeLong(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecodeLong : string -&gt; int64&#xA;override this.DecodeLong : string -&gt; int64" Usage="nSCoder.DecodeLong key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeInt64ForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <summary>Decodes the value at the specified key as a long.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeNInt">
      <MemberSignature Language="C#" Value="public virtual nint DecodeNInt (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nint DecodeNInt(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeNInt(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecodeNInt : string -&gt; nint&#xA;override this.DecodeNInt : string -&gt; nint" Usage="nSCoder.DecodeNInt key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeIntegerForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeObject">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject DecodeObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject DecodeObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeObject" />
      <MemberSignature Language="F#" Value="abstract member DecodeObject : unit -&gt; Foundation.NSObject&#xA;override this.DecodeObject : unit -&gt; Foundation.NSObject" Usage="nSCoder.DecodeObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeObject")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Decodes an object that has been encoded with any of the Encode* methods.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeObject">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject DecodeObject (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject DecodeObject(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeObject(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DecodeObject : string -&gt; Foundation.NSObject&#xA;override this.DecodeObject : string -&gt; Foundation.NSObject" Usage="nSCoder.DecodeObject key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeObjectForKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the item to decode.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeTopLevelObject">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject DecodeTopLevelObject (out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject DecodeTopLevelObject([out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeTopLevelObject(Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member DecodeTopLevelObject :  -&gt; Foundation.NSObject&#xA;override this.DecodeTopLevelObject :  -&gt; Foundation.NSObject" Usage="nSCoder.DecodeTopLevelObject error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeTopLevelObjectAndReturnError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeTopLevelObject">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject DecodeTopLevelObject (string key, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject DecodeTopLevelObject(string key, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeTopLevelObject(System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member DecodeTopLevelObject : string *  -&gt; Foundation.NSObject&#xA;override this.DecodeTopLevelObject : string *  -&gt; Foundation.NSObject" Usage="nSCoder.DecodeTopLevelObject (key, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeTopLevelObjectForKey:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeTopLevelObject">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject DecodeTopLevelObject (Foundation.NSSet&lt;ObjCRuntime.Class&gt; setOfClasses, string key, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject DecodeTopLevelObject(class Foundation.NSSet`1&lt;class ObjCRuntime.Class&gt; setOfClasses, string key, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeTopLevelObject(Foundation.NSSet{ObjCRuntime.Class},System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member DecodeTopLevelObject : Foundation.NSSet&lt;ObjCRuntime.Class&gt; * string *  -&gt; Foundation.NSObject&#xA;override this.DecodeTopLevelObject : Foundation.NSSet&lt;ObjCRuntime.Class&gt; * string *  -&gt; Foundation.NSObject" Usage="nSCoder.DecodeTopLevelObject (setOfClasses, key, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeTopLevelObjectOfClasses:forKey:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setOfClasses" Type="Foundation.NSSet&lt;ObjCRuntime.Class&gt;" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="setOfClasses">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="key">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeTopLevelObject">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject DecodeTopLevelObject (ObjCRuntime.Class klass, string key, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject DecodeTopLevelObject(class ObjCRuntime.Class klass, string key, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeTopLevelObject(ObjCRuntime.Class,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member DecodeTopLevelObject : ObjCRuntime.Class * string *  -&gt; Foundation.NSObject&#xA;override this.DecodeTopLevelObject : ObjCRuntime.Class * string *  -&gt; Foundation.NSObject" Usage="nSCoder.DecodeTopLevelObject (klass, key, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("decodeTopLevelObjectOfClass:forKey:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="klass" Type="ObjCRuntime.Class" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="klass">To be added.</param>
        <param name="key">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeTopLevelObject">
      <MemberSignature Language="C#" Value="public Foundation.NSObject DecodeTopLevelObject (Type type, string key, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSObject DecodeTopLevelObject(class System.Type type, string key, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeTopLevelObject(System.Type,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.DecodeTopLevelObject : Type * string *  -&gt; Foundation.NSObject" Usage="nSCoder.DecodeTopLevelObject (type, key, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeTopLevelObject">
      <MemberSignature Language="C#" Value="public Foundation.NSObject DecodeTopLevelObject (Type[] types, string key, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSObject DecodeTopLevelObject(class System.Type[] types, string key, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.DecodeTopLevelObject(System.Type[],System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="member this.DecodeTopLevelObject : Type[] * string *  -&gt; Foundation.NSObject" Usage="nSCoder.DecodeTopLevelObject (types, key, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="types">To be added.</param>
        <param name="key">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodingFailurePolicy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDecodingFailurePolicy DecodingFailurePolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSDecodingFailurePolicy DecodingFailurePolicy" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSCoder.DecodingFailurePolicy" />
      <MemberSignature Language="F#" Value="member this.DecodingFailurePolicy : Foundation.NSDecodingFailurePolicy" Usage="Foundation.NSCoder.DecodingFailurePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("decodingFailurePolicy")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDecodingFailurePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Foundation.NSObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Foundation.NSObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Foundation.NSObject -&gt; unit&#xA;override this.Encode : Foundation.NSObject -&gt; unit" Usage="nSCoder.Encode obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeObject:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="obj">
          <para>Object to encode.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Encodes the specified object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (Foundation.NSObject val, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class Foundation.NSObject val, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(Foundation.NSObject,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Encode : Foundation.NSObject * string -&gt; unit&#xA;override this.Encode : Foundation.NSObject * string -&gt; unit" Usage="nSCoder.Encode (val, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeObject:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Foundation.NSObject" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">
          <para>Object to encode.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (bool val, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(bool val, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(System.Boolean,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Encode : bool * string -&gt; unit&#xA;override this.Encode : bool * string -&gt; unit" Usage="nSCoder.Encode (val, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeBool:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Boolean" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">value to enecode.</param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>Encodes the value using the associated key.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public void Encode (byte[] buffer, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encode(unsigned int8[] buffer, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(System.Byte[],System.String)" />
      <MemberSignature Language="F#" Value="member this.Encode : byte[] * string -&gt; unit" Usage="nSCoder.Encode (buffer, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer">Byte array to encode.</param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>Encodes the byte array using the specified associated key.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (double val, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(float64 val, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(System.Double,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Encode : double * string -&gt; unit&#xA;override this.Encode : double * string -&gt; unit" Usage="nSCoder.Encode (val, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeDouble:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Double" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">Double value to enecode.</param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>Encodes the double value using the specified associated key.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (int val, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(int32 val, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Encode : int * string -&gt; unit&#xA;override this.Encode : int * string -&gt; unit" Usage="nSCoder.Encode (val, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeInt32:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">Integer value to encode.</param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>Encodes the integer value using the specified associated key.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (long val, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(int64 val, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(System.Int64,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Encode : int64 * string -&gt; unit&#xA;override this.Encode : int64 * string -&gt; unit" Usage="nSCoder.Encode (val, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeInt64:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Int64" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">Long value to encode.</param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>Encodes the long value using the specified associated key.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (nint val, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(valuetype System.nint val, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(System.nint,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Encode : nint * string -&gt; unit&#xA;override this.Encode : nint * string -&gt; unit" Usage="nSCoder.Encode (val, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeInteger:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.nint" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">Native integer value to encode.</param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>Encodes the platform-specific native integer (32 or 64 bits) using the specified associated key.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (float val, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(float32 val, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(System.Single,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Encode : single * string -&gt; unit&#xA;override this.Encode : single * string -&gt; unit" Usage="nSCoder.Encode (val, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeFloat:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Single" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">Floating point value to encode.</param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>Encodes the floating point value using the specified associated key.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public void Encode (byte[] buffer, int offset, int count, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encode(unsigned int8[] buffer, int32 offset, int32 count, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Encode(System.Byte[],System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="member this.Encode : byte[] * int * int * string -&gt; unit" Usage="nSCoder.Encode (buffer, offset, count, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer">Byte array to encode.</param>
        <param name="offset">Starting point in the buffer to encode.</param>
        <param name="count">Number of bytes starting at the specified offset to encode.</param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>Encodes a segment of the buffer using the specified associated key.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeBlock">
      <MemberSignature Language="C#" Value="public virtual void EncodeBlock (IntPtr bytes, nint length, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeBlock(native int bytes, valuetype System.nint length, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.EncodeBlock(System.IntPtr,System.nint,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EncodeBlock : nativeint * nint * string -&gt; unit&#xA;override this.EncodeBlock : nativeint * nint * string -&gt; unit" Usage="nSCoder.EncodeBlock (bytes, length, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeBytes:length:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.nint" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="length">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeConditionalObject">
      <MemberSignature Language="C#" Value="public virtual void EncodeConditionalObject (Foundation.NSObject val, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeConditionalObject(class Foundation.NSObject val, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.EncodeConditionalObject(Foundation.NSObject,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EncodeConditionalObject : Foundation.NSObject * string -&gt; unit&#xA;override this.EncodeConditionalObject : Foundation.NSObject * string -&gt; unit" Usage="nSCoder.EncodeConditionalObject (val, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeConditionalObject:forKey:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Foundation.NSObject" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">
          <para>Object to encode.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="key">Key to associate with the object being encoded.</param>
        <summary>When overridden, allows conditional encoding of an object, preserving common references.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeRoot">
      <MemberSignature Language="C#" Value="public virtual void EncodeRoot (Foundation.NSObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeRoot(class Foundation.NSObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.EncodeRoot(Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member EncodeRoot : Foundation.NSObject -&gt; unit&#xA;override this.EncodeRoot : Foundation.NSObject -&gt; unit" Usage="nSCoder.EncodeRoot obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeRootObject:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="obj">
          <para>The object to encode</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>When overridden, allows a graph of objects to be encoded, starting with the specified root obj.</summary>
        <remarks>
	  Allows subclasses to provide a custom mechanism to encode an object graph.   The NSCoder implementation merely calls Encode on the object.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSError Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSError Error" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSCoder.Error" />
      <MemberSignature Language="F#" Value="member this.Error : Foundation.NSError" Usage="Foundation.NSCoder.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("error", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.Fail(Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member Fail : Foundation.NSError -&gt; unit&#xA;override this.Fail : Foundation.NSError -&gt; unit" Usage="nSCoder.Fail error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("failWithError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSecureCoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSecureCoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequiresSecureCoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.RequiresSecureCoding" />
      <MemberSignature Language="F#" Value="abstract member RequiresSecureCoding : unit -&gt; bool&#xA;override this.RequiresSecureCoding : unit -&gt; bool" Usage="nSCoder.RequiresSecureCoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("requiresSecureCoding")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether the coder requires secure coding.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemVersion">
      <MemberSignature Language="C#" Value="public virtual uint SystemVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 SystemVersion" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSCoder.SystemVersion" />
      <MemberSignature Language="F#" Value="member this.SystemVersion : uint32" Usage="Foundation.NSCoder.SystemVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("systemVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public bool TryDecode (string key, out Foundation.NSObject result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDecode(string key, [out] class Foundation.NSObject&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.TryDecode(System.String,Foundation.NSObject@)" />
      <MemberSignature Language="F#" Value="member this.TryDecode : string *  -&gt; bool" Usage="nSCoder.TryDecode (key, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="Foundation.NSObject" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public bool TryDecode (string key, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDecode(string key, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.TryDecode(System.String,System.Boolean@)" />
      <MemberSignature Language="F#" Value="member this.TryDecode : string *  -&gt; bool" Usage="nSCoder.TryDecode (key, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public bool TryDecode (string key, out byte[] result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDecode(string key, [out] unsigned int8[]&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.TryDecode(System.String,System.Byte[]@)" />
      <MemberSignature Language="F#" Value="member this.TryDecode : string *  -&gt; bool" Usage="nSCoder.TryDecode (key, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public bool TryDecode (string key, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDecode(string key, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.TryDecode(System.String,System.Double@)" />
      <MemberSignature Language="F#" Value="member this.TryDecode : string *  -&gt; bool" Usage="nSCoder.TryDecode (key, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public bool TryDecode (string key, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDecode(string key, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.TryDecode(System.String,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.TryDecode : string *  -&gt; bool" Usage="nSCoder.TryDecode (key, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public bool TryDecode (string key, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDecode(string key, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.TryDecode(System.String,System.Int64@)" />
      <MemberSignature Language="F#" Value="member this.TryDecode : string *  -&gt; bool" Usage="nSCoder.TryDecode (key, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public bool TryDecode (string key, out nint result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDecode(string key, [out] valuetype System.nint&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.TryDecode(System.String,System.nint@)" />
      <MemberSignature Language="F#" Value="member this.TryDecode : string *  -&gt; bool" Usage="nSCoder.TryDecode (key, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.nint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public bool TryDecode (string key, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDecode(string key, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSCoder.TryDecode(System.String,System.Single@)" />
      <MemberSignature Language="F#" Value="member this.TryDecode : string *  -&gt; bool" Usage="nSCoder.TryDecode (key, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="result" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
