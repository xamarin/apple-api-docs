<Type Name="NSUrlSessionDelegate_Extensions" FullName="Foundation.NSUrlSessionDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class NSUrlSessionDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NSUrlSessionDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSUrlSessionDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type NSUrlSessionDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:Foundation.INSUrlSessionDelegate" /> interface to support all the methods from the <see cref="T:Foundation.NSUrlSessionDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:Foundation.INSUrlSessionDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:Foundation.NSUrlSessionDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidBecomeInvalid">
      <MemberSignature Language="C#" Value="public static void DidBecomeInvalid (this Foundation.INSUrlSessionDelegate This, Foundation.NSUrlSession session, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeInvalid(class Foundation.INSUrlSessionDelegate This, class Foundation.NSUrlSession session, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionDelegate_Extensions.DidBecomeInvalid(Foundation.INSUrlSessionDelegate,Foundation.NSUrlSession,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="static member DidBecomeInvalid : Foundation.INSUrlSessionDelegate * Foundation.NSUrlSession * Foundation.NSError -&gt; unit" Usage="Foundation.NSUrlSessionDelegate_Extensions.DidBecomeInvalid (This, session, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishEventsForBackgroundSession">
      <MemberSignature Language="C#" Value="public static void DidFinishEventsForBackgroundSession (this Foundation.INSUrlSessionDelegate This, Foundation.NSUrlSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishEventsForBackgroundSession(class Foundation.INSUrlSessionDelegate This, class Foundation.NSUrlSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionDelegate_Extensions.DidFinishEventsForBackgroundSession(Foundation.INSUrlSessionDelegate,Foundation.NSUrlSession)" />
      <MemberSignature Language="F#" Value="static member DidFinishEventsForBackgroundSession : Foundation.INSUrlSessionDelegate * Foundation.NSUrlSession -&gt; unit" Usage="Foundation.NSUrlSessionDelegate_Extensions.DidFinishEventsForBackgroundSession (This, session)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReceiveChallenge">
      <MemberSignature Language="C#" Value="public static void DidReceiveChallenge (this Foundation.INSUrlSessionDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlAuthenticationChallenge challenge, Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveChallenge(class Foundation.INSUrlSessionDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlAuthenticationChallenge challenge, class System.Action`2&lt;valuetype Foundation.NSUrlSessionAuthChallengeDisposition, class Foundation.NSUrlCredential&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionDelegate_Extensions.DidReceiveChallenge(Foundation.INSUrlSessionDelegate,Foundation.NSUrlSession,Foundation.NSUrlAuthenticationChallenge,System.Action{Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential})" />
      <MemberSignature Language="F#" Value="static member DidReceiveChallenge : Foundation.INSUrlSessionDelegate * Foundation.NSUrlSession * Foundation.NSUrlAuthenticationChallenge * Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition, Foundation.NSUrlCredential&gt; -&gt; unit" Usage="Foundation.NSUrlSessionDelegate_Extensions.DidReceiveChallenge (This, session, challenge, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="challenge" Type="Foundation.NSUrlAuthenticationChallenge" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V33))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="challenge">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
