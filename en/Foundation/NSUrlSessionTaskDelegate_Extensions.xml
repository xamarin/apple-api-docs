<Type Name="NSUrlSessionTaskDelegate_Extensions" FullName="Foundation.NSUrlSessionTaskDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class NSUrlSessionTaskDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NSUrlSessionTaskDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSUrlSessionTaskDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type NSUrlSessionTaskDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:Foundation.INSUrlSessionTaskDelegate" /> interface to support all the methods from the <see cref="T:Foundation.NSUrlSessionTaskDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:Foundation.INSUrlSessionTaskDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:Foundation.NSUrlSessionTaskDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidCompleteWithError">
      <MemberSignature Language="C#" Value="public static void DidCompleteWithError (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteWithError(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionTaskDelegate_Extensions.DidCompleteWithError(Foundation.INSUrlSessionTaskDelegate,Foundation.NSUrlSession,Foundation.NSUrlSessionTask,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="static member DidCompleteWithError : Foundation.INSUrlSessionTaskDelegate * Foundation.NSUrlSession * Foundation.NSUrlSessionTask * Foundation.NSError -&gt; unit" Usage="Foundation.NSUrlSessionTaskDelegate_Extensions.DidCompleteWithError (This, session, task, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionTaskDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="task" Type="Foundation.NSUrlSessionTask" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="task">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishCollectingMetrics">
      <MemberSignature Language="C#" Value="public static void DidFinishCollectingMetrics (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSUrlSessionTaskMetrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishCollectingMetrics(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSUrlSessionTaskMetrics metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionTaskDelegate_Extensions.DidFinishCollectingMetrics(Foundation.INSUrlSessionTaskDelegate,Foundation.NSUrlSession,Foundation.NSUrlSessionTask,Foundation.NSUrlSessionTaskMetrics)" />
      <MemberSignature Language="F#" Value="static member DidFinishCollectingMetrics : Foundation.INSUrlSessionTaskDelegate * Foundation.NSUrlSession * Foundation.NSUrlSessionTask * Foundation.NSUrlSessionTaskMetrics -&gt; unit" Usage="Foundation.NSUrlSessionTaskDelegate_Extensions.DidFinishCollectingMetrics (This, session, task, metrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionTaskDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="task" Type="Foundation.NSUrlSessionTask" />
        <Parameter Name="metrics" Type="Foundation.NSUrlSessionTaskMetrics" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="task">To be added.</param>
        <param name="metrics">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReceiveChallenge">
      <MemberSignature Language="C#" Value="public static void DidReceiveChallenge (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSUrlAuthenticationChallenge challenge, Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveChallenge(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSUrlAuthenticationChallenge challenge, class System.Action`2&lt;valuetype Foundation.NSUrlSessionAuthChallengeDisposition, class Foundation.NSUrlCredential&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionTaskDelegate_Extensions.DidReceiveChallenge(Foundation.INSUrlSessionTaskDelegate,Foundation.NSUrlSession,Foundation.NSUrlSessionTask,Foundation.NSUrlAuthenticationChallenge,System.Action{Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential})" />
      <MemberSignature Language="F#" Value="static member DidReceiveChallenge : Foundation.INSUrlSessionTaskDelegate * Foundation.NSUrlSession * Foundation.NSUrlSessionTask * Foundation.NSUrlAuthenticationChallenge * Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition, Foundation.NSUrlCredential&gt; -&gt; unit" Usage="Foundation.NSUrlSessionTaskDelegate_Extensions.DidReceiveChallenge (This, session, task, challenge, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionTaskDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="task" Type="Foundation.NSUrlSessionTask" />
        <Parameter Name="challenge" Type="Foundation.NSUrlAuthenticationChallenge" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V33))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="task">To be added.</param>
        <param name="challenge">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSendBodyData">
      <MemberSignature Language="C#" Value="public static void DidSendBodyData (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, long bytesSent, long totalBytesSent, long totalBytesExpectedToSend);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSendBodyData(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, int64 bytesSent, int64 totalBytesSent, int64 totalBytesExpectedToSend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionTaskDelegate_Extensions.DidSendBodyData(Foundation.INSUrlSessionTaskDelegate,Foundation.NSUrlSession,Foundation.NSUrlSessionTask,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="F#" Value="static member DidSendBodyData : Foundation.INSUrlSessionTaskDelegate * Foundation.NSUrlSession * Foundation.NSUrlSessionTask * int64 * int64 * int64 -&gt; unit" Usage="Foundation.NSUrlSessionTaskDelegate_Extensions.DidSendBodyData (This, session, task, bytesSent, totalBytesSent, totalBytesExpectedToSend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionTaskDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="task" Type="Foundation.NSUrlSessionTask" />
        <Parameter Name="bytesSent" Type="System.Int64" />
        <Parameter Name="totalBytesSent" Type="System.Int64" />
        <Parameter Name="totalBytesExpectedToSend" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="task">To be added.</param>
        <param name="bytesSent">To be added.</param>
        <param name="totalBytesSent">To be added.</param>
        <param name="totalBytesExpectedToSend">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedNewBodyStream">
      <MemberSignature Language="C#" Value="public static void NeedNewBodyStream (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Action&lt;Foundation.NSInputStream&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NeedNewBodyStream(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class System.Action`1&lt;class Foundation.NSInputStream&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionTaskDelegate_Extensions.NeedNewBodyStream(Foundation.INSUrlSessionTaskDelegate,Foundation.NSUrlSession,Foundation.NSUrlSessionTask,System.Action{Foundation.NSInputStream})" />
      <MemberSignature Language="F#" Value="static member NeedNewBodyStream : Foundation.INSUrlSessionTaskDelegate * Foundation.NSUrlSession * Foundation.NSUrlSessionTask * Action&lt;Foundation.NSInputStream&gt; -&gt; unit" Usage="Foundation.NSUrlSessionTaskDelegate_Extensions.NeedNewBodyStream (This, session, task, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionTaskDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="task" Type="Foundation.NSUrlSessionTask" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSInputStream&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V24))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="task">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskIsWaitingForConnectivity">
      <MemberSignature Language="C#" Value="public static void TaskIsWaitingForConnectivity (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TaskIsWaitingForConnectivity(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionTaskDelegate_Extensions.TaskIsWaitingForConnectivity(Foundation.INSUrlSessionTaskDelegate,Foundation.NSUrlSession,Foundation.NSUrlSessionTask)" />
      <MemberSignature Language="F#" Value="static member TaskIsWaitingForConnectivity : Foundation.INSUrlSessionTaskDelegate * Foundation.NSUrlSession * Foundation.NSUrlSessionTask -&gt; unit" Usage="Foundation.NSUrlSessionTaskDelegate_Extensions.TaskIsWaitingForConnectivity (This, session, task)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionTaskDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="task" Type="Foundation.NSUrlSessionTask" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="task">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillBeginDelayedRequest">
      <MemberSignature Language="C#" Value="public static void WillBeginDelayedRequest (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSUrlRequest request, Action&lt;Foundation.NSUrlSessionDelayedRequestDisposition,Foundation.NSUrlRequest&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginDelayedRequest(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSUrlRequest request, class System.Action`2&lt;valuetype Foundation.NSUrlSessionDelayedRequestDisposition, class Foundation.NSUrlRequest&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionTaskDelegate_Extensions.WillBeginDelayedRequest(Foundation.INSUrlSessionTaskDelegate,Foundation.NSUrlSession,Foundation.NSUrlSessionTask,Foundation.NSUrlRequest,System.Action{Foundation.NSUrlSessionDelayedRequestDisposition,Foundation.NSUrlRequest})" />
      <MemberSignature Language="F#" Value="static member WillBeginDelayedRequest : Foundation.INSUrlSessionTaskDelegate * Foundation.NSUrlSession * Foundation.NSUrlSessionTask * Foundation.NSUrlRequest * Action&lt;Foundation.NSUrlSessionDelayedRequestDisposition, Foundation.NSUrlRequest&gt; -&gt; unit" Usage="Foundation.NSUrlSessionTaskDelegate_Extensions.WillBeginDelayedRequest (This, session, task, request, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionTaskDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="task" Type="Foundation.NSUrlSessionTask" />
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSUrlSessionDelayedRequestDisposition,Foundation.NSUrlRequest&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V1))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="task">To be added.</param>
        <param name="request">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPerformHttpRedirection">
      <MemberSignature Language="C#" Value="public static void WillPerformHttpRedirection (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSHttpUrlResponse response, Foundation.NSUrlRequest newRequest, Action&lt;Foundation.NSUrlRequest&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPerformHttpRedirection(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSHttpUrlResponse response, class Foundation.NSUrlRequest newRequest, class System.Action`1&lt;class Foundation.NSUrlRequest&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSUrlSessionTaskDelegate_Extensions.WillPerformHttpRedirection(Foundation.INSUrlSessionTaskDelegate,Foundation.NSUrlSession,Foundation.NSUrlSessionTask,Foundation.NSHttpUrlResponse,Foundation.NSUrlRequest,System.Action{Foundation.NSUrlRequest})" />
      <MemberSignature Language="F#" Value="static member WillPerformHttpRedirection : Foundation.INSUrlSessionTaskDelegate * Foundation.NSUrlSession * Foundation.NSUrlSessionTask * Foundation.NSHttpUrlResponse * Foundation.NSUrlRequest * Action&lt;Foundation.NSUrlRequest&gt; -&gt; unit" Usage="Foundation.NSUrlSessionTaskDelegate_Extensions.WillPerformHttpRedirection (This, session, task, response, newRequest, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.INSUrlSessionTaskDelegate" RefType="this" />
        <Parameter Name="session" Type="Foundation.NSUrlSession" />
        <Parameter Name="task" Type="Foundation.NSUrlSessionTask" />
        <Parameter Name="response" Type="Foundation.NSHttpUrlResponse" />
        <Parameter Name="newRequest" Type="Foundation.NSUrlRequest" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSUrlRequest&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V23))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="session">To be added.</param>
        <param name="task">To be added.</param>
        <param name="response">To be added.</param>
        <param name="newRequest">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
