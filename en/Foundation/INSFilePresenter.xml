<Type Name="INSFilePresenter" FullName="Foundation.INSFilePresenter">
  <TypeSignature Language="C#" Value="public interface INSFilePresenter : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSFilePresenter implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Foundation.INSFilePresenter" />
  <TypeSignature Language="F#" Value="type INSFilePresenter = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="NSFilePresenter", WrapperType=typeof(Foundation.NSFilePresenterWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RelinquishPresentedItemToReader", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="relinquishPresentedItemToReader:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RelinquishPresentedItemToWriter", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="relinquishPresentedItemToWriter:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="SavePresentedItemChanges", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="savePresentedItemChangesWithCompletionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="AccommodatePresentedItemDeletion", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="accommodatePresentedItemDeletionWithCompletionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemMoved", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedItemDidMoveToURL:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemChanged", Selector="presentedItemDidChange")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemGainedVersion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedItemDidGainVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemLostVersion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedItemDidLoseVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemResolveConflictVersion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedItemDidResolveConflictVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="AccommodatePresentedSubitemDeletion", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="accommodatePresentedSubitemDeletionAtURL:completionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemAppeared", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedSubitemDidAppearAtURL:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemMoved", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedSubitemAtURL:didMoveToURL:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemChanged", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedSubitemDidChangeAtURL:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemGainedVersion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedSubitemAtURL:didGainVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemLostVersion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedSubitemAtURL:didLoseVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemResolvedConflictVersion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedSubitemAtURL:didResolveConflictVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemChangedUbiquityAttributes", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="presentedItemDidChangeUbiquityAttributes:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Strong, GetterSelector="presentedItemURL", IsProperty=true, IsRequired=true, IsStatic=false, Name="PresentedItemURL", PropertyType=typeof(Foundation.NSUrl), Selector="presentedItemURL")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Strong, GetterSelector="presentedItemOperationQueue", IsProperty=true, IsRequired=true, IsStatic=false, Name="PesentedItemOperationQueue", PropertyType=typeof(Foundation.NSOperationQueue), Selector="presentedItemOperationQueue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Strong, GetterSelector="observedPresentedItemUbiquityAttributes", IsProperty=true, IsRequired=false, IsStatic=false, Name="PresentedItemObservedUbiquityAttributes", PropertyType=typeof(Foundation.NSSet`1&lt;Foundation.NSString&gt;), Selector="observedPresentedItemUbiquityAttributes")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RelinquishPresentedItemToReader", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSFilePresenterReacquirer) }, Selector="relinquishPresentedItemToReader:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RelinquishPresentedItemToWriter", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSFilePresenterReacquirer) }, Selector="relinquishPresentedItemToWriter:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="SavePresentedItemChanges", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(System.Action`1&lt;Foundation.NSError&gt;) }, Selector="savePresentedItemChangesWithCompletionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="AccommodatePresentedItemDeletion", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(System.Action`1&lt;Foundation.NSError&gt;) }, Selector="accommodatePresentedItemDeletionWithCompletionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemMoved", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl) }, Selector="presentedItemDidMoveToURL:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemGainedVersion", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSFileVersion) }, Selector="presentedItemDidGainVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemLostVersion", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSFileVersion) }, Selector="presentedItemDidLoseVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemResolveConflictVersion", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSFileVersion) }, Selector="presentedItemDidResolveConflictVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="AccommodatePresentedSubitemDeletion", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl), typeof(System.Action`1&lt;Foundation.NSError&gt;) }, Selector="accommodatePresentedSubitemDeletionAtURL:completionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemAppeared", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl) }, Selector="presentedSubitemDidAppearAtURL:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemMoved", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl), typeof(Foundation.NSUrl) }, Selector="presentedSubitemAtURL:didMoveToURL:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemChanged", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl) }, Selector="presentedSubitemDidChangeAtURL:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemGainedVersion", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl), typeof(Foundation.NSFileVersion) }, Selector="presentedSubitemAtURL:didGainVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemLostVersion", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl), typeof(Foundation.NSFileVersion) }, Selector="presentedSubitemAtURL:didLoseVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedSubitemResolvedConflictVersion", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(Foundation.NSUrl), typeof(Foundation.NSFileVersion) }, Selector="presentedSubitemAtURL:didResolveConflictVersion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PresentedItemChangedUbiquityAttributes", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSSet`1&lt;Foundation.NSString&gt;) }, Selector="presentedItemDidChangeUbiquityAttributes:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:Foundation.NSFilePresenter" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:Foundation.NSFilePresenter" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:Foundation.NSFilePresenter" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:Foundation.NSFilePresenter_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PesentedItemOperationQueue">
      <MemberSignature Language="C#" Value="public Foundation.NSOperationQueue PesentedItemOperationQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSOperationQueue PesentedItemOperationQueue" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSFilePresenter.PesentedItemOperationQueue" />
      <MemberSignature Language="F#" Value="member this.PesentedItemOperationQueue : Foundation.NSOperationQueue" Usage="Foundation.INSFilePresenter.PesentedItemOperationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("presentedItemOperationQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("presentedItemOperationQueue", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSOperationQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:Monotouch.Foundation.NSOperationQueue&amp;scope=Xamarin" title="T:Monotouch.Foundation.NSOperationQueue">T:Monotouch.Foundation.NSOperationQueue</a></format> on which presenter-related methods are executed.</summary>
        <value>The <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:Monotouch.Foundation.NSOperationQueue&amp;scope=Xamarin" title="T:Monotouch.Foundation.NSOperationQueue">T:Monotouch.Foundation.NSOperationQueue</a></format> on which methods are executed.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentedItemURL">
      <MemberSignature Language="C#" Value="public Foundation.NSUrl PresentedItemURL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl PresentedItemURL" />
      <MemberSignature Language="DocId" Value="P:Foundation.INSFilePresenter.PresentedItemURL" />
      <MemberSignature Language="F#" Value="member this.PresentedItemURL : Foundation.NSUrl" Usage="Foundation.INSFilePresenter.PresentedItemURL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("presentedItemURL")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("presentedItemURL", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:Monotouch.Foundation.NSUrl&amp;scope=Xamarin" title="T:Monotouch.Foundation.NSUrl">T:Monotouch.Foundation.NSUrl</a></format> specifying the file or directory of interest.</summary>
        <value>The <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:Monotouch.Foundation.NSUrl&amp;scope=Xamarin" title="T:Monotouch.Foundation.NSUrl">T:Monotouch.Foundation.NSUrl</a></format> specifying the file or directory of interest.</value>
        <remarks>
          <para>Implementations of this method must be thread-safe.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
