<Type Name="NSTextCheckingResult" FullName="Foundation.NSTextCheckingResult">
  <TypeSignature Language="C#" Value="public class NSTextCheckingResult : Foundation.NSObject, Foundation.INSCopying, Foundation.INSSecureCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTextCheckingResult extends Foundation.NSObject implements class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Foundation.NSTextCheckingResult" />
  <TypeSignature Language="F#" Value="type NSTextCheckingResult = class&#xA;    inherit NSObject&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("NSTextCheckingResult", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class that contains the result of a regular expression search.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/AppKit/Reference/NSTextCheckingResult_Class/index.html">Apple documentation for <c>NSTextCheckingResult</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextCheckingResult (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new Foundation.NSTextCheckingResult : Foundation.NSCoder -&gt; Foundation.NSTextCheckingResult" Usage="new Foundation.NSTextCheckingResult coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NSTextCheckingResult (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new Foundation.NSTextCheckingResult : Foundation.NSObjectFlag -&gt; Foundation.NSTextCheckingResult" Usage="new Foundation.NSTextCheckingResult t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NSTextCheckingResult (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new Foundation.NSTextCheckingResult : nativeint -&gt; Foundation.NSTextCheckingResult" Usage="new Foundation.NSTextCheckingResult handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult AddressCheckingResult (Foundation.NSRange range, Foundation.NSDictionary components);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult AddressCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSDictionary components) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.AddressCheckingResult(Foundation.NSRange,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member AddressCheckingResult : Foundation.NSRange * Foundation.NSDictionary -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.AddressCheckingResult (range, components)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addressCheckingResultWithRange:components:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="components" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="components">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult AddressCheckingResult (Foundation.NSRange range, Foundation.NSTextCheckingAddressComponents components);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult AddressCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSTextCheckingAddressComponents components) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.AddressCheckingResult(Foundation.NSRange,Foundation.NSTextCheckingAddressComponents)" />
      <MemberSignature Language="F#" Value="static member AddressCheckingResult : Foundation.NSRange * Foundation.NSTextCheckingAddressComponents -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.AddressCheckingResult (range, components)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="components" Type="Foundation.NSTextCheckingAddressComponents" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="components">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressComponents">
      <MemberSignature Language="C#" Value="public Foundation.NSTextCheckingAddressComponents AddressComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSTextCheckingAddressComponents AddressComponents" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.AddressComponents" />
      <MemberSignature Language="F#" Value="member this.AddressComponents : Foundation.NSTextCheckingAddressComponents" Usage="Foundation.NSTextCheckingResult.AddressComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingAddressComponents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeStrings">
      <MemberSignature Language="C#" Value="public virtual string[] AlternativeStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AlternativeStrings" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.AlternativeStrings" />
      <MemberSignature Language="F#" Value="member this.AlternativeStrings : string[]" Usage="Foundation.NSTextCheckingResult.AlternativeStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("alternativeStrings")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="Foundation.NSTextCheckingResult.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Components">
      <MemberSignature Language="C#" Value="public Foundation.NSTextCheckingTransitComponents Components { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSTextCheckingTransitComponents Components" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.Components" />
      <MemberSignature Language="F#" Value="member this.Components : Foundation.NSTextCheckingTransitComponents" Usage="Foundation.NSTextCheckingResult.Components" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingTransitComponents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="nSTextCheckingResult.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">Zone to use to allocate this object, or null to use the default zone.</param>
        <summary>Performs a copy of the underlying Objective-C object.</summary>
        <returns>This method performs a copy of the underlying Objective-C object state and returns a new instance of it.  It does not actually try to replicate any managed state.</returns>
        <remarks>Implementation of the INSCopyable interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectionCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult CorrectionCheckingResult (Foundation.NSRange range, string replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult CorrectionCheckingResult(valuetype Foundation.NSRange range, string replacementString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.CorrectionCheckingResult(Foundation.NSRange,System.String)" />
      <MemberSignature Language="F#" Value="static member CorrectionCheckingResult : Foundation.NSRange * string -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.CorrectionCheckingResult (range, replacementString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("correctionCheckingResultWithRange:replacementString:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectionCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult CorrectionCheckingResult (Foundation.NSRange range, string replacementString, string[] alternativeStrings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult CorrectionCheckingResult(valuetype Foundation.NSRange range, string replacementString, string[] alternativeStrings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.CorrectionCheckingResult(Foundation.NSRange,System.String,System.String[])" />
      <MemberSignature Language="F#" Value="static member CorrectionCheckingResult : Foundation.NSRange * string * string[] -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.CorrectionCheckingResult (range, replacementString, alternativeStrings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("correctionCheckingResultWithRange:replacementString:alternativeStrings:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
        <Parameter Name="alternativeStrings" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="replacementString">To be added.</param>
        <param name="alternativeStrings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DashCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult DashCheckingResult (Foundation.NSRange range, string replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult DashCheckingResult(valuetype Foundation.NSRange range, string replacementString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.DashCheckingResult(Foundation.NSRange,System.String)" />
      <MemberSignature Language="F#" Value="static member DashCheckingResult : Foundation.NSRange * string -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.DashCheckingResult (range, replacementString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("dashCheckingResultWithRange:replacementString:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDate Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate Date" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.Date" />
      <MemberSignature Language="F#" Value="member this.Date : Foundation.NSDate" Usage="Foundation.NSTextCheckingResult.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("date")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult DateCheckingResult (Foundation.NSRange range, Foundation.NSDate date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult DateCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSDate date) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.DateCheckingResult(Foundation.NSRange,Foundation.NSDate)" />
      <MemberSignature Language="F#" Value="static member DateCheckingResult : Foundation.NSRange * Foundation.NSDate -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.DateCheckingResult (range, date)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("dateCheckingResultWithRange:date:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="date" Type="Foundation.NSDate" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="date">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult DateCheckingResult (Foundation.NSRange range, Foundation.NSDate date, Foundation.NSTimeZone timezone, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult DateCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSDate date, class Foundation.NSTimeZone timezone, float64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.DateCheckingResult(Foundation.NSRange,Foundation.NSDate,Foundation.NSTimeZone,System.Double)" />
      <MemberSignature Language="F#" Value="static member DateCheckingResult : Foundation.NSRange * Foundation.NSDate * Foundation.NSTimeZone * double -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.DateCheckingResult (range, date, timezone, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("dateCheckingResultWithRange:date:timeZone:duration:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="date" Type="Foundation.NSDate" />
        <Parameter Name="timezone" Type="Foundation.NSTimeZone" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="date">To be added.</param>
        <param name="timezone">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="nSTextCheckingResult.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">The encoder object where the state of the object will be stored</param>
        <summary>Encodes the state of the object on the provided encoder</summary>
        <remarks>
          <para>This method is part of the <see cref="T:Foundation.NSCoding" /> protocol and is used by applications to preserve the state of the object into an archive.</para>
          <para>Users will typically create a <see cref="T:Foundation.NSKeyedArchiver" /> and then invoke the <see cref="M:Foundation.NSKeyedArchiver.ArchiveRootObjectToFile" /> which will call into this method</para>
          <para>If developers want to allow their object to be archived, they should override this method and store their state in using the provided <paramref name="encoder" /> parameter.   In addition, developers should also implement a constructor that takes an NSCoder argument and is exported with [Export ("initWithCoder:")]</para>
          <example>
            <code lang="C#"><![CDATA[public void override EncodeTo (NSCoder coder){
    coder.Encode (1, key: "version");
    coder.Encode (userName, key: "userName");
    coder.Encode (hostName, key: "hostName");]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange GetRange (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange GetRange(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.GetRange(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetRange : string -&gt; Foundation.NSRange&#xA;override this.GetRange : string -&gt; Foundation.NSRange" Usage="nSTextCheckingResult.GetRange name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("rangeWithName:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammarCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult GrammarCheckingResult (Foundation.NSRange range, string[] details);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult GrammarCheckingResult(valuetype Foundation.NSRange range, string[] details) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.GrammarCheckingResult(Foundation.NSRange,System.String[])" />
      <MemberSignature Language="F#" Value="static member GrammarCheckingResult : Foundation.NSRange * string[] -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.GrammarCheckingResult (range, details)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("grammarCheckingResultWithRange:details:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="details" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="details">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammarDetails">
      <MemberSignature Language="C#" Value="public virtual string[] GrammarDetails { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] GrammarDetails" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.GrammarDetails" />
      <MemberSignature Language="F#" Value="member this.GrammarDetails : string[]" Usage="Foundation.NSTextCheckingResult.GrammarDetails" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("grammarDetails")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult LinkCheckingResult (Foundation.NSRange range, Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult LinkCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.LinkCheckingResult(Foundation.NSRange,Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="static member LinkCheckingResult : Foundation.NSRange * Foundation.NSUrl -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.LinkCheckingResult (range, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("linkCheckingResultWithRange:URL:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfRanges">
      <MemberSignature Language="C#" Value="public virtual nuint NumberOfRanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumberOfRanges" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.NumberOfRanges" />
      <MemberSignature Language="F#" Value="member this.NumberOfRanges : nuint" Usage="Foundation.NSTextCheckingResult.NumberOfRanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("numberOfRanges")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orthography">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSOrthography Orthography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSOrthography Orthography" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.Orthography" />
      <MemberSignature Language="F#" Value="member this.Orthography : Foundation.NSOrthography" Usage="Foundation.NSTextCheckingResult.Orthography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("orthography")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSOrthography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrthographyCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult OrthographyCheckingResult (Foundation.NSRange range, Foundation.NSOrthography ortography);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult OrthographyCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSOrthography ortography) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.OrthographyCheckingResult(Foundation.NSRange,Foundation.NSOrthography)" />
      <MemberSignature Language="F#" Value="static member OrthographyCheckingResult : Foundation.NSRange * Foundation.NSOrthography -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.OrthographyCheckingResult (range, ortography)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("orthographyCheckingResultWithRange:orthography:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="ortography" Type="Foundation.NSOrthography" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="ortography">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneNumber">
      <MemberSignature Language="C#" Value="public virtual string PhoneNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhoneNumber" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.PhoneNumber" />
      <MemberSignature Language="F#" Value="member this.PhoneNumber : string" Usage="Foundation.NSTextCheckingResult.PhoneNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("phoneNumber")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneNumberCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult PhoneNumberCheckingResult (Foundation.NSRange range, string phoneNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult PhoneNumberCheckingResult(valuetype Foundation.NSRange range, string phoneNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.PhoneNumberCheckingResult(Foundation.NSRange,System.String)" />
      <MemberSignature Language="F#" Value="static member PhoneNumberCheckingResult : Foundation.NSRange * string -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.PhoneNumberCheckingResult (range, phoneNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("phoneNumberCheckingResultWithRange:phoneNumber:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="phoneNumber" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="phoneNumber">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult QuoteCheckingResult (Foundation.NSRange range, Foundation.NSString replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult QuoteCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSString replacementString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.QuoteCheckingResult(Foundation.NSRange,Foundation.NSString)" />
      <MemberSignature Language="F#" Value="static member QuoteCheckingResult : Foundation.NSRange * Foundation.NSString -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.QuoteCheckingResult (range, replacementString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("quoteCheckingResultWithRange:replacementString:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="replacementString" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSRange Range" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.Range" />
      <MemberSignature Language="F#" Value="member this.Range : Foundation.NSRange" Usage="Foundation.NSTextCheckingResult.Range" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("range")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeAtIndex">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange RangeAtIndex (nuint idx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange RangeAtIndex(valuetype System.nuint idx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.RangeAtIndex(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member RangeAtIndex : nuint -&gt; Foundation.NSRange&#xA;override this.RangeAtIndex : nuint -&gt; Foundation.NSRange" Usage="nSTextCheckingResult.RangeAtIndex idx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("rangeAtIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idx" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="idx">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult ReplacementCheckingResult (Foundation.NSRange range, string replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult ReplacementCheckingResult(valuetype Foundation.NSRange range, string replacementString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.ReplacementCheckingResult(Foundation.NSRange,System.String)" />
      <MemberSignature Language="F#" Value="static member ReplacementCheckingResult : Foundation.NSRange * string -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.ReplacementCheckingResult (range, replacementString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("replacementCheckingResultWithRange:replacementString:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementString">
      <MemberSignature Language="C#" Value="public virtual string ReplacementString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplacementString" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.ReplacementString" />
      <MemberSignature Language="F#" Value="member this.ReplacementString : string" Usage="Foundation.NSTextCheckingResult.ReplacementString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("replacementString")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultByAdjustingRanges">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSTextCheckingResult ResultByAdjustingRanges (nint offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSTextCheckingResult ResultByAdjustingRanges(valuetype System.nint offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.ResultByAdjustingRanges(System.nint)" />
      <MemberSignature Language="F#" Value="abstract member ResultByAdjustingRanges : nint -&gt; Foundation.NSTextCheckingResult&#xA;override this.ResultByAdjustingRanges : nint -&gt; Foundation.NSTextCheckingResult" Usage="nSTextCheckingResult.ResultByAdjustingRanges offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("resultByAdjustingRangesWithOffset:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultType">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSTextCheckingType ResultType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Foundation.NSTextCheckingType ResultType" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.ResultType" />
      <MemberSignature Language="F#" Value="member this.ResultType : Foundation.NSTextCheckingType" Usage="Foundation.NSTextCheckingResult.ResultType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("resultType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult SpellCheckingResult (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult SpellCheckingResult(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.SpellCheckingResult(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="static member SpellCheckingResult : Foundation.NSRange -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.SpellCheckingResult range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("spellCheckingResultWithRange:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeInterval">
      <MemberSignature Language="C#" Value="public virtual double TimeInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TimeInterval" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.TimeInterval" />
      <MemberSignature Language="F#" Value="member this.TimeInterval : double" Usage="Foundation.NSTextCheckingResult.TimeInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("duration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeZone">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSTimeZone TimeZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSTimeZone TimeZone" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.TimeZone" />
      <MemberSignature Language="F#" Value="member this.TimeZone : Foundation.NSTimeZone" Usage="Foundation.NSTextCheckingResult.TimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("timeZone")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitInformationCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult TransitInformationCheckingResult (Foundation.NSRange range, Foundation.NSDictionary components);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult TransitInformationCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSDictionary components) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.TransitInformationCheckingResult(Foundation.NSRange,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="static member TransitInformationCheckingResult : Foundation.NSRange * Foundation.NSDictionary -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.TransitInformationCheckingResult (range, components)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("transitInformationCheckingResultWithRange:components:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="components" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="components">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitInformationCheckingResult">
      <MemberSignature Language="C#" Value="public static Foundation.NSTextCheckingResult TransitInformationCheckingResult (Foundation.NSRange range, Foundation.NSTextCheckingTransitComponents components);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSTextCheckingResult TransitInformationCheckingResult(valuetype Foundation.NSRange range, class Foundation.NSTextCheckingTransitComponents components) cil managed" />
      <MemberSignature Language="DocId" Value="M:Foundation.NSTextCheckingResult.TransitInformationCheckingResult(Foundation.NSRange,Foundation.NSTextCheckingTransitComponents)" />
      <MemberSignature Language="F#" Value="static member TransitInformationCheckingResult : Foundation.NSRange * Foundation.NSTextCheckingTransitComponents -&gt; Foundation.NSTextCheckingResult" Usage="Foundation.NSTextCheckingResult.TransitInformationCheckingResult (range, components)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSTextCheckingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="components" Type="Foundation.NSTextCheckingTransitComponents" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="components">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl Url" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.Url" />
      <MemberSignature Language="F#" Value="member this.Url : Foundation.NSUrl" Usage="Foundation.NSTextCheckingResult.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("URL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakAddressComponents">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary WeakAddressComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary WeakAddressComponents" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.WeakAddressComponents" />
      <MemberSignature Language="F#" Value="member this.WeakAddressComponents : Foundation.NSDictionary" Usage="Foundation.NSTextCheckingResult.WeakAddressComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("addressComponents")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakComponents">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary WeakComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary WeakComponents" />
      <MemberSignature Language="DocId" Value="P:Foundation.NSTextCheckingResult.WeakComponents" />
      <MemberSignature Language="F#" Value="member this.WeakComponents : Foundation.NSDictionary" Usage="Foundation.NSTextCheckingResult.WeakComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("components")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
