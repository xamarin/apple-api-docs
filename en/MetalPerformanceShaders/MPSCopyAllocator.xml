<Type Name="MPSCopyAllocator" FullName="MetalPerformanceShaders.MPSCopyAllocator">
  <TypeSignature Language="C#" Value="public delegate Foundation.NSObject MPSCopyAllocator(MPSKernel filter, NSObject commandBuffer, NSObject sourceTexture);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MPSCopyAllocator extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="filter" Type="MetalPerformanceShaders.MPSKernel" />
    <Parameter Name="commandBuffer" Type="Foundation.NSObject" />
    <Parameter Name="sourceTexture" Type="Foundation.NSObject" />
  </Parameters>
  <ReturnValue>
    <ReturnType>Foundation.NSObject</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="filter">The <see cref="T:MetalPerformanceShaders.MPSKernel" /> that is requesting the memory.</param>
    <param name="commandBuffer">A command buffer that gets the device on which to allocate space for the texture data, along with optional commands to initialize the texture with an encoder.</param>
    <param name="sourceTexture">The source image.</param>
    <summary>Commands to copy a source texture to a new location. Used for out-of-place filters.</summary>
    <returns>Returns a <see cref="T:Metal.MTLTexture" /> into which texture data can be written.</returns>
    <remarks>Application developers must not enque the <paramref name="commandBuffer" /> parameter, enqueue it, nor wait for scheduling events on it.</remarks>
  </Docs>
</Type>
