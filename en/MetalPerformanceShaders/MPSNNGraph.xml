<Type Name="MPSNNGraph" FullName="MetalPerformanceShaders.MPSNNGraph">
  <TypeSignature Language="C#" Value="public class MPSNNGraph : MetalPerformanceShaders.MPSKernel, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPSNNGraph extends MetalPerformanceShaders.MPSKernel implements class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MetalPerformanceShaders.MPSKernel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPSNNGraph", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNGraph (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSNNGraph (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSNNGraph (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNGraph (Foundation.NSCoder aDecoder, Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder aDecoder, class Metal.IMTLDevice device) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:device:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aDecoder" Type="Foundation.NSCoder" />
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="aDecoder">To be added.</param>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSNNGraph (Metal.IMTLDevice device, MetalPerformanceShaders.MPSNNImageNode resultImage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, class MetalPerformanceShaders.MPSNNImageNode resultImage) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:resultImage:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="resultImage" Type="MetalPerformanceShaders.MPSNNImageNode" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="resultImage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationImageAllocator">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.IMPSImageAllocator DestinationImageAllocator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MetalPerformanceShaders.IMPSImageAllocator DestinationImageAllocator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("destinationImageAllocator", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDestinationImageAllocator:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.IMPSImageAllocator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToCommandBuffer">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSImage EncodeToCommandBuffer (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSImage[] sourceImages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSImage EncodeToCommandBuffer(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSImage[] sourceImages) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:sourceImages:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceImages" Type="MetalPerformanceShaders.MPSImage[]" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceImages">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToCommandBuffer">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSImage EncodeToCommandBuffer (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSImage[] sourceImages, MetalPerformanceShaders.MPSState[] sourceStates, Foundation.NSMutableArray&lt;MetalPerformanceShaders.MPSImage&gt; intermediateImages, Foundation.NSMutableArray&lt;MetalPerformanceShaders.MPSState&gt; destinationStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSImage EncodeToCommandBuffer(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSImage[] sourceImages, class MetalPerformanceShaders.MPSState[] sourceStates, class Foundation.NSMutableArray`1&lt;class MetalPerformanceShaders.MPSImage&gt; intermediateImages, class Foundation.NSMutableArray`1&lt;class MetalPerformanceShaders.MPSState&gt; destinationStates) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeToCommandBuffer:sourceImages:sourceStates:intermediateImages:destinationStates:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceImages" Type="MetalPerformanceShaders.MPSImage[]" />
        <Parameter Name="sourceStates" Type="MetalPerformanceShaders.MPSState[]" />
        <Parameter Name="intermediateImages" Type="Foundation.NSMutableArray&lt;MetalPerformanceShaders.MPSImage&gt;" />
        <Parameter Name="destinationStates" Type="Foundation.NSMutableArray&lt;MetalPerformanceShaders.MPSState&gt;" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceImages">To be added.</param>
        <param name="sourceStates">To be added.</param>
        <param name="intermediateImages">To be added.</param>
        <param name="destinationStates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSImage Execute (MetalPerformanceShaders.MPSImage[] sourceImages, Action&lt;MetalPerformanceShaders.MPSImage,Foundation.NSError&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSImage Execute(class MetalPerformanceShaders.MPSImage[] sourceImages, class System.Action`2&lt;class MetalPerformanceShaders.MPSImage, class Foundation.NSError&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("executeAsyncWithSourceImages:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceImages" Type="MetalPerformanceShaders.MPSImage[]" />
        <Parameter Name="handler" Type="System.Action&lt;MetalPerformanceShaders.MPSImage,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V77))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sourceImages">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MetalPerformanceShaders.MPSImage&gt; ExecuteAsync (MetalPerformanceShaders.MPSImage[] sourceImages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MetalPerformanceShaders.MPSImage&gt; ExecuteAsync(class MetalPerformanceShaders.MPSImage[] sourceImages) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MetalPerformanceShaders.MPSImage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceImages" Type="MetalPerformanceShaders.MPSImage[]" />
      </Parameters>
      <Docs>
        <param name="sourceImages">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MetalPerformanceShaders.MPSImage&gt; ExecuteAsync (MetalPerformanceShaders.MPSImage[] sourceImages, out MetalPerformanceShaders.MPSImage result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MetalPerformanceShaders.MPSImage&gt; ExecuteAsync(class MetalPerformanceShaders.MPSImage[] sourceImages, class MetalPerformanceShaders.MPSImage result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MetalPerformanceShaders.MPSImage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceImages" Type="MetalPerformanceShaders.MPSImage[]" />
        <Parameter Name="result" Type="MetalPerformanceShaders.MPSImage&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sourceImages">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntermediateImageHandles">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.IMPSHandle[] IntermediateImageHandles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MetalPerformanceShaders.IMPSHandle[] IntermediateImageHandles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("intermediateImageHandles", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.IMPSHandle[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutputStateTemporary">
      <MemberSignature Language="C#" Value="public virtual bool IsOutputStateTemporary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutputStateTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("outputStateIsTemporary")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setOutputStateIsTemporary:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultHandle">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.IMPSHandle ResultHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MetalPerformanceShaders.IMPSHandle ResultHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("resultHandle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.IMPSHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultStateHandles">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.IMPSHandle[] ResultStateHandles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MetalPerformanceShaders.IMPSHandle[] ResultStateHandles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("resultStateHandles", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.IMPSHandle[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceImageHandles">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.IMPSHandle[] SourceImageHandles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MetalPerformanceShaders.IMPSHandle[] SourceImageHandles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("sourceImageHandles", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.IMPSHandle[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceStateHandles">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.IMPSHandle[] SourceStateHandles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MetalPerformanceShaders.IMPSHandle[] SourceStateHandles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("sourceStateHandles", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.IMPSHandle[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
