<Type Name="MPSRnnImageInferenceLayer" FullName="MetalPerformanceShaders.MPSRnnImageInferenceLayer">
  <TypeSignature Language="C#" Value="public class MPSRnnImageInferenceLayer : MetalPerformanceShaders.MPSCnnKernel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MPSRnnImageInferenceLayer extends MetalPerformanceShaders.MPSCnnKernel" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MetalPerformanceShaders.MPSCnnKernel</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MPSRNNImageInferenceLayer", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSRnnImageInferenceLayer (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSRnnImageInferenceLayer (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MPSRnnImageInferenceLayer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSRnnImageInferenceLayer (Foundation.NSCoder aDecoder, Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder aDecoder, class Metal.IMTLDevice device) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:device:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aDecoder" Type="Foundation.NSCoder" />
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="aDecoder">To be added.</param>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSRnnImageInferenceLayer (Metal.IMTLDevice device, MetalPerformanceShaders.MPSRnnDescriptor rnnDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, class MetalPerformanceShaders.MPSRnnDescriptor rnnDescriptor) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:rnnDescriptor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="rnnDescriptor" Type="MetalPerformanceShaders.MPSRnnDescriptor" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="rnnDescriptor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MPSRnnImageInferenceLayer (Metal.IMTLDevice device, MetalPerformanceShaders.MPSRnnDescriptor[] rnnDescriptors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Metal.IMTLDevice device, class MetalPerformanceShaders.MPSRnnDescriptor[] rnnDescriptors) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:rnnDescriptors:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="Metal.IMTLDevice" />
        <Parameter Name="rnnDescriptors" Type="MetalPerformanceShaders.MPSRnnDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="rnnDescriptors">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BidirectionalCombineMode">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSRnnBidirectionalCombineMode BidirectionalCombineMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MetalPerformanceShaders.MPSRnnBidirectionalCombineMode BidirectionalCombineMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("bidirectionalCombineMode", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBidirectionalCombineMode:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSRnnBidirectionalCombineMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual MetalPerformanceShaders.MPSRnnImageInferenceLayer Copy (Foundation.NSZone zone, Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MetalPerformanceShaders.MPSRnnImageInferenceLayer Copy(class Foundation.NSZone zone, class Metal.IMTLDevice device) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:device:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MetalPerformanceShaders.MPSRnnImageInferenceLayer</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>ObjCRuntime.Release</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
        <Parameter Name="device" Type="Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeBidirectionalSequence">
      <MemberSignature Language="C#" Value="public virtual void EncodeBidirectionalSequence (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSImage[] sourceSequence, MetalPerformanceShaders.MPSImage[] destinationForwardImages, MetalPerformanceShaders.MPSImage[] destinationBackwardImages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeBidirectionalSequence(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSImage[] sourceSequence, class MetalPerformanceShaders.MPSImage[] destinationForwardImages, class MetalPerformanceShaders.MPSImage[] destinationBackwardImages) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeBidirectionalSequenceToCommandBuffer:sourceSequence:destinationForwardImages:destinationBackwardImages:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceSequence" Type="MetalPerformanceShaders.MPSImage[]" />
        <Parameter Name="destinationForwardImages" Type="MetalPerformanceShaders.MPSImage[]" />
        <Parameter Name="destinationBackwardImages" Type="MetalPerformanceShaders.MPSImage[]" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceSequence">To be added.</param>
        <param name="destinationForwardImages">To be added.</param>
        <param name="destinationBackwardImages">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeSequence">
      <MemberSignature Language="C#" Value="public virtual void EncodeSequence (Metal.IMTLCommandBuffer commandBuffer, MetalPerformanceShaders.MPSImage[] sourceImages, MetalPerformanceShaders.MPSImage[] destinationImages, MetalPerformanceShaders.MPSRnnRecurrentImageState recurrentInputState, Foundation.NSMutableArray&lt;MetalPerformanceShaders.MPSRnnRecurrentImageState&gt; recurrentOutputStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeSequence(class Metal.IMTLCommandBuffer commandBuffer, class MetalPerformanceShaders.MPSImage[] sourceImages, class MetalPerformanceShaders.MPSImage[] destinationImages, class MetalPerformanceShaders.MPSRnnRecurrentImageState recurrentInputState, class Foundation.NSMutableArray`1&lt;class MetalPerformanceShaders.MPSRnnRecurrentImageState&gt; recurrentOutputStates) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeSequenceToCommandBuffer:sourceImages:destinationImages:recurrentInputState:recurrentOutputStates:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuffer" Type="Metal.IMTLCommandBuffer" />
        <Parameter Name="sourceImages" Type="MetalPerformanceShaders.MPSImage[]" />
        <Parameter Name="destinationImages" Type="MetalPerformanceShaders.MPSImage[]" />
        <Parameter Name="recurrentInputState" Type="MetalPerformanceShaders.MPSRnnRecurrentImageState" />
        <Parameter Name="recurrentOutputStates" Type="Foundation.NSMutableArray&lt;MetalPerformanceShaders.MPSRnnRecurrentImageState&gt;" />
      </Parameters>
      <Docs>
        <param name="commandBuffer">To be added.</param>
        <param name="sourceImages">To be added.</param>
        <param name="destinationImages">To be added.</param>
        <param name="recurrentInputState">To be added.</param>
        <param name="recurrentOutputStates">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputFeatureChannels">
      <MemberSignature Language="C#" Value="public virtual nuint InputFeatureChannels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint InputFeatureChannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("inputFeatureChannels")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecurrentOutputTemporary">
      <MemberSignature Language="C#" Value="public virtual bool IsRecurrentOutputTemporary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecurrentOutputTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("recurrentOutputIsTemporary")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRecurrentOutputIsTemporary:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfLayers">
      <MemberSignature Language="C#" Value="public virtual nuint NumberOfLayers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumberOfLayers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("numberOfLayers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFeatureChannels">
      <MemberSignature Language="C#" Value="public virtual nuint OutputFeatureChannels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint OutputFeatureChannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("outputFeatureChannels")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAllIntermediateStates">
      <MemberSignature Language="C#" Value="public virtual bool StoreAllIntermediateStates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreAllIntermediateStates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("storeAllIntermediateStates")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setStoreAllIntermediateStates:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
