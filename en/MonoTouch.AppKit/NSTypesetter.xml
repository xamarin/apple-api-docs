<Type Name="NSTypesetter" FullName="MonoTouch.AppKit.NSTypesetter">
  <TypeSignature Language="C#" Value="public class NSTypesetter : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTypesetter extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("NSTypesetter", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public NSTypesetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected NSTypesetter (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected NSTypesetter (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributedString" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSAttributedString AttributedString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSAttributedString AttributedString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("attributedString")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setAttributedString:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributesForExtraLineFragment" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSDictionary AttributesForExtraLineFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSDictionary AttributesForExtraLineFragment() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("attributesForExtraLineFragment")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLine" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void BeginLine (nuint glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginLine(valuetype System.nuint glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("beginLineWithGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginParagraph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void BeginParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginParagraph() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("beginParagraph")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BidiProcessingEnabled" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool BidiProcessingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BidiProcessingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("bidiProcessingEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setBidiProcessingEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle" apistyle="unified">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentParagraphStyle" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSParagraphStyle CurrentParagraphStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.AppKit.NSParagraphStyle CurrentParagraphStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("currentParagraphStyle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSParagraphStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTextContainer" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSTextContainer CurrentTextContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.AppKit.NSTextContainer CurrentTextContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("currentTextContainer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSTextContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTypesetterBehavior" apistyle="unified">
      <MemberSignature Language="C#" Value="public static MonoTouch.AppKit.NSTypesetterBehavior DefaultTypesetterBehavior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype MonoTouch.AppKit.NSTypesetterBehavior DefaultTypesetterBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("defaultTypesetterBehavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSTypesetterBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteGlyphs" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void DeleteGlyphs (MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteGlyphs(valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("deleteGlyphsInRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLine" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void EndLine (MonoTouch.Foundation.NSRange lineGlyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndLine(valuetype MonoTouch.Foundation.NSRange lineGlyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("endLineWithGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineGlyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="lineGlyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndParagraph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void EndParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndParagraph() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("endParagraph")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionForControlCharacter" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSTypesetterControlCharacterAction GetActionForControlCharacter (nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.AppKit.NSTypesetterControlCharacterAction GetActionForControlCharacter(valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("actionForControlCharacterAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSTypesetterControlCharacterAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaselineOffset" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nfloat GetBaselineOffset (MonoTouch.AppKit.NSLayoutManager layoutManager, nuint glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetBaselineOffset(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("baselineOffsetInLayoutManager:glyphIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingBoxForControlGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGRect GetBoundingBoxForControlGlyph (nuint glyphIndex, MonoTouch.AppKit.NSTextContainer textContainer, MonoTouch.CoreGraphics.CGRect proposedLineFragment, MonoTouch.CoreGraphics.CGPoint glyphPosition, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreGraphics.CGRect GetBoundingBoxForControlGlyph(valuetype System.nuint glyphIndex, class MonoTouch.AppKit.NSTextContainer textContainer, valuetype MonoTouch.CoreGraphics.CGRect proposedLineFragment, valuetype MonoTouch.CoreGraphics.CGPoint glyphPosition, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="textContainer" Type="MonoTouch.AppKit.NSTextContainer" />
        <Parameter Name="proposedLineFragment" Type="MonoTouch.CoreGraphics.CGRect" />
        <Parameter Name="glyphPosition" Type="MonoTouch.CoreGraphics.CGPoint" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="proposedLineFragment">To be added.</param>
        <param name="glyphPosition">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRangeForGlyphRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSRange GetCharacterRangeForGlyphRange (MonoTouch.Foundation.NSRange glyphRange, out MonoTouch.Foundation.NSRange actualGlyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.Foundation.NSRange GetCharacterRangeForGlyphRange(valuetype MonoTouch.Foundation.NSRange glyphRange, valuetype MonoTouch.Foundation.NSRange actualGlyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("characterRangeForGlyphRange:actualGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="actualGlyphRange" Type="MonoTouch.Foundation.NSRange&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <param name="actualGlyphRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphsInRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nuint GetGlyphsInRange (MonoTouch.Foundation.NSRange glyphsRange, IntPtr glyphBuffer, IntPtr charIndexBuffer, IntPtr inscribeBuffer, IntPtr elasticBuffer, IntPtr bidiLevelBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint GetGlyphsInRange(valuetype MonoTouch.Foundation.NSRange glyphsRange, native int glyphBuffer, native int charIndexBuffer, native int inscribeBuffer, native int elasticBuffer, native int bidiLevelBuffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphsRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="glyphBuffer" Type="System.IntPtr" />
        <Parameter Name="charIndexBuffer" Type="System.IntPtr" />
        <Parameter Name="inscribeBuffer" Type="System.IntPtr" />
        <Parameter Name="elasticBuffer" Type="System.IntPtr" />
        <Parameter Name="bidiLevelBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="glyphsRange">To be added.</param>
        <param name="glyphBuffer">To be added.</param>
        <param name="charIndexBuffer">To be added.</param>
        <param name="inscribeBuffer">To be added.</param>
        <param name="elasticBuffer">To be added.</param>
        <param name="bidiLevelBuffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterGlyphSpacing" apistyle="unified">
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize GetInterGlyphSpacing (MonoTouch.AppKit.NSLayoutManager layoutManager, MonoTouch.Foundation.NSRange nominallySpacedGlyphsRange, IntPtr packedGlyphs, nuint packedGlyphsCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize GetInterGlyphSpacing(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype MonoTouch.Foundation.NSRange nominallySpacedGlyphsRange, native int packedGlyphs, valuetype System.nuint packedGlyphsCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="nominallySpacedGlyphsRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="packedGlyphs" Type="System.IntPtr" />
        <Parameter Name="packedGlyphsCount" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="nominallySpacedGlyphsRange">To be added.</param>
        <param name="packedGlyphs">To be added.</param>
        <param name="packedGlyphsCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFragment" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void GetLineFragment (out MonoTouch.CoreGraphics.CGRect lineFragmentRect, out MonoTouch.CoreGraphics.CGRect lineFragmentUsedRect, MonoTouch.Foundation.NSRange paragraphSeparatorGlyphRange, MonoTouch.CoreGraphics.CGPoint proposedOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetLineFragment(valuetype MonoTouch.CoreGraphics.CGRect lineFragmentRect, valuetype MonoTouch.CoreGraphics.CGRect lineFragmentUsedRect, valuetype MonoTouch.Foundation.NSRange paragraphSeparatorGlyphRange, valuetype MonoTouch.CoreGraphics.CGPoint proposedOrigin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineFragmentRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" />
        <Parameter Name="lineFragmentUsedRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" />
        <Parameter Name="paragraphSeparatorGlyphRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="proposedOrigin" Type="MonoTouch.CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="lineFragmentRect">To be added.</param>
        <param name="lineFragmentUsedRect">To be added.</param>
        <param name="paragraphSeparatorGlyphRange">To be added.</param>
        <param name="proposedOrigin">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFragment" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void GetLineFragment (out MonoTouch.CoreGraphics.CGRect lineFragment, out MonoTouch.CoreGraphics.CGRect lineFragmentUsed, out MonoTouch.CoreGraphics.CGRect remaining, nuint startingGlyphIndex, MonoTouch.CoreGraphics.CGRect proposedRect, nfloat lineSpacing, nfloat paragraphSpacingBefore, nfloat paragraphSpacingAfter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetLineFragment(valuetype MonoTouch.CoreGraphics.CGRect lineFragment, valuetype MonoTouch.CoreGraphics.CGRect lineFragmentUsed, valuetype MonoTouch.CoreGraphics.CGRect remaining, valuetype System.nuint startingGlyphIndex, valuetype MonoTouch.CoreGraphics.CGRect proposedRect, valuetype System.nfloat lineSpacing, valuetype System.nfloat paragraphSpacingBefore, valuetype System.nfloat paragraphSpacingAfter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineFragment" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" />
        <Parameter Name="lineFragmentUsed" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" />
        <Parameter Name="remaining" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" />
        <Parameter Name="startingGlyphIndex" Type="System.nuint" />
        <Parameter Name="proposedRect" Type="MonoTouch.CoreGraphics.CGRect" />
        <Parameter Name="lineSpacing" Type="System.nfloat" />
        <Parameter Name="paragraphSpacingBefore" Type="System.nfloat" />
        <Parameter Name="paragraphSpacingAfter" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="lineFragment">To be added.</param>
        <param name="lineFragmentUsed">To be added.</param>
        <param name="remaining">To be added.</param>
        <param name="startingGlyphIndex">To be added.</param>
        <param name="proposedRect">To be added.</param>
        <param name="lineSpacing">To be added.</param>
        <param name="paragraphSpacingBefore">To be added.</param>
        <param name="paragraphSpacingAfter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineSpacingAfterGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nfloat GetLineSpacingAfterGlyph (nuint glyphIndex, MonoTouch.CoreGraphics.CGRect proposedLineFragmentRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetLineSpacingAfterGlyph(valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect proposedLineFragmentRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="proposedLineFragmentRect" Type="MonoTouch.CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <param name="proposedLineFragmentRect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParagraphSpacingAfterGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nfloat GetParagraphSpacingAfterGlyph (nuint glyphIndex, MonoTouch.CoreGraphics.CGRect proposedLineFragmentRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetParagraphSpacingAfterGlyph(valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect proposedLineFragmentRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="proposedLineFragmentRect" Type="MonoTouch.CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <param name="proposedLineFragmentRect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParagraphSpacingBeforeGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nfloat GetParagraphSpacingBeforeGlyph (nuint glyphIndex, MonoTouch.CoreGraphics.CGRect proposedLineFragmentRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetParagraphSpacingBeforeGlyph(valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect proposedLineFragmentRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="proposedLineFragmentRect" Type="MonoTouch.CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <param name="proposedLineFragmentRect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSharedSystemTypesetter" apistyle="unified">
      <MemberSignature Language="C#" Value="public static MonoTouch.AppKit.NSTypesetter GetSharedSystemTypesetter (MonoTouch.AppKit.NSTypesetterBehavior forBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AppKit.NSTypesetter GetSharedSystemTypesetter(valuetype MonoTouch.AppKit.NSTypesetterBehavior forBehavior) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("sharedSystemTypesetterForBehavior:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSTypesetter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forBehavior" Type="MonoTouch.AppKit.NSTypesetterBehavior" />
      </Parameters>
      <Docs>
        <param name="forBehavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubstituteFont" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSFont GetSubstituteFont (MonoTouch.AppKit.NSFont originalFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.AppKit.NSFont GetSubstituteFont(class MonoTouch.AppKit.NSFont originalFont) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("substituteFontForFont:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSFont</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalFont" Type="MonoTouch.AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="originalFont">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextTab" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSTextTab GetTextTab (nfloat glyphLocation, MonoTouch.AppKit.NSWritingDirection direction, nfloat maxLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.AppKit.NSTextTab GetTextTab(valuetype System.nfloat glyphLocation, valuetype MonoTouch.AppKit.NSWritingDirection direction, valuetype System.nfloat maxLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textTabForGlyphLocation:writingDirection:maxLocation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSTextTab</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphLocation" Type="System.nfloat" />
        <Parameter Name="direction" Type="MonoTouch.AppKit.NSWritingDirection" />
        <Parameter Name="maxLocation" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="glyphLocation">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="maxLocation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphRangeForCharacterRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSRange GlyphRangeForCharacterRange (MonoTouch.Foundation.NSRange charRange, out MonoTouch.Foundation.NSRange actualCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.Foundation.NSRange GlyphRangeForCharacterRange(valuetype MonoTouch.Foundation.NSRange charRange, valuetype MonoTouch.Foundation.NSRange actualCharRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("glyphRangeForCharacterRange:actualCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="actualCharRange" Type="MonoTouch.Foundation.NSRange&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <param name="actualCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HyphenationFactor" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual float HyphenationFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HyphenationFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("hyphenationFactor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setHyphenationFactor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HyphenationFactorForGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual float HyphenationFactorForGlyph (nuint glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 HyphenationFactorForGlyph(valuetype System.nuint glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("hyphenationFactorForGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HyphenCharacterForGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual uint HyphenCharacterForGlyph (nuint glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 HyphenCharacterForGlyph(valuetype System.nuint glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("hyphenCharacterForGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void InsertGlyph (uint glyph, nuint glyphIndex, nuint characterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertGlyph(unsigned int32 glyph, valuetype System.nuint glyphIndex, valuetype System.nuint characterIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("insertGlyph:atGlyphIndex:characterIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="characterIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="characterIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutCharacters" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSRange LayoutCharacters (MonoTouch.Foundation.NSRange characterRange, MonoTouch.AppKit.NSLayoutManager layoutManager, nuint maxLineFragments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.Foundation.NSRange LayoutCharacters(valuetype MonoTouch.Foundation.NSRange characterRange, class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint maxLineFragments) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="maxLineFragments" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="characterRange">To be added.</param>
        <param name="layoutManager">To be added.</param>
        <param name="maxLineFragments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutGlyphs" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void LayoutGlyphs (MonoTouch.AppKit.NSLayoutManager layoutManager, nuint startGlyphIndex, nuint maxLineFragments, out nuint nextGlyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LayoutGlyphs(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint startGlyphIndex, valuetype System.nuint maxLineFragments, valuetype System.nuint nextGlyph) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="startGlyphIndex" Type="System.nuint" />
        <Parameter Name="maxLineFragments" Type="System.nuint" />
        <Parameter Name="nextGlyph" Type="System.nuint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="startGlyphIndex">To be added.</param>
        <param name="maxLineFragments">To be added.</param>
        <param name="nextGlyph">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutManager" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSLayoutManager LayoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.AppKit.NSLayoutManager LayoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("layoutManager")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSLayoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutParagraphAtPoint" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nuint LayoutParagraphAtPoint (ref MonoTouch.CoreGraphics.CGPoint lineFragmentOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint LayoutParagraphAtPoint(valuetype MonoTouch.CoreGraphics.CGPoint lineFragmentOrigin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutParagraphAtPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineFragmentOrigin" Type="MonoTouch.CoreGraphics.CGPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="lineFragmentOrigin">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineFragmentPadding" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nfloat LineFragmentPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat LineFragmentPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("lineFragmentPadding")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLineFragmentPadding:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphCharacterRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSRange ParagraphCharacterRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Foundation.NSRange ParagraphCharacterRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("paragraphCharacterRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphGlyphRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSRange ParagraphGlyphRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Foundation.NSRange ParagraphGlyphRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("paragraphGlyphRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphSeparatorCharacterRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSRange ParagraphSeparatorCharacterRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Foundation.NSRange ParagraphSeparatorCharacterRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("paragraphSeparatorCharacterRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphSeparatorGlyphRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSRange ParagraphSeparatorGlyphRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Foundation.NSRange ParagraphSeparatorGlyphRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("paragraphSeparatorGlyphRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttachmentSize" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SetAttachmentSize (MonoTouch.CoreGraphics.CGSize attachmentSize, MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttachmentSize(valuetype MonoTouch.CoreGraphics.CGSize attachmentSize, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setAttachmentSize:forGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentSize" Type="MonoTouch.CoreGraphics.CGSize" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="attachmentSize">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBidiLevels" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SetBidiLevels (IntPtr levels, MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBidiLevels(native int levels, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setBidiLevels:forGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levels" Type="System.IntPtr" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="levels">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDrawsOutsideLineFragment" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SetDrawsOutsideLineFragment (bool flag, MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDrawsOutsideLineFragment(bool flag, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setDrawsOutsideLineFragment:forGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="flag">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHardInvalidation" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SetHardInvalidation (bool value, MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHardInvalidation(bool value, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setHardInvalidation:forGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineFragment" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SetLineFragment (MonoTouch.CoreGraphics.CGRect fragmentRect, MonoTouch.Foundation.NSRange glyphRange, MonoTouch.CoreGraphics.CGRect usedRect, nfloat baselineOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineFragment(valuetype MonoTouch.CoreGraphics.CGRect fragmentRect, valuetype MonoTouch.Foundation.NSRange glyphRange, valuetype MonoTouch.CoreGraphics.CGRect usedRect, valuetype System.nfloat baselineOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragmentRect" Type="MonoTouch.CoreGraphics.CGRect" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="usedRect" Type="MonoTouch.CoreGraphics.CGRect" />
        <Parameter Name="baselineOffset" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="fragmentRect">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <param name="usedRect">To be added.</param>
        <param name="baselineOffset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocation" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SetLocation (MonoTouch.CoreGraphics.CGPoint location, IntPtr advancements, MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocation(valuetype MonoTouch.CoreGraphics.CGPoint location, native int advancements, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setLocation:withAdvancements:forStartOfGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="MonoTouch.CoreGraphics.CGPoint" />
        <Parameter Name="advancements" Type="System.IntPtr" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="advancements">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNotShownAttribute" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SetNotShownAttribute (bool flag, MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNotShownAttribute(bool flag, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setNotShownAttribute:forGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="flag">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParagraphGlyphRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SetParagraphGlyphRange (MonoTouch.Foundation.NSRange paragraphRange, MonoTouch.Foundation.NSRange paragraphSeparatorRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParagraphGlyphRange(valuetype MonoTouch.Foundation.NSRange paragraphRange, valuetype MonoTouch.Foundation.NSRange paragraphSeparatorRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setParagraphGlyphRange:separatorGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paragraphRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="paragraphSeparatorRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="paragraphRange">To be added.</param>
        <param name="paragraphSeparatorRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedSystemTypesetter" apistyle="unified">
      <MemberSignature Language="C#" Value="public static MonoTouch.AppKit.NSTypesetter SharedSystemTypesetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoTouch.AppKit.NSTypesetter SharedSystemTypesetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("sharedSystemTypesetter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSTypesetter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByHyphenatingBeforeCharacter" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBreakLineByHyphenatingBeforeCharacter (nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBreakLineByHyphenatingBeforeCharacter(valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("shouldBreakLineByHyphenatingBeforeCharacterAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByWordBeforeCharacter" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBreakLineByWordBeforeCharacter (nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBreakLineByWordBeforeCharacter(valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("shouldBreakLineByWordBeforeCharacterAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubstituteGlyphs" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void SubstituteGlyphs (MonoTouch.Foundation.NSRange glyphRange, IntPtr glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubstituteGlyphs(valuetype MonoTouch.Foundation.NSRange glyphRange, native int glyphs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("substituteGlyphsInRange:withGlyphs:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="glyphs" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <param name="glyphs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainers" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSTextContainer[] TextContainers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.AppKit.NSTextContainer[] TextContainers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("textContainers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSTextContainer[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypesetterBehavior" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSTypesetterBehavior TypesetterBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.AppKit.NSTypesetterBehavior TypesetterBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("typesetterBehavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTypesetterBehavior:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSTypesetterBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesFontLeading" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool UsesFontLeading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesFontLeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("usesFontLeading")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setUsesFontLeading:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillSetLineFragment" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void WillSetLineFragment (ref MonoTouch.CoreGraphics.CGRect lineRect, MonoTouch.Foundation.NSRange glyphRange, ref MonoTouch.CoreGraphics.CGRect usedRect, ref nfloat baselineOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillSetLineFragment(valuetype MonoTouch.CoreGraphics.CGRect lineRect, valuetype MonoTouch.Foundation.NSRange glyphRange, valuetype MonoTouch.CoreGraphics.CGRect usedRect, valuetype System.nfloat baselineOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="usedRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" />
        <Parameter Name="baselineOffset" Type="System.nfloat&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="lineRect">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <param name="usedRect">To be added.</param>
        <param name="baselineOffset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
