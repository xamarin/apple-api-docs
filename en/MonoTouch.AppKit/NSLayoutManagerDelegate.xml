<Type Name="NSLayoutManagerDelegate" FullName="MonoTouch.AppKit.NSLayoutManagerDelegate">
  <TypeSignature Language="C#" Value="public class NSLayoutManagerDelegate : MonoTouch.Foundation.NSObject, IDisposable, MonoTouch.AppKit.INSLayoutManagerDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSLayoutManagerDelegate extends MonoTouch.Foundation.NSObject implements class MonoTouch.AppKit.INSLayoutManagerDelegate, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.AppKit.INSLayoutManagerDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("NSLayoutManagerDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public NSLayoutManagerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected NSLayoutManagerDelegate (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected NSLayoutManagerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeGeometry" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void DidChangeGeometry (MonoTouch.AppKit.NSLayoutManager layoutManager, MonoTouch.AppKit.NSTextContainer textContainer, MonoTouch.CoreGraphics.CGSize oldSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeGeometry(class MonoTouch.AppKit.NSLayoutManager layoutManager, class MonoTouch.AppKit.NSTextContainer textContainer, valuetype MonoTouch.CoreGraphics.CGSize oldSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:textContainer:didChangeGeometryFromSize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="textContainer" Type="MonoTouch.AppKit.NSTextContainer" />
        <Parameter Name="oldSize" Type="MonoTouch.CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="oldSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingBox" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGRect GetBoundingBox (MonoTouch.AppKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.AppKit.NSTextContainer textContainer, MonoTouch.CoreGraphics.CGRect proposedRect, MonoTouch.CoreGraphics.CGPoint glyphPosition, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreGraphics.CGRect GetBoundingBox(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, class MonoTouch.AppKit.NSTextContainer textContainer, valuetype MonoTouch.CoreGraphics.CGRect proposedRect, valuetype MonoTouch.CoreGraphics.CGPoint glyphPosition, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="textContainer" Type="MonoTouch.AppKit.NSTextContainer" />
        <Parameter Name="proposedRect" Type="MonoTouch.CoreGraphics.CGRect" />
        <Parameter Name="glyphPosition" Type="MonoTouch.CoreGraphics.CGPoint" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="proposedRect">To be added.</param>
        <param name="glyphPosition">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineSpacingAfterGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nfloat GetLineSpacingAfterGlyph (MonoTouch.AppKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetLineSpacingAfterGlyph(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParagraphSpacingAfterGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nfloat GetParagraphSpacingAfterGlyph (MonoTouch.AppKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetParagraphSpacingAfterGlyph(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParagraphSpacingBeforeGlyph" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nfloat GetParagraphSpacingBeforeGlyph (MonoTouch.AppKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetParagraphSpacingBeforeGlyph(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.nuint" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutCompleted" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void LayoutCompleted (MonoTouch.AppKit.NSLayoutManager layoutManager, MonoTouch.AppKit.NSTextContainer textContainer, bool layoutFinishedFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LayoutCompleted(class MonoTouch.AppKit.NSLayoutManager layoutManager, class MonoTouch.AppKit.NSTextContainer textContainer, bool layoutFinishedFlag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:didCompleteLayoutForTextContainer:atEnd:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="textContainer" Type="MonoTouch.AppKit.NSTextContainer" />
        <Parameter Name="layoutFinishedFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="layoutFinishedFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidated" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void LayoutInvalidated (MonoTouch.AppKit.NSLayoutManager sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LayoutInvalidated(class MonoTouch.AppKit.NSLayoutManager sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManagerDidInvalidateLayout:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoTouch.AppKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByHyphenatingBeforeCharacter" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBreakLineByHyphenatingBeforeCharacter (MonoTouch.AppKit.NSLayoutManager layoutManager, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBreakLineByHyphenatingBeforeCharacter(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByWordBeforeCharacter" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool ShouldBreakLineByWordBeforeCharacter (MonoTouch.AppKit.NSLayoutManager layoutManager, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldBreakLineByWordBeforeCharacter(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldGenerateGlyphs" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nuint ShouldGenerateGlyphs (MonoTouch.AppKit.NSLayoutManager layoutManager, IntPtr glyphBuffer, IntPtr props, IntPtr charIndexes, MonoTouch.AppKit.NSFont aFont, MonoTouch.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nuint ShouldGenerateGlyphs(class MonoTouch.AppKit.NSLayoutManager layoutManager, native int glyphBuffer, native int props, native int charIndexes, class MonoTouch.AppKit.NSFont aFont, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="glyphBuffer" Type="System.IntPtr" />
        <Parameter Name="props" Type="System.IntPtr" />
        <Parameter Name="charIndexes" Type="System.IntPtr" />
        <Parameter Name="aFont" Type="MonoTouch.AppKit.NSFont" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="glyphBuffer">To be added.</param>
        <param name="props">To be added.</param>
        <param name="charIndexes">To be added.</param>
        <param name="aFont">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSControlCharacterAction ShouldUseAction (MonoTouch.AppKit.NSLayoutManager layoutManager, MonoTouch.AppKit.NSControlCharacterAction action, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.AppKit.NSControlCharacterAction ShouldUseAction(class MonoTouch.AppKit.NSLayoutManager layoutManager, valuetype MonoTouch.AppKit.NSControlCharacterAction action, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldUseAction:forControlCharacterAtIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSControlCharacterAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="action" Type="MonoTouch.AppKit.NSControlCharacterAction" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="action">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseTemporaryAttributes" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSDictionary ShouldUseTemporaryAttributes (MonoTouch.AppKit.NSLayoutManager layoutManager, MonoTouch.Foundation.NSDictionary temporaryAttributes, bool drawingToScreen, nint charIndex, IntPtr effectiveCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSDictionary ShouldUseTemporaryAttributes(class MonoTouch.AppKit.NSLayoutManager layoutManager, class MonoTouch.Foundation.NSDictionary temporaryAttributes, bool drawingToScreen, valuetype System.nint charIndex, native int effectiveCharRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutManager" Type="MonoTouch.AppKit.NSLayoutManager" />
        <Parameter Name="temporaryAttributes" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="drawingToScreen" Type="System.Boolean" />
        <Parameter Name="charIndex" Type="System.nint" />
        <Parameter Name="effectiveCharRange" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="layoutManager">To be added.</param>
        <param name="temporaryAttributes">To be added.</param>
        <param name="drawingToScreen">To be added.</param>
        <param name="charIndex">To be added.</param>
        <param name="effectiveCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
