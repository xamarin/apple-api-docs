<Type Name="INSDraggingInfo" FullName="MonoTouch.AppKit.INSDraggingInfo">
  <TypeSignature Language="C#" Value="public interface INSDraggingInfo : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSDraggingInfo implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="NSDraggingInfo", WrapperType=typeof(MonoTouch.AppKit.NSDraggingInfoWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="SlideDraggedImageTo", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="slideDraggedImageTo:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PromisedFilesDroppedAtDestination", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.String[]), Selector="namesOfPromisedFilesDroppedAtDestination:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="EnumerateDraggingItems", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ResetSpringLoading", Selector="resetSpringLoading")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggingDestinationWindow", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggingDestinationWindow", PropertyType=typeof(MonoTouch.AppKit.NSWindow), Selector="draggingDestinationWindow")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggingSourceOperationMask", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggingSourceOperationMask", PropertyType=typeof(MonoTouch.AppKit.NSDragOperation), Selector="draggingSourceOperationMask")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggingLocation", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggingLocation", PropertyType=typeof(MonoTouch.CoreGraphics.CGPoint), Selector="draggingLocation")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggedImageLocation", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggedImageLocation", PropertyType=typeof(MonoTouch.CoreGraphics.CGPoint), Selector="draggedImageLocation")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggedImage", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggedImage", PropertyType=typeof(MonoTouch.AppKit.NSImage), Selector="draggedImage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggingPasteboard", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggingPasteboard", PropertyType=typeof(MonoTouch.AppKit.NSPasteboard), Selector="draggingPasteboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggingSource", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggingSource", PropertyType=typeof(MonoTouch.Foundation.NSObject), Selector="draggingSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggingSequenceNumber", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggingSequenceNumber", PropertyType=typeof(System.nint), Selector="draggingSequenceNumber")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="animatesToDestination", IsProperty=true, IsRequired=false, IsStatic=false, Name="AnimatesToDestination", PropertyType=typeof(System.Boolean), Selector="animatesToDestination", SetterSelector="setAnimatesToDestination:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="numberOfValidItemsForDrop", IsProperty=true, IsRequired=false, IsStatic=false, Name="NumberOfValidItemsForDrop", PropertyType=typeof(System.nint), Selector="numberOfValidItemsForDrop", SetterSelector="setNumberOfValidItemsForDrop:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="draggingFormation", IsProperty=true, IsRequired=false, IsStatic=false, Name="DraggingFormation", PropertyType=typeof(MonoTouch.AppKit.NSDraggingFormation), Selector="draggingFormation", SetterSelector="setDraggingFormation:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="springLoadingHighlight", IsProperty=true, IsRequired=false, IsStatic=false, Name="SpringLoadingHighlight", PropertyType=typeof(MonoTouch.AppKit.NSSpringLoadingHighlight), Selector="springLoadingHighlight")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
