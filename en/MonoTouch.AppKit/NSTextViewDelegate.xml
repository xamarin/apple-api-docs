<Type Name="NSTextViewDelegate" FullName="MonoTouch.AppKit.NSTextViewDelegate">
  <TypeSignature Language="C#" Value="public class NSTextViewDelegate : MonoTouch.AppKit.NSTextDelegate, IDisposable, MonoTouch.AppKit.INSTextViewDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTextViewDelegate extends MonoTouch.AppKit.NSTextDelegate implements class MonoTouch.AppKit.INSTextDelegate, class MonoTouch.AppKit.INSTextViewDelegate, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.AppKit.NSTextDelegate</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.AppKit.INSTextViewDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("NSTextViewDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public NSTextViewDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected NSTextViewDelegate (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected NSTextViewDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellClicked" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void CellClicked (MonoTouch.AppKit.NSTextView textView, MonoTouch.AppKit.NSTextAttachmentCell cell, MonoTouch.CoreGraphics.CGRect cellFrame, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CellClicked(class MonoTouch.AppKit.NSTextView textView, class MonoTouch.AppKit.NSTextAttachmentCell cell, valuetype MonoTouch.CoreGraphics.CGRect cellFrame, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:clickedOnCell:inRect:atIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="cell" Type="MonoTouch.AppKit.NSTextAttachmentCell" />
        <Parameter Name="cellFrame" Type="MonoTouch.CoreGraphics.CGRect" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDoubleClicked" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void CellDoubleClicked (MonoTouch.AppKit.NSTextView textView, MonoTouch.AppKit.NSTextAttachmentCell cell, MonoTouch.CoreGraphics.CGRect cellFrame, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CellDoubleClicked(class MonoTouch.AppKit.NSTextView textView, class MonoTouch.AppKit.NSTextAttachmentCell cell, valuetype MonoTouch.CoreGraphics.CGRect cellFrame, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:doubleClickedOnCell:inRect:atIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="cell" Type="MonoTouch.AppKit.NSTextAttachmentCell" />
        <Parameter Name="cellFrame" Type="MonoTouch.CoreGraphics.CGRect" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeSelection" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void DidChangeSelection (MonoTouch.Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeSelection(class MonoTouch.Foundation.NSNotification notification) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textViewDidChangeSelection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="MonoTouch.Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeTypingAttributes" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void DidChangeTypingAttributes (MonoTouch.Foundation.NSNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeTypingAttributes(class MonoTouch.Foundation.NSNotification notification) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textViewDidChangeTypingAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="MonoTouch.Foundation.NSNotification" />
      </Parameters>
      <Docs>
        <param name="notification">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidCheckText" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSTextCheckingResult[] DidCheckText (MonoTouch.AppKit.NSTextView view, MonoTouch.Foundation.NSRange range, MonoTouch.Foundation.NSTextCheckingTypes checkingTypes, MonoTouch.Foundation.NSDictionary options, MonoTouch.Foundation.NSTextCheckingResult[] results, MonoTouch.Foundation.NSOrthography orthography, nint wordCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSTextCheckingResult[] DidCheckText(class MonoTouch.AppKit.NSTextView view, valuetype MonoTouch.Foundation.NSRange range, valuetype MonoTouch.Foundation.NSTextCheckingTypes checkingTypes, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.Foundation.NSTextCheckingResult[] results, class MonoTouch.Foundation.NSOrthography orthography, valuetype System.nint wordCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:didCheckTextInRange:types:options:results:orthography:wordCount:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSTextCheckingResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="checkingTypes" Type="MonoTouch.Foundation.NSTextCheckingTypes" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="results" Type="MonoTouch.Foundation.NSTextCheckingResult[]" />
        <Parameter Name="orthography" Type="MonoTouch.Foundation.NSOrthography" />
        <Parameter Name="wordCount" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="range">To be added.</param>
        <param name="checkingTypes">To be added.</param>
        <param name="options">To be added.</param>
        <param name="results">To be added.</param>
        <param name="orthography">To be added.</param>
        <param name="wordCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoCommandBySelector" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool DoCommandBySelector (MonoTouch.AppKit.NSTextView textView, MonoTouch.ObjCRuntime.Selector commandSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DoCommandBySelector(class MonoTouch.AppKit.NSTextView textView, class MonoTouch.ObjCRuntime.Selector commandSelector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:doCommandBySelector:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="commandSelector" Type="MonoTouch.ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="commandSelector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggedCell" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void DraggedCell (MonoTouch.AppKit.NSTextView view, MonoTouch.AppKit.NSTextAttachmentCell cell, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.AppKit.NSEvent theevent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggedCell(class MonoTouch.AppKit.NSTextView view, class MonoTouch.AppKit.NSTextAttachmentCell cell, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.AppKit.NSEvent theevent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:draggedCell:inRect:event:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="cell" Type="MonoTouch.AppKit.NSTextAttachmentCell" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        <Parameter Name="theevent" Type="MonoTouch.AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="rect">To be added.</param>
        <param name="theevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletions" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual string[] GetCompletions (MonoTouch.AppKit.NSTextView textView, string[] words, MonoTouch.Foundation.NSRange charRange, ref nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetCompletions(class MonoTouch.AppKit.NSTextView textView, string[] words, valuetype MonoTouch.Foundation.NSRange charRange, valuetype System.nint index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:completions:forPartialWordRange:indexOfSelectedItem:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="words" Type="System.String[]" />
        <Parameter Name="charRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="index" Type="System.nint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="words">To be added.</param>
        <param name="charRange">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUndoManager" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSUndoManager GetUndoManager (MonoTouch.AppKit.NSTextView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSUndoManager GetUndoManager(class MonoTouch.AppKit.NSTextView view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("undoManagerForTextView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUndoManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="MonoTouch.AppKit.NSTextView" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWritablePasteboardTypes" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual string[] GetWritablePasteboardTypes (MonoTouch.AppKit.NSTextView view, MonoTouch.AppKit.NSTextAttachmentCell forCell, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetWritablePasteboardTypes(class MonoTouch.AppKit.NSTextView view, class MonoTouch.AppKit.NSTextAttachmentCell forCell, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:writablePasteboardTypesForCell:atIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="forCell" Type="MonoTouch.AppKit.NSTextAttachmentCell" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="forCell">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkClicked" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool LinkClicked (MonoTouch.AppKit.NSTextView textView, MonoTouch.Foundation.NSObject link, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LinkClicked(class MonoTouch.AppKit.NSTextView textView, class MonoTouch.Foundation.NSObject link, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:clickedOnLink:atIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="link" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="link">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuForEvent" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AppKit.NSMenu MenuForEvent (MonoTouch.AppKit.NSTextView view, MonoTouch.AppKit.NSMenu menu, MonoTouch.AppKit.NSEvent theEvent, nuint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.AppKit.NSMenu MenuForEvent(class MonoTouch.AppKit.NSTextView view, class MonoTouch.AppKit.NSMenu menu, class MonoTouch.AppKit.NSEvent theEvent, valuetype System.nuint charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:menu:forEvent:atIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AppKit.NSMenu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="menu" Type="MonoTouch.AppKit.NSMenu" />
        <Parameter Name="theEvent" Type="MonoTouch.AppKit.NSEvent" />
        <Parameter Name="charIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="menu">To be added.</param>
        <param name="theEvent">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRange" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeTextInRange (MonoTouch.AppKit.NSTextView textView, MonoTouch.Foundation.NSRange affectedCharRange, string replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeTextInRange(class MonoTouch.AppKit.NSTextView textView, valuetype MonoTouch.Foundation.NSRange affectedCharRange, string replacementString) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:shouldChangeTextInRange:replacementString:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="affectedCharRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="affectedCharRange">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRanges" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeTextInRanges (MonoTouch.AppKit.NSTextView textView, MonoTouch.Foundation.NSValue[] affectedRanges, string[] replacementStrings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeTextInRanges(class MonoTouch.AppKit.NSTextView textView, class MonoTouch.Foundation.NSValue[] affectedRanges, string[] replacementStrings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:shouldChangeTextInRanges:replacementStrings:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="affectedRanges" Type="MonoTouch.Foundation.NSValue[]" />
        <Parameter Name="replacementStrings" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="affectedRanges">To be added.</param>
        <param name="replacementStrings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTypingAttributes" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSDictionary ShouldChangeTypingAttributes (MonoTouch.AppKit.NSTextView textView, MonoTouch.Foundation.NSDictionary oldTypingAttributes, MonoTouch.Foundation.NSDictionary newTypingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSDictionary ShouldChangeTypingAttributes(class MonoTouch.AppKit.NSTextView textView, class MonoTouch.Foundation.NSDictionary oldTypingAttributes, class MonoTouch.Foundation.NSDictionary newTypingAttributes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:shouldChangeTypingAttributes:toAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="oldTypingAttributes" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="newTypingAttributes" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="oldTypingAttributes">To be added.</param>
        <param name="newTypingAttributes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSetSpellingState" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual nint ShouldSetSpellingState (MonoTouch.AppKit.NSTextView textView, nint value, MonoTouch.Foundation.NSRange affectedCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nint ShouldSetSpellingState(class MonoTouch.AppKit.NSTextView textView, valuetype System.nint value, valuetype MonoTouch.Foundation.NSRange affectedCharRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:shouldSetSpellingState:range:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="value" Type="System.nint" />
        <Parameter Name="affectedCharRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="value">To be added.</param>
        <param name="affectedCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeSelection" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSRange WillChangeSelection (MonoTouch.AppKit.NSTextView textView, MonoTouch.Foundation.NSRange oldSelectedCharRange, MonoTouch.Foundation.NSRange newSelectedCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.Foundation.NSRange WillChangeSelection(class MonoTouch.AppKit.NSTextView textView, valuetype MonoTouch.Foundation.NSRange oldSelectedCharRange, valuetype MonoTouch.Foundation.NSRange newSelectedCharRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:willChangeSelectionFromCharacterRange:toCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="oldSelectedCharRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="newSelectedCharRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="oldSelectedCharRange">To be added.</param>
        <param name="newSelectedCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeSelectionFromRanges" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSValue[] WillChangeSelectionFromRanges (MonoTouch.AppKit.NSTextView textView, MonoTouch.Foundation.NSValue[] oldSelectedCharRanges, MonoTouch.Foundation.NSValue[] newSelectedCharRanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSValue[] WillChangeSelectionFromRanges(class MonoTouch.AppKit.NSTextView textView, class MonoTouch.Foundation.NSValue[] oldSelectedCharRanges, class MonoTouch.Foundation.NSValue[] newSelectedCharRanges) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSValue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="oldSelectedCharRanges" Type="MonoTouch.Foundation.NSValue[]" />
        <Parameter Name="newSelectedCharRanges" Type="MonoTouch.Foundation.NSValue[]" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="oldSelectedCharRanges">To be added.</param>
        <param name="newSelectedCharRanges">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillCheckText" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSDictionary WillCheckText (MonoTouch.AppKit.NSTextView view, MonoTouch.Foundation.NSRange range, MonoTouch.Foundation.NSDictionary options, MonoTouch.Foundation.NSTextCheckingTypes checkingTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSDictionary WillCheckText(class MonoTouch.AppKit.NSTextView view, valuetype MonoTouch.Foundation.NSRange range, class MonoTouch.Foundation.NSDictionary options, valuetype MonoTouch.Foundation.NSTextCheckingTypes checkingTypes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:willCheckTextInRange:options:types:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="checkingTypes" Type="MonoTouch.Foundation.NSTextCheckingTypes" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="range">To be added.</param>
        <param name="options">To be added.</param>
        <param name="checkingTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDisplayToolTip" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual string WillDisplayToolTip (MonoTouch.AppKit.NSTextView textView, string tooltip, nuint characterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WillDisplayToolTip(class MonoTouch.AppKit.NSTextView textView, string tooltip, valuetype System.nuint characterIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:willDisplayToolTip:forCharacterAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textView" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="tooltip" Type="System.String" />
        <Parameter Name="characterIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textView">To be added.</param>
        <param name="tooltip">To be added.</param>
        <param name="characterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCell" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool WriteCell (MonoTouch.AppKit.NSTextView view, MonoTouch.AppKit.NSTextAttachmentCell cell, nuint charIndex, MonoTouch.AppKit.NSPasteboard pboard, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteCell(class MonoTouch.AppKit.NSTextView view, class MonoTouch.AppKit.NSTextAttachmentCell cell, valuetype System.nuint charIndex, class MonoTouch.AppKit.NSPasteboard pboard, string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("textView:writeCell:atIndex:toPasteboard:type:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="MonoTouch.AppKit.NSTextView" />
        <Parameter Name="cell" Type="MonoTouch.AppKit.NSTextAttachmentCell" />
        <Parameter Name="charIndex" Type="System.nuint" />
        <Parameter Name="pboard" Type="MonoTouch.AppKit.NSPasteboard" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="charIndex">To be added.</param>
        <param name="pboard">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
