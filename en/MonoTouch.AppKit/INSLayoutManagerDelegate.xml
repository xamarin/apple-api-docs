<Type Name="INSLayoutManagerDelegate" FullName="MonoTouch.AppKit.INSLayoutManagerDelegate">
  <TypeSignature Language="C#" Value="public interface INSLayoutManagerDelegate : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSLayoutManagerDelegate implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="NSLayoutManagerDelegate", WrapperType=typeof(MonoTouch.AppKit.NSLayoutManagerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="LayoutInvalidated", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="layoutManagerDidInvalidateLayout:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="LayoutCompleted", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="layoutManager:didCompleteLayoutForTextContainer:atEnd:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldUseTemporaryAttributes", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.Foundation.NSDictionary), Selector="layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldGenerateGlyphs", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.nuint), Selector="layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetLineSpacingAfterGlyph", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.nfloat), Selector="layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetParagraphSpacingBeforeGlyph", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.nfloat), Selector="layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetParagraphSpacingAfterGlyph", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.nfloat), Selector="layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldUseAction", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.AppKit.NSControlCharacterAction), Selector="layoutManager:shouldUseAction:forControlCharacterAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldBreakLineByWordBeforeCharacter", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.Boolean), Selector="layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldBreakLineByHyphenatingBeforeCharacter", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.Boolean), Selector="layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetBoundingBox", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.CoreGraphics.CGRect), Selector="layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidChangeGeometry", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="layoutManager:textContainer:didChangeGeometryFromSize:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
