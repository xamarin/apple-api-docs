<Type Name="ICLSDataStoreDelegate" FullName="ClassKit.ICLSDataStoreDelegate">
  <TypeSignature Language="C#" Value="public interface ICLSDataStoreDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICLSDataStoreDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ClassKit.ICLSDataStoreDelegate" />
  <TypeSignature Language="F#" Value="type ICLSDataStoreDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="CLSDataStoreDelegate", WrapperType=typeof(ClassKit.CLSDataStoreDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateContext", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(ClassKit.CLSContext), Selector="createContextForIdentifier:parentContext:parentIdentifierPath:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateContext", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(System.String), typeof(ClassKit.CLSContext), typeof(System.String[]) }, ReturnType=typeof(ClassKit.CLSContext), Selector="createContextForIdentifier:parentContext:parentIdentifierPath:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate for requesting data store contexts.</summary>
    <remarks>
      <para>ClassKit contexts are used to arrange nested content, such as chapters and sections of a lesson plan, in order to organize and track student progress and tests. ClassKit supports a maximum of 8 layers of content nesting.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public ClassKit.CLSContext CreateContext (string identifier, ClassKit.CLSContext parentContext, string[] parentIdentifierPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class ClassKit.CLSContext CreateContext(string identifier, class ClassKit.CLSContext parentContext, string[] parentIdentifierPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:ClassKit.ICLSDataStoreDelegate.CreateContext(System.String,ClassKit.CLSContext,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member CreateContext : string * ClassKit.CLSContext * string[] -&gt; ClassKit.CLSContext" Usage="iCLSDataStoreDelegate.CreateContext (identifier, parentContext, parentIdentifierPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("createContextForIdentifier:parentContext:parentIdentifierPath:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ClassKit.CLSContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="parentContext" Type="ClassKit.CLSContext" />
        <Parameter Name="parentIdentifierPath" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="identifier">The identifier for the context to create.</param>
        <param name="parentContext">The parent context for the context to create.</param>
        <param name="parentIdentifierPath">The identifier path for the parent of the context to create.</param>
        <summary>Requests a context for the provided parameters.</summary>
        <returns>A new ClassKit store context.</returns>
        <remarks>
          <para>ClassKit contexts are used to arrange nested content, such as chapters and sections of a lesson plan, in order to organize and track student progress and tests. ClassKit supports a maximum of 8 layers of content nesting.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
