<Type Name="TestOutputType" FullName="NUnit.Framework.Api.TestOutputType">
  <TypeSignature Language="C#" Value="public enum TestOutputType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TestOutputType extends System.Enum" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
    <AssemblyVersion>0.8.0.0</AssemblyVersion>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Enum representing the output destination
            It uses combinable flags so that a given
            output control can accept multiple types
            of output. Normally, each individual
            output uses a single flag value.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="Error" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype NUnit.Framework.Api.TestOutputType Error = int32(1)" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.TestOutputType Error = int32(1)" apistyle="unified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">NUnit.Framework.Api.TestOutputType</ReturnType>
        <ReturnType apistyle="unified">Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.TestOutputType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Send output to stdErr
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="Log" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype NUnit.Framework.Api.TestOutputType Log = int32(3)" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.TestOutputType Log = int32(3)" apistyle="unified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">NUnit.Framework.Api.TestOutputType</ReturnType>
        <ReturnType apistyle="unified">Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.TestOutputType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Send output to Log
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="Out" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype NUnit.Framework.Api.TestOutputType Out = int32(0)" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.TestOutputType Out = int32(0)" apistyle="unified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">NUnit.Framework.Api.TestOutputType</ReturnType>
        <ReturnType apistyle="unified">Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.TestOutputType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Send output to stdOut
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="Trace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype NUnit.Framework.Api.TestOutputType Trace = int32(2)" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.TestOutputType Trace = int32(2)" apistyle="unified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">NUnit.Framework.Api.TestOutputType</ReturnType>
        <ReturnType apistyle="unified">Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.TestOutputType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Send output to Trace
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
