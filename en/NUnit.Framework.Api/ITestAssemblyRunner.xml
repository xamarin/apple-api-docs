<Type Name="ITestAssemblyRunner" FullName="NUnit.Framework.Api.ITestAssemblyRunner">
  <TypeSignature Language="C#" Value="public interface ITestAssemblyRunner" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITestAssemblyRunner" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The ITestAssemblyRunner interface is implemented by classes
            that are able to execute a suite of tests loaded
            from an assembly.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public bool Load (System.Reflection.Assembly assembly, System.Collections.IDictionary settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Load(class System.Reflection.Assembly assembly, class System.Collections.IDictionary settings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="settings" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="assembly">The assembly to load</param>
        <param name="settings">To be added.</param>
        <summary>
            Loads the tests found in an Assembly, returning an
            indication of whether or not the load succeeded.
            </summary>
        <returns>True if the load was successful</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public bool Load (string assemblyName, System.Collections.IDictionary settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Load(string assemblyName, class System.Collections.IDictionary settings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="settings" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="assemblyName">File name of the assembly to load</param>
        <param name="settings">To be added.</param>
        <summary>
            Loads the tests found in an Assembly, returning an
            indication of whether or not the load succeeded.
            </summary>
        <returns>True if the load was successful</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedTest">
      <MemberSignature Language="C#" Value="public Xamarin.iOS.dll=NUnit.Framework.Api.ITest LoadedTest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.iOS.dll=NUnit.Framework.Api.ITest LoadedTest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=NUnit.Framework.Api.ITest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the tree of loaded tests, or null if
            no tests have been loaded.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>