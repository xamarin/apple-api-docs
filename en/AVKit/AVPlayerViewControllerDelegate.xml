<Type Name="AVPlayerViewControllerDelegate" FullName="AVKit.AVPlayerViewControllerDelegate">
  <TypeSignature Language="C#" Value="public class AVPlayerViewControllerDelegate : Foundation.NSObject, AVKit.IAVPlayerViewControllerDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVPlayerViewControllerDelegate extends Foundation.NSObject implements class AVKit.IAVPlayerViewControllerDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AVKit.AVPlayerViewControllerDelegate" />
  <TypeSignature Language="F#" Value="type AVPlayerViewControllerDelegate = class&#xA;    inherit NSObject&#xA;    interface IAVPlayerViewControllerDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AVKit.IAVPlayerViewControllerDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("AVPlayerViewControllerDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate object for the picture-in-picture controller. When overridden, the methods allow the developer to respond to events relating to p-in-p playback.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVKit/Reference/AVPlayerViewControllerDelegate_Protocol/index.html">Apple documentation for <c>AVPlayerViewControllerDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVPlayerViewControllerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVPlayerViewControllerDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVKit.AVPlayerViewControllerDelegate : Foundation.NSObjectFlag -&gt; AVKit.AVPlayerViewControllerDelegate" Usage="new AVKit.AVPlayerViewControllerDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVPlayerViewControllerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVKit.AVPlayerViewControllerDelegate : nativeint -&gt; AVKit.AVPlayerViewControllerDelegate" Usage="new AVKit.AVPlayerViewControllerDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStartPictureInPicture">
      <MemberSignature Language="C#" Value="public virtual void DidStartPictureInPicture (AVKit.AVPlayerViewController playerViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidStartPictureInPicture(class AVKit.AVPlayerViewController playerViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.DidStartPictureInPicture(AVKit.AVPlayerViewController)" />
      <MemberSignature Language="F#" Value="abstract member DidStartPictureInPicture : AVKit.AVPlayerViewController -&gt; unit&#xA;override this.DidStartPictureInPicture : AVKit.AVPlayerViewController -&gt; unit" Usage="aVPlayerViewControllerDelegate.DidStartPictureInPicture playerViewController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("playerViewControllerDidStartPictureInPicture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerViewController" Type="AVKit.AVPlayerViewController" />
      </Parameters>
      <Docs>
        <param name="playerViewController">To be added.</param>
        <summary>Picture In Picture playback has started.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStopPictureInPicture">
      <MemberSignature Language="C#" Value="public virtual void DidStopPictureInPicture (AVKit.AVPlayerViewController playerViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidStopPictureInPicture(class AVKit.AVPlayerViewController playerViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.DidStopPictureInPicture(AVKit.AVPlayerViewController)" />
      <MemberSignature Language="F#" Value="abstract member DidStopPictureInPicture : AVKit.AVPlayerViewController -&gt; unit&#xA;override this.DidStopPictureInPicture : AVKit.AVPlayerViewController -&gt; unit" Usage="aVPlayerViewControllerDelegate.DidStopPictureInPicture playerViewController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("playerViewControllerDidStopPictureInPicture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerViewController" Type="AVKit.AVPlayerViewController" />
      </Parameters>
      <Docs>
        <param name="playerViewController">To be added.</param>
        <summary>Picture In Picture playback has stopped.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedToStartPictureInPicture">
      <MemberSignature Language="C#" Value="public virtual void FailedToStartPictureInPicture (AVKit.AVPlayerViewController playerViewController, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FailedToStartPictureInPicture(class AVKit.AVPlayerViewController playerViewController, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.FailedToStartPictureInPicture(AVKit.AVPlayerViewController,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member FailedToStartPictureInPicture : AVKit.AVPlayerViewController * Foundation.NSError -&gt; unit&#xA;override this.FailedToStartPictureInPicture : AVKit.AVPlayerViewController * Foundation.NSError -&gt; unit" Usage="aVPlayerViewControllerDelegate.FailedToStartPictureInPicture (playerViewController, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("playerViewController:failedToStartPictureInPictureWithError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerViewController" Type="AVKit.AVPlayerViewController" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="playerViewController">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Picture In Picture playback failed to start.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreUserInterfaceForPictureInPicture">
      <MemberSignature Language="C#" Value="public virtual void RestoreUserInterfaceForPictureInPicture (AVKit.AVPlayerViewController playerViewController, Action&lt;bool&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreUserInterfaceForPictureInPicture(class AVKit.AVPlayerViewController playerViewController, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.RestoreUserInterfaceForPictureInPicture(AVKit.AVPlayerViewController,System.Action{System.Boolean})" />
      <MemberSignature Language="F#" Value="abstract member RestoreUserInterfaceForPictureInPicture : AVKit.AVPlayerViewController * Action&lt;bool&gt; -&gt; unit&#xA;override this.RestoreUserInterfaceForPictureInPicture : AVKit.AVPlayerViewController * Action&lt;bool&gt; -&gt; unit" Usage="aVPlayerViewControllerDelegate.RestoreUserInterfaceForPictureInPicture (playerViewController, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerViewController" Type="AVKit.AVPlayerViewController" />
        <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V2))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="playerViewController">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Picture In Picture playback is about to stop. Called to give the app the opportunity to provide a playback user interface by passing <see langword="true" /> to <paramref name="completionHandler" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldAutomaticallyDismissAtPictureInPictureStart">
      <MemberSignature Language="C#" Value="public virtual bool ShouldAutomaticallyDismissAtPictureInPictureStart (AVKit.AVPlayerViewController playerViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldAutomaticallyDismissAtPictureInPictureStart(class AVKit.AVPlayerViewController playerViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.ShouldAutomaticallyDismissAtPictureInPictureStart(AVKit.AVPlayerViewController)" />
      <MemberSignature Language="F#" Value="abstract member ShouldAutomaticallyDismissAtPictureInPictureStart : AVKit.AVPlayerViewController -&gt; bool&#xA;override this.ShouldAutomaticallyDismissAtPictureInPictureStart : AVKit.AVPlayerViewController -&gt; bool" Usage="aVPlayerViewControllerDelegate.ShouldAutomaticallyDismissAtPictureInPictureStart playerViewController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerViewController" Type="AVKit.AVPlayerViewController" />
      </Parameters>
      <Docs>
        <param name="playerViewController">To be added.</param>
        <summary>App developers should return <see langword="true" /> to indicate that the player viewer should dismiss when Picture In Picture playback starts, or <see langword="false" /> to prevent this.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillStartPictureInPicture">
      <MemberSignature Language="C#" Value="public virtual void WillStartPictureInPicture (AVKit.AVPlayerViewController playerViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillStartPictureInPicture(class AVKit.AVPlayerViewController playerViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.WillStartPictureInPicture(AVKit.AVPlayerViewController)" />
      <MemberSignature Language="F#" Value="abstract member WillStartPictureInPicture : AVKit.AVPlayerViewController -&gt; unit&#xA;override this.WillStartPictureInPicture : AVKit.AVPlayerViewController -&gt; unit" Usage="aVPlayerViewControllerDelegate.WillStartPictureInPicture playerViewController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("playerViewControllerWillStartPictureInPicture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerViewController" Type="AVKit.AVPlayerViewController" />
      </Parameters>
      <Docs>
        <param name="playerViewController">To be added.</param>
        <summary>Picture In Picture playback is about to start.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillStopPictureInPicture">
      <MemberSignature Language="C#" Value="public virtual void WillStopPictureInPicture (AVKit.AVPlayerViewController playerViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillStopPictureInPicture(class AVKit.AVPlayerViewController playerViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVKit.AVPlayerViewControllerDelegate.WillStopPictureInPicture(AVKit.AVPlayerViewController)" />
      <MemberSignature Language="F#" Value="abstract member WillStopPictureInPicture : AVKit.AVPlayerViewController -&gt; unit&#xA;override this.WillStopPictureInPicture : AVKit.AVPlayerViewController -&gt; unit" Usage="aVPlayerViewControllerDelegate.WillStopPictureInPicture playerViewController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("playerViewControllerWillStopPictureInPicture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playerViewController" Type="AVKit.AVPlayerViewController" />
      </Parameters>
      <Docs>
        <param name="playerViewController">To be added.</param>
        <summary>Picture In Picture playback is about to stop.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
