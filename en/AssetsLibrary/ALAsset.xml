<Type Name="ALAsset" FullName="AssetsLibrary.ALAsset">
  <TypeSignature Language="C#" Value="public class ALAsset : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ALAsset extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:AssetsLibrary.ALAsset" />
  <TypeSignature Language="F#" Value="type ALAsset = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("ALAsset", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, "Use the 'Photos' API instead.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, "Use the 'Photos' API instead.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An asset managed by the Photo application (videos and photos).</summary>
    <remarks>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AssetsLibrary/Reference/ALAsset_Class/index.html">Apple documentation for <c>ALAsset</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ALAsset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ALAsset (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AssetsLibrary.ALAsset : Foundation.NSObjectFlag -&gt; AssetsLibrary.ALAsset" Usage="new AssetsLibrary.ALAsset t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal ALAsset (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AssetsLibrary.ALAsset : nativeint -&gt; AssetsLibrary.ALAsset" Usage="new AssetsLibrary.ALAsset handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspectRatioThumbnail">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGImage AspectRatioThumbnail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CoreGraphics.CGImage AspectRatioThumbnail() cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.AspectRatioThumbnail" />
      <MemberSignature Language="F#" Value="abstract member AspectRatioThumbnail : unit -&gt; CoreGraphics.CGImage&#xA;override this.AspectRatioThumbnail : unit -&gt; CoreGraphics.CGImage" Usage="aLAsset.AspectRatioThumbnail " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("aspectRatioThumbnail")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a thumbnail image that preserves the original aspect ration of the source image.</summary>
        <returns>CGImage that has already been rotated to the right orientation.</returns>
        <remarks>
          <para>

	    This returns a thumbnail image representing the asset.
	    The thumbnail returned will preserve the original aspect
	    ration of the original image returned by the <see cref="T:AssetsLibrary.ALAssetRepresentation" />.<format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=M:AssetsLibrary.ALAssetRepresentation.GetImage()&amp;scope=Xamarin" title="M:AssetsLibrary.ALAssetRepresentation.GetImage()">M:AssetsLibrary.ALAssetRepresentation.GetImage()</a></format>.
	    The image will be rendered in the correct orientation, so
	    it is not necessary to apply any rotation on the returned value.

	  </para>
          <para>

	    This API is only available on iOS 5.  On previous version
	    of the operating system you can obtain a square thumbnail by using the <see cref="P:AssetsLibrary.ALAsset.Thumbnail" />
	    property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssetType">
      <MemberSignature Language="C#" Value="public AssetsLibrary.ALAssetType AssetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AssetsLibrary.ALAssetType AssetType" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.AssetType" />
      <MemberSignature Language="F#" Value="member this.AssetType : AssetsLibrary.ALAssetType" Usage="AssetsLibrary.ALAsset.AssetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AssetsLibrary.ALAssetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The asset type (photo, video, unknown).</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssetUrl">
      <MemberSignature Language="C#" Value="public Foundation.NSUrl AssetUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl AssetUrl" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.AssetUrl" />
      <MemberSignature Language="F#" Value="member this.AssetUrl : Foundation.NSUrl" Usage="AssetsLibrary.ALAsset.AssetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AssetsLibrary.ALAsset.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public Foundation.NSDate Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDate Date" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.Date" />
      <MemberSignature Language="F#" Value="member this.Date : Foundation.NSDate" Usage="AssetsLibrary.ALAsset.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Asset's creation time stamp.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRepresentation">
      <MemberSignature Language="C#" Value="public virtual AssetsLibrary.ALAssetRepresentation DefaultRepresentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AssetsLibrary.ALAssetRepresentation DefaultRepresentation" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.DefaultRepresentation" />
      <MemberSignature Language="F#" Value="member this.DefaultRepresentation : AssetsLibrary.ALAssetRepresentation" Usage="AssetsLibrary.ALAsset.DefaultRepresentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("defaultRepresentation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AssetsLibrary.ALAssetRepresentation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Default asset representation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public double Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Duration" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : double" Usage="AssetsLibrary.ALAsset.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For videos, play time.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Editable">
      <MemberSignature Language="C#" Value="public virtual bool Editable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Editable" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.Editable" />
      <MemberSignature Language="F#" Value="member this.Editable : bool" Usage="AssetsLibrary.ALAsset.Editable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isEditable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the application may edit the asset.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public CoreLocation.CLLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreLocation.CLLocation Location" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.Location" />
      <MemberSignature Language="F#" Value="member this.Location : CoreLocation.CLLocation" Usage="AssetsLibrary.ALAsset.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreLocation.CLLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Geographical information about the asset.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public AssetsLibrary.ALAssetOrientation Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AssetsLibrary.ALAssetOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.Orientation" />
      <MemberSignature Language="F#" Value="member this.Orientation : AssetsLibrary.ALAssetOrientation" Usage="AssetsLibrary.ALAsset.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AssetsLibrary.ALAssetOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Asset orientation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalAsset">
      <MemberSignature Language="C#" Value="public virtual AssetsLibrary.ALAsset OriginalAsset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AssetsLibrary.ALAsset OriginalAsset" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.OriginalAsset" />
      <MemberSignature Language="F#" Value="member this.OriginalAsset : AssetsLibrary.ALAsset" Usage="AssetsLibrary.ALAsset.OriginalAsset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("originalAsset")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AssetsLibrary.ALAsset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The original version, if the <see cref="T:AssetsLibrary.ALAsset" /> is a modification.</summary>
        <value>
          <see langword="null" /> if the <c>this</c> is not a modified version.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepresentationForUti">
      <MemberSignature Language="C#" Value="public virtual AssetsLibrary.ALAssetRepresentation RepresentationForUti (string uti);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AssetsLibrary.ALAssetRepresentation RepresentationForUti(string uti) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.RepresentationForUti(System.String)" />
      <MemberSignature Language="F#" Value="abstract member RepresentationForUti : string -&gt; AssetsLibrary.ALAssetRepresentation&#xA;override this.RepresentationForUti : string -&gt; AssetsLibrary.ALAssetRepresentation" Usage="aLAsset.RepresentationForUti uti" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("representationForUTI:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AssetsLibrary.ALAssetRepresentation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uti" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uti">To be added.</param>
        <summary>Returns the specific version for the asset that matches the requested UTI.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Representations">
      <MemberSignature Language="C#" Value="public string[] Representations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Representations" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.Representations" />
      <MemberSignature Language="F#" Value="member this.Representations : string[]" Usage="AssetsLibrary.ALAsset.Representations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of all the available representations for this asset.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImageData">
      <MemberSignature Language="C#" Value="public virtual void SetImageData (Foundation.NSData imageData, Foundation.NSDictionary metadata, Action&lt;Foundation.NSUrl,Foundation.NSError&gt; completionBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImageData(class Foundation.NSData imageData, class Foundation.NSDictionary metadata, class System.Action`2&lt;class Foundation.NSUrl, class Foundation.NSError&gt; completionBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.SetImageData(Foundation.NSData,Foundation.NSDictionary,System.Action{Foundation.NSUrl,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SetImageData : Foundation.NSData * Foundation.NSDictionary * Action&lt;Foundation.NSUrl, Foundation.NSError&gt; -&gt; unit&#xA;override this.SetImageData : Foundation.NSData * Foundation.NSDictionary * Action&lt;Foundation.NSUrl, Foundation.NSError&gt; -&gt; unit" Usage="aLAsset.SetImageData (imageData, metadata, completionBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setImageData:metadata:completionBlock:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageData" Type="Foundation.NSData" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
        <Parameter Name="completionBlock" Type="System.Action&lt;Foundation.NSUrl,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V38))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="imageData">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="completionBlock">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Changes the data to <paramref name="imageData" /> and the metadata to <paramref name="metadata" />. On success, executes <paramref name="completionBlock" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImageDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt; SetImageDataAsync (Foundation.NSData imageData, Foundation.NSDictionary metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Foundation.NSUrl&gt; SetImageDataAsync(class Foundation.NSData imageData, class Foundation.NSDictionary metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.SetImageDataAsync(Foundation.NSData,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member SetImageDataAsync : Foundation.NSData * Foundation.NSDictionary -&gt; System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;&#xA;override this.SetImageDataAsync : Foundation.NSData * Foundation.NSDictionary -&gt; System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;" Usage="aLAsset.SetImageDataAsync (imageData, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageData" Type="Foundation.NSData" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="imageData">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>Changes the data to <paramref name="imageData" /> and the metadata to <paramref name="metadata" />. On success, executes <paramref name="completionBlock" />.</summary>
        <returns>
          <para>A task that represents the asynchronous SetImageData operation.   The value of the TResult parameter is a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Assets%20Library%20ALAssets%20Library%20Write%20Completion%20Delegate&amp;scope=Xamarin" title="T:AssetsLibrary.ALAssetsLibraryWriteCompletionDelegate">T:AssetsLibrary.ALAssetsLibraryWriteCompletionDelegate</a></format>.</para>
          <para>Application developers should check the <see cref="P:AssetsLibrary.ALAsset.Editable" /> property priot to using this method.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVideoAtPath">
      <MemberSignature Language="C#" Value="public virtual void SetVideoAtPath (Foundation.NSUrl videoPathURL, Action&lt;Foundation.NSUrl,Foundation.NSError&gt; completionBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoAtPath(class Foundation.NSUrl videoPathURL, class System.Action`2&lt;class Foundation.NSUrl, class Foundation.NSError&gt; completionBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.SetVideoAtPath(Foundation.NSUrl,System.Action{Foundation.NSUrl,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SetVideoAtPath : Foundation.NSUrl * Action&lt;Foundation.NSUrl, Foundation.NSError&gt; -&gt; unit&#xA;override this.SetVideoAtPath : Foundation.NSUrl * Action&lt;Foundation.NSUrl, Foundation.NSError&gt; -&gt; unit" Usage="aLAsset.SetVideoAtPath (videoPathURL, completionBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setVideoAtPath:completionBlock:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoPathURL" Type="Foundation.NSUrl" />
        <Parameter Name="completionBlock" Type="System.Action&lt;Foundation.NSUrl,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V38))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="videoPathURL">To be added.</param>
        <param name="completionBlock">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Modifies the <see cref="T:AssetsLibrary.ALAsset" /> to refer to the <paramref name="videoPathURL" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVideoAtPathAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt; SetVideoAtPathAsync (Foundation.NSUrl videoPathURL);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Foundation.NSUrl&gt; SetVideoAtPathAsync(class Foundation.NSUrl videoPathURL) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.SetVideoAtPathAsync(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoAtPathAsync : Foundation.NSUrl -&gt; System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;&#xA;override this.SetVideoAtPathAsync : Foundation.NSUrl -&gt; System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;" Usage="aLAsset.SetVideoAtPathAsync videoPathURL" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoPathURL" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="videoPathURL">To be added.</param>
        <summary>Modifies the <see cref="T:AssetsLibrary.ALAsset" /> to refer to the <paramref name="videoPathURL" />.</summary>
        <returns>
          <para>A task that represents the asynchronous SetVideoAtPath operation.   The value of the TResult parameter is a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Assets%20Library%20ALAssets%20Library%20Write%20Completion%20Delegate&amp;scope=Xamarin" title="T:AssetsLibrary.ALAssetsLibraryWriteCompletionDelegate">T:AssetsLibrary.ALAssetsLibraryWriteCompletionDelegate</a></format>.</para>
        </returns>
        <remarks>
          <para>Application developers should check the <see cref="P:AssetsLibrary.ALAsset.Editable" /> property prior to calling this method.</para>
          <para copied="true">The SetVideoAtPathAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Thumbnail">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGImage Thumbnail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreGraphics.CGImage Thumbnail" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.Thumbnail" />
      <MemberSignature Language="F#" Value="member this.Thumbnail : CoreGraphics.CGImage" Usage="AssetsLibrary.ALAsset.Thumbnail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("thumbnail")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the thumbnail for the asset.</summary>
        <value>
        </value>
        <remarks>
          <para>

	    This returns a square thumbnail image representing the
	    asset.  The image will be rendered in the correct
	    orientation, so it is not necessary to apply any rotation
	    on the returned image.

	  </para>
          <para>

	    Starting with iOS 5, you can also use <see cref="M:AssetsLibrary.ALAsset.AspectRatioThumbnail" />
	    property to get a thumbnail that preserves the original
	    aspect ratio of the image, instead of the square/cropped
	    version returned by this property.

	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtiToUrlDictionary">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary UtiToUrlDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary UtiToUrlDictionary" />
      <MemberSignature Language="DocId" Value="P:AssetsLibrary.ALAsset.UtiToUrlDictionary" />
      <MemberSignature Language="F#" Value="member this.UtiToUrlDictionary : Foundation.NSDictionary" Usage="AssetsLibrary.ALAsset.UtiToUrlDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The UTI to URL dictionary for the asset.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueForProperty">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject ValueForProperty (Foundation.NSString property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject ValueForProperty(class Foundation.NSString property) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.ValueForProperty(Foundation.NSString)" />
      <MemberSignature Language="F#" Value="abstract member ValueForProperty : Foundation.NSString -&gt; Foundation.NSObject&#xA;override this.ValueForProperty : Foundation.NSString -&gt; Foundation.NSObject" Usage="aLAsset.ValueForProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("valueForProperty:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>Low-level access to properties in the ALAsset.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteModifiedImageToSavedToPhotosAlbum">
      <MemberSignature Language="C#" Value="public virtual void WriteModifiedImageToSavedToPhotosAlbum (Foundation.NSData imageData, Foundation.NSDictionary metadata, Action&lt;Foundation.NSUrl,Foundation.NSError&gt; completionBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteModifiedImageToSavedToPhotosAlbum(class Foundation.NSData imageData, class Foundation.NSDictionary metadata, class System.Action`2&lt;class Foundation.NSUrl, class Foundation.NSError&gt; completionBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.WriteModifiedImageToSavedToPhotosAlbum(Foundation.NSData,Foundation.NSDictionary,System.Action{Foundation.NSUrl,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member WriteModifiedImageToSavedToPhotosAlbum : Foundation.NSData * Foundation.NSDictionary * Action&lt;Foundation.NSUrl, Foundation.NSError&gt; -&gt; unit&#xA;override this.WriteModifiedImageToSavedToPhotosAlbum : Foundation.NSData * Foundation.NSDictionary * Action&lt;Foundation.NSUrl, Foundation.NSError&gt; -&gt; unit" Usage="aLAsset.WriteModifiedImageToSavedToPhotosAlbum (imageData, metadata, completionBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("writeModifiedImageDataToSavedPhotosAlbum:metadata:completionBlock:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageData" Type="Foundation.NSData" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
        <Parameter Name="completionBlock" Type="System.Action&lt;Foundation.NSUrl,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V38))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="imageData">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="completionBlock">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteModifiedImageToSavedToPhotosAlbumAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt; WriteModifiedImageToSavedToPhotosAlbumAsync (Foundation.NSData imageData, Foundation.NSDictionary metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Foundation.NSUrl&gt; WriteModifiedImageToSavedToPhotosAlbumAsync(class Foundation.NSData imageData, class Foundation.NSDictionary metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.WriteModifiedImageToSavedToPhotosAlbumAsync(Foundation.NSData,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member WriteModifiedImageToSavedToPhotosAlbumAsync : Foundation.NSData * Foundation.NSDictionary -&gt; System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;&#xA;override this.WriteModifiedImageToSavedToPhotosAlbumAsync : Foundation.NSData * Foundation.NSDictionary -&gt; System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;" Usage="aLAsset.WriteModifiedImageToSavedToPhotosAlbumAsync (imageData, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageData" Type="Foundation.NSData" />
        <Parameter Name="metadata" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="imageData">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para>A task that represents the asynchronous WriteModifiedImageToSavedToPhotosAlbum operation.   The value of the TResult parameter is a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Assets%20Library%20ALAssets%20Library%20Write%20Completion%20Delegate&amp;scope=Xamarin" title="T:AssetsLibrary.ALAssetsLibraryWriteCompletionDelegate">T:AssetsLibrary.ALAssetsLibraryWriteCompletionDelegate</a></format>.</para>
          <para>Application developers should check the <see cref="P:AssetsLibrary.ALAsset.Editable" /> property prior to calling htis method.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteModifiedVideoToSavedPhotosAlbum">
      <MemberSignature Language="C#" Value="public virtual void WriteModifiedVideoToSavedPhotosAlbum (Foundation.NSUrl videoPathURL, Action&lt;Foundation.NSUrl,Foundation.NSError&gt; completionBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteModifiedVideoToSavedPhotosAlbum(class Foundation.NSUrl videoPathURL, class System.Action`2&lt;class Foundation.NSUrl, class Foundation.NSError&gt; completionBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.WriteModifiedVideoToSavedPhotosAlbum(Foundation.NSUrl,System.Action{Foundation.NSUrl,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member WriteModifiedVideoToSavedPhotosAlbum : Foundation.NSUrl * Action&lt;Foundation.NSUrl, Foundation.NSError&gt; -&gt; unit&#xA;override this.WriteModifiedVideoToSavedPhotosAlbum : Foundation.NSUrl * Action&lt;Foundation.NSUrl, Foundation.NSError&gt; -&gt; unit" Usage="aLAsset.WriteModifiedVideoToSavedPhotosAlbum (videoPathURL, completionBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("writeModifiedVideoAtPathToSavedPhotosAlbum:completionBlock:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoPathURL" Type="Foundation.NSUrl" />
        <Parameter Name="completionBlock" Type="System.Action&lt;Foundation.NSUrl,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V38))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="videoPathURL">To be added.</param>
        <param name="completionBlock">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteModifiedVideoToSavedPhotosAlbumAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt; WriteModifiedVideoToSavedPhotosAlbumAsync (Foundation.NSUrl videoPathURL);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Foundation.NSUrl&gt; WriteModifiedVideoToSavedPhotosAlbumAsync(class Foundation.NSUrl videoPathURL) cil managed" />
      <MemberSignature Language="DocId" Value="M:AssetsLibrary.ALAsset.WriteModifiedVideoToSavedPhotosAlbumAsync(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member WriteModifiedVideoToSavedPhotosAlbumAsync : Foundation.NSUrl -&gt; System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;&#xA;override this.WriteModifiedVideoToSavedPhotosAlbumAsync : Foundation.NSUrl -&gt; System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;" Usage="aLAsset.WriteModifiedVideoToSavedPhotosAlbumAsync videoPathURL" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Foundation.NSUrl&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoPathURL" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="videoPathURL">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para>A task that represents the asynchronous WriteModifiedVideoToSavedPhotosAlbum operation.   The value of the TResult parameter is a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Assets%20Library%20ALAssets%20Library%20Write%20Completion%20Delegate&amp;scope=Xamarin" title="T:AssetsLibrary.ALAssetsLibraryWriteCompletionDelegate">T:AssetsLibrary.ALAssetsLibraryWriteCompletionDelegate</a></format>.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
