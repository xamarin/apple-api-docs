<Type Name="MTKTextureLoader" FullName="MetalKit.MTKTextureLoader">
  <TypeSignature Language="C#" Value="public class MTKTextureLoader : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MTKTextureLoader extends Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("MTKTextureLoader", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Creates <see cref="T:Metal.IMTLTexture" /> objects from common image formats.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/MetalKit/Reference/MTKTextureLoader_ClassReference/index.html">Apple documentation for <c>MTKTextureLoader</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MTKTextureLoader (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MTKTextureLoader (MonoTouch.Metal.IMTLDevice device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Metal.IMTLDevice device) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithDevice:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="device" Type="MonoTouch.Metal.IMTLDevice" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <summary>Creates a new texture loader for the specified <paramref name="device" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MTKTextureLoader (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoTouch class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Device">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Metal.IMTLDevice Device { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Metal.IMTLDevice Device" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("device")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the device that is used to create textures.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCGImage">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture FromCGImage (MonoTouch.CoreGraphics.CGImage cgImage, MonoTouch.MetalKit.MTKTextureLoaderOptions options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.Metal.IMTLTexture FromCGImage(class MonoTouch.CoreGraphics.CGImage cgImage, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cgImage" Type="MonoTouch.CoreGraphics.CGImage" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cgImage">To be added.</param>
        <param name="options">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Creates and returns a Metal texture from the specified Core Graphics image and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCGImage">
      <MemberSignature Language="C#" Value="public void FromCGImage (MonoTouch.CoreGraphics.CGImage cgImage, MonoTouch.MetalKit.MTKTextureLoaderOptions options, MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromCGImage(class MonoTouch.CoreGraphics.CGImage cgImage, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cgImage" Type="MonoTouch.CoreGraphics.CGImage" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cgImage">To be added.</param>
        <param name="options">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates and returns a Metal texture from the specified Core Graphics image and options, and runs a completion handler when it completes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCGImageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt; FromCGImageAsync (MonoTouch.CoreGraphics.CGImage cgImage, MonoTouch.MetalKit.MTKTextureLoaderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture&gt; FromCGImageAsync(class MonoTouch.CoreGraphics.CGImage cgImage, class MonoTouch.MetalKit.MTKTextureLoaderOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cgImage" Type="MonoTouch.CoreGraphics.CGImage" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
      </Parameters>
      <Docs>
        <param name="cgImage">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Asynchronously creates a Metal texture from the specified Core Graphics image and options, and returns a task that provides the resulting image.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture FromData (MonoTouch.Foundation.NSData data, MonoTouch.MetalKit.MTKTextureLoaderOptions options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.Metal.IMTLTexture FromData(class MonoTouch.Foundation.NSData data, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="options">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Creates and returns a Metal texture from the specified image data and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public void FromData (MonoTouch.Foundation.NSData data, MonoTouch.MetalKit.MTKTextureLoaderOptions options, MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromData(class MonoTouch.Foundation.NSData data, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="options">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates and returns a Metal texture from the specified image data and options, and runs a completion handler when it completes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt; FromDataAsync (MonoTouch.Foundation.NSData data, MonoTouch.MetalKit.MTKTextureLoaderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture&gt; FromDataAsync(class MonoTouch.Foundation.NSData data, class MonoTouch.MetalKit.MTKTextureLoaderOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Creates a Metal texture from the specified image data and options, returning a task that provides the resulting image.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Metal.IMTLTexture FromName (string name, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.Foundation.NSDictionary options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Metal.IMTLTexture FromName(string name, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newTextureWithName:scaleFactor:bundle:options:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        <Parameter Name="scaleFactor" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">To be added.</param>
        <summary>Creates a new metal texture with the specified <paramref name="name" /> and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public virtual void FromName (string name, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.Foundation.NSDictionary options, MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromName(string name, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newTextureWithName:scaleFactor:bundle:options:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="scaleFactor" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new metal texture with the specified <paramref name="name" /> and options..</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture FromName (string name, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.MetalKit.MTKTextureLoaderOptions options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.Metal.IMTLTexture FromName(string name, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        <Parameter Name="scaleFactor" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">To be added.</param>
        <param name="options">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Creates a new metal texture with the specified <paramref name="name" /> and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public void FromName (string name, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.MetalKit.MTKTextureLoaderOptions options, MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromName(string name, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="scaleFactor" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">To be added.</param>
        <param name="options">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new metal texture with the specified <paramref name="name" /> and options.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt; FromNameAsync (string name, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture&gt; FromNameAsync(string name, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scaleFactor" Type="System.nfloat" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">To be added.This parameter can be .</param>
        <param name="options">To be added.This parameter can be .</param>
        <summary>Creates a new metal texture with the specified  and options..</summary>
        <returns>
          <para>A task that represents the asynchronous FromName operation.   The value of the TResult parameter is a System.nfloat.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FromNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt; FromNameAsync (string name, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.MetalKit.MTKTextureLoaderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture&gt; FromNameAsync(string name, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.MetalKit.MTKTextureLoaderOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scaleFactor" Type="System.nfloat" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Creates a new metal texture with the specified name and options, returning a task that provides the resulting image.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromNames">
      <MemberSignature Language="C#" Value="public virtual void FromNames (string[] names, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.Foundation.NSDictionary options, MonoTouch.MetalKit.MTKTextureLoaderArrayCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromNames(string[] names, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.MetalKit.MTKTextureLoaderArrayCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newTexturesWithNames:scaleFactor:bundle:options:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderArrayCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderArrayCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="scaleFactor" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="names">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates an array of new metal texture with the specified <paramref name="names" /> and options.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromNames">
      <MemberSignature Language="C#" Value="public void FromNames (string[] names, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.MetalKit.MTKTextureLoaderOptions options, MonoTouch.MetalKit.MTKTextureLoaderArrayCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromNames(string[] names, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.MetalKit.MTKTextureLoaderArrayCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderArrayCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderArrayCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="scaleFactor" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="names">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">To be added.</param>
        <param name="options">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates an array of new metal texture with the specified <paramref name="names" /> and options.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture[]&gt; FromNamesAsync (string[] names, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture[]&gt; FromNamesAsync(string[] names, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="scaleFactor" Type="System.nfloat" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="names">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">To be added.This parameter can be .</param>
        <param name="options">To be added.This parameter can be .</param>
        <summary>Creates an array of new metal texture with the specified  and options.</summary>
        <returns>
          <para>A task that represents the asynchronous FromNames operation.   The value of the TResult parameter is a System.nfloat.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FromNamesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture[]&gt; FromNamesAsync (string[] names, nfloat scaleFactor, MonoTouch.Foundation.NSBundle bundle, MonoTouch.MetalKit.MTKTextureLoaderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture[]&gt; FromNamesAsync(string[] names, valuetype System.nfloat scaleFactor, class MonoTouch.Foundation.NSBundle bundle, class MonoTouch.MetalKit.MTKTextureLoaderOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="scaleFactor" Type="System.nfloat" />
        <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
      </Parameters>
      <Docs>
        <param name="names">To be added.</param>
        <param name="scaleFactor">To be added.</param>
        <param name="bundle">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Creates an array of new metal texture with the specified  and options, returning a task that provides the resulting array.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTexture">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Metal.IMTLTexture FromTexture (MonoTouch.ModelIO.MDLTexture texture, MonoTouch.Foundation.NSDictionary options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Metal.IMTLTexture FromTexture(class MonoTouch.ModelIO.MDLTexture texture, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newTextureWithMDLTexture:options:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.ModelIO.MDLTexture" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">To be added.</param>
        <summary>Creates a new metal texture from the specified <paramref name="texture" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTexture">
      <MemberSignature Language="C#" Value="public virtual void FromTexture (MonoTouch.ModelIO.MDLTexture texture, MonoTouch.Foundation.NSDictionary options, MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromTexture(class MonoTouch.ModelIO.MDLTexture texture, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newTextureWithMDLTexture:options:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.ModelIO.MDLTexture" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new metal texture from the specified <paramref name="texture" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTexture">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture FromTexture (MonoTouch.ModelIO.MDLTexture texture, MonoTouch.MetalKit.MTKTextureLoaderOptions options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.Metal.IMTLTexture FromTexture(class MonoTouch.ModelIO.MDLTexture texture, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.ModelIO.MDLTexture" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="options">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Creates a new metal texture from the specified <paramref name="texture" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTexture">
      <MemberSignature Language="C#" Value="public void FromTexture (MonoTouch.ModelIO.MDLTexture texture, MonoTouch.MetalKit.MTKTextureLoaderOptions options, MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromTexture(class MonoTouch.ModelIO.MDLTexture texture, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.ModelIO.MDLTexture" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="options">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new metal texture from the specified <paramref name="texture" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTextureAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt; FromTextureAsync (MonoTouch.ModelIO.MDLTexture texture, MonoTouch.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture&gt; FromTextureAsync(class MonoTouch.ModelIO.MDLTexture texture, class MonoTouch.Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.ModelIO.MDLTexture" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="options">To be added.This parameter can be .</param>
        <summary>Creates a new metal texture from the specified .</summary>
        <returns>
          <para>A task that represents the asynchronous FromTexture operation.   The value of the TResult parameter is a MonoTouch.MetalKit.MTKTextureLoaderCallback.</para>
        </returns>
        <remarks>
          <para copied="true">The FromTextureAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTextureAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt; FromTextureAsync (MonoTouch.ModelIO.MDLTexture texture, MonoTouch.MetalKit.MTKTextureLoaderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture&gt; FromTextureAsync(class MonoTouch.ModelIO.MDLTexture texture, class MonoTouch.MetalKit.MTKTextureLoaderOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.ModelIO.MDLTexture" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Creates a new metal texture from the specified <paramref name="options" />, returning a task that provides the resulting texture.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture FromUrl (MonoTouch.Foundation.NSUrl url, MonoTouch.MetalKit.MTKTextureLoaderOptions options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.Metal.IMTLTexture FromUrl(class MonoTouch.Foundation.NSUrl url, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="options">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Creates a new metal texture from the resource at the specified <paramref name="url" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public void FromUrl (MonoTouch.Foundation.NSUrl url, MonoTouch.MetalKit.MTKTextureLoaderOptions options, MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromUrl(class MonoTouch.Foundation.NSUrl url, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.MetalKit.MTKTextureLoaderCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="options">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new metal texture from the resource at the specified <paramref name="url" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrlAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt; FromUrlAsync (MonoTouch.Foundation.NSUrl url, MonoTouch.MetalKit.MTKTextureLoaderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture&gt; FromUrlAsync(class MonoTouch.Foundation.NSUrl url, class MonoTouch.MetalKit.MTKTextureLoaderOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Creates a new metal texture from the resource at the specified <paramref name="url" />, returning a task that provides the resulting texture.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrls">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Metal.IMTLTexture[] FromUrls (MonoTouch.Foundation.NSUrl[] urls, MonoTouch.Foundation.NSDictionary options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Metal.IMTLTexture[] FromUrls(class MonoTouch.Foundation.NSUrl[] urls, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newTexturesWithContentsOfURLs:options:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urls" Type="MonoTouch.Foundation.NSUrl[]" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="urls">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">To be added.</param>
        <summary>Creates an array of new metal textures from the resources at the specified <paramref name="urls" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrls">
      <MemberSignature Language="C#" Value="public virtual void FromUrls (MonoTouch.Foundation.NSUrl[] urls, MonoTouch.Foundation.NSDictionary options, MonoTouch.MetalKit.MTKTextureLoaderArrayCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromUrls(class MonoTouch.Foundation.NSUrl[] urls, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.MetalKit.MTKTextureLoaderArrayCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("newTexturesWithContentsOfURLs:options:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urls" Type="MonoTouch.Foundation.NSUrl[]" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderArrayCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderArrayCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="urls">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates an array of new metal textures from the resources at the specified <paramref name="urls" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrls">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture[] FromUrls (MonoTouch.Foundation.NSUrl[] urls, MonoTouch.MetalKit.MTKTextureLoaderOptions options, out MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.Metal.IMTLTexture[] FromUrls(class MonoTouch.Foundation.NSUrl[] urls, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urls" Type="MonoTouch.Foundation.NSUrl[]" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="urls">To be added.</param>
        <param name="options">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Creates an array of new metal textures from the resources at the specified <paramref name="urls" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrls">
      <MemberSignature Language="C#" Value="public void FromUrls (MonoTouch.Foundation.NSUrl[] urls, MonoTouch.MetalKit.MTKTextureLoaderOptions options, MonoTouch.MetalKit.MTKTextureLoaderArrayCallback completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromUrls(class MonoTouch.Foundation.NSUrl[] urls, class MonoTouch.MetalKit.MTKTextureLoaderOptions options, class MonoTouch.MetalKit.MTKTextureLoaderArrayCallback completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urls" Type="MonoTouch.Foundation.NSUrl[]" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
        <Parameter Name="completionHandler" Type="MonoTouch.MetalKit.MTKTextureLoaderArrayCallback">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTKTextureLoaderArrayCallback))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="urls">To be added.</param>
        <param name="options">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates an array of new metal textures from the resources at the specified <paramref name="urls" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrlsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture[]&gt; FromUrlsAsync (MonoTouch.Foundation.NSUrl[] urls, MonoTouch.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture[]&gt; FromUrlsAsync(class MonoTouch.Foundation.NSUrl[] urls, class MonoTouch.Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urls" Type="MonoTouch.Foundation.NSUrl[]" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="urls">To be added.</param>
        <param name="options">To be added.This parameter can be .</param>
        <summary>Creates an array of new metal textures from the resources at the specified .</summary>
        <returns>
          <para>A task that represents the asynchronous FromUrls operation.   The value of the TResult parameter is a MonoTouch.MetalKit.MTKTextureLoaderArrayCallback.</para>
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FromUrlsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture[]&gt; FromUrlsAsync (MonoTouch.Foundation.NSUrl[] urls, MonoTouch.MetalKit.MTKTextureLoaderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class MonoTouch.Metal.IMTLTexture[]&gt; FromUrlsAsync(class MonoTouch.Foundation.NSUrl[] urls, class MonoTouch.MetalKit.MTKTextureLoaderOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Metal.IMTLTexture[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urls" Type="MonoTouch.Foundation.NSUrl[]" />
        <Parameter Name="options" Type="MonoTouch.MetalKit.MTKTextureLoaderOptions" />
      </Parameters>
      <Docs>
        <param name="urls">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Creates an array of new metal textures from the resource sat the specified <paramref name="urls" />, returning a task that provides the resulting texture array.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>