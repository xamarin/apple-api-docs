<Type Name="MTKTextureLoaderOptions" FullName="MetalKit.MTKTextureLoaderOptions">
  <TypeSignature Language="C#" Value="public class MTKTextureLoaderOptions : Foundation.DictionaryContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MTKTextureLoaderOptions extends Foundation.DictionaryContainer" />
  <TypeSignature Language="DocId" Value="T:MetalKit.MTKTextureLoaderOptions" />
  <TypeSignature Language="F#" Value="type MTKTextureLoaderOptions = class&#xA;    inherit DictionaryContainer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.DictionaryContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains a dictionary of texture loading options and exposes them as discoverably named properties.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MTKTextureLoaderOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalKit.MTKTextureLoaderOptions.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new texture loader options object with default values.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MTKTextureLoaderOptions (Foundation.NSDictionary dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSDictionary dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:MetalKit.MTKTextureLoaderOptions.#ctor(Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="new MetalKit.MTKTextureLoaderOptions : Foundation.NSDictionary -&gt; MetalKit.MTKTextureLoaderOptions" Usage="new MetalKit.MTKTextureLoaderOptions dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dictionary" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="dictionary">To be added.</param>
        <summary>Creates a new texture loader options object with the specified <paramref name="dictionary" /> of values.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateMipmaps">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; AllocateMipmaps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AllocateMipmaps" />
      <MemberSignature Language="DocId" Value="P:MetalKit.MTKTextureLoaderOptions.AllocateMipmaps" />
      <MemberSignature Language="F#" Value="member this.AllocateMipmaps : Nullable&lt;bool&gt; with get, set" Usage="MetalKit.MTKTextureLoaderOptions.AllocateMipmaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether to allocate mipmap memory when loading the texture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CubeLayout">
      <MemberSignature Language="C#" Value="public Nullable&lt;MetalKit.MTKTextureLoaderCubeLayout&gt; CubeLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype MetalKit.MTKTextureLoaderCubeLayout&gt; CubeLayout" />
      <MemberSignature Language="DocId" Value="P:MetalKit.MTKTextureLoaderOptions.CubeLayout" />
      <MemberSignature Language="F#" Value="member this.CubeLayout : Nullable&lt;MetalKit.MTKTextureLoaderCubeLayout&gt; with get, set" Usage="MetalKit.MTKTextureLoaderOptions.CubeLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MetalKit.MTKTextureLoaderCubeLayout&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates the orientation of cube map texture data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMipmaps">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; GenerateMipmaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; GenerateMipmaps" />
      <MemberSignature Language="DocId" Value="P:MetalKit.MTKTextureLoaderOptions.GenerateMipmaps" />
      <MemberSignature Language="F#" Value="member this.GenerateMipmaps : Nullable&lt;bool&gt;" Usage="MetalKit.MTKTextureLoaderOptions.GenerateMipmaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that tells whether mipmaps will be created for the new texture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Origin">
      <MemberSignature Language="C#" Value="public Nullable&lt;MetalKit.MTKTextureLoaderOrigin&gt; Origin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype MetalKit.MTKTextureLoaderOrigin&gt; Origin" />
      <MemberSignature Language="DocId" Value="P:MetalKit.MTKTextureLoaderOptions.Origin" />
      <MemberSignature Language="F#" Value="member this.Origin : Nullable&lt;MetalKit.MTKTextureLoaderOrigin&gt; with get, set" Usage="MetalKit.MTKTextureLoaderOptions.Origin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MetalKit.MTKTextureLoaderOrigin&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that controls when to flip the texture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Srgb">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Srgb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Srgb" />
      <MemberSignature Language="DocId" Value="P:MetalKit.MTKTextureLoaderOptions.Srgb" />
      <MemberSignature Language="F#" Value="member this.Srgb : Nullable&lt;bool&gt; with get, set" Usage="MetalKit.MTKTextureLoaderOptions.Srgb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether the texture should be loaded from the sRGB color space.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureCpuCacheMode">
      <MemberSignature Language="C#" Value="public Nullable&lt;Metal.MTLCpuCacheMode&gt; TextureCpuCacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Metal.MTLCpuCacheMode&gt; TextureCpuCacheMode" />
      <MemberSignature Language="DocId" Value="P:MetalKit.MTKTextureLoaderOptions.TextureCpuCacheMode" />
      <MemberSignature Language="F#" Value="member this.TextureCpuCacheMode : Nullable&lt;Metal.MTLCpuCacheMode&gt; with get, set" Usage="MetalKit.MTKTextureLoaderOptions.TextureCpuCacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Metal.MTLCpuCacheMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that describes whether read-write operations will be optimized, or be performed in the (non-optimized) order in which they are specified.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureStorageMode">
      <MemberSignature Language="C#" Value="public Nullable&lt;Metal.MTLStorageMode&gt; TextureStorageMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Metal.MTLStorageMode&gt; TextureStorageMode" />
      <MemberSignature Language="DocId" Value="P:MetalKit.MTKTextureLoaderOptions.TextureStorageMode" />
      <MemberSignature Language="F#" Value="member this.TextureStorageMode : Nullable&lt;Metal.MTLStorageMode&gt; with get, set" Usage="MetalKit.MTKTextureLoaderOptions.TextureStorageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Metal.MTLStorageMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the texture storage mode of the new texture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureUsage">
      <MemberSignature Language="C#" Value="public Nullable&lt;Metal.MTLTextureUsage&gt; TextureUsage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Metal.MTLTextureUsage&gt; TextureUsage" />
      <MemberSignature Language="DocId" Value="P:MetalKit.MTKTextureLoaderOptions.TextureUsage" />
      <MemberSignature Language="F#" Value="member this.TextureUsage : Nullable&lt;Metal.MTLTextureUsage&gt; with get, set" Usage="MetalKit.MTKTextureLoaderOptions.TextureUsage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Metal.MTLTextureUsage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an orable flag value that describes for which of the following the texture will be used: for blitting; as a render target; as a shader read source or write target; as a pixel format view; or for an unknown use.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
