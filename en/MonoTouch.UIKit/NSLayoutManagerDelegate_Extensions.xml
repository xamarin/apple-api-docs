<Type Name="NSLayoutManagerDelegate_Extensions" FullName="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class NSLayoutManagerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NSLayoutManagerDelegate_Extensions extends System.Object" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:MonoTouch.UIKit.INSLayoutManagerDelegate" /> interface to support all the methods from the <see cref="T:MonoTouch.UIKit.NSLayoutManagerDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:MonoTouch.UIKit.INSLayoutManagerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:MonoTouch.UIKit.NSLayoutManagerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BoundingBoxForControlGlyph">
      <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF BoundingBoxForControlGlyph (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, MonoTouch.UIKit.NSTextContainer textContainer, System.Drawing.RectangleF proposedRect, System.Drawing.PointF glyphPosition, uint charIndex);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF BoundingBoxForControlGlyph(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype System.Drawing.RectangleF proposedRect, valuetype System.Drawing.PointF glyphPosition, unsigned int32 charIndex) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect BoundingBoxForControlGlyph (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.UIKit.NSTextContainer textContainer, MonoTouch.CoreGraphics.CGRect proposedRect, MonoTouch.CoreGraphics.CGPoint glyphPosition, nuint charIndex);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect BoundingBoxForControlGlyph(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype MonoTouch.CoreGraphics.CGRect proposedRect, valuetype MonoTouch.CoreGraphics.CGPoint glyphPosition, valuetype System.nuint charIndex) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
        <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
        <Parameter Name="proposedRect" Type="System.Drawing.RectangleF" apistyle="classic" />
        <Parameter Name="glyphPosition" Type="System.Drawing.PointF" apistyle="classic" />
        <Parameter Name="charIndex" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="glyphIndex" Type="System.nuint" apistyle="unified" />
        <Parameter Name="proposedRect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        <Parameter Name="glyphPosition" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        <Parameter Name="charIndex" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="proposedRect">To be added.</param>
        <param name="glyphPosition">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>The <see cref="T:System.Drawing.RectangleF" /> bounding the specified control glyph.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeGeometry">
      <MemberSignature Language="C#" Value="public static void DidChangeGeometry (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSTextContainer textContainer, System.Drawing.SizeF oldSize);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeGeometry(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype System.Drawing.SizeF oldSize) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static void DidChangeGeometry (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSTextContainer textContainer, MonoTouch.CoreGraphics.CGSize oldSize);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeGeometry(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype MonoTouch.CoreGraphics.CGSize oldSize) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
        <Parameter Name="oldSize" Type="System.Drawing.SizeF" apistyle="classic" />
        <Parameter Name="oldSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="oldSize">To be added.</param>
        <summary>The geometry of <paramref name="textContainer" /> changed from <paramref name="oldSize" />, and <paramref name="layoutManager" /> will invalidate the layout.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidCompleteLayout">
      <MemberSignature Language="C#" Value="public static void DidCompleteLayout (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSTextContainer textContainer, bool layoutFinishedFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteLayout(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, class MonoTouch.UIKit.NSTextContainer textContainer, bool layoutFinishedFlag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
        <Parameter Name="layoutFinishedFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="layoutFinishedFlag">To be added.</param>
        <summary>Indicates that the specified NSLayoutManager has finished laying out text in the specified text container.</summary>
        <remarks>Indicates that the specified NSLayoutManager has finished laying out text in the specified text container.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidInvalidatedLayout">
      <MemberSignature Language="C#" Value="public static void DidInvalidatedLayout (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager sender);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidInvalidatedLayout(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="sender" Type="MonoTouch.UIKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="sender">To be added.</param>
        <summary>Indicates that the NSLayoutManager has invalidated layout information (not glyph information).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacingAfterGlyphAtIndex">
      <MemberSignature Language="C#" Value="public static float LineSpacingAfterGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 LineSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static nfloat LineSpacingAfterGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat LineSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Single</ReturnType>
        <ReturnType apistyle="unified">System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
        <Parameter Name="glyphIndex" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>The line spacing after the line ending with the specified glyph index.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphSpacingAfterGlyphAtIndex">
      <MemberSignature Language="C#" Value="public static float ParagraphSpacingAfterGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ParagraphSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static nfloat ParagraphSpacingAfterGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat ParagraphSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Single</ReturnType>
        <ReturnType apistyle="unified">System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
        <Parameter Name="glyphIndex" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>The paragraph spacing after the line ending with the specified glyph index.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphSpacingBeforeGlyphAtIndex">
      <MemberSignature Language="C#" Value="public static float ParagraphSpacingBeforeGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ParagraphSpacingBeforeGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static nfloat ParagraphSpacingBeforeGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat ParagraphSpacingBeforeGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Single</ReturnType>
        <ReturnType apistyle="unified">System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphIndex" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
        <Parameter Name="glyphIndex" Type="System.nuint" apistyle="unified" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>The paragraph spacing before the line starting with the specified glyph index.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByHyphenatingBeforeCharacter">
      <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByHyphenatingBeforeCharacter (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint charIndex);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByHyphenatingBeforeCharacter(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 charIndex) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByHyphenatingBeforeCharacter (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint charIndex);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByHyphenatingBeforeCharacter(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="charIndex" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="charIndex" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>Whether a line should break with a hyphen at the specified point. Called frequently.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldBreakLineByWordBeforeCharacter">
      <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByWordBeforeCharacter (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint charIndex);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByWordBeforeCharacter(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 charIndex) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByWordBeforeCharacter (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint charIndex);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByWordBeforeCharacter(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="charIndex" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="charIndex" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>Whether a line should have a soft line break. Called frequently.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldGenerateGlyphs">
      <MemberSignature Language="C#" Value="public static uint ShouldGenerateGlyphs (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, IntPtr glyphBuffer, IntPtr props, IntPtr charIndexes, MonoTouch.UIKit.UIFont aFont, MonoTouch.Foundation.NSRange glyphRange);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ShouldGenerateGlyphs(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, native int glyphBuffer, native int props, native int charIndexes, class MonoTouch.UIKit.UIFont aFont, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static nuint ShouldGenerateGlyphs (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, IntPtr glyphBuffer, IntPtr props, IntPtr charIndexes, MonoTouch.UIKit.UIFont aFont, MonoTouch.Foundation.NSRange glyphRange);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint ShouldGenerateGlyphs(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, native int glyphBuffer, native int props, native int charIndexes, class MonoTouch.UIKit.UIFont aFont, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="glyphBuffer" Type="System.IntPtr" />
        <Parameter Name="props" Type="System.IntPtr" />
        <Parameter Name="charIndexes" Type="System.IntPtr" />
        <Parameter Name="aFont" Type="MonoTouch.UIKit.UIFont" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="glyphBuffer">To be added.</param>
        <param name="props">To be added.</param>
        <param name="charIndexes">To be added.</param>
        <param name="aFont">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>When overridden, allows the app developer to customize the initial glyph generation process.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSetLineFragmentRect">
      <MemberSignature Language="C#" Value="public static bool ShouldSetLineFragmentRect (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, ref System.Drawing.RectangleF lineFragmentRect, ref System.Drawing.RectangleF lineFragmentUsedRect, ref float baselineOffset, MonoTouch.UIKit.NSTextContainer textContainer, MonoTouch.Foundation.NSRange glyphRange);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSetLineFragmentRect(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.Drawing.RectangleF lineFragmentRect, valuetype System.Drawing.RectangleF lineFragmentUsedRect, float32 baselineOffset, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static bool ShouldSetLineFragmentRect (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, ref MonoTouch.CoreGraphics.CGRect lineFragmentRect, ref MonoTouch.CoreGraphics.CGRect lineFragmentUsedRect, ref nfloat baselineOffset, MonoTouch.UIKit.NSTextContainer textContainer, MonoTouch.Foundation.NSRange glyphRange);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSetLineFragmentRect(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype MonoTouch.CoreGraphics.CGRect lineFragmentRect, valuetype MonoTouch.CoreGraphics.CGRect lineFragmentUsedRect, valuetype System.nfloat baselineOffset, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="lineFragmentRect" Type="System.Drawing.RectangleF&amp;" RefType="ref" apistyle="classic" />
        <Parameter Name="lineFragmentUsedRect" Type="System.Drawing.RectangleF&amp;" RefType="ref" apistyle="classic" />
        <Parameter Name="baselineOffset" Type="System.Single&amp;" RefType="ref" apistyle="classic" />
        <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
        <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="lineFragmentRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" apistyle="unified" />
        <Parameter Name="lineFragmentUsedRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" apistyle="unified" />
        <Parameter Name="baselineOffset" Type="System.nfloat&amp;" RefType="ref" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="lineFragmentRect">To be added.</param>
        <param name="lineFragmentUsedRect">To be added.</param>
        <param name="baselineOffset">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseAction">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSControlCharacterAction action, uint charIndex);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype MonoTouch.UIKit.NSControlCharacterAction action, unsigned int32 charIndex) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSControlCharacterAction action, nuint charIndex);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype MonoTouch.UIKit.NSControlCharacterAction action, valuetype System.nuint charIndex) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.NSControlCharacterAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
        <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
        <Parameter Name="action" Type="MonoTouch.UIKit.NSControlCharacterAction" />
        <Parameter Name="charIndex" Type="System.UInt32" apistyle="classic" />
        <Parameter Name="charIndex" Type="System.nuint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="layoutManager">To be added.</param>
        <param name="action">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>The control character action for the control character at the specified index.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
