<Type Name="UIScrollViewAccessibilityDelegate" FullName="MonoTouch.UIKit.UIScrollViewAccessibilityDelegate">
  <TypeSignature Language="C#" Value="public class UIScrollViewAccessibilityDelegate : MonoTouch.UIKit.UIScrollViewDelegate, IDisposable, MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIScrollViewAccessibilityDelegate extends MonoTouch.UIKit.UIScrollViewDelegate implements class MonoTouch.ObjCRuntime.INativeObject, class MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate, class MonoTouch.UIKit.IUIScrollViewDelegate, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.UIKit.UIScrollViewDelegate</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("UIScrollViewAccessibilityDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Allows accessibility hint and label to be set in a <see cref="T:MonoTouch.UIKit.UIScrollView" />.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIScrollViewAccessibilityDelegate_Protocol/index.html">Apple documentation for <c>UIScrollViewAccessibilityDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIScrollViewAccessibilityDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="classic">
      <MemberSignature Language="C#" Value="public UIScrollViewAccessibilityDelegate (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:MonoTouch.Foundation.NSCoding" />  protocol.</para>
          <para>If you want to create a subclass of this object and continue to support deserialization from an archive, you should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:MonoTouch.Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIScrollViewAccessibilityDelegate (MonoTouch.Foundation.NSObjectFlag t);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected UIScrollViewAccessibilityDelegate (MonoTouch.Foundation.NSObjectFlag t);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When you invoke the constructor that takes the NSObjectFlag.Empty you taking advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to you.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is your responsibility to completely initialize the object if you chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if your constructors invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, you should instead chain to the proper constructor in your class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIScrollViewAccessibilityDelegate (IntPtr handle);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected UIScrollViewAccessibilityDelegate (IntPtr handle);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoTouch.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationEnded" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void DecelerationEnded (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DecelerationEnded(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidEndDecelerating:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view that deceleration of scrolling stopped.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationStarted" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void DecelerationStarted (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DecelerationStarted(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewWillBeginDecelerating:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view that deceleration of scrolling started.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidZoom" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void DidZoom (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DidZoom(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidZoom:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(3, 2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view that its zoom factor changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingEnded" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void DraggingEnded (MonoTouch.UIKit.UIScrollView scrollView, bool willDecelerate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DraggingEnded(class MonoTouch.UIKit.UIScrollView scrollView, bool willDecelerate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidEndDragging:willDecelerate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        <Parameter Name="willDecelerate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="willDecelerate">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view the user finished scrolling.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingStarted" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void DraggingStarted (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DraggingStarted(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewWillBeginDragging:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view when scrolling is about to start.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityScrollStatus">
      <MemberSignature Language="C#" Value="public virtual string GetAccessibilityScrollStatus (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAccessibilityScrollStatus(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("accessibilityScrollStatusForScrollView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Gets gets the offset of <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view as a custom status.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollAnimationEnded" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void ScrollAnimationEnded (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ScrollAnimationEnded(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidEndScrollingAnimation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view that the scrolling animation finishes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrolled" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void Scrolled (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Scrolled(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidScroll:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view that the user scrolled content in the view.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrolledToTop" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void ScrolledToTop (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ScrolledToTop(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidScrollToTop:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view that the view scrolled to the top of its content.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldScrollToTop" apistyle="classic">
      <MemberSignature Language="C#" Value="public override bool ShouldScrollToTop (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldScrollToTop(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewShouldScrollToTop:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Gets whether <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view should scroll to the top of its content.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewForZoomingInScrollView" apistyle="classic">
      <MemberSignature Language="C#" Value="public override MonoTouch.UIKit.UIView ViewForZoomingInScrollView (MonoTouch.UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.UIKit.UIView ViewForZoomingInScrollView(class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("viewForZoomingInScrollView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <summary>Gets the view to scale from <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view when zooming occurs.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEndDragging" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void WillEndDragging (MonoTouch.UIKit.UIScrollView scrollView, System.Drawing.PointF velocity, ref System.Drawing.PointF targetContentOffset);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WillEndDragging(class MonoTouch.UIKit.UIScrollView scrollView, valuetype System.Drawing.PointF velocity, valuetype System.Drawing.PointF targetContentOffset) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override void WillEndDragging (MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.CoreGraphics.CGPoint velocity, ref MonoTouch.CoreGraphics.CGPoint targetContentOffset);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WillEndDragging(class MonoTouch.UIKit.UIScrollView scrollView, valuetype MonoTouch.CoreGraphics.CGPoint velocity, valuetype MonoTouch.CoreGraphics.CGPoint targetContentOffset) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewWillEndDragging:withVelocity:targetContentOffset:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(5, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        <Parameter Name="velocity" Type="System.Drawing.PointF" apistyle="classic" />
        <Parameter Name="targetContentOffset" Type="System.Drawing.PointF&amp;" RefType="ref" apistyle="classic" />
        <Parameter Name="velocity" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        <Parameter Name="targetContentOffset" Type="MonoTouch.CoreGraphics.CGPoint&amp;" RefType="ref" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="velocity">To be added.</param>
        <param name="targetContentOffset">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view when the user finishes scrolling.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomingEnded" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void ZoomingEnded (MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.UIKit.UIView withView, float atScale);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ZoomingEnded(class MonoTouch.UIKit.UIScrollView scrollView, class MonoTouch.UIKit.UIView withView, float32 atScale) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override void ZoomingEnded (MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.UIKit.UIView withView, nfloat atScale);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ZoomingEnded(class MonoTouch.UIKit.UIScrollView scrollView, class MonoTouch.UIKit.UIView withView, valuetype System.nfloat atScale) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewDidEndZooming:withView:atScale:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        <Parameter Name="withView" Type="MonoTouch.UIKit.UIView" />
        <Parameter Name="atScale" Type="System.Single" apistyle="classic" />
        <Parameter Name="atScale" Type="System.nfloat" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="withView">To be added.</param>
        <param name="atScale">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view when zooming is about to stop.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomingStarted" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void ZoomingStarted (MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.UIKit.UIView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ZoomingStarted(class MonoTouch.UIKit.UIScrollView scrollView, class MonoTouch.UIKit.UIView view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scrollViewWillBeginZooming:withView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(3, 2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
      </Parameters>
      <Docs>
        <param name="scrollView">To be added.</param>
        <param name="view">To be added.</param>
        <summary>Informs <c>this</c> <see cref="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" /> view when zooming is about to start.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
