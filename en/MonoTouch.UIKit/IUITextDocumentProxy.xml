<Type Name="IUITextDocumentProxy" FullName="MonoTouch.UIKit.IUITextDocumentProxy">
  <TypeSignature Language="C#" Value="public interface IUITextDocumentProxy : IDisposable, MonoTouch.UIKit.IUIKeyInput" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUITextDocumentProxy implements class MonoTouch.ObjCRuntime.INativeObject, class MonoTouch.UIKit.IUIKeyInput, class MonoTouch.UIKit.IUITextInputTraits, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.UIKit.IUIKeyInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="UITextDocumentProxy", WrapperType=typeof(MonoTouch.UIKit.UITextDocumentProxyWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="AdjustTextPositionByCharacterOffset", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="adjustTextPositionByCharacterOffset:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="documentContextBeforeInput", IsProperty=true, IsRequired=true, IsStatic=false, Name="DocumentContextBeforeInput", PropertyType=typeof(System.String), Selector="documentContextBeforeInput")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="documentContextAfterInput", IsProperty=true, IsRequired=true, IsStatic=false, Name="DocumentContextAfterInput", PropertyType=typeof(System.String), Selector="documentContextAfterInput")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="documentInputMode", IsProperty=true, IsRequired=false, IsStatic=false, Name="DocumentInputMode", PropertyType=typeof(MonoTouch.UIKit.UITextInputMode), Selector="documentInputMode")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.WatchOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Interface representing the required methods (if any) of the protocol <see cref="T:MonoTouch.UIKit.UITextDocumentProxy" />.</para>
    </summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:MonoTouch.UIKit.UITextDocumentProxy" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:MonoTouch.UIKit.UITextDocumentProxy" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:MonoTouch.UIKit.UITextDocumentProxy_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AdjustTextPositionByCharacterOffset">
      <MemberSignature Language="C#" Value="public void AdjustTextPositionByCharacterOffset (int offset);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustTextPositionByCharacterOffset(int32 offset) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public void AdjustTextPositionByCharacterOffset (nint offset);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustTextPositionByCharacterOffset(valuetype System.nint offset) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("adjustTextPositionByCharacterOffset:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" apistyle="classic" />
        <Parameter Name="offset" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>Moves the cursor by <paramref name="offset" />. Positive values are toward the end of the document; Negative are toward the start.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentContextAfterInput">
      <MemberSignature Language="C#" Value="public string DocumentContextAfterInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentContextAfterInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("documentContextAfterInput")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the textual context after the insertion point for <c>this</c> <see cref="T:MonoTouch.UIKit.IUITextDocumentProxy" /> object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentContextBeforeInput">
      <MemberSignature Language="C#" Value="public string DocumentContextBeforeInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentContextBeforeInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("documentContextBeforeInput")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the textual context before the insertion point for <c>this</c> <see cref="T:MonoTouch.UIKit.IUITextDocumentProxy" /> object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
