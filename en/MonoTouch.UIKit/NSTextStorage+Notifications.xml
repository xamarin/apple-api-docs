<Type Name="NSTextStorage+Notifications" FullName="MonoTouch.UIKit.NSTextStorage+Notifications">
  <TypeSignature Language="C#" Value="public static class NSTextStorage.Notifications" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract sealed beforefieldinit NSTextStorage/Notifications extends System.Object" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Notifications posted by the <see cref="T:MonoTouch.UIKit.NSTextStorage" /> class.</summary>
    <remarks>This is a static class that contains various helper methods to allow developers to observe events posted in the iOS notification hub (<see cref="T:MonoTouch.Foundation.NSNotificationCenter" />).</remarks>
  </Docs>
  <Members>
    <Member MemberName="ObserveDidProcessEditing">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject ObserveDidProcessEditing (EventHandler&lt;MonoTouch.Foundation.NSNotificationEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject ObserveDidProcessEditing(class System.EventHandler`1&lt;class MonoTouch.Foundation.NSNotificationEventArgs&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler&lt;MonoTouch.Foundation.NSNotificationEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <summary>Strongly typed notification for the <see cref="P:MonoTouch.UIKit.NSTextStorage.DidProcessEditingNotification" /> constant.</summary>
        <returns>Token object that can be used to stop receiving notifications by either disposing it or passing it to <see cref="M:MonoTouch.Foundation.NSNotificationCenter.RemoveObserver" /></returns>
        <remarks>
          <para id="tool-remark">This method can be used to subscribe for <see cref="P:MonoTouch.UIKit.NSTextStorage.DidProcessEditingNotification" /> notifications.</para>
          <example>
            <code lang="C#"><![CDATA[
// Listen to all notifications posted for any object
var token = NSTextStorage.Notifications.ObserveDidProcessEditing ((notification) => {
	Console.WriteLine ("Observed DidProcessEditingNotification!");
};

// Listen to all notifications posted for a single object
var token = NSTextStorage.Notifications.ObserveDidProcessEditing (objectToObserve, (notification) => {
	Console.WriteLine ($"Observed DidProcessEditingNotification for {nameof (objectToObserve)}!");
};

// Stop listening for notifications
token.Dispose ();
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObserveWillProcessEditing">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject ObserveWillProcessEditing (EventHandler&lt;MonoTouch.Foundation.NSNotificationEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject ObserveWillProcessEditing(class System.EventHandler`1&lt;class MonoTouch.Foundation.NSNotificationEventArgs&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler&lt;MonoTouch.Foundation.NSNotificationEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <summary>Strongly typed notification for the <see cref="P:MonoTouch.UIKit.NSTextStorage.WillProcessEditingNotification" /> constant.</summary>
        <returns>Token object that can be used to stop receiving notifications by either disposing it or passing it to <see cref="M:MonoTouch.Foundation.NSNotificationCenter.RemoveObserver" /></returns>
        <remarks>
          <para id="tool-remark">This method can be used to subscribe for <see cref="P:MonoTouch.UIKit.NSTextStorage.WillProcessEditingNotification" /> notifications.</para>
          <example>
            <code lang="C#"><![CDATA[
// Listen to all notifications posted for any object
var token = NSTextStorage.Notifications.ObserveWillProcessEditing ((notification) => {
	Console.WriteLine ("Observed WillProcessEditingNotification!");
};

// Listen to all notifications posted for a single object
var token = NSTextStorage.Notifications.ObserveWillProcessEditing (objectToObserve, (notification) => {
	Console.WriteLine ($"Observed WillProcessEditingNotification for {nameof (objectToObserve)}!");
};

// Stop listening for notifications
token.Dispose ();
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
