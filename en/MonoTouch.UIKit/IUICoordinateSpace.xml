<Type Name="IUICoordinateSpace" FullName="MonoTouch.UIKit.IUICoordinateSpace">
  <TypeSignature Language="C#" Value="public interface IUICoordinateSpace : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUICoordinateSpace implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="old">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="new">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="UICoordinateSpace", WrapperType=typeof(MonoTouch.UIKit.UICoordinateSpaceWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_8_0)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Bounds { get; }" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Bounds" apistyle="old" />
      <MemberSignature Language="C#" Value="public MonoTouch.CoreGraphics.CGRect Bounds { get; }" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.CoreGraphics.CGRect Bounds" apistyle="new" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("bounds")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="old">System.Drawing.RectangleF</ReturnType>
        <ReturnType apistyle="new">MonoTouch.CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPointFromCoordinateSpace">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF ConvertPointFromCoordinateSpace (System.Drawing.PointF point, MonoTouch.UIKit.IUICoordinateSpace coordinateSpace);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.PointF ConvertPointFromCoordinateSpace(valuetype System.Drawing.PointF point, class MonoTouch.UIKit.IUICoordinateSpace coordinateSpace) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public MonoTouch.CoreGraphics.CGPoint ConvertPointFromCoordinateSpace (MonoTouch.CoreGraphics.CGPoint point, MonoTouch.UIKit.IUICoordinateSpace coordinateSpace);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreGraphics.CGPoint ConvertPointFromCoordinateSpace(valuetype MonoTouch.CoreGraphics.CGPoint point, class MonoTouch.UIKit.IUICoordinateSpace coordinateSpace) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("convertPoint:fromCoordinateSpace:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="old">System.Drawing.PointF</ReturnType>
        <ReturnType apistyle="new">MonoTouch.CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" apistyle="old" />
        <Parameter Name="coordinateSpace" Type="MonoTouch.UIKit.IUICoordinateSpace" />
        <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="coordinateSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPointToCoordinateSpace">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF ConvertPointToCoordinateSpace (System.Drawing.PointF point, MonoTouch.UIKit.IUICoordinateSpace coordinateSpace);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.PointF ConvertPointToCoordinateSpace(valuetype System.Drawing.PointF point, class MonoTouch.UIKit.IUICoordinateSpace coordinateSpace) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public MonoTouch.CoreGraphics.CGPoint ConvertPointToCoordinateSpace (MonoTouch.CoreGraphics.CGPoint point, MonoTouch.UIKit.IUICoordinateSpace coordinateSpace);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreGraphics.CGPoint ConvertPointToCoordinateSpace(valuetype MonoTouch.CoreGraphics.CGPoint point, class MonoTouch.UIKit.IUICoordinateSpace coordinateSpace) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("convertPoint:toCoordinateSpace:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="old">System.Drawing.PointF</ReturnType>
        <ReturnType apistyle="new">MonoTouch.CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" apistyle="old" />
        <Parameter Name="coordinateSpace" Type="MonoTouch.UIKit.IUICoordinateSpace" />
        <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="coordinateSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertRectFromCoordinateSpace">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF ConvertRectFromCoordinateSpace (System.Drawing.RectangleF rect, MonoTouch.UIKit.IUICoordinateSpace coordinateSpace);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.RectangleF ConvertRectFromCoordinateSpace(valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.IUICoordinateSpace coordinateSpace) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public MonoTouch.CoreGraphics.CGRect ConvertRectFromCoordinateSpace (MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.IUICoordinateSpace coordinateSpace);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreGraphics.CGRect ConvertRectFromCoordinateSpace(valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.IUICoordinateSpace coordinateSpace) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("convertRect:fromCoordinateSpace:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="old">System.Drawing.RectangleF</ReturnType>
        <ReturnType apistyle="new">MonoTouch.CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="old" />
        <Parameter Name="coordinateSpace" Type="MonoTouch.UIKit.IUICoordinateSpace" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="coordinateSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertRectToCoordinateSpace">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF ConvertRectToCoordinateSpace (System.Drawing.RectangleF rect, MonoTouch.UIKit.IUICoordinateSpace coordinateSpace);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.RectangleF ConvertRectToCoordinateSpace(valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.IUICoordinateSpace coordinateSpace) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public MonoTouch.CoreGraphics.CGRect ConvertRectToCoordinateSpace (MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.IUICoordinateSpace coordinateSpace);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreGraphics.CGRect ConvertRectToCoordinateSpace(valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.IUICoordinateSpace coordinateSpace) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("convertRect:toCoordinateSpace:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="old">System.Drawing.RectangleF</ReturnType>
        <ReturnType apistyle="new">MonoTouch.CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="old" />
        <Parameter Name="coordinateSpace" Type="MonoTouch.UIKit.IUICoordinateSpace" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="coordinateSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
