<Type Name="IUIViewControllerPreviewingDelegate" FullName="MonoTouch.UIKit.IUIViewControllerPreviewingDelegate">
  <TypeSignature Language="C#" Value="public interface IUIViewControllerPreviewingDelegate : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIViewControllerPreviewingDelegate implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="UIViewControllerPreviewingDelegate", WrapperType=typeof(MonoTouch.UIKit.UIViewControllerPreviewingDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetViewControllerForPreview", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.UIKit.UIViewController), Selector="previewingContext:viewControllerForLocation:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CommitViewController", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="previewingContext:commitViewController:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Interface representing the required methods (if any) of the protocol <see cref="T:MonoTouch.UIKit.UIViewControllerPreviewingDelegate" />.</para>
    </summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:MonoTouch.UIKit.UIViewControllerPreviewingDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:MonoTouch.UIKit.UIViewControllerPreviewingDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:MonoTouch.UIKit.UIViewControllerPreviewingDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CommitViewController">
      <MemberSignature Language="C#" Value="public void CommitViewController (MonoTouch.UIKit.IUIViewControllerPreviewing previewingContext, MonoTouch.UIKit.UIViewController viewControllerToCommit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitViewController(class MonoTouch.UIKit.IUIViewControllerPreviewing previewingContext, class MonoTouch.UIKit.UIViewController viewControllerToCommit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("previewingContext:commitViewController:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previewingContext" Type="MonoTouch.UIKit.IUIViewControllerPreviewing" />
        <Parameter Name="viewControllerToCommit" Type="MonoTouch.UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="previewingContext">The context in which the 3D Touch is occurring.</param>
        <param name="viewControllerToCommit">The  to which the app should transfer control.</param>
        <summary>Method that is called to allow the developer to prepare the commit view.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewControllerForPreview">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.UIViewController GetViewControllerForPreview (MonoTouch.UIKit.IUIViewControllerPreviewing previewingContext, MonoTouch.CoreGraphics.CGPoint location);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIViewController GetViewControllerForPreview(class MonoTouch.UIKit.IUIViewControllerPreviewing previewingContext, valuetype MonoTouch.CoreGraphics.CGPoint location) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("previewingContext:viewControllerForLocation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previewingContext" Type="MonoTouch.UIKit.IUIViewControllerPreviewing" />
        <Parameter Name="location" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="previewingContext">The context in which the 3D Touch is occurring..</param>
        <param name="location">The location where the 3D touch is occurring.</param>
        <summary>Method that is called when the user has pressed a source view, blurring the remainder of the screen, so that a preview view controller can be returned.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>