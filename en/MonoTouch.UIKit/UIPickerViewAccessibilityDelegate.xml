<Type Name="UIPickerViewAccessibilityDelegate" FullName="MonoTouch.UIKit.UIPickerViewAccessibilityDelegate">
  <TypeSignature Language="C#" Value="public class UIPickerViewAccessibilityDelegate : MonoTouch.UIKit.UIPickerViewDelegate, IDisposable, MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIPickerViewAccessibilityDelegate extends MonoTouch.UIKit.UIPickerViewDelegate implements class MonoTouch.ObjCRuntime.INativeObject, class MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate, class MonoTouch.UIKit.IUIPickerViewDelegate, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.UIKit.UIPickerViewDelegate</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("UIPickerViewAccessibilityDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Allows accessibility hint and label to be set in a picker view.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIPickerViewAccessibilityDelegate_Protocol/index.html">Apple documentation for <c>UIPickerViewAccessibilityDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPickerViewAccessibilityDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="classic">
      <MemberSignature Language="C#" Value="public UIPickerViewAccessibilityDelegate (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:MonoTouch.Foundation.NSCoding" />  protocol.</para>
          <para>If you want to create a subclass of this object and continue to support deserialization from an archive, you should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:MonoTouch.Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPickerViewAccessibilityDelegate (MonoTouch.Foundation.NSObjectFlag t);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected UIPickerViewAccessibilityDelegate (MonoTouch.Foundation.NSObjectFlag t);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When you invoke the constructor that takes the NSObjectFlag.Empty you taking advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to you.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is your responsibility to completely initialize the object if you chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if your constructors invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, you should instead chain to the proper constructor in your class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPickerViewAccessibilityDelegate (IntPtr handle);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected UIPickerViewAccessibilityDelegate (IntPtr handle);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoTouch.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityHint">
      <MemberSignature Language="C#" Value="public virtual string GetAccessibilityHint (MonoTouch.UIKit.UIPickerView pickerView, int component);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAccessibilityHint(class MonoTouch.UIKit.UIPickerView pickerView, int32 component) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual string GetAccessibilityHint (MonoTouch.UIKit.UIPickerView pickerView, nint component);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAccessibilityHint(class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pickerView:accessibilityHintForComponent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
        <Parameter Name="component" Type="System.Int32" apistyle="classic" />
        <Parameter Name="component" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Gets a hint that describes the result of an action on <c>this</c> <see cref="T:MonoTouch.UIKit.UIPickerViewAccessibilityDelegate" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityLabel">
      <MemberSignature Language="C#" Value="public virtual string GetAccessibilityLabel (MonoTouch.UIKit.UIPickerView pickerView, int acessibilityLabelForComponent);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAccessibilityLabel(class MonoTouch.UIKit.UIPickerView pickerView, int32 acessibilityLabelForComponent) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual string GetAccessibilityLabel (MonoTouch.UIKit.UIPickerView pickerView, nint acessibilityLabelForComponent);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAccessibilityLabel(class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint acessibilityLabelForComponent) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pickerView:accessibilityLabelForComponent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
        <Parameter Name="acessibilityLabelForComponent" Type="System.Int32" apistyle="classic" />
        <Parameter Name="acessibilityLabelForComponent" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="acessibilityLabelForComponent">To be added.</param>
        <summary>Gets a label for the specified <see cref="T:MonoTouch.UIKit.UIPickerView" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributedTitle" apistyle="classic">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSAttributedString GetAttributedTitle (MonoTouch.UIKit.UIPickerView pickerView, int row, int component);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSAttributedString GetAttributedTitle(class MonoTouch.UIKit.UIPickerView pickerView, int32 row, int32 component) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSAttributedString GetAttributedTitle (MonoTouch.UIKit.UIPickerView pickerView, nint row, nint component);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSAttributedString GetAttributedTitle(class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pickerView:attributedTitleForRow:forComponent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Since(6, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
        <Parameter Name="row" Type="System.Int32" apistyle="classic" />
        <Parameter Name="component" Type="System.Int32" apistyle="classic" />
        <Parameter Name="row" Type="System.nint" apistyle="unified" />
        <Parameter Name="component" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="row">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Gets the styled title to use for a specified row.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponentWidth" apistyle="classic">
      <MemberSignature Language="C#" Value="public override float GetComponentWidth (MonoTouch.UIKit.UIPickerView pickerView, int component);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetComponentWidth(class MonoTouch.UIKit.UIPickerView pickerView, int32 component) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override nfloat GetComponentWidth (MonoTouch.UIKit.UIPickerView pickerView, nint component);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.nfloat GetComponentWidth(class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pickerView:widthForComponent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Single</ReturnType>
        <ReturnType apistyle="unified">System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
        <Parameter Name="component" Type="System.Int32" apistyle="classic" />
        <Parameter Name="component" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Gets the width to use to draw a specified row component.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowHeight" apistyle="classic">
      <MemberSignature Language="C#" Value="public override float GetRowHeight (MonoTouch.UIKit.UIPickerView pickerView, int component);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetRowHeight(class MonoTouch.UIKit.UIPickerView pickerView, int32 component) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override nfloat GetRowHeight (MonoTouch.UIKit.UIPickerView pickerView, nint component);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.nfloat GetRowHeight(class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pickerView:rowHeightForComponent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Single</ReturnType>
        <ReturnType apistyle="unified">System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
        <Parameter Name="component" Type="System.Int32" apistyle="classic" />
        <Parameter Name="component" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Gets the height to use to draw a specified row component.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTitle" apistyle="classic">
      <MemberSignature Language="C#" Value="public override string GetTitle (MonoTouch.UIKit.UIPickerView pickerView, int row, int component);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetTitle(class MonoTouch.UIKit.UIPickerView pickerView, int32 row, int32 component) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override string GetTitle (MonoTouch.UIKit.UIPickerView pickerView, nint row, nint component);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetTitle(class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pickerView:titleForRow:forComponent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
        <Parameter Name="row" Type="System.Int32" apistyle="classic" />
        <Parameter Name="component" Type="System.Int32" apistyle="classic" />
        <Parameter Name="row" Type="System.nint" apistyle="unified" />
        <Parameter Name="component" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="row">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Gets the title to use for the specified row.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView" apistyle="classic">
      <MemberSignature Language="C#" Value="public override MonoTouch.UIKit.UIView GetView (MonoTouch.UIKit.UIPickerView pickerView, int row, int component, MonoTouch.UIKit.UIView view);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.UIKit.UIView GetView(class MonoTouch.UIKit.UIPickerView pickerView, int32 row, int32 component, class MonoTouch.UIKit.UIView view) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override MonoTouch.UIKit.UIView GetView (MonoTouch.UIKit.UIPickerView pickerView, nint row, nint component, MonoTouch.UIKit.UIView view);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.UIKit.UIView GetView(class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component, class MonoTouch.UIKit.UIView view) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pickerView:viewForRow:forComponent:reusingView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
        <Parameter Name="row" Type="System.Int32" apistyle="classic" />
        <Parameter Name="component" Type="System.Int32" apistyle="classic" />
        <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
        <Parameter Name="row" Type="System.nint" apistyle="unified" />
        <Parameter Name="component" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="row">To be added.</param>
        <param name="component">To be added.</param>
        <param name="view">To be added.</param>
        <summary>Gets the <see cref="T:MonoTouch.UIKit.UIView" /> to use for the specified row in the specified component.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected" apistyle="classic">
      <MemberSignature Language="C#" Value="public override void Selected (MonoTouch.UIKit.UIPickerView pickerView, int row, int component);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Selected(class MonoTouch.UIKit.UIPickerView pickerView, int32 row, int32 component) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override void Selected (MonoTouch.UIKit.UIPickerView pickerView, nint row, nint component);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Selected(class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pickerView:didSelectRow:inComponent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
        <Parameter Name="row" Type="System.Int32" apistyle="classic" />
        <Parameter Name="component" Type="System.Int32" apistyle="classic" />
        <Parameter Name="row" Type="System.nint" apistyle="unified" />
        <Parameter Name="component" Type="System.nint" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="row">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Indicates that the user selected a specified row in a specified component.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
