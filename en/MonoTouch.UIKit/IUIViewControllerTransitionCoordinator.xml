<Type Name="IUIViewControllerTransitionCoordinator" FullName="MonoTouch.UIKit.IUIViewControllerTransitionCoordinator">
  <TypeSignature Language="C#" Value="public interface IUIViewControllerTransitionCoordinator : IDisposable, MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIViewControllerTransitionCoordinator implements class MonoTouch.ObjCRuntime.INativeObject, class MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext, class System.IDisposable" />
  <AssemblyInfo apistyle="old">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="new">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="UIViewControllerTransitionCoordinator", WrapperType=typeof(MonoTouch.UIKit.UIViewControllerTransitionCoordinatorWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Since(7, 0)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AnimateAlongsideTransition">
      <MemberSignature Language="C#" Value="public bool AnimateAlongsideTransition (Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; animate, Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AnimateAlongsideTransition(class System.Action`1&lt;class MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; animate, class System.Action`1&lt;class MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("animateAlongsideTransition:completion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animate" Type="System.Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="animate">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateAlongsideTransitionInView">
      <MemberSignature Language="C#" Value="public bool AnimateAlongsideTransitionInView (MonoTouch.UIKit.UIView view, Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; animation, Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AnimateAlongsideTransitionInView(class MonoTouch.UIKit.UIView view, class System.Action`1&lt;class MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; animation, class System.Action`1&lt;class MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("animateAlongsideTransitionInView:animation:completion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
        <Parameter Name="animation" Type="System.Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="animation">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyWhenInteractionEndsUsingBlock">
      <MemberSignature Language="C#" Value="public void NotifyWhenInteractionEndsUsingBlock (Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyWhenInteractionEndsUsingBlock(class System.Action`1&lt;class MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt; handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("notifyWhenInteractionEndsUsingBlock:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
