<Type Name="UIPageViewControllerDelegate_Extensions" FullName="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UIPageViewControllerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UIPageViewControllerDelegate_Extensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" /> interface to support all the methods from the <see cref="T:MonoTouch.UIKit.UIPageViewControllerDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:MonoTouch.UIKit.UIPageViewControllerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidFinishAnimating">
      <MemberSignature Language="C#" Value="public static void DidFinishAnimating (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController, bool finished, MonoTouch.UIKit.UIViewController[] previousViewControllers, bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishAnimating(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController, bool finished, class MonoTouch.UIKit.UIViewController[] previousViewControllers, bool completed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        <Parameter Name="finished" Type="System.Boolean" />
        <Parameter Name="previousViewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
        <Parameter Name="completed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="pageViewController">To be added.</param>
        <param name="finished">To be added.</param>
        <param name="previousViewControllers">To be added.</param>
        <param name="completed">To be added.</param>
        <summary>Indicates that animation has completed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredInterfaceOrientationForPresentation">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="pageViewController">To be added.</param>
        <summary>The preferred orientation of the UIPageViewController.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpineLocation">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIPageViewControllerSpineLocation GetSpineLocation (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController, MonoTouch.UIKit.UIInterfaceOrientation orientation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIPageViewControllerSpineLocation GetSpineLocation(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController, valuetype MonoTouch.UIKit.UIInterfaceOrientation orientation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIPageViewControllerSpineLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        <Parameter Name="orientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="pageViewController">To be added.</param>
        <param name="orientation">To be added.</param>
        <summary>The location of the spine of the UIPageViewController.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedInterfaceOrientations">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="pageViewController">To be added.</param>
        <summary>The supported interface orientations.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillTransition">
      <MemberSignature Language="C#" Value="public static void WillTransition (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController, MonoTouch.UIKit.UIViewController[] pendingViewControllers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillTransition(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController, class MonoTouch.UIKit.UIViewController[] pendingViewControllers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        <Parameter Name="pendingViewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="pageViewController">To be added.</param>
        <param name="pendingViewControllers">To be added.</param>
        <summary>Indicates that a transition is about to begin.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>