<Type Name="UIApplicationDelegate_Extensions" FullName="MonoTouch.UIKit.UIApplicationDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UIApplicationDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UIApplicationDelegate_Extensions extends System.Object" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:MonoTouch.UIKit.IUIApplicationDelegate" /> interface to support all the methods from the <see cref="T:MonoTouch.UIKit.UIApplicationDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:MonoTouch.UIKit.IUIApplicationDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:MonoTouch.UIKit.UIApplicationDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessibilityPerformMagicTap">
      <MemberSignature Language="C#" Value="public static bool AccessibilityPerformMagicTap (this MonoTouch.UIKit.IUIApplicationDelegate This);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AccessibilityPerformMagicTap(class MonoTouch.UIKit.IUIApplicationDelegate This) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <summary>Performs the most important action of the app. Often, this is toggling the most important state of the app.</summary>
        <returns>
          <see langword="true" /> if the action succeeded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationSignificantTimeChange">
      <MemberSignature Language="C#" Value="public static void ApplicationSignificantTimeChange (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ApplicationSignificantTimeChange(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates a significant change in time, such as midnight, change to Daylight Savings, or a shift in timezone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedStatusBarFrame">
      <MemberSignature Language="C#" Value="public static void ChangedStatusBarFrame (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, System.Drawing.RectangleF oldStatusBarFrame);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangedStatusBarFrame(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype System.Drawing.RectangleF oldStatusBarFrame) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static void ChangedStatusBarFrame (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.CoreGraphics.CGRect oldStatusBarFrame);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangedStatusBarFrame(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype MonoTouch.CoreGraphics.CGRect oldStatusBarFrame) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="oldStatusBarFrame" Type="System.Drawing.RectangleF" apistyle="classic" />
        <Parameter Name="oldStatusBarFrame" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="oldStatusBarFrame">The status bar's previous Frame.</param>
        <summary>Indicates that the frame of the status bar has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueUserActivity">
      <MemberSignature Language="C#" Value="public static bool ContinueUserActivity (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSUserActivity userActivity, MonoTouch.UIKit.UIApplicationRestorationHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContinueUserActivity(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSUserActivity userActivity, class MonoTouch.UIKit.UIApplicationRestorationHandler completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
        <Parameter Name="completionHandler" Type="MonoTouch.UIKit.UIApplicationRestorationHandler">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDUIApplicationRestorationHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">The  singleton.</param>
        <param name="userActivity">The user activity identifier.</param>
        <param name="completionHandler">System-provided callback that can be called with appropriate  or  objects.</param>
        <summary>Informs the app that there is data associated with continuing a task specified as a <see cref="T:MonoTouch.Foundation.NSUserActivity" /> object, and then returns whether the app continued the activity.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeStatusBarOrientation">
      <MemberSignature Language="C#" Value="public static void DidChangeStatusBarOrientation (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIInterfaceOrientation oldStatusBarOrientation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeStatusBarOrientation(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype MonoTouch.UIKit.UIInterfaceOrientation oldStatusBarOrientation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="oldStatusBarOrientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="oldStatusBarOrientation">The status bar's previous orientation.</param>
        <summary>Indicates that the orientation of the status bar has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDecodeRestorableState">
      <MemberSignature Language="C#" Value="public static void DidDecodeRestorableState (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDecodeRestorableState(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="coder">To be added.</param>
        <summary>Indicates that the app should restore highest-level state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEnterBackground">
      <MemberSignature Language="C#" Value="public static void DidEnterBackground (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEnterBackground(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 4, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates that the application has entered the background.</summary>
        <remarks>
          <para>Apps should complete processing this method in approximately 5 seconds. If more time is necessary, applications can call <see cref="M:MonoTouch.UIKit.UIApplication.BeginBackgroundTask" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFailToContinueUserActivitiy">
      <MemberSignature Language="C#" Value="public static void DidFailToContinueUserActivitiy (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string userActivityType, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailToContinueUserActivitiy(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string userActivityType, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="userActivityType" Type="System.String" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="userActivityType">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Informs the app that the activity of the <paramref name="userActivityType" /> type could not be continued, and specifies a <paramref name="error" /> as the reason for the failure.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReceiveRemoteNotification">
      <MemberSignature Language="C#" Value="public static void DidReceiveRemoteNotification (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary userInfo, Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveRemoteNotification(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary userInfo, class System.Action`1&lt;valuetype MonoTouch.UIKit.UIBackgroundFetchResult&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.TvOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V4))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Handle to the UIApplication.</param>
        <param name="userInfo">To be added.</param>
        <param name="completionHandler">Callback to invoke to notify the operating system of the result of the background fetch operation.</param>
        <summary>Indicates that the app received a remote notification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRegisterUserNotificationSettings">
      <MemberSignature Language="C#" Value="public static void DidRegisterUserNotificationSettings (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIUserNotificationSettings notificationSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRegisterUserNotificationSettings(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.UIKit.UIUserNotificationSettings notificationSettings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="notificationSettings" Type="MonoTouch.UIKit.UIUserNotificationSettings" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="notificationSettings">To be added.</param>
        <summary>Informs the app of the type of notifications it can use, as a <see cref="T:MonoTouch.UIKit.UIUserNotificationSettings" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedToRegisterForRemoteNotifications">
      <MemberSignature Language="C#" Value="public static void FailedToRegisterForRemoteNotifications (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToRegisterForRemoteNotifications(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="error">To be added.</param>
        <summary>Indicates that Apple Push Service did not successfully compete the registration process.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishedLaunching">
      <MemberSignature Language="C#" Value="public static void FinishedLaunching (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedLaunching(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>The application has finished launching.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishedLaunching">
      <MemberSignature Language="C#" Value="public static bool FinishedLaunching (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary launchOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FinishedLaunching(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary launchOptions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="launchOptions" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="launchOptions">An NSDictionary with the launch options, can be null.   Possible key values are UIApplication's LaunchOption static properties.</param>
        <summary>Indicates that launching has finished and the app will shortly begin running.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedInterfaceOrientations">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientationMask GetSupportedInterfaceOrientations (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIWindow forWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientationMask GetSupportedInterfaceOrientations(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.UIKit.UIWindow forWindow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="forWindow" Type="MonoTouch.UIKit.UIWindow">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.Transient</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="forWindow">To be added.</param>
        <summary>The interface orientations supported by the app.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewController">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController GetViewController (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string[] restorationIdentifierComponents, MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController GetViewController(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string[] restorationIdentifierComponents, class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="restorationIdentifierComponents" Type="System.String[]" />
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="restorationIdentifierComponents">An array of identifiers that identify the path to the desired view controller, which should be last.</param>
        <param name="coder">To be added.</param>
        <summary>Retrieves the UIViewController identified by the last value in the restorationIdentifierComponents parameter.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIWindow GetWindow (this MonoTouch.UIKit.IUIApplicationDelegate This);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIWindow GetWindow(class MonoTouch.UIKit.IUIApplicationDelegate This) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAction">
      <MemberSignature Language="C#" Value="public static void HandleAction (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string actionIdentifier, MonoTouch.Foundation.NSDictionary remoteNotificationInfo, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string actionIdentifier, class MonoTouch.Foundation.NSDictionary remoteNotificationInfo, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use UNUserNotificationCenterDelegate.DidReceiveNotificationResponse instead")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="actionIdentifier" Type="System.String" />
        <Parameter Name="remoteNotificationInfo" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="actionIdentifier">To be added.</param>
        <param name="remoteNotificationInfo">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Informs the app of a custom action to perform based on a push notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="remoteNoticationInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAction">
      <MemberSignature Language="C#" Value="public static void HandleAction (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string actionIdentifier, MonoTouch.UIKit.UILocalNotification localNotification, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string actionIdentifier, class MonoTouch.UIKit.UILocalNotification localNotification, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use UNUserNotificationCenterDelegate.DidReceiveNotificationResponse instead")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="actionIdentifier" Type="System.String" />
        <Parameter Name="localNotification" Type="MonoTouch.UIKit.UILocalNotification" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="actionIdentifier">To be added.</param>
        <param name="localNotification">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Informs the app that the user selected an action identified by the <paramref name="actionIdentifier" /> value from an alert of a <see cref="T:MonoTouch.UIKit.UILocalNotification" /> object, and executes the <paramref name="completionHandler" /> block after it completes the action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAction">
      <MemberSignature Language="C#" Value="public static void HandleAction (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string actionIdentifier, MonoTouch.Foundation.NSDictionary remoteNotificationInfo, MonoTouch.Foundation.NSDictionary responseInfo, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string actionIdentifier, class MonoTouch.Foundation.NSDictionary remoteNotificationInfo, class MonoTouch.Foundation.NSDictionary responseInfo, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use UNUserNotificationCenterDelegate.DidReceiveNotificationResponse instead")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="actionIdentifier" Type="System.String" />
        <Parameter Name="remoteNotificationInfo" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="responseInfo" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="actionIdentifier">To be added.</param>
        <param name="remoteNotificationInfo">To be added.</param>
        <param name="responseInfo">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Informs the app of a custom action to perform based on a remote notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="remoteNoticationInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAction">
      <MemberSignature Language="C#" Value="public static void HandleAction (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string actionIdentifier, MonoTouch.UIKit.UILocalNotification localNotification, MonoTouch.Foundation.NSDictionary responseInfo, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string actionIdentifier, class MonoTouch.UIKit.UILocalNotification localNotification, class MonoTouch.Foundation.NSDictionary responseInfo, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use UNUserNotificationCenterDelegate.DidReceiveNotificationResponse instead")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="actionIdentifier" Type="System.String" />
        <Parameter Name="localNotification" Type="MonoTouch.UIKit.UILocalNotification" />
        <Parameter Name="responseInfo" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="actionIdentifier">To be added.</param>
        <param name="localNotification">To be added.</param>
        <param name="responseInfo">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Informs the app of a custom action to perform based on a local notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="responseInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEventsForBackgroundUrl" apistyle="classic">
      <MemberSignature Language="C#" Value="public static void HandleEventsForBackgroundUrl (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string sessionIdentifier, MonoTouch.Foundation.NSAction completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleEventsForBackgroundUrl(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string sessionIdentifier, class MonoTouch.Foundation.NSAction completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="sessionIdentifier" Type="System.String" />
        <Parameter Name="completionHandler" Type="MonoTouch.Foundation.NSAction">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDNSAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="sessionIdentifier">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Indicates that events related to a URL session are awaiting processing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEventsForBackgroundUrl" apistyle="unified">
      <MemberSignature Language="C#" Value="public static void HandleEventsForBackgroundUrl (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string sessionIdentifier, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleEventsForBackgroundUrl(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string sessionIdentifier, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="sessionIdentifier" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="sessionIdentifier">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Raised when events relating to a background <see cref="T:MonoTouch.UIKit.NSUrlSession" /> are waiting to be processed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleOpenURL">
      <MemberSignature Language="C#" Value="public static bool HandleOpenURL (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HandleOpenURL(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSUrl url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Obsoleted(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Override OpenUrl(UIApplication,NSUrl,NSDictionary). The later will be called if both are implemented.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="url">To be added.</param>
        <summary>Developers should use <see cref="M:MonoTouch.UIKit.UIApplicationDelegate.OpenUrl" /> rather than this deprecated method.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleWatchKitExtensionRequest">
      <MemberSignature Language="C#" Value="public static void HandleWatchKitExtensionRequest (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary userInfo, Action&lt;MonoTouch.Foundation.NSDictionary&gt; reply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleWatchKitExtensionRequest(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary userInfo, class System.Action`1&lt;class MonoTouch.Foundation.NSDictionary&gt; reply) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 2, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="reply" Type="System.Action&lt;MonoTouch.Foundation.NSDictionary&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V10))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="userInfo">To be added.</param>
        <param name="reply">To be added.</param>
        <summary>A watchkit extension has made a request.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="public static void OnActivated (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnActivated(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>The app has moved from the inactive to actie state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResignActivation">
      <MemberSignature Language="C#" Value="public static void OnResignActivation (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnResignActivation(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>The app is about to move from the active state to the inactive state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenUrl">
      <MemberSignature Language="C#" Value="public static bool OpenUrl (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication app, MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OpenUrl(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication app, class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="app" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="app">To be added.</param>
        <param name="url">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Indicates that the application should open the specified <paramref name="url" /> with context from <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenUrl">
      <MemberSignature Language="C#" Value="public static bool OpenUrl (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSUrl url, string sourceApplication, MonoTouch.Foundation.NSObject annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OpenUrl(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSUrl url, string sourceApplication, class MonoTouch.Foundation.NSObject annotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Obsoleted(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Override OpenUrl(UIApplication,NSUrl,NSDictionary). The later will be called if both are implemented.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="sourceApplication" Type="System.String" />
        <Parameter Name="annotation" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to this application ().</param>
        <param name="url">The  specified by the calling application.</param>
        <param name="sourceApplication">The bundle ID of the calling application.</param>
        <param name="annotation">Optional property-list data passed by the calling application.</param>
        <summary>Loads a resource from the specified URL.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformActionForShortcutItem">
      <MemberSignature Language="C#" Value="public static void PerformActionForShortcutItem (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIApplicationShortcutItem shortcutItem, MonoTouch.UIKit.UIOperationHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformActionForShortcutItem(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.UIKit.UIApplicationShortcutItem shortcutItem, class MonoTouch.UIKit.UIOperationHandler completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="shortcutItem" Type="MonoTouch.UIKit.UIApplicationShortcutItem" />
        <Parameter Name="completionHandler" Type="MonoTouch.UIKit.UIOperationHandler">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDUIOperationHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="shortcutItem">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Called by the system when the user initiates a Home screen quick action, unless the interaction was handled in <see cref="M:Monotouch.UIKit.UIApplicationDelegate.WillFinishLaunching" /> or <see cref="M:Monotouch.UIKit.UIApplicationDelegate.DidFinishLaunching" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFetch">
      <MemberSignature Language="C#" Value="public static void PerformFetch (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformFetch(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class System.Action`1&lt;valuetype MonoTouch.UIKit.UIBackgroundFetchResult&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V4))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Handle to the UIApplication.</param>
        <param name="completionHandler">Callback to invoke to notify the operating system of the result of the background fetch operation.</param>
        <summary>Indicates that the application can begin a fetch operation if it has data to download.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedDataDidBecomeAvailable">
      <MemberSignature Language="C#" Value="public static void ProtectedDataDidBecomeAvailable (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProtectedDataDidBecomeAvailable(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 4, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Protected files are now available.</summary>
        <remarks>
          <para>Content protection encrypts and restricts access to protected files in certain situations, such as when the device is locked. This method will be called when the device is unlocked and the files are available for reading.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedDataWillBecomeUnavailable">
      <MemberSignature Language="C#" Value="public static void ProtectedDataWillBecomeUnavailable (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProtectedDataWillBecomeUnavailable(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 4, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates that protected files are about to be encrypted and unavailable for reading.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedLocalNotification">
      <MemberSignature Language="C#" Value="public static void ReceivedLocalNotification (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UILocalNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedLocalNotification(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.UIKit.UILocalNotification notification) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use UNUserNotificationCenterDelegate.WillPresentNotification/DidReceiveNotificationResponse instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 4, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="notification" Type="MonoTouch.UIKit.UILocalNotification" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="notification">To be added.</param>
        <summary>Indicates that the app received a local notification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedRemoteNotification">
      <MemberSignature Language="C#" Value="public static void ReceivedRemoteNotification (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary userInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedRemoteNotification(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary userInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use UNUserNotificationCenterDelegate.WillPresentNotification/DidReceiveNotificationResponse for user visible notifications and ReceivedRemoteNotification for silent remote notifications.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="userInfo">A dictionary whose "aps" key contains information related to the notification</param>
        <summary>Indicates that the app received a remote notification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMemoryWarning">
      <MemberSignature Language="C#" Value="public static void ReceiveMemoryWarning (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMemoryWarning(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>The app has received a low-memory warning from the system.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredForRemoteNotifications">
      <MemberSignature Language="C#" Value="public static void RegisteredForRemoteNotifications (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSData deviceToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisteredForRemoteNotifications(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSData deviceToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="deviceToken" Type="MonoTouch.Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="deviceToken">To be added.</param>
        <summary>Indicates that the device successfully registered with Apple Push Service.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindow">
      <MemberSignature Language="C#" Value="public static void SetWindow (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIWindow value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindow(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIWindow value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="value" Type="MonoTouch.UIKit.UIWindow" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldAllowExtensionPointIdentifier">
      <MemberSignature Language="C#" Value="public static bool ShouldAllowExtensionPointIdentifier (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSString extensionPointIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAllowExtensionPointIdentifier(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSString extensionPointIdentifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="extensionPointIdentifier" Type="MonoTouch.Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="extensionPointIdentifier">To be added.</param>
        <summary>Requests permission from the app to run app extensions based on the extension point identified by <paramref name="extensionPointIdentifier" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldRequestHealthAuthorization">
      <MemberSignature Language="C#" Value="public static void ShouldRequestHealthAuthorization (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShouldRequestHealthAuthorization(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <summary>The system calls this method when the developer's app should ask the user for access to HealthKit data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldRestoreApplicationState">
      <MemberSignature Language="C#" Value="public static bool ShouldRestoreApplicationState (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRestoreApplicationState(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="coder">To be added.</param>
        <summary>Whether the application should restore saved state information.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSaveApplicationState">
      <MemberSignature Language="C#" Value="public static bool ShouldSaveApplicationState (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSaveApplicationState(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="coder">To be added.</param>
        <summary>Whether the application should save application state information.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserActivityUpdated" apistyle="classic">
      <MemberSignature Language="C#" Value="public static void UserActivityUpdated (MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.Foundation.NSUserActivity userActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityUpdated(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.Foundation.NSUserActivity userActivity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Override the overload accepting an UIApplication argument")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="userActivity">To be added.</param>
        <summary>Informs the app that the <see cref="T:MonoTouch.Foundation.NSUserActivity" /> object in <paramref name="userActivity" /> has been updated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserActivityUpdated">
      <MemberSignature Language="C#" Value="public static void UserActivityUpdated (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSUserActivity userActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityUpdated(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSUserActivity userActivity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="userActivity">To be added.</param>
        <summary>Informs the app that the <see cref="T:MonoTouch.Foundation.NSUserActivity" /> object in <paramref name="userActivity" /> has been updated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDidAcceptCloudKitShare">
      <MemberSignature Language="C#" Value="public static void UserDidAcceptCloudKitShare (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.CloudKit.CKShareMetadata cloudKitShareMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserDidAcceptCloudKitShare(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.CloudKit.CKShareMetadata cloudKitShareMetadata) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.TvOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.WatchOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="cloudKitShareMetadata" Type="MonoTouch.CloudKit.CKShareMetadata" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">To be added.</param>
        <param name="cloudKitShareMetadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeStatusBarFrame">
      <MemberSignature Language="C#" Value="public static void WillChangeStatusBarFrame (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, System.Drawing.RectangleF newStatusBarFrame);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarFrame(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype System.Drawing.RectangleF newStatusBarFrame) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static void WillChangeStatusBarFrame (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.CoreGraphics.CGRect newStatusBarFrame);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarFrame(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype MonoTouch.CoreGraphics.CGRect newStatusBarFrame) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="newStatusBarFrame" Type="System.Drawing.RectangleF" apistyle="classic" />
        <Parameter Name="newStatusBarFrame" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="newStatusBarFrame">To be added.</param>
        <summary>Indicates that the frame of the status bar is about to change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeStatusBarOrientation">
      <MemberSignature Language="C#" Value="public static void WillChangeStatusBarOrientation (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIInterfaceOrientation newStatusBarOrientation, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarOrientation(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype MonoTouch.UIKit.UIInterfaceOrientation newStatusBarOrientation, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="newStatusBarOrientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="newStatusBarOrientation">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Indicates that the orientation of the status bar is about to change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillContinueUserActivity">
      <MemberSignature Language="C#" Value="public static bool WillContinueUserActivity (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string userActivityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WillContinueUserActivity(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string userActivityType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="userActivityType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">The  singleton for the app.</param>
        <param name="userActivityType">The user activity identifier.</param>
        <summary>Informs the app that the user is attempting to continue a <paramref name="userActivityType" /> action for which data might not be available, and returns to notify the user that the app will continue the activity.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEncodeRestorableState">
      <MemberSignature Language="C#" Value="public static void WillEncodeRestorableState (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEncodeRestorableState(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="coder">To be added.</param>
        <summary>Indicates that the app is about to store application state data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEnterForeground">
      <MemberSignature Language="C#" Value="public static void WillEnterForeground (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEnterForeground(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 4, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates that the application is about to enter the foreground.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillFinishLaunching">
      <MemberSignature Language="C#" Value="public static bool WillFinishLaunching (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary launchOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WillFinishLaunching(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary launchOptions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        <Parameter Name="launchOptions" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="launchOptions">An NSDictionary with the launch options, can be null.   Possible key values are UIApplication's LaunchOption static properties.</param>
        <summary>Indicates that the app is about to finish its launching procedures.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillTerminate">
      <MemberSignature Language="C#" Value="public static void WillTerminate (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillTerminate(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates that the app is about to terminate.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
