<Type Name="IPKPaymentAuthorizationViewControllerDelegate" FullName="PassKit.IPKPaymentAuthorizationViewControllerDelegate">
  <TypeSignature Language="C#" Value="public interface IPKPaymentAuthorizationViewControllerDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPKPaymentAuthorizationViewControllerDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
  <TypeSignature Language="F#" Value="type IPKPaymentAuthorizationViewControllerDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="PKPaymentAuthorizationViewControllerDelegate", WrapperType=typeof(PassKit.PKPaymentAuthorizationViewControllerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidAuthorizePayment", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didAuthorizePayment:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidAuthorizePayment2", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didAuthorizePayment:handler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="PaymentAuthorizationViewControllerDidFinish", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewControllerDidFinish:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingMethod", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didSelectShippingMethod:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingMethod2", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didSelectShippingMethod:handler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingAddress", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didSelectShippingAddress:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="WillAuthorizePayment", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewControllerWillAuthorizePayment:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingContact", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didSelectShippingContact:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingContact2", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didSelectShippingContact:handler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectPaymentMethod", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didSelectPaymentMethod:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectPaymentMethod2", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="paymentAuthorizationViewController:didSelectPaymentMethod:handler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidAuthorizePayment", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(PassKit.PKPayment), typeof(System.Action`1&lt;PassKit.PKPaymentAuthorizationStatus&gt;) }, Selector="paymentAuthorizationViewController:didAuthorizePayment:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidAuthorizePayment2", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(PassKit.PKPayment), typeof(System.Action`1&lt;PassKit.PKPaymentAuthorizationResult&gt;) }, Selector="paymentAuthorizationViewController:didAuthorizePayment:handler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="PaymentAuthorizationViewControllerDidFinish", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController) }, Selector="paymentAuthorizationViewControllerDidFinish:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingMethod", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(PassKit.PKShippingMethod), typeof(PassKit.PKPaymentShippingMethodSelected) }, Selector="paymentAuthorizationViewController:didSelectShippingMethod:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingMethod2", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(PassKit.PKShippingMethod), typeof(System.Action`1&lt;PassKit.PKPaymentRequestShippingMethodUpdate&gt;) }, Selector="paymentAuthorizationViewController:didSelectShippingMethod:handler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingAddress", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(AddressBook.ABRecord), typeof(PassKit.PKPaymentShippingAddressSelected) }, Selector="paymentAuthorizationViewController:didSelectShippingAddress:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="WillAuthorizePayment", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController) }, Selector="paymentAuthorizationViewControllerWillAuthorizePayment:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingContact", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(PassKit.PKContact), typeof(PassKit.PKPaymentShippingAddressSelected) }, Selector="paymentAuthorizationViewController:didSelectShippingContact:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectShippingContact2", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(PassKit.PKContact), typeof(System.Action`1&lt;PassKit.PKPaymentRequestShippingContactUpdate&gt;) }, Selector="paymentAuthorizationViewController:didSelectShippingContact:handler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectPaymentMethod", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(PassKit.PKPaymentMethod), typeof(System.Action`1&lt;PassKit.PKPaymentSummaryItem[]&gt;) }, Selector="paymentAuthorizationViewController:didSelectPaymentMethod:completion:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidSelectPaymentMethod2", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKPaymentAuthorizationViewController), typeof(PassKit.PKPaymentMethod), typeof(System.Action`1&lt;PassKit.PKPaymentRequestPaymentMethodUpdate&gt;) }, Selector="paymentAuthorizationViewController:didSelectPaymentMethod:handler:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:PassKit.PKPaymentAuthorizationViewControllerDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:PassKit.PKPaymentAuthorizationViewControllerDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:PassKit.PKPaymentAuthorizationViewControllerDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidAuthorizePayment">
      <MemberSignature Language="C#" Value="public void DidAuthorizePayment (PassKit.PKPaymentAuthorizationViewController controller, PassKit.PKPayment payment, Action&lt;PassKit.PKPaymentAuthorizationStatus&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAuthorizePayment(class PassKit.PKPaymentAuthorizationViewController controller, class PassKit.PKPayment payment, class System.Action`1&lt;valuetype PassKit.PKPaymentAuthorizationStatus&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.IPKPaymentAuthorizationViewControllerDelegate.DidAuthorizePayment(PassKit.PKPaymentAuthorizationViewController,PassKit.PKPayment,System.Action{PassKit.PKPaymentAuthorizationStatus})" />
      <MemberSignature Language="F#" Value="abstract member DidAuthorizePayment : PassKit.PKPaymentAuthorizationViewController * PassKit.PKPayment * Action&lt;PassKit.PKPaymentAuthorizationStatus&gt; -&gt; unit" Usage="iPKPaymentAuthorizationViewControllerDelegate.DidAuthorizePayment (controller, payment, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("paymentAuthorizationViewController:didAuthorizePayment:completion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidAuthorizePayment2' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidAuthorizePayment2' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="PassKit.PKPaymentAuthorizationViewController" />
        <Parameter Name="payment" Type="PassKit.PKPayment" />
        <Parameter Name="completion" Type="System.Action&lt;PassKit.PKPaymentAuthorizationStatus&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V36))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="payment">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>Developers should not use this deprecated method. Developers should use 'DidAuthorizePayment2' instead.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaymentAuthorizationViewControllerDidFinish">
      <MemberSignature Language="C#" Value="public void PaymentAuthorizationViewControllerDidFinish (PassKit.PKPaymentAuthorizationViewController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PaymentAuthorizationViewControllerDidFinish(class PassKit.PKPaymentAuthorizationViewController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.IPKPaymentAuthorizationViewControllerDelegate.PaymentAuthorizationViewControllerDidFinish(PassKit.PKPaymentAuthorizationViewController)" />
      <MemberSignature Language="F#" Value="abstract member PaymentAuthorizationViewControllerDidFinish : PassKit.PKPaymentAuthorizationViewController -&gt; unit" Usage="iPKPaymentAuthorizationViewControllerDelegate.PaymentAuthorizationViewControllerDidFinish controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("paymentAuthorizationViewControllerDidFinish:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="PassKit.PKPaymentAuthorizationViewController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Called after the payment authorization has completed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillAuthorizePayment">
      <MemberSignature Language="C#" Value="public void WillAuthorizePayment (PassKit.PKPaymentAuthorizationViewController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillAuthorizePayment(class PassKit.PKPaymentAuthorizationViewController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.IPKPaymentAuthorizationViewControllerDelegate.WillAuthorizePayment(PassKit.PKPaymentAuthorizationViewController)" />
      <MemberSignature Language="F#" Value="abstract member WillAuthorizePayment : PassKit.PKPaymentAuthorizationViewController -&gt; unit" Usage="iPKPaymentAuthorizationViewControllerDelegate.WillAuthorizePayment controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("paymentAuthorizationViewControllerWillAuthorizePayment:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="PassKit.PKPaymentAuthorizationViewController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Called prior to authorizing a payment.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
