<Type Name="IPKAddPaymentPassViewControllerDelegate" FullName="PassKit.IPKAddPaymentPassViewControllerDelegate">
  <TypeSignature Language="C#" Value="public interface IPKAddPaymentPassViewControllerDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPKAddPaymentPassViewControllerDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:PassKit.IPKAddPaymentPassViewControllerDelegate" />
  <TypeSignature Language="F#" Value="type IPKAddPaymentPassViewControllerDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="PKAddPaymentPassViewControllerDelegate", WrapperType=typeof(PassKit.PKAddPaymentPassViewControllerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GenerateRequestWithCertificateChain", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="addPaymentPassViewController:generateRequestWithCertificateChain:nonce:nonceSignature:completionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidFinishAddingPaymentPass", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="addPaymentPassViewController:didFinishAddingPaymentPass:error:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GenerateRequestWithCertificateChain", ParameterByRef=new System.Boolean[] { false, false, false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKAddPaymentPassViewController), typeof(Foundation.NSData[]), typeof(Foundation.NSData), typeof(Foundation.NSData), typeof(System.Action`1&lt;PassKit.PKAddPaymentPassRequest&gt;) }, Selector="addPaymentPassViewController:generateRequestWithCertificateChain:nonce:nonceSignature:completionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidFinishAddingPaymentPass", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(PassKit.PKAddPaymentPassViewController), typeof(PassKit.PKPaymentPass), typeof(Foundation.NSError) }, Selector="addPaymentPassViewController:didFinishAddingPaymentPass:error:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:PassKit.PKAddPaymentPassViewControllerDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:PassKit.PKAddPaymentPassViewControllerDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:PassKit.PKAddPaymentPassViewControllerDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:PassKit.PKAddPassesViewControllerDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidFinishAddingPaymentPass">
      <MemberSignature Language="C#" Value="public void DidFinishAddingPaymentPass (PassKit.PKAddPaymentPassViewController controller, PassKit.PKPaymentPass pass, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishAddingPaymentPass(class PassKit.PKAddPaymentPassViewController controller, class PassKit.PKPaymentPass pass, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.IPKAddPaymentPassViewControllerDelegate.DidFinishAddingPaymentPass(PassKit.PKAddPaymentPassViewController,PassKit.PKPaymentPass,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFinishAddingPaymentPass : PassKit.PKAddPaymentPassViewController * PassKit.PKPaymentPass * Foundation.NSError -&gt; unit" Usage="iPKAddPaymentPassViewControllerDelegate.DidFinishAddingPaymentPass (controller, pass, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addPaymentPassViewController:didFinishAddingPaymentPass:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="PassKit.PKAddPaymentPassViewController" />
        <Parameter Name="pass" Type="PassKit.PKPaymentPass" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="pass">To be added. This parameter can be <see langwor="null" />.</param>
        <param name="error">To be added. This parameter can be <see langwor="null" />.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateRequestWithCertificateChain">
      <MemberSignature Language="C#" Value="public void GenerateRequestWithCertificateChain (PassKit.PKAddPaymentPassViewController controller, Foundation.NSData[] certificates, Foundation.NSData nonce, Foundation.NSData nonceSignature, Action&lt;PassKit.PKAddPaymentPassRequest&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateRequestWithCertificateChain(class PassKit.PKAddPaymentPassViewController controller, class Foundation.NSData[] certificates, class Foundation.NSData nonce, class Foundation.NSData nonceSignature, class System.Action`1&lt;class PassKit.PKAddPaymentPassRequest&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.IPKAddPaymentPassViewControllerDelegate.GenerateRequestWithCertificateChain(PassKit.PKAddPaymentPassViewController,Foundation.NSData[],Foundation.NSData,Foundation.NSData,System.Action{PassKit.PKAddPaymentPassRequest})" />
      <MemberSignature Language="F#" Value="abstract member GenerateRequestWithCertificateChain : PassKit.PKAddPaymentPassViewController * Foundation.NSData[] * Foundation.NSData * Foundation.NSData * Action&lt;PassKit.PKAddPaymentPassRequest&gt; -&gt; unit" Usage="iPKAddPaymentPassViewControllerDelegate.GenerateRequestWithCertificateChain (controller, certificates, nonce, nonceSignature, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addPaymentPassViewController:generateRequestWithCertificateChain:nonce:nonceSignature:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="PassKit.PKAddPaymentPassViewController" />
        <Parameter Name="certificates" Type="Foundation.NSData[]" />
        <Parameter Name="nonce" Type="Foundation.NSData" />
        <Parameter Name="nonceSignature" Type="Foundation.NSData" />
        <Parameter Name="handler" Type="System.Action&lt;PassKit.PKAddPaymentPassRequest&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V32))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="certificates">To be added.</param>
        <param name="nonce">To be added.</param>
        <param name="nonceSignature">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
