<Type Name="PKPassLibrary" FullName="PassKit.PKPassLibrary">
  <TypeSignature Language="C#" Value="public class PKPassLibrary : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PKPassLibrary extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:PassKit.PKPassLibrary" />
  <TypeSignature Language="F#" Value="type PKPassLibrary = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("PKPassLibrary", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the user's library of passes.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/PassKit/Reference/PKPassLibrary_Ref/index.html">Apple documentation for <c>PKPassLibrary</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PKPassLibrary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PKPassLibrary (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new PassKit.PKPassLibrary : Foundation.NSObjectFlag -&gt; PassKit.PKPassLibrary" Usage="new PassKit.PKPassLibrary t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal PKPassLibrary (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new PassKit.PKPassLibrary : nativeint -&gt; PassKit.PKPassLibrary" Usage="new PassKit.PKPassLibrary handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivatePaymentPass">
      <MemberSignature Language="C#" Value="public virtual void ActivatePaymentPass (PassKit.PKPaymentPass paymentPass, Foundation.NSData activationData, Action&lt;bool,Foundation.NSError&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivatePaymentPass(class PassKit.PKPaymentPass paymentPass, class Foundation.NSData activationData, class System.Action`2&lt;bool, class Foundation.NSError&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.ActivatePaymentPass(PassKit.PKPaymentPass,Foundation.NSData,System.Action{System.Boolean,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member ActivatePaymentPass : PassKit.PKPaymentPass * Foundation.NSData * Action&lt;bool, Foundation.NSError&gt; -&gt; unit&#xA;override this.ActivatePaymentPass : PassKit.PKPaymentPass * Foundation.NSData * Action&lt;bool, Foundation.NSError&gt; -&gt; unit" Usage="pKPassLibrary.ActivatePaymentPass (paymentPass, activationData, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("activatePaymentPass:withActivationData:completion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paymentPass" Type="PassKit.PKPaymentPass" />
        <Parameter Name="activationData" Type="Foundation.NSData" />
        <Parameter Name="completion" Type="System.Action&lt;System.Boolean,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V12))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paymentPass">To be added.</param>
        <param name="activationData">To be added.</param>
        <param name="completion">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Activates the specified <paramref name="paymentPass" /> with the activation code in <paramref name="activationData" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivatePaymentPass">
      <MemberSignature Language="C#" Value="public virtual void ActivatePaymentPass (PassKit.PKPaymentPass paymentPass, string activationCode, Action&lt;bool,Foundation.NSError&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivatePaymentPass(class PassKit.PKPaymentPass paymentPass, string activationCode, class System.Action`2&lt;bool, class Foundation.NSError&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.ActivatePaymentPass(PassKit.PKPaymentPass,System.String,System.Action{System.Boolean,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member ActivatePaymentPass : PassKit.PKPaymentPass * string * Action&lt;bool, Foundation.NSError&gt; -&gt; unit&#xA;override this.ActivatePaymentPass : PassKit.PKPaymentPass * string * Action&lt;bool, Foundation.NSError&gt; -&gt; unit" Usage="pKPassLibrary.ActivatePaymentPass (paymentPass, activationCode, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("activatePaymentPass:withActivationCode:completion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paymentPass" Type="PassKit.PKPaymentPass" />
        <Parameter Name="activationCode" Type="System.String" />
        <Parameter Name="completion" Type="System.Action&lt;System.Boolean,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V12))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paymentPass">To be added.</param>
        <param name="activationCode">To be added.</param>
        <param name="completion">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Activates the specified <paramref name="paymentPass" /> with the activation code in <paramref name="activationData" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivatePaymentPassAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Tuple&lt;bool,Foundation.NSError&gt;&gt; ActivatePaymentPassAsync (PassKit.PKPaymentPass paymentPass, Foundation.NSData activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Tuple`2&lt;bool, class Foundation.NSError&gt;&gt; ActivatePaymentPassAsync(class PassKit.PKPaymentPass paymentPass, class Foundation.NSData activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.ActivatePaymentPassAsync(PassKit.PKPaymentPass,Foundation.NSData)" />
      <MemberSignature Language="F#" Value="abstract member ActivatePaymentPassAsync : PassKit.PKPaymentPass * Foundation.NSData -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;&#xA;override this.ActivatePaymentPassAsync : PassKit.PKPaymentPass * Foundation.NSData -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;" Usage="pKPassLibrary.ActivatePaymentPassAsync (paymentPass, activationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Tuple&lt;System.Boolean,Foundation.NSError&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paymentPass" Type="PassKit.PKPaymentPass" />
        <Parameter Name="activationData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="paymentPass">To be added.</param>
        <param name="activationData">To be added.</param>
        <summary>Activates the specified <paramref name="paymentPass" /> with the activation code in <paramref name="activationData" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous ActivatePaymentPass operation.  The value of the TResult parameter is of type System.Action&lt;System.Boolean,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivatePaymentPassAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Tuple&lt;bool,Foundation.NSError&gt;&gt; ActivatePaymentPassAsync (PassKit.PKPaymentPass paymentPass, string activationCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Tuple`2&lt;bool, class Foundation.NSError&gt;&gt; ActivatePaymentPassAsync(class PassKit.PKPaymentPass paymentPass, string activationCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.ActivatePaymentPassAsync(PassKit.PKPaymentPass,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ActivatePaymentPassAsync : PassKit.PKPaymentPass * string -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;&#xA;override this.ActivatePaymentPassAsync : PassKit.PKPaymentPass * string -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;" Usage="pKPassLibrary.ActivatePaymentPassAsync (paymentPass, activationCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Tuple&lt;System.Boolean,Foundation.NSError&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paymentPass" Type="PassKit.PKPaymentPass" />
        <Parameter Name="activationCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paymentPass">To be added.</param>
        <param name="activationCode">To be added.</param>
        <summary>Activates the specified <paramref name="paymentPass" /> with the activation code in <paramref name="activationData" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous ActivatePaymentPass operation.  The value of the TResult parameter is of type System.Action&lt;System.Boolean,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para copied="true">The ActivatePaymentPassAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPasses">
      <MemberSignature Language="C#" Value="public virtual void AddPasses (PassKit.PKPass[] passes, Action&lt;PassKit.PKPassLibraryAddPassesStatus&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPasses(class PassKit.PKPass[] passes, class System.Action`1&lt;valuetype PassKit.PKPassLibraryAddPassesStatus&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.AddPasses(PassKit.PKPass[],System.Action{PassKit.PKPassLibraryAddPassesStatus})" />
      <MemberSignature Language="F#" Value="abstract member AddPasses : PassKit.PKPass[] * Action&lt;PassKit.PKPassLibraryAddPassesStatus&gt; -&gt; unit&#xA;override this.AddPasses : PassKit.PKPass[] * Action&lt;PassKit.PKPassLibraryAddPassesStatus&gt; -&gt; unit" Usage="pKPassLibrary.AddPasses (passes, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addPasses:withCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passes" Type="PassKit.PKPass[]" />
        <Parameter Name="completion" Type="System.Action&lt;PassKit.PKPassLibraryAddPassesStatus&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V9))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="passes">To be added.</param>
        <param name="completion">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Presents a standard UX for adding multiple passes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPassesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;PassKit.PKPassLibraryAddPassesStatus&gt; AddPassesAsync (PassKit.PKPass[] passes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype PassKit.PKPassLibraryAddPassesStatus&gt; AddPassesAsync(class PassKit.PKPass[] passes) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.AddPassesAsync(PassKit.PKPass[])" />
      <MemberSignature Language="F#" Value="abstract member AddPassesAsync : PassKit.PKPass[] -&gt; System.Threading.Tasks.Task&lt;PassKit.PKPassLibraryAddPassesStatus&gt;&#xA;override this.AddPassesAsync : PassKit.PKPass[] -&gt; System.Threading.Tasks.Task&lt;PassKit.PKPassLibraryAddPassesStatus&gt;" Usage="pKPassLibrary.AddPassesAsync passes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;PassKit.PKPassLibraryAddPassesStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passes" Type="PassKit.PKPass[]" />
      </Parameters>
      <Docs>
        <param name="passes">To be added.</param>
        <summary>Presents a standard UX for adding multiple passes.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous AddPasses operation.  The value of the TResult parameter is of type System.Action&lt;PassKit.PKPassLibraryAddPassesStatus&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddFelicaPass">
      <MemberSignature Language="C#" Value="public virtual bool CanAddFelicaPass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddFelicaPass" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.CanAddFelicaPass" />
      <MemberSignature Language="F#" Value="member this.CanAddFelicaPass : bool" Usage="PassKit.PKPassLibrary.CanAddFelicaPass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("canAddFelicaPass")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether Felica passes can be added to the library.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddPaymentPass">
      <MemberSignature Language="C#" Value="public virtual bool CanAddPaymentPass (string primaryAccountIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAddPaymentPass(string primaryAccountIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.CanAddPaymentPass(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CanAddPaymentPass : string -&gt; bool&#xA;override this.CanAddPaymentPass : string -&gt; bool" Usage="pKPassLibrary.CanAddPaymentPass primaryAccountIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("canAddPaymentPassWithPrimaryAccountIdentifier:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryAccountIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primaryAccountIdentifier">To be added.</param>
        <summary>Whether the app can add a card to Apple Pay for <paramref name="primaryAccountIdentifier" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="PassKit.PKPassLibrary.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (PassKit.PKPass pass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class PassKit.PKPass pass) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.Contains(PassKit.PKPass)" />
      <MemberSignature Language="F#" Value="abstract member Contains : PassKit.PKPass -&gt; bool&#xA;override this.Contains : PassKit.PKPass -&gt; bool" Usage="pKPassLibrary.Contains pass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("containsPass:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pass" Type="PassKit.PKPass" />
      </Parameters>
      <Docs>
        <param name="pass">To be added.</param>
        <summary>Whether the specified <paramref name="pass" /> is available.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DidChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DidChangeNotification" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.DidChangeNotification" />
      <MemberSignature Language="F#" Value="member this.DidChangeNotification : Foundation.NSString" Usage="PassKit.PKPassLibrary.DidChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Advice("Use PKPassLibrary.Notifications.ObserveDidChange helper method instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("PKPassLibraryDidChangeNotification", "PassKit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for DidChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <para id="tool-remark">If you want to subscribe to this notification, you can use the convenience <see cref="T:PassKit.PKPassLibrary.Notifications" />.<see cref="M:PassKit.PKPassLibrary.Notifications.ObserveDidChange*" /> method which offers strongly typed access to the parameters of the notification.</para>
          <para>The following example shows how to use the strongly typed Notifications class, to take the guesswork out of the available properties in the notification:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// Lambda style
//

// listening
notification = PKPassLibrary.Notifications.ObserveDidChange ((sender, args) => {
    /* Access strongly typed args */
    Console.WriteLine ("Notification: {0}", args.Notification);
});

// To stop listening:
notification.Dispose ();

//
// Method style
//
NSObject notification;
void Callback (object sender, Foundation.NSNotificationEventArgs args)
{
    // Access strongly typed args
    Console.WriteLine ("Notification: {0}", args.Notification);
}

void Setup ()
{
    notification = PKPassLibrary.Notifications.ObserveDidChange (Callback);
}

void Teardown ()
{
    notification.Dispose ();
}]]></code>
          </example>
          <para>The following example shows how to use the notification with the DefaultCenter API:</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        PKPassLibrary.DidChangeNotification, (notification) => {Console.WriteLine ("Received the notification PKPassLibrary", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification PKPassLibrary", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (PKPassLibrary.DidChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAutomaticPassPresentationSuppression">
      <MemberSignature Language="C#" Value="public static void EndAutomaticPassPresentationSuppression (nuint requestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndAutomaticPassPresentationSuppression(valuetype System.nuint requestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.EndAutomaticPassPresentationSuppression(System.nuint)" />
      <MemberSignature Language="F#" Value="static member EndAutomaticPassPresentationSuppression : nuint -&gt; unit" Usage="PassKit.PKPassLibrary.EndAutomaticPassPresentationSuppression requestToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("endAutomaticPassPresentationSuppressionWithRequestToken:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestToken" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="requestToken">To be added.</param>
        <summary>Enables automatic display of the Apple Pay UI.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPass">
      <MemberSignature Language="C#" Value="public virtual PassKit.PKPass GetPass (string identifier, string serialNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class PassKit.PKPass GetPass(string identifier, string serialNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.GetPass(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetPass : string * string -&gt; PassKit.PKPass&#xA;override this.GetPass : string * string -&gt; PassKit.PKPass" Usage="pKPassLibrary.GetPass (identifier, serialNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("passWithPassTypeIdentifier:serialNumber:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>PassKit.PKPass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="serialNumber" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">To be added.</param>
        <param name="serialNumber">To be added.</param>
        <summary>Returns the  <see cref="T:PassKit.PKPass" /> whose <see cref="P:PassKit.PKPass.PassTypeIdentifier" /> and <see cref="P:PassKit.PKPass.SerialNumber" /> match the arguments.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPasses">
      <MemberSignature Language="C#" Value="public virtual PassKit.PKPass[] GetPasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class PassKit.PKPass[] GetPasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.GetPasses" />
      <MemberSignature Language="F#" Value="abstract member GetPasses : unit -&gt; PassKit.PKPass[]&#xA;override this.GetPasses : unit -&gt; PassKit.PKPass[]" Usage="pKPassLibrary.GetPasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("passes")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>PassKit.PKPass[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The passes in the user's pass library.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPasses">
      <MemberSignature Language="C#" Value="public virtual PassKit.PKPass[] GetPasses (PassKit.PKPassType passType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class PassKit.PKPass[] GetPasses(valuetype PassKit.PKPassType passType) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.GetPasses(PassKit.PKPassType)" />
      <MemberSignature Language="F#" Value="abstract member GetPasses : PassKit.PKPassType -&gt; PassKit.PKPass[]&#xA;override this.GetPasses : PassKit.PKPassType -&gt; PassKit.PKPass[]" Usage="pKPassLibrary.GetPasses passType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("passesOfType:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>PassKit.PKPass[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passType" Type="PassKit.PKPassType" />
      </Parameters>
      <Docs>
        <param name="passType">To be added.</param>
        <summary>The passes in the user's pass library whose <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Pass%20Kit%20PKPass%20Type%20Pass%20Type&amp;scope=Xamarin" title="P:PassKit.PKPassType.PassType">P:PassKit.PKPassType.PassType</a></format> matches <paramref name="passType" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.IsAvailable" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="PassKit.PKPassLibrary.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isPassLibraryAvailable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the pass library is available.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLibraryPaymentPassActivationAvailable">
      <MemberSignature Language="C#" Value="public virtual bool IsLibraryPaymentPassActivationAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLibraryPaymentPassActivationAvailable" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.IsLibraryPaymentPassActivationAvailable" />
      <MemberSignature Language="F#" Value="member this.IsLibraryPaymentPassActivationAvailable : bool" Usage="PassKit.PKPassLibrary.IsLibraryPaymentPassActivationAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isPaymentPassActivationAvailable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the device allows adding library payment passes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaymentPassActivationAvailable">
      <MemberSignature Language="C#" Value="public static bool IsPaymentPassActivationAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPaymentPassActivationAvailable" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.IsPaymentPassActivationAvailable" />
      <MemberSignature Language="F#" Value="member this.IsPaymentPassActivationAvailable : bool" Usage="PassKit.PKPassLibrary.IsPaymentPassActivationAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, "Use the library's instance 'IsLibraryPaymentPassActivationAvailable' property instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isPaymentPassActivationAvailable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, "Use the library's instance 'IsLibraryPaymentPassActivationAvailable' property instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Developers should use the library's instance 'IsLibraryPaymentPassActivationAvailable' property instead.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuppressingAutomaticPassPresentation">
      <MemberSignature Language="C#" Value="public static bool IsSuppressingAutomaticPassPresentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSuppressingAutomaticPassPresentation" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.IsSuppressingAutomaticPassPresentation" />
      <MemberSignature Language="F#" Value="member this.IsSuppressingAutomaticPassPresentation : bool" Usage="PassKit.PKPassLibrary.IsSuppressingAutomaticPassPresentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isSuppressingAutomaticPassPresentation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the system is suppressing automatic presentation of passes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenPaymentSetup">
      <MemberSignature Language="C#" Value="public virtual void OpenPaymentSetup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenPaymentSetup() cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.OpenPaymentSetup" />
      <MemberSignature Language="F#" Value="abstract member OpenPaymentSetup : unit -&gt; unit&#xA;override this.OpenPaymentSetup : unit -&gt; unit" Usage="pKPassLibrary.OpenPaymentSetup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("openPaymentSetup")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Presents to the user the standard interface to set up credit cards for use with Apple Pay.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentPaymentPass">
      <MemberSignature Language="C#" Value="public virtual void PresentPaymentPass (PassKit.PKPaymentPass pass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentPaymentPass(class PassKit.PKPaymentPass pass) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.PresentPaymentPass(PassKit.PKPaymentPass)" />
      <MemberSignature Language="F#" Value="abstract member PresentPaymentPass : PassKit.PKPaymentPass -&gt; unit&#xA;override this.PresentPaymentPass : PassKit.PKPaymentPass -&gt; unit" Usage="pKPassLibrary.PresentPaymentPass pass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("presentPaymentPass:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pass" Type="PassKit.PKPaymentPass" />
      </Parameters>
      <Docs>
        <param name="pass">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotePaymentPasses">
      <MemberSignature Language="C#" Value="public virtual PassKit.PKPaymentPass[] RemotePaymentPasses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class PassKit.PKPaymentPass[] RemotePaymentPasses" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.RemotePaymentPasses" />
      <MemberSignature Language="F#" Value="member this.RemotePaymentPasses : PassKit.PKPaymentPass[]" Usage="PassKit.PKPassLibrary.RemotePaymentPasses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("remotePaymentPasses")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>PassKit.PKPaymentPass[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:PassKit.PKPaymentPass" /> objects stored on a remote device.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotePaymentPassesDidChangeNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString RemotePaymentPassesDidChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString RemotePaymentPassesDidChangeNotification" />
      <MemberSignature Language="DocId" Value="P:PassKit.PKPassLibrary.RemotePaymentPassesDidChangeNotification" />
      <MemberSignature Language="F#" Value="member this.RemotePaymentPassesDidChangeNotification : Foundation.NSString" Usage="PassKit.PKPassLibrary.RemotePaymentPassesDidChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Advice("Use PKPassLibrary.Notifications.ObserveRemotePaymentPassesDidChange helper method instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("PKPassLibraryRemotePaymentPassesDidChangeNotification", "PassKit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for RemotePaymentPassesDidChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        PKPassLibrary.RemotePaymentPassesDidChangeNotification, (notification) => {Console.WriteLine ("Received the notification PKPassLibrary", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification PKPassLibrary", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (PKPassLibrary.RemotePaymentPassesDidChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (PassKit.PKPass pass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class PassKit.PKPass pass) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.Remove(PassKit.PKPass)" />
      <MemberSignature Language="F#" Value="abstract member Remove : PassKit.PKPass -&gt; unit&#xA;override this.Remove : PassKit.PKPass -&gt; unit" Usage="pKPassLibrary.Remove pass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removePass:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pass" Type="PassKit.PKPass" />
      </Parameters>
      <Docs>
        <param name="pass">To be added.</param>
        <summary>Removes the specified <paramref name="pass" /> from the pass library.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual bool Replace (PassKit.PKPass pass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace(class PassKit.PKPass pass) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.Replace(PassKit.PKPass)" />
      <MemberSignature Language="F#" Value="abstract member Replace : PassKit.PKPass -&gt; bool&#xA;override this.Replace : PassKit.PKPass -&gt; bool" Usage="pKPassLibrary.Replace pass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("replacePassWithPass:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pass" Type="PassKit.PKPass" />
      </Parameters>
      <Docs>
        <param name="pass">To be added.</param>
        <summary>Replaces an existing pass with <paramref name="pass" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <!-- Huh? How do it know which one to replace? -->
      </Docs>
    </Member>
    <Member MemberName="RequestAutomaticPassPresentationSuppression">
      <MemberSignature Language="C#" Value="public static nuint RequestAutomaticPassPresentationSuppression (Action&lt;PassKit.PKAutomaticPassPresentationSuppressionResult&gt; responseHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint RequestAutomaticPassPresentationSuppression(class System.Action`1&lt;valuetype PassKit.PKAutomaticPassPresentationSuppressionResult&gt; responseHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:PassKit.PKPassLibrary.RequestAutomaticPassPresentationSuppression(System.Action{PassKit.PKAutomaticPassPresentationSuppressionResult})" />
      <MemberSignature Language="F#" Value="static member RequestAutomaticPassPresentationSuppression : Action&lt;PassKit.PKAutomaticPassPresentationSuppressionResult&gt; -&gt; nuint" Usage="PassKit.PKPassLibrary.RequestAutomaticPassPresentationSuppression responseHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("requestAutomaticPassPresentationSuppressionWithResponseHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseHandler" Type="System.Action&lt;PassKit.PKAutomaticPassPresentationSuppressionResult&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V30))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="responseHandler">To be added.</param>
        <summary>Stops the device from automatically presenting Apply Pay.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
