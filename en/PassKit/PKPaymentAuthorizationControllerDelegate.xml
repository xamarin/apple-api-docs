<Type Name="PKPaymentAuthorizationControllerDelegate" FullName="PassKit.PKPaymentAuthorizationControllerDelegate">
  <TypeSignature Language="C#" Value="public abstract class PKPaymentAuthorizationControllerDelegate : Foundation.NSObject, IDisposable, PassKit.IPKPaymentAuthorizationControllerDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PKPaymentAuthorizationControllerDelegate extends Foundation.NSObject implements class ObjCRuntime.INativeObject, class PassKit.IPKPaymentAuthorizationControllerDelegate, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>PassKit.IPKPaymentAuthorizationControllerDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("PKPaymentAuthorizationControllerDelegate", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate object that responds to user interactions on behalf of a <see cref="T:PassKit.PKPaymentAuthorizationController" />.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/reference/PassKit/PKPaymentAuthorizationControllerDelegate">Apple documentation for <c>PKPaymentAuthorizationControllerDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PKPaymentAuthorizationControllerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PKPaymentAuthorizationControllerDelegate (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PKPaymentAuthorizationControllerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAuthorizePayment">
      <MemberSignature Language="C#" Value="public virtual void DidAuthorizePayment (MonoTouch.PassKit.PKPaymentAuthorizationController controller, MonoTouch.PassKit.PKPayment payment, Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationResult&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAuthorizePayment(class MonoTouch.PassKit.PKPaymentAuthorizationController controller, class MonoTouch.PassKit.PKPayment payment, class System.Action`1&lt;class MonoTouch.PassKit.PKPaymentAuthorizationResult&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationController:didAuthorizePayment:handler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        <Parameter Name="payment" Type="MonoTouch.PassKit.PKPayment" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationResult&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V160))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="payment">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAuthorizePayment">
      <MemberSignature Language="C#" Value="public abstract void DidAuthorizePayment (MonoTouch.PassKit.PKPaymentAuthorizationController controller, MonoTouch.PassKit.PKPayment payment, Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationStatus&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAuthorizePayment(class MonoTouch.PassKit.PKPaymentAuthorizationController controller, class MonoTouch.PassKit.PKPayment payment, class System.Action`1&lt;valuetype MonoTouch.PassKit.PKPaymentAuthorizationStatus&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationController:didAuthorizePayment:completion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidAuthorizePayment' overload with the 'Action&lt;PKPaymentAuthorizationResult&gt;' parameter instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidAuthorizePayment' overload with the 'Action&lt;PKPaymentAuthorizationResult&gt;' parameter instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        <Parameter Name="payment" Type="MonoTouch.PassKit.PKPayment" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationStatus&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V43))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="payment">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinish">
      <MemberSignature Language="C#" Value="public abstract void DidFinish (MonoTouch.PassKit.PKPaymentAuthorizationController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinish(class MonoTouch.PassKit.PKPaymentAuthorizationController controller) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationControllerDidFinish:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
      </Parameters>
      <Docs>
        <param name="controller">The <see cref="T:PassKit.PKPaymentAuthorizationController" /> for which the payment authorization has finished.</param>
        <summary>Method that is called when payment authorization has finished.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSelectPaymentMethod">
      <MemberSignature Language="C#" Value="public virtual void DidSelectPaymentMethod (MonoTouch.PassKit.PKPaymentAuthorizationController controller, MonoTouch.PassKit.PKPaymentMethod paymentMethod, Action&lt;MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSelectPaymentMethod(class MonoTouch.PassKit.PKPaymentAuthorizationController controller, class MonoTouch.PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationController:didSelectPaymentMethod:handler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V161))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="paymentMethod">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSelectPaymentMethod">
      <MemberSignature Language="C#" Value="public virtual void DidSelectPaymentMethod (MonoTouch.PassKit.PKPaymentAuthorizationController controller, MonoTouch.PassKit.PKPaymentMethod paymentMethod, Action&lt;MonoTouch.PassKit.PKPaymentSummaryItem[]&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSelectPaymentMethod(class MonoTouch.PassKit.PKPaymentAuthorizationController controller, class MonoTouch.PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class MonoTouch.PassKit.PKPaymentSummaryItem[]&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationController:didSelectPaymentMethod:completion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidSelectPaymentMethod' overload with the 'Action&lt;PKPaymentRequestPaymentMethodUpdate&gt;' parameter instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidSelectPaymentMethod' overload with the 'Action&lt;PKPaymentRequestPaymentMethodUpdate&gt;' parameter instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentSummaryItem[]&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V38))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">The controller that owns this delegate.</param>
        <param name="paymentMethod">The payment method that was selected.</param>
        <param name="completion">A handler that takes a list of updated payment summary items.</param>
        <summary>Mehod that is called when the user selects a payment method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSelectShippingContact">
      <MemberSignature Language="C#" Value="public virtual void DidSelectShippingContact (MonoTouch.PassKit.PKPaymentAuthorizationController controller, MonoTouch.PassKit.PKContact contact, Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationStatus,MonoTouch.PassKit.PKShippingMethod[],MonoTouch.PassKit.PKPaymentSummaryItem[]&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSelectShippingContact(class MonoTouch.PassKit.PKPaymentAuthorizationController controller, class MonoTouch.PassKit.PKContact contact, class System.Action`3&lt;valuetype MonoTouch.PassKit.PKPaymentAuthorizationStatus, class MonoTouch.PassKit.PKShippingMethod[], class MonoTouch.PassKit.PKPaymentSummaryItem[]&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationController:didSelectShippingContact:completion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidSelectShippingContact' overload with the 'Action&lt;PKPaymentRequestShippingContactUpdate&gt;' parameter instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidSelectShippingContact' overload with the 'Action&lt;PKPaymentRequestShippingContactUpdate&gt;' parameter instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        <Parameter Name="contact" Type="MonoTouch.PassKit.PKContact" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationStatus,MonoTouch.PassKit.PKShippingMethod[],MonoTouch.PassKit.PKPaymentSummaryItem[]&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity3V8))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">The controller that owns this delegate.</param>
        <param name="contact">The new shipping address.</param>
        <param name="completion">A handler that takes the payment authorization status, a list of updated shipping method objects, and a list of updated payment summary items.</param>
        <summary>Method that is called when a user selects a contact to ship to.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSelectShippingContact">
      <MemberSignature Language="C#" Value="public virtual void DidSelectShippingContact (MonoTouch.PassKit.PKPaymentAuthorizationController controller, MonoTouch.PassKit.PKContact contact, Action&lt;MonoTouch.PassKit.PKPaymentRequestShippingContactUpdate&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSelectShippingContact(class MonoTouch.PassKit.PKPaymentAuthorizationController controller, class MonoTouch.PassKit.PKContact contact, class System.Action`1&lt;class MonoTouch.PassKit.PKPaymentRequestShippingContactUpdate&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationController:didSelectShippingContact:handler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        <Parameter Name="contact" Type="MonoTouch.PassKit.PKContact" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestShippingContactUpdate&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V162))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="contact">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSelectShippingMethod">
      <MemberSignature Language="C#" Value="public virtual void DidSelectShippingMethod (MonoTouch.PassKit.PKPaymentAuthorizationController controller, MonoTouch.PassKit.PKPaymentMethod paymentMethod, Action&lt;MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSelectShippingMethod(class MonoTouch.PassKit.PKPaymentAuthorizationController controller, class MonoTouch.PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationController:didSelectShippingMethod:handler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V161))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="paymentMethod">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSelectShippingMethod">
      <MemberSignature Language="C#" Value="public virtual void DidSelectShippingMethod (MonoTouch.PassKit.PKPaymentAuthorizationController controller, MonoTouch.PassKit.PKShippingMethod shippingMethod, Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationStatus,MonoTouch.PassKit.PKPaymentSummaryItem[]&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSelectShippingMethod(class MonoTouch.PassKit.PKPaymentAuthorizationController controller, class MonoTouch.PassKit.PKShippingMethod shippingMethod, class System.Action`2&lt;valuetype MonoTouch.PassKit.PKPaymentAuthorizationStatus, class MonoTouch.PassKit.PKPaymentSummaryItem[]&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationController:didSelectShippingMethod:completion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidSelectShippingMethod' overload with the 'Action&lt;PKPaymentRequestPaymentMethodUpdate&gt;' parameter instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidSelectShippingMethod' overload with the 'Action&lt;PKPaymentRequestPaymentMethodUpdate&gt;' parameter instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        <Parameter Name="shippingMethod" Type="MonoTouch.PassKit.PKShippingMethod" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationStatus,MonoTouch.PassKit.PKPaymentSummaryItem[]&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V63))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="controller">The controller that owns this delegate.</param>
        <param name="shippingMethod">The new shipping method.</param>
        <param name="completion">A handler that takes the authorization status for the payment and a list of updated payment summary items.</param>
        <summary>Method that is called when a user selects a new shipping method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillAuthorizePayment">
      <MemberSignature Language="C#" Value="public virtual void WillAuthorizePayment (MonoTouch.PassKit.PKPaymentAuthorizationController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillAuthorizePayment(class MonoTouch.PassKit.PKPaymentAuthorizationController controller) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("paymentAuthorizationControllerWillAuthorizePayment:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
      </Parameters>
      <Docs>
        <param name="controller">The controller that owns this delegate.</param>
        <summary>Method that is called when the user is authorizing a payment request.</summary>
        <remarks>This method is called after the user authenticates, but before the request is authorized.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>