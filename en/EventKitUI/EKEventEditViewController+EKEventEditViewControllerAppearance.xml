<Type Name="EKEventEditViewController+EKEventEditViewControllerAppearance" FullName="EventKitUI.EKEventEditViewController+EKEventEditViewControllerAppearance">
  <TypeSignature Language="C#" Value="public class EKEventEditViewController.EKEventEditViewControllerAppearance : UIKit.UIAppearance" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit EKEventEditViewController/EKEventEditViewControllerAppearance extends UIKit.UIAppearance" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UIKit.UIAppearance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Appearance class for objects of type <see cref="T:EventKitUI.EKEventEditViewController" />.</para>
    </summary>
    <remarks>
      <para>This appearance class is a strongly typed subclass of UIAppearance that is intended to be used with objects of class <see cref="T:EventKitUI.EKEventEditViewController" />.   You can obtain an instance to this class by either accessing the static <see cref="P:EventKitUI.EKEventEditViewController.Appearance" /> property on the <see cref="T:EventKitUI.EKEventEditViewController" /> or by calling the <see cref="M:EventKitUI.EKEventEditViewController.AppearanceWhenContainedIn" /> to get a UIAppearance that is context sensitive.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EKEventEditViewControllerAppearance (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
