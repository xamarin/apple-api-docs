<Type Name="SCNVector3" FullName="SceneKit.SCNVector3">
  <TypeSignature Language="C#" Value="public struct SCNVector3 : IEquatable&lt;SceneKit.SCNVector3&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit SCNVector3 extends System.ValueType implements class System.IEquatable`1&lt;valuetype SceneKit.SCNVector3&gt;" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;SceneKit.SCNVector3&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A 3-component vector.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SCNVector3 (OpenTK.Vector3 v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype OpenTK.Vector3 v) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="v" Type="OpenTK.Vector3" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SCNVector3 (SceneKit.SCNVector3 v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype SceneKit.SCNVector3 v) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="v" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SCNVector3 (SceneKit.SCNVector4 v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype SceneKit.SCNVector4 v) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="v" Type="SceneKit.SCNVector4" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SCNVector3 (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Add (SceneKit.SCNVector3 a, SceneKit.SCNVector3 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Add(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3" />
        <Parameter Name="b" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Adds <paramref name="b" /> to <paramref name="a" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static void Add (ref SceneKit.SCNVector3 a, ref SceneKit.SCNVector3 b, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Add(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="b" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Adds <paramref name="b" /> to <paramref name="a" />, and puts the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaryCentric">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 BaryCentric (SceneKit.SCNVector3 a, SceneKit.SCNVector3 b, SceneKit.SCNVector3 c, float u, float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 BaryCentric(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b, valuetype SceneKit.SCNVector3 c, float32 u, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3" />
        <Parameter Name="b" Type="SceneKit.SCNVector3" />
        <Parameter Name="c" Type="SceneKit.SCNVector3" />
        <Parameter Name="u" Type="System.Single" />
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="c">To be added.</param>
        <param name="u">To be added.</param>
        <param name="v">To be added.</param>
        <summary>Interpolates <paramref name="a" />, <paramref name="b" />, and <paramref name="c" />, by using the barycentric coordinates <paramref name="u" /> and <paramref name="v" />.</summary>
        <returns>When <paramref name="u" /> and <paramref name="v" /> are both 0, the result is <paramref name="a" />. When <paramref name="u" /> it 1 and <paramref name="v" /> is 0, the result is <paramref name="b" />.  When <paramref name="u" /> is 0 and <paramref name="v" /> is 1, the result is <paramref name="c" />. Otherwise, a weighted combination of the three input vectors is returned.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaryCentric">
      <MemberSignature Language="C#" Value="public static void BaryCentric (ref SceneKit.SCNVector3 a, ref SceneKit.SCNVector3 b, ref SceneKit.SCNVector3 c, float u, float v, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BaryCentric(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b, valuetype SceneKit.SCNVector3 c, float32 u, float32 v, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="b" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="c" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="u" Type="System.Single" />
        <Parameter Name="v" Type="System.Single" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="c">To be added.</param>
        <param name="u">To be added.</param>
        <param name="v">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Interpolates <paramref name="a" />, <paramref name="b" />, and <paramref name="c" />, by using the barycentric coordinates <paramref name="u" /> and <paramref name="v" />, and stores the result in <paramref name="result" />.</summary>
        <remarks>When <paramref name="u" /> and <paramref name="v" /> are both 0, the result is <paramref name="a" />. When <paramref name="u" /> it 1 and <paramref name="v" /> is 0, the result is <paramref name="b" />.  When <paramref name="u" /> is 0 and <paramref name="v" /> is 1, the result is <paramref name="c" />. Otherwise, a weighted combination of the three input vectors results.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateAngle">
      <MemberSignature Language="C#" Value="public static float CalculateAngle (SceneKit.SCNVector3 first, SceneKit.SCNVector3 second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CalculateAngle(valuetype SceneKit.SCNVector3 first, valuetype SceneKit.SCNVector3 second) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="SceneKit.SCNVector3" />
        <Parameter Name="second" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>Calculates the angle, in radians, between the <paramref name="first" /> and <paramref name="second" /> vectors.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateAngle">
      <MemberSignature Language="C#" Value="public static void CalculateAngle (ref SceneKit.SCNVector3 first, ref SceneKit.SCNVector3 second, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CalculateAngle(valuetype SceneKit.SCNVector3 first, valuetype SceneKit.SCNVector3 second, float32 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="second" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Calculates the angle, in radians, between the <paramref name="first" /> and <paramref name="second" /> vectors and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Clamp (SceneKit.SCNVector3 vec, SceneKit.SCNVector3 min, SceneKit.SCNVector3 max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Clamp(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNVector3 min, valuetype SceneKit.SCNVector3 max) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
        <Parameter Name="min" Type="SceneKit.SCNVector3" />
        <Parameter Name="max" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>Clamps the components of <paramref name="vec" /> to be between <paramref name="min" /> and <paramref name="max" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static void Clamp (ref SceneKit.SCNVector3 vec, ref SceneKit.SCNVector3 min, ref SceneKit.SCNVector3 max, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clamp(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNVector3 min, valuetype SceneKit.SCNVector3 max, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="min" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="max" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Clamps the components of <paramref name="vec" /> to be between <paramref name="min" /> and <paramref name="max" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentMax">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 ComponentMax (SceneKit.SCNVector3 a, SceneKit.SCNVector3 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 ComponentMax(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3" />
        <Parameter Name="b" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Returns a vector whose components are the componentwise maxima of <paramref name="a" /> and <paramref name="b" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentMax">
      <MemberSignature Language="C#" Value="public static void ComponentMax (ref SceneKit.SCNVector3 a, ref SceneKit.SCNVector3 b, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComponentMax(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="b" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Calculates the vector whose components are the componentwise maxima of <paramref name="a" /> and <paramref name="b" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentMin">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 ComponentMin (SceneKit.SCNVector3 a, SceneKit.SCNVector3 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 ComponentMin(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3" />
        <Parameter Name="b" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Returns a vector whose components are the componentwise minima of <paramref name="a" /> and <paramref name="b" /> and stores the result in <paramref name="result" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentMin">
      <MemberSignature Language="C#" Value="public static void ComponentMin (ref SceneKit.SCNVector3 a, ref SceneKit.SCNVector3 b, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComponentMin(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="b" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Calculates the vector whose components are the componentwise minima of <paramref name="a" /> and <paramref name="b" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cross">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Cross (SceneKit.SCNVector3 left, SceneKit.SCNVector3 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Cross(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3" />
        <Parameter Name="right" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>Returns the cross product of <paramref name="left" /> and <paramref name="right" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cross">
      <MemberSignature Language="C#" Value="public static void Cross (ref SceneKit.SCNVector3 left, ref SceneKit.SCNVector3 right, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Cross(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="right" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="result">To be added.</param>
        <summary>the cross product of <paramref name="left" /> and <paramref name="right" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Divide (SceneKit.SCNVector3 vector, SceneKit.SCNVector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Divide(valuetype SceneKit.SCNVector3 vector, valuetype SceneKit.SCNVector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="SceneKit.SCNVector3" />
        <Parameter Name="scale" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>Returns the componentwise division of <paramref name="vector" /> by <paramref name="scale" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Divide (SceneKit.SCNVector3 vector, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Divide(valuetype SceneKit.SCNVector3 vector, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="SceneKit.SCNVector3" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>Divides the components of <paramref name="vector" /> by the scalar <paramref name="scale" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static void Divide (ref SceneKit.SCNVector3 vector, ref SceneKit.SCNVector3 scale, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype SceneKit.SCNVector3 vector, valuetype SceneKit.SCNVector3 scale, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="scale" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Performs the componentwise division of <paramref name="vector" /> by <paramref name="scale" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static void Divide (ref SceneKit.SCNVector3 vector, float scale, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype SceneKit.SCNVector3 vector, float32 scale, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="scale" Type="System.Single" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Divides the components of <paramref name="vector" /> by the scalar <paramref name="scale" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static float Dot (SceneKit.SCNVector3 left, SceneKit.SCNVector3 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Dot(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3" />
        <Parameter Name="right" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>Returns the dot product of <paramref name="left" /> with <paramref name="right" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static void Dot (ref SceneKit.SCNVector3 left, ref SceneKit.SCNVector3 right, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dot(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right, float32 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="right" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Calculates the dot product of <paramref name="left" /> with <paramref name="right" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (SceneKit.SCNVector3 other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype SceneKit.SCNVector3 other) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Returns <see langword="true" /> if <paramref name="other" /> is identical to this vector.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Returns <see langword="true" /> if <paramref name="other" /> is a Vector3 and is identical to this vector.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hashcode for this instance.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public float Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of the vector.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LengthFast">
      <MemberSignature Language="C#" Value="public float LengthFast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LengthFast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the approximate length of the vector by using an approximation of the square root operation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LengthSquared">
      <MemberSignature Language="C#" Value="public float LengthSquared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LengthSquared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the sum of the squares of the components of the vector.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Lerp (SceneKit.SCNVector3 a, SceneKit.SCNVector3 b, float blend);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Lerp(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b, float32 blend) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3" />
        <Parameter Name="b" Type="SceneKit.SCNVector3" />
        <Parameter Name="blend" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="blend">To be added.</param>
        <summary>Returns the linear interpolation from <paramref name="a" /> to <paramref name="b" /> by the factor <paramref name="blend" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static void Lerp (ref SceneKit.SCNVector3 a, ref SceneKit.SCNVector3 b, float blend, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Lerp(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b, float32 blend, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="b" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="blend" Type="System.Single" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="blend">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Returns the linear interpolation from <paramref name="a" /> to <paramref name="b" /> by the factor <paramref name="blend" />, and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Max (SceneKit.SCNVector3 left, SceneKit.SCNVector3 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Max(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3" />
        <Parameter Name="right" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>Returns the vector with the larger magnitude.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Min (SceneKit.SCNVector3 left, SceneKit.SCNVector3 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Min(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3" />
        <Parameter Name="right" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>Returns the vector with the smaller magnitude.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Multiply (SceneKit.SCNVector3 vector, SceneKit.SCNVector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Multiply(valuetype SceneKit.SCNVector3 vector, valuetype SceneKit.SCNVector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="SceneKit.SCNVector3" />
        <Parameter Name="scale" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>Multiplies the components of <paramref name="vector" /> by the components of <paramref name="scale" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Multiply (SceneKit.SCNVector3 vector, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Multiply(valuetype SceneKit.SCNVector3 vector, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="SceneKit.SCNVector3" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>Multiplies <paramref name="vector" /> by the scalar <paramref name="scale" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static void Multiply (ref SceneKit.SCNVector3 vector, ref SceneKit.SCNVector3 scale, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Multiply(valuetype SceneKit.SCNVector3 vector, valuetype SceneKit.SCNVector3 scale, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="scale" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Multiplies the components of <paramref name="vector" /> by the components of <paramref name="scale" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static void Multiply (ref SceneKit.SCNVector3 vector, float scale, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Multiply(valuetype SceneKit.SCNVector3 vector, float32 scale, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="scale" Type="System.Single" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Multiplies <paramref name="vector" /> by the scalar <paramref name="scale" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Normalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scales this instance to unit length.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Normalize (SceneKit.SCNVector3 vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Normalize(valuetype SceneKit.SCNVector3 vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <summary>Scales <paramref name="vec" /> to unit length.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static void Normalize (ref SceneKit.SCNVector3 vec, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normalize(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Scales <paramref name="vec" /> to unit length and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFast">
      <MemberSignature Language="C#" Value="public void NormalizeFast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NormalizeFast() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scales this vector to approximately unit length.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFast">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 NormalizeFast (SceneKit.SCNVector3 vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 NormalizeFast(valuetype SceneKit.SCNVector3 vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <summary>Scales <paramref name="vec" /> to approximately unit length.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFast">
      <MemberSignature Language="C#" Value="public static void NormalizeFast (ref SceneKit.SCNVector3 vec, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalizeFast(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Scales <paramref name="vec" /> to approximately unit length and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly SceneKit.SCNVector3 One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype SceneKit.SCNVector3 One" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A vector whose components are each 1.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 op_Addition (SceneKit.SCNVector3 left, SceneKit.SCNVector3 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype SceneKit.SCNVector3 op_Addition(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3" />
        <Parameter Name="right" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 op_Division (SceneKit.SCNVector3 vec, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype SceneKit.SCNVector3 op_Division(valuetype SceneKit.SCNVector3 vec, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (SceneKit.SCNVector3 left, SceneKit.SCNVector3 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3" />
        <Parameter Name="right" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static OpenTK.Vector3 op_Explicit (SceneKit.SCNVector3 source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype OpenTK.Vector3 op_Explicit(valuetype SceneKit.SCNVector3 source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 op_Implicit (OpenTK.Vector3 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype SceneKit.SCNVector3 op_Implicit(valuetype OpenTK.Vector3 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="OpenTK.Vector3" />
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (SceneKit.SCNVector3 left, SceneKit.SCNVector3 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3" />
        <Parameter Name="right" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 op_Multiply (SceneKit.SCNVector3 vec, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype SceneKit.SCNVector3 op_Multiply(valuetype SceneKit.SCNVector3 vec, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 op_Multiply (float scale, SceneKit.SCNVector3 vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype SceneKit.SCNVector3 op_Multiply(float32 scale, valuetype SceneKit.SCNVector3 vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.Single" />
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <param name="vec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 op_Subtraction (SceneKit.SCNVector3 left, SceneKit.SCNVector3 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype SceneKit.SCNVector3 op_Subtraction(valuetype SceneKit.SCNVector3 left, valuetype SceneKit.SCNVector3 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="SceneKit.SCNVector3" />
        <Parameter Name="right" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 op_UnaryNegation (SceneKit.SCNVector3 vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype SceneKit.SCNVector3 op_UnaryNegation(valuetype SceneKit.SCNVector3 vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeInBytes">
      <MemberSignature Language="C#" Value="public static readonly int SizeInBytes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SizeInBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The size in bytes of the vector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 Subtract (SceneKit.SCNVector3 a, SceneKit.SCNVector3 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 Subtract(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3" />
        <Parameter Name="b" Type="SceneKit.SCNVector3" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Subtracts <paramref name="b" /> from <paramref name="a" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static void Subtract (ref SceneKit.SCNVector3 a, ref SceneKit.SCNVector3 b, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Subtract(valuetype SceneKit.SCNVector3 a, valuetype SceneKit.SCNVector3 b, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="b" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Subtracts <paramref name="b" /> from <paramref name="a" /> and stores the result in  <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of this instance.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector4 Transform (SceneKit.SCNVector3 vec, SceneKit.SCNMatrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector4 Transform(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNMatrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector4</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="mat">To be added.</param>
        <summary>Returns the transformation of <paramref name="vec" /> by <paramref name="mat" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (ref SceneKit.SCNVector3 vec, ref SceneKit.SCNMatrix4 mat, out SceneKit.SCNVector4 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNMatrix4 mat, valuetype SceneKit.SCNVector4 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="mat">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Calulates the transformation of <paramref name="vec" /> by <paramref name="mat" /> and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformNormal">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 TransformNormal (SceneKit.SCNVector3 norm, SceneKit.SCNMatrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 TransformNormal(valuetype SceneKit.SCNVector3 norm, valuetype SceneKit.SCNMatrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="norm" Type="SceneKit.SCNVector3" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4" />
      </Parameters>
      <Docs>
        <param name="norm">To be added.</param>
        <param name="mat">To be added.</param>
        <summary>Applies the tranformation that is represented by <paramref name="mat" /> to <paramref name="norm" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformNormal">
      <MemberSignature Language="C#" Value="public static void TransformNormal (ref SceneKit.SCNVector3 norm, ref SceneKit.SCNMatrix4 mat, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransformNormal(valuetype SceneKit.SCNVector3 norm, valuetype SceneKit.SCNMatrix4 mat, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="norm" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="norm">To be added.</param>
        <param name="mat">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Applies the tranformation that is represented by <paramref name="mat" /> to <paramref name="norm" />, and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformNormalInverse">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 TransformNormalInverse (SceneKit.SCNVector3 norm, SceneKit.SCNMatrix4 invMat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 TransformNormalInverse(valuetype SceneKit.SCNVector3 norm, valuetype SceneKit.SCNMatrix4 invMat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="norm" Type="SceneKit.SCNVector3" />
        <Parameter Name="invMat" Type="SceneKit.SCNMatrix4" />
      </Parameters>
      <Docs>
        <param name="norm">To be added.</param>
        <param name="invMat">To be added.</param>
        <summary>Applies the inverse of the tranformation that is represented by <paramref name="invMat" /> to <paramref name="norm" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformNormalInverse">
      <MemberSignature Language="C#" Value="public static void TransformNormalInverse (ref SceneKit.SCNVector3 norm, ref SceneKit.SCNMatrix4 invMat, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransformNormalInverse(valuetype SceneKit.SCNVector3 norm, valuetype SceneKit.SCNMatrix4 invMat, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="norm" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="invMat" Type="SceneKit.SCNMatrix4&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="norm">To be added.</param>
        <param name="invMat">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Applies the inverse of the tranformation that is represented by <paramref name="invMat" /> to <paramref name="norm" />, and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPerspective">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 TransformPerspective (SceneKit.SCNVector3 vec, SceneKit.SCNMatrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 TransformPerspective(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNMatrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="mat">To be added.</param>
        <summary>Applies the tranformation that is represented by <paramref name="mat" /> to <paramref name="vec" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPerspective">
      <MemberSignature Language="C#" Value="public static void TransformPerspective (ref SceneKit.SCNVector3 vec, ref SceneKit.SCNMatrix4 mat, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransformPerspective(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNMatrix4 mat, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="mat">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Applies the tranformation that is represented by <paramref name="mat" /> to <paramref name="vec" />, and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPosition">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 TransformPosition (SceneKit.SCNVector3 pos, SceneKit.SCNMatrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 TransformPosition(valuetype SceneKit.SCNVector3 pos, valuetype SceneKit.SCNMatrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="SceneKit.SCNVector3" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <param name="mat">To be added.</param>
        <summary>Applies the tranformation that is represented by <paramref name="mat" /> to <paramref name="vec" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPosition">
      <MemberSignature Language="C#" Value="public static void TransformPosition (ref SceneKit.SCNVector3 pos, ref SceneKit.SCNMatrix4 mat, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransformPosition(valuetype SceneKit.SCNVector3 pos, valuetype SceneKit.SCNMatrix4 mat, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <param name="mat">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Applies the tranformation that is represented by <paramref name="mat" /> to <paramref name="pos" />, and stores the result in <paramref name="result" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVector">
      <MemberSignature Language="C#" Value="public static SceneKit.SCNVector3 TransformVector (SceneKit.SCNVector3 vec, SceneKit.SCNMatrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNVector3 TransformVector(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNMatrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="mat">To be added.</param>
        <summary>Applies the tranformation that is represented by <paramref name="mat" /> to <paramref name="vec" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVector">
      <MemberSignature Language="C#" Value="public static void TransformVector (ref SceneKit.SCNVector3 vec, ref SceneKit.SCNMatrix4 mat, out SceneKit.SCNVector3 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransformVector(valuetype SceneKit.SCNVector3 vec, valuetype SceneKit.SCNMatrix4 mat, valuetype SceneKit.SCNVector3 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="SceneKit.SCNVector3&amp;" RefType="ref" />
        <Parameter Name="mat" Type="SceneKit.SCNMatrix4&amp;" RefType="ref" />
        <Parameter Name="result" Type="SceneKit.SCNVector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">To be added.</param>
        <param name="mat">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Applies the tranformation that is represented by <paramref name="mat" /> to <paramref name="vec" />, and stores the result in <paramref name="result" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitX">
      <MemberSignature Language="C#" Value="public static readonly SceneKit.SCNVector3 UnitX;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype SceneKit.SCNVector3 UnitX" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A unit vector in the X direction.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitY">
      <MemberSignature Language="C#" Value="public static readonly SceneKit.SCNVector3 UnitY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype SceneKit.SCNVector3 UnitY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A unit vector in the Y direction.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitZ">
      <MemberSignature Language="C#" Value="public static readonly SceneKit.SCNVector3 UnitZ;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype SceneKit.SCNVector3 UnitZ" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A unit vector in the Z direction.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 X" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the X component.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xy">
      <MemberSignature Language="C#" Value="public OpenTK.Vector2 Xy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector2 Xy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the X and Y components.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 Y" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Y component.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public float Z;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 Z" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Z component.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly SceneKit.SCNVector3 Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype SceneKit.SCNVector3 Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Zero vector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
