<Type Name="ISCNBoundingVolume" FullName="SceneKit.ISCNBoundingVolume">
  <TypeSignature Language="C#" Value="public interface ISCNBoundingVolume : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISCNBoundingVolume implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:SceneKit.ISCNBoundingVolume" />
  <TypeSignature Language="F#" Value="type ISCNBoundingVolume = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="SCNBoundingVolume", WrapperType=typeof(SceneKit.SCNBoundingVolumeWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetBoundingBox", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.Boolean), Selector="getBoundingBoxMin:max:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetBoundingBox", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="setBoundingBoxMin:max:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetBoundingSphere", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.Boolean), Selector="getBoundingSphereCenter:radius:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetBoundingBox", ParameterByRef=new System.Boolean[] { true, true }, ParameterType=new System.Type[] { typeof(SceneKit.SCNVector3), typeof(SceneKit.SCNVector3) }, ReturnType=typeof(System.Boolean), Selector="getBoundingBoxMin:max:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetBoundingBox", ParameterByRef=new System.Boolean[] { true, true }, ParameterType=new System.Type[] { typeof(SceneKit.SCNVector3), typeof(SceneKit.SCNVector3) }, Selector="setBoundingBoxMin:max:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetBoundingSphere", ParameterByRef=new System.Boolean[] { true, true }, ParameterType=new System.Type[] { typeof(SceneKit.SCNVector3), typeof(System.nfloat) }, ReturnType=typeof(System.Boolean), Selector="getBoundingSphereCenter:radius:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:SceneKit.SCNBoundingVolume" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:SceneKit.SCNBoundingVolume" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:SceneKit.SCNBoundingVolume" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:SceneKit.SCNBoundingVolume_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetBoundingBox">
      <MemberSignature Language="C#" Value="public bool GetBoundingBox (ref SceneKit.SCNVector3 min, ref SceneKit.SCNVector3 max);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoundingBox(valuetype SceneKit.SCNVector3&amp; min, valuetype SceneKit.SCNVector3&amp; max) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.ISCNBoundingVolume.GetBoundingBox(SceneKit.SCNVector3@,SceneKit.SCNVector3@)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingBox :  *  -&gt; bool" Usage="iSCNBoundingVolume.GetBoundingBox (min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("getBoundingBoxMin:max:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="SceneKit.SCNVector3" RefType="ref" />
        <Parameter Name="max" Type="SceneKit.SCNVector3" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingSphere">
      <MemberSignature Language="C#" Value="public bool GetBoundingSphere (ref SceneKit.SCNVector3 center, ref nfloat radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoundingSphere(valuetype SceneKit.SCNVector3&amp; center, valuetype System.nfloat&amp; radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.ISCNBoundingVolume.GetBoundingSphere(SceneKit.SCNVector3@,System.nfloat@)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingSphere :  *  -&gt; bool" Usage="iSCNBoundingVolume.GetBoundingSphere (center, radius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("getBoundingSphereCenter:radius:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="center" Type="SceneKit.SCNVector3" RefType="ref" />
        <Parameter Name="radius" Type="System.nfloat" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="center">To be added.</param>
        <param name="radius">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBoundingBox">
      <MemberSignature Language="C#" Value="public void SetBoundingBox (ref SceneKit.SCNVector3 min, ref SceneKit.SCNVector3 max);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBoundingBox(valuetype SceneKit.SCNVector3&amp; min, valuetype SceneKit.SCNVector3&amp; max) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.ISCNBoundingVolume.SetBoundingBox(SceneKit.SCNVector3@,SceneKit.SCNVector3@)" />
      <MemberSignature Language="F#" Value="abstract member SetBoundingBox :  *  -&gt; unit" Usage="iSCNBoundingVolume.SetBoundingBox (min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setBoundingBoxMin:max:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="SceneKit.SCNVector3" RefType="ref" />
        <Parameter Name="max" Type="SceneKit.SCNVector3" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
