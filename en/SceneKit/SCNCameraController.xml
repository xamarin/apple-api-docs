<Type Name="SCNCameraController" FullName="SceneKit.SCNCameraController">
  <TypeSignature Language="C#" Value="public class SCNCameraController : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SCNCameraController extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:SceneKit.SCNCameraController" />
  <TypeSignature Language="F#" Value="type SCNCameraController = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("SCNCameraController", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SCNCameraController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SCNCameraController (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new SceneKit.SCNCameraController : Foundation.NSObjectFlag -&gt; SceneKit.SCNCameraController" Usage="new SceneKit.SCNCameraController t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal SCNCameraController (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new SceneKit.SCNCameraController : nativeint -&gt; SceneKit.SCNCameraController" Usage="new SceneKit.SCNCameraController handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticTarget">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticTarget" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.AutomaticTarget" />
      <MemberSignature Language="F#" Value="member this.AutomaticTarget : bool with get, set" Usage="SceneKit.SCNCameraController.AutomaticTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("automaticTarget")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInteraction">
      <MemberSignature Language="C#" Value="public virtual void BeginInteraction (CoreGraphics.CGPoint location, CoreGraphics.CGSize viewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInteraction(valuetype CoreGraphics.CGPoint location, valuetype CoreGraphics.CGSize viewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.BeginInteraction(CoreGraphics.CGPoint,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member BeginInteraction : CoreGraphics.CGPoint * CoreGraphics.CGSize -&gt; unit&#xA;override this.BeginInteraction : CoreGraphics.CGPoint * CoreGraphics.CGSize -&gt; unit" Usage="sCNCameraController.BeginInteraction (location, viewport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("beginInteraction:withViewport:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreGraphics.CGPoint" />
        <Parameter Name="viewport" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="viewport">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="SceneKit.SCNCameraController.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRoll">
      <MemberSignature Language="C#" Value="public virtual void ClearRoll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearRoll() cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.ClearRoll" />
      <MemberSignature Language="F#" Value="abstract member ClearRoll : unit -&gt; unit&#xA;override this.ClearRoll : unit -&gt; unit" Usage="sCNCameraController.ClearRoll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("clearRoll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueInteraction">
      <MemberSignature Language="C#" Value="public virtual void ContinueInteraction (CoreGraphics.CGPoint location, CoreGraphics.CGSize viewport, nfloat sensitivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ContinueInteraction(valuetype CoreGraphics.CGPoint location, valuetype CoreGraphics.CGSize viewport, valuetype System.nfloat sensitivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.ContinueInteraction(CoreGraphics.CGPoint,CoreGraphics.CGSize,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member ContinueInteraction : CoreGraphics.CGPoint * CoreGraphics.CGSize * nfloat -&gt; unit&#xA;override this.ContinueInteraction : CoreGraphics.CGPoint * CoreGraphics.CGSize * nfloat -&gt; unit" Usage="sCNCameraController.ContinueInteraction (location, viewport, sensitivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("continueInteraction:withViewport:sensitivity:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreGraphics.CGPoint" />
        <Parameter Name="viewport" Type="CoreGraphics.CGSize" />
        <Parameter Name="sensitivity" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="viewport">To be added.</param>
        <param name="sensitivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public virtual SceneKit.ISCNCameraControllerDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SceneKit.ISCNCameraControllerDelegate Delegate" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.Delegate" />
      <MemberSignature Language="F#" Value="member this.Delegate : SceneKit.ISCNCameraControllerDelegate with get, set" Usage="SceneKit.SCNCameraController.Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("delegate", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDelegate:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SceneKit.ISCNCameraControllerDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An instance of the SceneKit.ISCNCameraControllerDelegate model class which acts as the class delegate.</summary>
        <value>The instance of the SceneKit.ISCNCameraControllerDelegate model class</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>This is the strongly typed version of the object, developers should use the WeakDelegate property instead if they want to merely assign a class derived from NSObject that has been decorated with [Export] attributes.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sCNCameraController.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the SCNCameraController object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the SCNCameraController class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the SCNCameraController ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dolly">
      <MemberSignature Language="C#" Value="public virtual void Dolly (float delta, CoreGraphics.CGPoint screenPoint, CoreGraphics.CGSize viewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dolly(float32 delta, valuetype CoreGraphics.CGPoint screenPoint, valuetype CoreGraphics.CGSize viewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.Dolly(System.Single,CoreGraphics.CGPoint,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member Dolly : single * CoreGraphics.CGPoint * CoreGraphics.CGSize -&gt; unit&#xA;override this.Dolly : single * CoreGraphics.CGPoint * CoreGraphics.CGSize -&gt; unit" Usage="sCNCameraController.Dolly (delta, screenPoint, viewport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dollyBy:onScreenPoint:viewport:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Single" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="viewport" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="delta">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <param name="viewport">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DollyToTarget">
      <MemberSignature Language="C#" Value="public virtual void DollyToTarget (float delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DollyToTarget(float32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.DollyToTarget(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member DollyToTarget : single -&gt; unit&#xA;override this.DollyToTarget : single -&gt; unit" Usage="sCNCameraController.DollyToTarget delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dollyToTarget:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="delta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInteraction">
      <MemberSignature Language="C#" Value="public virtual void EndInteraction (CoreGraphics.CGPoint location, CoreGraphics.CGSize viewport, CoreGraphics.CGPoint velocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInteraction(valuetype CoreGraphics.CGPoint location, valuetype CoreGraphics.CGSize viewport, valuetype CoreGraphics.CGPoint velocity) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.EndInteraction(CoreGraphics.CGPoint,CoreGraphics.CGSize,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member EndInteraction : CoreGraphics.CGPoint * CoreGraphics.CGSize * CoreGraphics.CGPoint -&gt; unit&#xA;override this.EndInteraction : CoreGraphics.CGPoint * CoreGraphics.CGSize * CoreGraphics.CGPoint -&gt; unit" Usage="sCNCameraController.EndInteraction (location, viewport, velocity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("endInteraction:withViewport:velocity:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreGraphics.CGPoint" />
        <Parameter Name="viewport" Type="CoreGraphics.CGSize" />
        <Parameter Name="velocity" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="viewport">To be added.</param>
        <param name="velocity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameNodes">
      <MemberSignature Language="C#" Value="public virtual void FrameNodes (SceneKit.SCNNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FrameNodes(class SceneKit.SCNNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.FrameNodes(SceneKit.SCNNode[])" />
      <MemberSignature Language="F#" Value="abstract member FrameNodes : SceneKit.SCNNode[] -&gt; unit&#xA;override this.FrameNodes : SceneKit.SCNNode[] -&gt; unit" Usage="sCNCameraController.FrameNodes nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("frameNodes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="SceneKit.SCNNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InertiaEnabled">
      <MemberSignature Language="C#" Value="public virtual bool InertiaEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InertiaEnabled" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.InertiaEnabled" />
      <MemberSignature Language="F#" Value="member this.InertiaEnabled : bool with get, set" Usage="SceneKit.SCNCameraController.InertiaEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("inertiaEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setInertiaEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InertiaFriction">
      <MemberSignature Language="C#" Value="public virtual float InertiaFriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InertiaFriction" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.InertiaFriction" />
      <MemberSignature Language="F#" Value="member this.InertiaFriction : single with get, set" Usage="SceneKit.SCNCameraController.InertiaFriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("inertiaFriction")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setInertiaFriction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InertiaRunning">
      <MemberSignature Language="C#" Value="public virtual bool InertiaRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InertiaRunning" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.InertiaRunning" />
      <MemberSignature Language="F#" Value="member this.InertiaRunning : bool" Usage="SceneKit.SCNCameraController.InertiaRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isInertiaRunning")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InteractionMode">
      <MemberSignature Language="C#" Value="public virtual SceneKit.SCNInteractionMode InteractionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SceneKit.SCNInteractionMode InteractionMode" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.InteractionMode" />
      <MemberSignature Language="F#" Value="member this.InteractionMode : SceneKit.SCNInteractionMode with get, set" Usage="SceneKit.SCNCameraController.InteractionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("interactionMode", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setInteractionMode:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SceneKit.SCNInteractionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumHorizontalAngle">
      <MemberSignature Language="C#" Value="public virtual float MaximumHorizontalAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumHorizontalAngle" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.MaximumHorizontalAngle" />
      <MemberSignature Language="F#" Value="member this.MaximumHorizontalAngle : single with get, set" Usage="SceneKit.SCNCameraController.MaximumHorizontalAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maximumHorizontalAngle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMaximumHorizontalAngle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumVerticalAngle">
      <MemberSignature Language="C#" Value="public virtual float MaximumVerticalAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumVerticalAngle" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.MaximumVerticalAngle" />
      <MemberSignature Language="F#" Value="member this.MaximumVerticalAngle : single with get, set" Usage="SceneKit.SCNCameraController.MaximumVerticalAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maximumVerticalAngle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMaximumVerticalAngle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumHorizontalAngle">
      <MemberSignature Language="C#" Value="public virtual float MinimumHorizontalAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinimumHorizontalAngle" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.MinimumHorizontalAngle" />
      <MemberSignature Language="F#" Value="member this.MinimumHorizontalAngle : single with get, set" Usage="SceneKit.SCNCameraController.MinimumHorizontalAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minimumHorizontalAngle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMinimumHorizontalAngle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumVerticalAngle">
      <MemberSignature Language="C#" Value="public virtual float MinimumVerticalAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinimumVerticalAngle" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.MinimumVerticalAngle" />
      <MemberSignature Language="F#" Value="member this.MinimumVerticalAngle : single with get, set" Usage="SceneKit.SCNCameraController.MinimumVerticalAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minimumVerticalAngle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMinimumVerticalAngle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointOfView">
      <MemberSignature Language="C#" Value="public virtual SceneKit.SCNNode PointOfView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SceneKit.SCNNode PointOfView" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.PointOfView" />
      <MemberSignature Language="F#" Value="member this.PointOfView : SceneKit.SCNNode with get, set" Usage="SceneKit.SCNCameraController.PointOfView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("pointOfView", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setPointOfView:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SceneKit.SCNNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Roll">
      <MemberSignature Language="C#" Value="public virtual void Roll (float delta, CoreGraphics.CGPoint screenPoint, CoreGraphics.CGSize viewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Roll(float32 delta, valuetype CoreGraphics.CGPoint screenPoint, valuetype CoreGraphics.CGSize viewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.Roll(System.Single,CoreGraphics.CGPoint,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member Roll : single * CoreGraphics.CGPoint * CoreGraphics.CGSize -&gt; unit&#xA;override this.Roll : single * CoreGraphics.CGPoint * CoreGraphics.CGSize -&gt; unit" Usage="sCNCameraController.Roll (delta, screenPoint, viewport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rollBy:aroundScreenPoint:viewport:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Single" />
        <Parameter Name="screenPoint" Type="CoreGraphics.CGPoint" />
        <Parameter Name="viewport" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="delta">To be added.</param>
        <param name="screenPoint">To be added.</param>
        <param name="viewport">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollAroundTarget">
      <MemberSignature Language="C#" Value="public virtual void RollAroundTarget (float delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RollAroundTarget(float32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.RollAroundTarget(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RollAroundTarget : single -&gt; unit&#xA;override this.RollAroundTarget : single -&gt; unit" Usage="sCNCameraController.RollAroundTarget delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rollAroundTarget:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="delta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public virtual void Rotate (float deltaX, float deltaY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rotate(float32 deltaX, float32 deltaY) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.Rotate(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Rotate : single * single -&gt; unit&#xA;override this.Rotate : single * single -&gt; unit" Usage="sCNCameraController.Rotate (deltaX, deltaY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rotateByX:Y:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaX" Type="System.Single" />
        <Parameter Name="deltaY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="deltaX">To be added.</param>
        <param name="deltaY">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopInertia">
      <MemberSignature Language="C#" Value="public virtual void StopInertia ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopInertia() cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.StopInertia" />
      <MemberSignature Language="F#" Value="abstract member StopInertia : unit -&gt; unit&#xA;override this.StopInertia : unit -&gt; unit" Usage="sCNCameraController.StopInertia " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stopInertia")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual SceneKit.SCNVector3 Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SceneKit.SCNVector3 Target" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.Target" />
      <MemberSignature Language="F#" Value="member this.Target : SceneKit.SCNVector3 with get, set" Usage="SceneKit.SCNCameraController.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("target", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTarget:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateInCameraSpace">
      <MemberSignature Language="C#" Value="public virtual void TranslateInCameraSpace (float deltaX, float deltaY, float deltaZ);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TranslateInCameraSpace(float32 deltaX, float32 deltaY, float32 deltaZ) cil managed" />
      <MemberSignature Language="DocId" Value="M:SceneKit.SCNCameraController.TranslateInCameraSpace(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member TranslateInCameraSpace : single * single * single -&gt; unit&#xA;override this.TranslateInCameraSpace : single * single * single -&gt; unit" Usage="sCNCameraController.TranslateInCameraSpace (deltaX, deltaY, deltaZ)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("translateInCameraSpaceByX:Y:Z:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaX" Type="System.Single" />
        <Parameter Name="deltaY" Type="System.Single" />
        <Parameter Name="deltaZ" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="deltaX">To be added.</param>
        <param name="deltaY">To be added.</param>
        <param name="deltaZ">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldUp">
      <MemberSignature Language="C#" Value="public virtual SceneKit.SCNVector3 WorldUp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SceneKit.SCNVector3 WorldUp" />
      <MemberSignature Language="DocId" Value="P:SceneKit.SCNCameraController.WorldUp" />
      <MemberSignature Language="F#" Value="member this.WorldUp : SceneKit.SCNVector3 with get, set" Usage="SceneKit.SCNCameraController.WorldUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("worldUp", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setWorldUp:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SceneKit.SCNVector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
