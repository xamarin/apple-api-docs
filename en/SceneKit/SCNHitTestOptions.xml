<Type Name="SCNHitTestOptions" FullName="SceneKit.SCNHitTestOptions">
  <TypeSignature Language="C#" Value="public class SCNHitTestOptions : Foundation.DictionaryContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SCNHitTestOptions extends Foundation.DictionaryContainer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.DictionaryContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Configuration options for hit-testing in SCNNode and SCNSceneRenderer</summary>
    <remarks>
      <para>
	You create an instance of this class to configure how hit-testing should be evaluated by the HitTest methods.
      </para>
      <para>
	Hit testing uses two 3D vectors in the case of <see cref="T:SceneKit.SCNNode" /> and a 2D point in the case of the <see cref="T:SceneKit.SCNSceneRenderer" />.
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SCNHitTestOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SCNHitTestOptions (Foundation.NSDictionary dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSDictionary dictionary) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dictionary" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="dictionary">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackFaceCulling">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; BackFaceCulling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; BackFaceCulling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether to ignore polygons that are not facing the camera for hit-testing.</summary>
        <value>If not specified, the default is to assume that you want back-face culling.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingBoxOnly">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; BoundingBoxOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; BoundingBoxOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Control whether hit-testing uses the node's geometry, or if a bounding-box is used to optmize the hit-testing process speed.</summary>
        <value>If this value is not specified, the value assumed is false.</value>
        <remarks>
	  By default, the hit-testing will use the node's geometry
	  information to determine whether there was a hit.  This
	  process can be slow, so you can set this property to true to
	  constraint the search space to the bounxing box of the
	  target.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstFoundOnly">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; FirstFoundOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; FirstFoundOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether only the first hit match is returned.   Caveat: the first match returned might not be the nearest object.</summary>
        <value>If not specified, the value assumed is false.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreChildNodes">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IgnoreChildNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IgnoreChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether hit-testing will consider all nodes of the hierarchy, or only the node specified in the RootNode property.</summary>
        <value>If not specified, the value is assumed to be false.</value>
        <remarks>
	  By default this will search all the nodes in the hierarchy.
	  If you set this value to true, you can limit the search to
	  the node specified in <see cref="P:SceneKit.SCNHitTestOptions.RootNode" />
	  property.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreHiddenNodes">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IgnoreHiddenNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IgnoreHiddenNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether hit-testing will return hidden nodes or not.</summary>
        <value>If not specified, the value is assumed to be true.</value>
        <remarks>
	  The default is to skip hidden nodes.   Set this value to false if you want to perform hit-testing including nodes that have set their <see cref="P:SceneKit.SCNNode.Hidden" /> property to true.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionSearchMode">
      <MemberSignature Language="C#" Value="public Nullable&lt;SceneKit.SCNHitTestSearchMode&gt; OptionSearchMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype SceneKit.SCNHitTestSearchMode&gt; OptionSearchMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;SceneKit.SCNHitTestSearchMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNode">
      <MemberSignature Language="C#" Value="public SceneKit.SCNNode RootNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SceneKit.SCNNode RootNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SceneKit.SCNNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Limits the hit-testing to this node as well as its children (you must also set IgnoreChildNodes).</summary>
        <value>
          <para>
	    The node that will be used as the root node to search for hits.
	  </para>
          <para>
	    If not specified, when used with a <see cref="T:SceneKit.SCNSceneRenderer" /> the default
	    value would be the presented scene's root node.
	  </para>
          <para>
	    If not specified, when used with a <see cref="T:SceneKit.SCNNode" /> the default
	    value is the node itself.
	  </para>
        </value>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortResults">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; SortResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; SortResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set, sorts the returned hit-test results from nearest to farthest.</summary>
        <value>If not specified, the value is assumed to be true, so the results are sorted.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
