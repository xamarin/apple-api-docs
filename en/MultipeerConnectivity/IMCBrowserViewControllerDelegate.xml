<Type Name="IMCBrowserViewControllerDelegate" FullName="MultipeerConnectivity.IMCBrowserViewControllerDelegate">
  <TypeSignature Language="C#" Value="public interface IMCBrowserViewControllerDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMCBrowserViewControllerDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:MultipeerConnectivity.IMCBrowserViewControllerDelegate" />
  <TypeSignature Language="F#" Value="type IMCBrowserViewControllerDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="MCBrowserViewControllerDelegate", WrapperType=typeof(MultipeerConnectivity.MCBrowserViewControllerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="WasCancelled", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="browserViewControllerWasCancelled:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidFinish", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="browserViewControllerDidFinish:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldPresentNearbyPeer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.Boolean), Selector="browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="WasCancelled", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCBrowserViewController) }, Selector="browserViewControllerWasCancelled:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidFinish", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCBrowserViewController) }, Selector="browserViewControllerDidFinish:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldPresentNearbyPeer", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCBrowserViewController), typeof(MultipeerConnectivity.MCPeerID), typeof(Foundation.NSDictionary) }, ReturnType=typeof(System.Boolean), Selector="browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:MultipeerConnectivity.MCBrowserViewControllerDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:MultipeerConnectivity.MCBrowserViewControllerDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:MultipeerConnectivity.MCBrowserViewControllerDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:MultipeerConnectivity.MCBrowserViewControllerDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidFinish">
      <MemberSignature Language="C#" Value="public void DidFinish (MultipeerConnectivity.MCBrowserViewController browserViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinish(class MultipeerConnectivity.MCBrowserViewController browserViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:MultipeerConnectivity.IMCBrowserViewControllerDelegate.DidFinish(MultipeerConnectivity.MCBrowserViewController)" />
      <MemberSignature Language="F#" Value="abstract member DidFinish : MultipeerConnectivity.MCBrowserViewController -&gt; unit" Usage="iMCBrowserViewControllerDelegate.DidFinish browserViewController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("browserViewControllerDidFinish:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserViewController" Type="MultipeerConnectivity.MCBrowserViewController" />
      </Parameters>
      <Docs>
        <param name="browserViewController">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WasCancelled">
      <MemberSignature Language="C#" Value="public void WasCancelled (MultipeerConnectivity.MCBrowserViewController browserViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WasCancelled(class MultipeerConnectivity.MCBrowserViewController browserViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:MultipeerConnectivity.IMCBrowserViewControllerDelegate.WasCancelled(MultipeerConnectivity.MCBrowserViewController)" />
      <MemberSignature Language="F#" Value="abstract member WasCancelled : MultipeerConnectivity.MCBrowserViewController -&gt; unit" Usage="iMCBrowserViewControllerDelegate.WasCancelled browserViewController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("browserViewControllerWasCancelled:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserViewController" Type="MultipeerConnectivity.MCBrowserViewController" />
      </Parameters>
      <Docs>
        <param name="browserViewController">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
