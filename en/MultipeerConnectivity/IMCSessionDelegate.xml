<Type Name="IMCSessionDelegate" FullName="MultipeerConnectivity.IMCSessionDelegate">
  <TypeSignature Language="C#" Value="public interface IMCSessionDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMCSessionDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:MultipeerConnectivity.IMCSessionDelegate" />
  <TypeSignature Language="F#" Value="type IMCSessionDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="MCSessionDelegate", WrapperType=typeof(MultipeerConnectivity.MCSessionDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidChangeState", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCSession), typeof(MultipeerConnectivity.MCPeerID), typeof(MultipeerConnectivity.MCSessionState) }, Selector="session:peer:didChangeState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidReceiveData", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCSession), typeof(Foundation.NSData), typeof(MultipeerConnectivity.MCPeerID) }, Selector="session:didReceiveData:fromPeer:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidStartReceivingResource", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCSession), typeof(System.String), typeof(MultipeerConnectivity.MCPeerID), typeof(Foundation.NSProgress) }, Selector="session:didStartReceivingResourceWithName:fromPeer:withProgress:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidFinishReceivingResource", ParameterByRef=new System.Boolean[] { false, false, false, false, false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCSession), typeof(System.String), typeof(MultipeerConnectivity.MCPeerID), typeof(Foundation.NSUrl), typeof(Foundation.NSError) }, Selector="session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidReceiveStream", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCSession), typeof(Foundation.NSInputStream), typeof(System.String), typeof(MultipeerConnectivity.MCPeerID) }, Selector="session:didReceiveStream:withName:fromPeer:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidReceiveCertificate", ParameterBlockProxy=new System.Type[] { null, null, null, typeof(ObjCRuntime.Trampolines/NIDActionArity1V2) }, ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(MultipeerConnectivity.MCSession), typeof(Security.SecCertificate[]), typeof(MultipeerConnectivity.MCPeerID), typeof(System.Action`1&lt;System.Boolean&gt;) }, ReturnType=typeof(System.Boolean), Selector="session:didReceiveCertificate:fromPeer:certificateHandler:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:MultipeerConnectivity.MCSessionDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:MultipeerConnectivity.MCSessionDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:MultipeerConnectivity.MCSessionDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:MultipeerConnectivity.MCSessionDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidChangeState">
      <MemberSignature Language="C#" Value="public void DidChangeState (MultipeerConnectivity.MCSession session, MultipeerConnectivity.MCPeerID peerID, MultipeerConnectivity.MCSessionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeState(class MultipeerConnectivity.MCSession session, class MultipeerConnectivity.MCPeerID peerID, valuetype MultipeerConnectivity.MCSessionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:MultipeerConnectivity.IMCSessionDelegate.DidChangeState(MultipeerConnectivity.MCSession,MultipeerConnectivity.MCPeerID,MultipeerConnectivity.MCSessionState)" />
      <MemberSignature Language="F#" Value="abstract member DidChangeState : MultipeerConnectivity.MCSession * MultipeerConnectivity.MCPeerID * MultipeerConnectivity.MCSessionState -&gt; unit" Usage="iMCSessionDelegate.DidChangeState (session, peerID, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("session:peer:didChangeState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MultipeerConnectivity.MCSession" />
        <Parameter Name="peerID" Type="MultipeerConnectivity.MCPeerID" />
        <Parameter Name="state" Type="MultipeerConnectivity.MCSessionState" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="peerID">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishReceivingResource">
      <MemberSignature Language="C#" Value="public void DidFinishReceivingResource (MultipeerConnectivity.MCSession session, string resourceName, MultipeerConnectivity.MCPeerID fromPeer, Foundation.NSUrl localUrl, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishReceivingResource(class MultipeerConnectivity.MCSession session, string resourceName, class MultipeerConnectivity.MCPeerID fromPeer, class Foundation.NSUrl localUrl, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:MultipeerConnectivity.IMCSessionDelegate.DidFinishReceivingResource(MultipeerConnectivity.MCSession,System.String,MultipeerConnectivity.MCPeerID,Foundation.NSUrl,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFinishReceivingResource : MultipeerConnectivity.MCSession * string * MultipeerConnectivity.MCPeerID * Foundation.NSUrl * Foundation.NSError -&gt; unit" Usage="iMCSessionDelegate.DidFinishReceivingResource (session, resourceName, fromPeer, localUrl, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MultipeerConnectivity.MCSession" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="fromPeer" Type="MultipeerConnectivity.MCPeerID" />
        <Parameter Name="localUrl" Type="Foundation.NSUrl" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="resourceName">To be added.</param>
        <param name="fromPeer">To be added.</param>
        <param name="localUrl">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">
          <para>The error (if any) that occurred during transfer.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReceiveData">
      <MemberSignature Language="C#" Value="public void DidReceiveData (MultipeerConnectivity.MCSession session, Foundation.NSData data, MultipeerConnectivity.MCPeerID peerID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReceiveData(class MultipeerConnectivity.MCSession session, class Foundation.NSData data, class MultipeerConnectivity.MCPeerID peerID) cil managed" />
      <MemberSignature Language="DocId" Value="M:MultipeerConnectivity.IMCSessionDelegate.DidReceiveData(MultipeerConnectivity.MCSession,Foundation.NSData,MultipeerConnectivity.MCPeerID)" />
      <MemberSignature Language="F#" Value="abstract member DidReceiveData : MultipeerConnectivity.MCSession * Foundation.NSData * MultipeerConnectivity.MCPeerID -&gt; unit" Usage="iMCSessionDelegate.DidReceiveData (session, data, peerID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("session:didReceiveData:fromPeer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MultipeerConnectivity.MCSession" />
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="peerID" Type="MultipeerConnectivity.MCPeerID" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="data">To be added.</param>
        <param name="peerID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReceiveStream">
      <MemberSignature Language="C#" Value="public void DidReceiveStream (MultipeerConnectivity.MCSession session, Foundation.NSInputStream stream, string streamName, MultipeerConnectivity.MCPeerID peerID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReceiveStream(class MultipeerConnectivity.MCSession session, class Foundation.NSInputStream stream, string streamName, class MultipeerConnectivity.MCPeerID peerID) cil managed" />
      <MemberSignature Language="DocId" Value="M:MultipeerConnectivity.IMCSessionDelegate.DidReceiveStream(MultipeerConnectivity.MCSession,Foundation.NSInputStream,System.String,MultipeerConnectivity.MCPeerID)" />
      <MemberSignature Language="F#" Value="abstract member DidReceiveStream : MultipeerConnectivity.MCSession * Foundation.NSInputStream * string * MultipeerConnectivity.MCPeerID -&gt; unit" Usage="iMCSessionDelegate.DidReceiveStream (session, stream, streamName, peerID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("session:didReceiveStream:withName:fromPeer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MultipeerConnectivity.MCSession" />
        <Parameter Name="stream" Type="Foundation.NSInputStream" />
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="peerID" Type="MultipeerConnectivity.MCPeerID" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="stream">To be added.</param>
        <param name="streamName">To be added.</param>
        <param name="peerID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStartReceivingResource">
      <MemberSignature Language="C#" Value="public void DidStartReceivingResource (MultipeerConnectivity.MCSession session, string resourceName, MultipeerConnectivity.MCPeerID fromPeer, Foundation.NSProgress progress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidStartReceivingResource(class MultipeerConnectivity.MCSession session, string resourceName, class MultipeerConnectivity.MCPeerID fromPeer, class Foundation.NSProgress progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:MultipeerConnectivity.IMCSessionDelegate.DidStartReceivingResource(MultipeerConnectivity.MCSession,System.String,MultipeerConnectivity.MCPeerID,Foundation.NSProgress)" />
      <MemberSignature Language="F#" Value="abstract member DidStartReceivingResource : MultipeerConnectivity.MCSession * string * MultipeerConnectivity.MCPeerID * Foundation.NSProgress -&gt; unit" Usage="iMCSessionDelegate.DidStartReceivingResource (session, resourceName, fromPeer, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("session:didStartReceivingResourceWithName:fromPeer:withProgress:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MultipeerConnectivity.MCSession" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="fromPeer" Type="MultipeerConnectivity.MCPeerID" />
        <Parameter Name="progress" Type="Foundation.NSProgress" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="resourceName">To be added.</param>
        <param name="fromPeer">To be added.</param>
        <param name="progress">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
