<Type Name="SystemSound" FullName="AudioToolbox.SystemSound">
  <TypeSignature Language="C#" Value="public class SystemSound : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SystemSound extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AudioToolbox.SystemSound" />
  <TypeSignature Language="F#" Value="type SystemSound = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides methods for producing simple sounds.</summary>
    <remarks>
      <para>
	This API is intended to be used to play sound effects or to
	make the device vibrate.  You use <see cref="M:AudioToolbox.SystemSound.PlaySystemSoundAsync" />
	to play short sounds and <see cref="M:AudioToolbox.SystemSound.PlayAlertSoundAsync" />
	to play either the sound or vibrate (depending on the device
	settings).
      </para>
      <para>
	Unlike the <see cref="T:AVFoundation.AVAudioPlayer" /> which works
	with the audio session and is able to dim your audio, play in
	the background and interact with the system based on a set of
	rules, the SystemSound does not support this.  So you should
	in general avoid using it for anything but sound effects and
	device vibration.
      </para>
      <para>
	As of iOS 8, SystemSound has the following restrictions:
      </para>
      <list type="bullet">
        <item>
          <term>
	    Audio Format: PCM or IMA4 (IMA/ADPCM).
	  </term>
        </item>
        <item>
          <term>
	    Audio Container: .caf, .aif or .wav containers.
	  </term>
        </item>
        <item>
          <term>
	    At most 30 seconds of duration.
	  </term>
        </item>
        <item>
          <term>
	    There is no volume control, this uses the system volume.
	  </term>
        </item>
        <item>
          <term>
	    Sound plays immediately.
	  </term>
        </item>
        <item>
          <term>
	    Only one sound can be played at a time, there is no way to play more than one sound at a time.
	  </term>
        </item>
      </list>
      <para>
	To play a sound, you first create an instance of the
	SystemSound object, either via the constructor, or one of the
	<see cref="M:AudioToolbox.SystemSound.FromFile(System.String)" />
	methods.  Once this object has been created, you call one of
	the playback methods <see cref="M:AudioToolbox.SystemSound.PlaySystemSoundAsync" />
	to play short sounds and <see cref="M:AudioToolbox.SystemSound.PlayAlertSoundAsync" />.
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SystemSound (Foundation.NSUrl fileUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSUrl fileUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.#ctor(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="new AudioToolbox.SystemSound : Foundation.NSUrl -&gt; AudioToolbox.SystemSound" Usage="new AudioToolbox.SystemSound fileUrl" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUrl" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="fileUrl">The url to the local file.</param>
        <summary>Create a system sound from a local file.</summary>
        <remarks>The system sounds are limited to 30 seconds or less.   If there is an error, this constructor will throw an exception.   If you want to avoid exceptions, and instead get a null on error, call the FromFile methods.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SystemSound (uint soundId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 soundId) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.#ctor(System.UInt32)" />
      <MemberSignature Language="F#" Value="new AudioToolbox.SystemSound : uint32 -&gt; AudioToolbox.SystemSound" Usage="new AudioToolbox.SystemSound soundId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundId" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="soundId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSystemSoundCompletion">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioServicesError AddSystemSoundCompletion (Action routine, CoreFoundation.CFRunLoop runLoop = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioServicesError AddSystemSoundCompletion(class System.Action routine, class CoreFoundation.CFRunLoop runLoop) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.AddSystemSoundCompletion(System.Action,CoreFoundation.CFRunLoop)" />
      <MemberSignature Language="F#" Value="member this.AddSystemSoundCompletion : Action * CoreFoundation.CFRunLoop -&gt; AudioToolbox.AudioServicesError" Usage="systemSound.AddSystemSoundCompletion (routine, runLoop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioServicesError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routine" Type="System.Action" />
        <Parameter Name="runLoop" Type="CoreFoundation.CFRunLoop" />
      </Parameters>
      <Docs>
        <param name="routine">Method to invoke upon completion.</param>
        <param name="runLoop">Runloop on which the completion will be invoked, this parameter can be null to invoke on the main loop.</param>
        <summary>Method to invoke when this sound completes playing.</summary>
        <returns>Status code.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.Close" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="systemSound.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this system sound.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletePlaybackIfAppDies">
      <MemberSignature Language="C#" Value="public bool CompletePlaybackIfAppDies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletePlaybackIfAppDies" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.SystemSound.CompletePlaybackIfAppDies" />
      <MemberSignature Language="F#" Value="member this.CompletePlaybackIfAppDies : bool with get, set" Usage="AudioToolbox.SystemSound.CompletePlaybackIfAppDies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether the sound will complete playing, even if the application dies.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="systemSound.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the SystemSound object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the SystemSound class.</para>
          <para>Calling the Dispose method when the application is finished using the SystemSound ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="systemSound.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the SystemSound object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the SystemSound class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the SystemSound ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SystemSound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="systemSound.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the SystemSound object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static AudioToolbox.SystemSound FromFile (Foundation.NSUrl fileUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AudioToolbox.SystemSound FromFile(class Foundation.NSUrl fileUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.FromFile(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="static member FromFile : Foundation.NSUrl -&gt; AudioToolbox.SystemSound" Usage="AudioToolbox.SystemSound.FromFile fileUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.SystemSound</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileUrl" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="fileUrl">A SystemSound instance, or null on error.</param>
        <summary>Creates a system sound from a file.</summary>
        <returns>The system sound object, or null on error.</returns>
        <remarks>SystemSounds are limited to 30 seconds or less.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static AudioToolbox.SystemSound FromFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AudioToolbox.SystemSound FromFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.FromFile(System.String)" />
      <MemberSignature Language="F#" Value="static member FromFile : string -&gt; AudioToolbox.SystemSound" Usage="AudioToolbox.SystemSound.FromFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.SystemSound</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">The file that contains the audio.</param>
        <summary>An array of packet descriptions that describe the contents of the buffer.</summary>
        <returns>A SystemSound instance or null on error.</returns>
        <remarks>SystemSounds are limited to 30 seconds or less.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.SystemSound.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="AudioToolbox.SystemSound.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUISound">
      <MemberSignature Language="C#" Value="public bool IsUISound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUISound" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.SystemSound.IsUISound" />
      <MemberSignature Language="F#" Value="member this.IsUISound : bool with get, set" Usage="AudioToolbox.SystemSound.IsUISound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether to override user preferences when calling <see cref="M:AudioToolbox.SystemSound.PlaySystemSound" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAlertSound">
      <MemberSignature Language="C#" Value="public void PlayAlertSound ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayAlertSound() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.PlayAlertSound" />
      <MemberSignature Language="F#" Value="member this.PlayAlertSound : unit -&gt; unit" Usage="systemSound.PlayAlertSound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Plays a sound or alert.</summary>
        <remarks>The actual behavior of this method depends on the device (iPhone, iPod touch) and the vibrate settings.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAlertSound">
      <MemberSignature Language="C#" Value="public void PlayAlertSound (Action onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayAlertSound(class System.Action onCompletion) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.PlayAlertSound(System.Action)" />
      <MemberSignature Language="F#" Value="member this.PlayAlertSound : Action -&gt; unit" Usage="systemSound.PlayAlertSound onCompletion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onCompletion" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="onCompletion">To be added.</param>
        <summary>Plays a sound or alert and then calls the <param name="onCompletion" /> handler.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAlertSoundAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PlayAlertSoundAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PlayAlertSoundAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.PlayAlertSoundAsync" />
      <MemberSignature Language="F#" Value="member this.PlayAlertSoundAsync : unit -&gt; System.Threading.Tasks.Task" Usage="systemSound.PlayAlertSoundAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronously plays a sound or alert, returning a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Threading%20Task&amp;scope=Xamarin" title="T:System.Threading.Task">T:System.Threading.Task</a></format> that completes after the sound ends.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySystemSound">
      <MemberSignature Language="C#" Value="public void PlaySystemSound ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySystemSound() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.PlaySystemSound" />
      <MemberSignature Language="F#" Value="member this.PlaySystemSound : unit -&gt; unit" Usage="systemSound.PlaySystemSound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Plays the system sound.</summary>
        <remarks>The system sound is played asynchronously, but it is also limited to 30 seconds or less.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySystemSound">
      <MemberSignature Language="C#" Value="public void PlaySystemSound (Action onCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySystemSound(class System.Action onCompletion) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.PlaySystemSound(System.Action)" />
      <MemberSignature Language="F#" Value="member this.PlaySystemSound : Action -&gt; unit" Usage="systemSound.PlaySystemSound onCompletion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onCompletion" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="onCompletion">To be added.</param>
        <summary>Plays the system sound and calls <param name="onCompletion" /> afterwards.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySystemSoundAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PlaySystemSoundAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PlaySystemSoundAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.PlaySystemSoundAsync" />
      <MemberSignature Language="F#" Value="member this.PlaySystemSoundAsync : unit -&gt; System.Threading.Tasks.Task" Usage="systemSound.PlaySystemSoundAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronously plays a system sound and returns a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Threading%20Tasks%20Task&amp;scope=Xamarin" title="T:System.Threading.Tasks.Task">T:System.Threading.Tasks.Task</a></format> that is completed when the sound ends.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSystemSoundCompletion">
      <MemberSignature Language="C#" Value="public void RemoveSystemSoundCompletion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSystemSoundCompletion() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.SystemSound.RemoveSystemSoundCompletion" />
      <MemberSignature Language="F#" Value="member this.RemoveSystemSoundCompletion : unit -&gt; unit" Usage="systemSound.RemoveSystemSoundCompletion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the previously registered completion method.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Vibrate">
      <MemberSignature Language="C#" Value="public static readonly AudioToolbox.SystemSound Vibrate;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class AudioToolbox.SystemSound Vibrate" />
      <MemberSignature Language="DocId" Value="F:AudioToolbox.SystemSound.Vibrate" />
      <MemberSignature Language="F#" Value=" staticval mutable Vibrate : AudioToolbox.SystemSound" Usage="AudioToolbox.SystemSound.Vibrate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.SystemSound</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A special system sound that can be used to make the device vibrate.</summary>
        <remarks>This system sound does nothing on iPod touches.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
