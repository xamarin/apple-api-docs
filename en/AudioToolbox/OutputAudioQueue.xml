<Type Name="OutputAudioQueue" FullName="AudioToolbox.OutputAudioQueue">
  <TypeSignature Language="C#" Value="public class OutputAudioQueue : AudioToolbox.AudioQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OutputAudioQueue extends AudioToolbox.AudioQueue" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AudioToolbox.AudioQueue</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The output AudioQueue.</summary>
    <remarks>
      <para>Use this class to playback audio.</para>
      <para>
You will usually create an OutputAudioQueue instance and allocate a number of buffers that you will use to fill in with data.   Once a buffer is filled, the buffer is enqueued and when the OutputAudioQueue has finished playing it back, the OutputCompleted event will be raised.
</para>
      <para>
See the StreamingAudio sample program in monotouch-samples for an example program.
</para>
    </remarks>
    <related type="sample" href="http://samples.xamarin.com/Samples/ByGuid?guid=26d904c2-c44a-46f2-883a-a01bb5657309">StreamingAudio</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputAudioQueue (AudioToolbox.AudioStreamBasicDescription desc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype AudioToolbox.AudioStreamBasicDescription desc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="desc" Type="AudioToolbox.AudioStreamBasicDescription" />
      </Parameters>
      <Docs>
        <param name="desc">Stream description.</param>
        <summary>Creates an OutputAudioQueue.</summary>
        <remarks>Usually the stream description is fetched from an AudioFile or an AudioStreamFile</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputAudioQueue (AudioToolbox.AudioStreamBasicDescription desc, CoreFoundation.CFRunLoop runLoop, CoreFoundation.CFString runMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype AudioToolbox.AudioStreamBasicDescription desc, class CoreFoundation.CFRunLoop runLoop, class CoreFoundation.CFString runMode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="desc" Type="AudioToolbox.AudioStreamBasicDescription" />
        <Parameter Name="runLoop" Type="CoreFoundation.CFRunLoop" />
        <Parameter Name="runMode" Type="CoreFoundation.CFString" />
      </Parameters>
      <Docs>
        <param name="desc">Stream description.</param>
        <param name="runLoop">The run loop in which the OnOutputCompleted method and the OutputCompleted event are raised, if you pass null, this uses an internal thread.</param>
        <param name="runMode">The run mode for the run loop.</param>
        <summary>Creates an OutputAudioQueue, specifying on which run loop events are delivered.</summary>
        <remarks>Usually the stream description is fetched from an AudioFile or an AudioStreamFile.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputAudioQueue (AudioToolbox.AudioStreamBasicDescription desc, CoreFoundation.CFRunLoop runLoop, string runMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype AudioToolbox.AudioStreamBasicDescription desc, class CoreFoundation.CFRunLoop runLoop, string runMode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="desc" Type="AudioToolbox.AudioStreamBasicDescription" />
        <Parameter Name="runLoop" Type="CoreFoundation.CFRunLoop" />
        <Parameter Name="runMode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="desc">Stream description.</param>
        <param name="runLoop">The run loop in which the OnOutputCompleted method and the OutputCompleted event are raised, if you pass null, this uses an internal thread.</param>
        <param name="runMode">The run mode for the run loop.</param>
        <summary>Creates an OutputAudioQueue, specifying on which run loop events are delivered.</summary>
        <remarks>Usually the stream description is fetched from an AudioFile or an AudioStreamFile.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AudioToolbox.BufferCompletedEventArgs&gt; BufferCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AudioToolbox.BufferCompletedEventArgs&gt; BufferCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AudioToolbox.BufferCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOfflineRender">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioQueueStatus DisableOfflineRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioQueueStatus DisableOfflineRender() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioQueueStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disables the offline renderer.</summary>
        <returns>AudioQueueStatus.Ok on success, otherwise the error. </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBufferCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnBufferCompleted (IntPtr audioQueueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBufferCompleted(native int audioQueueBuffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioQueueBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="audioQueueBuffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOffline">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioQueueStatus RenderOffline (double timeStamp, AudioToolbox.AudioQueueBuffer* audioQueueBuffer, int frameCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioQueueStatus RenderOffline(float64 timeStamp, valuetype AudioToolbox.AudioQueueBuffer* audioQueueBuffer, int32 frameCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioQueueStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeStamp" Type="System.Double" />
        <Parameter Name="audioQueueBuffer" Type="AudioToolbox.AudioQueueBuffer*" />
        <Parameter Name="frameCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeStamp">The timestamp of the first frame to render.</param>
        <param name="audioQueueBuffer">The audio queue buffer to render to.</param>
        <param name="frameCount">The number of frames to render.</param>
        <summary>Writes audio data to an audio buffer, instead of to a device.</summary>
        <returns>AudioQueueStatus.Ok on success, otherwise the error. </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOfflineRenderFormat">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioQueueStatus SetOfflineRenderFormat (AudioToolbox.AudioStreamBasicDescription desc, AudioToolbox.AudioChannelLayout layout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioQueueStatus SetOfflineRenderFormat(valuetype AudioToolbox.AudioStreamBasicDescription desc, class AudioToolbox.AudioChannelLayout layout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioQueueStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desc" Type="AudioToolbox.AudioStreamBasicDescription" />
        <Parameter Name="layout" Type="AudioToolbox.AudioChannelLayout" />
      </Parameters>
      <Docs>
        <param name="desc">The audio format to use for offline rendering.</param>
        <param name="layout">The channel layout to use for offline rendering. Optional.</param>
        <summary>Enables offline rendering by setting the audio format and optionally the channel layout to use when rendering.</summary>
        <returns>AudioQueueStatus.Ok on success, otherwise the error. </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
