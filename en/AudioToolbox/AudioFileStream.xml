<Type Name="AudioFileStream" FullName="AudioToolbox.AudioFileStream">
  <TypeSignature Language="C#" Value="public class AudioFileStream : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioFileStream extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AudioToolbox.AudioFileStream" />
  <TypeSignature Language="F#" Value="type AudioFileStream = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Process partial audio files.</summary>
    <remarks>
      <para>
	You use AudioFileStream when you want to decode audio content
	that does not live in an local file or if you want to decode
	it in chunks.  New data is fed into the AudioFileStream using
	one of the ParseBytes method and decoded audio is provided on
	the PacketDecoded event (or the OnPacketDecoded virtual
	method) and information about the stream is raised on the
	PropertyFound event (or the OnPropertyFound virtual method).
      </para>
      <para>
	This can be used to parse audio files when you are streaming audio from the network for example.
      </para>
      <para>

	The methods and properties in this class update the <see cref="P:AudioToolbox.AudioFileStream.LastError" />
	property to track any potential errors during parsing, but
	without throwing an exception.

      </para>
    </remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/StreamingAudio/">StreamingAudio</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioFileStream (AudioToolbox.AudioFileType fileTypeHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype AudioToolbox.AudioFileType fileTypeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.#ctor(AudioToolbox.AudioFileType)" />
      <MemberSignature Language="F#" Value="new AudioToolbox.AudioFileStream : AudioToolbox.AudioFileType -&gt; AudioToolbox.AudioFileStream" Usage="new AudioToolbox.AudioFileStream fileTypeHint" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileTypeHint" Type="AudioToolbox.AudioFileType" />
      </Parameters>
      <Docs>
        <param name="fileTypeHint">Hint about the audio file type.</param>
        <summary>Creates a new instance of this object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageBytesPerPacket">
      <MemberSignature Language="C#" Value="public double AverageBytesPerPacket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AverageBytesPerPacket" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.AverageBytesPerPacket" />
      <MemberSignature Language="F#" Value="member this.AverageBytesPerPacket : double" Usage="AudioToolbox.AudioFileStream.AverageBytesPerPacket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Average bytes per packet.   This value is precise for audio files with constant bit rates or audio files that have a packet index, otherwise it is a computed average.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitRate">
      <MemberSignature Language="C#" Value="public int BitRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BitRate" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.BitRate" />
      <MemberSignature Language="F#" Value="member this.BitRate : int" Usage="AudioToolbox.AudioFileStream.BitRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The stream's bit rate in bits per second.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteToPacket">
      <MemberSignature Language="C#" Value="public long ByteToPacket (long byteval, out int byteOffsetInPacket, out bool isEstimate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ByteToPacket(int64 byteval, [out] int32&amp; byteOffsetInPacket, [out] bool&amp; isEstimate) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.ByteToPacket(System.Int64,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="F#" Value="member this.ByteToPacket : int64 *  *  -&gt; int64" Usage="audioFileStream.ByteToPacket (byteval, byteOffsetInPacket, isEstimate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteval" Type="System.Int64" />
        <Parameter Name="byteOffsetInPacket" Type="System.Int32" RefType="out" />
        <Parameter Name="isEstimate" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="byteval">The location in the file.</param>
        <param name="byteOffsetInPacket">Return value, byte offset within the packet.</param>
        <param name="isEstimate">Return value, whether the return is an estimate or not.</param>
        <summary>Maps a position in the file to an audio packet.</summary>
        <returns>The packet number that corresponds to this byte in the file.</returns>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelLayout">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioChannelLayout ChannelLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AudioToolbox.AudioChannelLayout ChannelLayout" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.ChannelLayout" />
      <MemberSignature Language="F#" Value="member this.ChannelLayout : AudioToolbox.AudioChannelLayout" Usage="AudioToolbox.AudioFileStream.ChannelLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioChannelLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The channel layout for the audio stream.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.Close" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="audioFileStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes (and disposes the audio stream).</summary>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataByteCount">
      <MemberSignature Language="C#" Value="public long DataByteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 DataByteCount" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.DataByteCount" />
      <MemberSignature Language="F#" Value="member this.DataByteCount : int64" Usage="AudioToolbox.AudioFileStream.DataByteCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For streams whose length is known, the number of audio byte data.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    After the audio stream header is parsed, it is possible to determine the number of bytes of audio data.  For streaming formats, this value is not specified.
	  </para>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFormat">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioStreamBasicDescription DataFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AudioToolbox.AudioStreamBasicDescription DataFormat" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.DataFormat" />
      <MemberSignature Language="F#" Value="member this.DataFormat : AudioToolbox.AudioStreamBasicDescription" Usage="AudioToolbox.AudioFileStream.DataFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioStreamBasicDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Format of the data (as an AudioStreamBasicDescription</summary>
        <value>.</value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataOffset">
      <MemberSignature Language="C#" Value="public long DataOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 DataOffset" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.DataOffset" />
      <MemberSignature Language="F#" Value="member this.DataOffset : int64" Usage="AudioToolbox.AudioFileStream.DataOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Offset of the audio date from the beginning of the audio file stream.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataPacketCount">
      <MemberSignature Language="C#" Value="public long DataPacketCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 DataPacketCount" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.DataPacketCount" />
      <MemberSignature Language="F#" Value="member this.DataPacketCount : int64" Usage="AudioToolbox.AudioFileStream.DataPacketCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of audio packets on the audio file stream.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="audioFileStream.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the AudioFileStream object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the AudioFileStream class.</para>
          <para>Calling the Dispose method when the application is finished using the AudioFileStream ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="audioFileStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the AudioFileStream object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the AudioFileStream class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the AudioFileStream ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileType">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioFileType FileType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AudioToolbox.AudioFileType FileType" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.FileType" />
      <MemberSignature Language="F#" Value="member this.FileType : AudioToolbox.AudioFileType" Usage="AudioToolbox.AudioFileStream.FileType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioFileType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The audio file type for the audio stream.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AudioFileStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="audioFileStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the AudioFileStream object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatList">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioFormat[] FormatList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AudioToolbox.AudioFormat[] FormatList" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.FormatList" />
      <MemberSignature Language="F#" Value="member this.FormatList : AudioToolbox.AudioFormat[]" Usage="AudioToolbox.AudioFileStream.FormatList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioFormat[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>List of formats supported by the audio stream.</summary>
        <value>
        </value>
        <remarks>
          <para>

	    Some formats (like AAC) that support multiple encodings
	    will set this property to the available audio formats.
	    You would typically use one of the returned
	    AudioStreamBasicDescription descriptions to create an
	    <see cref="T:AudioToolbox.AudioQueue" />.

	  </para>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameToPacket">
      <MemberSignature Language="C#" Value="public long FrameToPacket (long frame, out int frameOffsetInPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 FrameToPacket(int64 frame, [out] int32&amp; frameOffsetInPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.FrameToPacket(System.Int64,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.FrameToPacket : int64 *  -&gt; int64" Usage="audioFileStream.FrameToPacket (frame, frameOffsetInPacket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Int64" />
        <Parameter Name="frameOffsetInPacket" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="frame">The audio frame number.</param>
        <param name="frameOffsetInPacket">The frame offset in the packet.</param>
        <summary>Returns the packet number and the frame offset in the packet (on the out parameter) corresponding to the requested audio frame.</summary>
        <returns>The packet number that corresponds to the specified frame.</returns>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public IntPtr GetProperty (AudioToolbox.AudioFileStreamProperty property, out int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetProperty(valuetype AudioToolbox.AudioFileStreamProperty property, [out] int32&amp; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.GetProperty(AudioToolbox.AudioFileStreamProperty,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GetProperty : AudioToolbox.AudioFileStreamProperty *  -&gt; nativeint" Usage="audioFileStream.GetProperty (property, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="AudioToolbox.AudioFileStreamProperty" />
        <Parameter Name="size" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="property">Property ID to fetch.</param>
        <param name="size">The size in bytes of the property.</param>
        <summary>Low-level routine used to fetch arbitrary property values from the underlying AudioFileStream object.</summary>
        <returns>If the return value from this method is different that IntPtr.Zero, the value pointed to contains the value of the property.</returns>
        <remarks>
          <para>
	    This method will query the underlying AudioFileStream
	    object for the size of the specified property and allocate
	    the memory needed for it using Marshal.AllocHGlobal
	    method.   
	  </para>
          <para>
	    You are responsible for releasing the memory allocated by this method by calling Marshal.FreeHGlobal. 
	  </para>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public bool GetProperty (AudioToolbox.AudioFileStreamProperty property, ref int dataSize, IntPtr outPropertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetProperty(valuetype AudioToolbox.AudioFileStreamProperty property, int32&amp; dataSize, native int outPropertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.GetProperty(AudioToolbox.AudioFileStreamProperty,System.Int32@,System.IntPtr)" />
      <MemberSignature Language="F#" Value="member this.GetProperty : AudioToolbox.AudioFileStreamProperty *  * nativeint -&gt; bool" Usage="audioFileStream.GetProperty (property, dataSize, outPropertyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="AudioToolbox.AudioFileStreamProperty" />
        <Parameter Name="dataSize" Type="System.Int32" RefType="ref" />
        <Parameter Name="outPropertyData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="property">Property ID to fetch.</param>
        <param name="dataSize">The expected size of the property (must match the underlying assumption for the size).</param>
        <param name="outPropertyData">Must point to a buffer that can hold dataSize bytes.</param>
        <summary>Low-level routine used to fetch arbitrary property values from the underlying AudioFileStream object.</summary>
        <returns>True on success.</returns>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastError">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioFileStreamStatus LastError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AudioToolbox.AudioFileStreamStatus LastError" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.LastError" />
      <MemberSignature Language="F#" Value="member this.LastError : AudioToolbox.AudioFileStreamStatus" Usage="AudioToolbox.AudioFileStream.LastError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioFileStreamStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the latest error code set by one of the methods in AudioFileStream.</summary>
        <value>
        </value>
        <remarks>
	  Accessing some properties and methods set this value when
	  accessed, you can use this during debugging to identify
	  problems in your code.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="MagicCookie">
      <MemberSignature Language="C#" Value="public byte[] MagicCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] MagicCookie" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.MagicCookie" />
      <MemberSignature Language="F#" Value="member this.MagicCookie : byte[]" Usage="AudioToolbox.AudioFileStream.MagicCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The magic cookie for this file.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    Some file formats require that the magic cookie is written
	    before data can be written, use this property to retrieve
	    the magic cookie for this file stream.
	  </para>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumPacketSize">
      <MemberSignature Language="C#" Value="public int MaximumPacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumPacketSize" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.MaximumPacketSize" />
      <MemberSignature Language="F#" Value="member this.MaximumPacketSize : int" Usage="AudioToolbox.AudioFileStream.MaximumPacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maximum packet size for data on the audio file stream</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPacketDecoded">
      <MemberSignature Language="C#" Value="protected virtual void OnPacketDecoded (int numberOfBytes, IntPtr inputData, AudioToolbox.AudioStreamPacketDescription[] packetDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPacketDecoded(int32 numberOfBytes, native int inputData, valuetype AudioToolbox.AudioStreamPacketDescription[] packetDescriptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.OnPacketDecoded(System.Int32,System.IntPtr,AudioToolbox.AudioStreamPacketDescription[])" />
      <MemberSignature Language="F#" Value="abstract member OnPacketDecoded : int * nativeint * AudioToolbox.AudioStreamPacketDescription[] -&gt; unit&#xA;override this.OnPacketDecoded : int * nativeint * AudioToolbox.AudioStreamPacketDescription[] -&gt; unit" Usage="audioFileStream.OnPacketDecoded (numberOfBytes, inputData, packetDescriptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfBytes" Type="System.Int32" />
        <Parameter Name="inputData" Type="System.IntPtr" />
        <Parameter Name="packetDescriptions" Type="AudioToolbox.AudioStreamPacketDescription[]" />
      </Parameters>
      <Docs>
        <param name="numberOfBytes">The number of bytes available in the decoded packet.</param>
        <param name="inputData">Pointer to the decoded data.</param>
        <param name="packetDescriptions">A description of the packets decoded.</param>
        <summary>Invoked when a packet has been decoded.</summary>
        <remarks>The default implementation raises the PacketDecoded event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyFound">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyFound (AudioToolbox.AudioFileStreamProperty propertyID, ref AudioToolbox.AudioFileStreamPropertyFlag ioFlags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyFound(valuetype AudioToolbox.AudioFileStreamProperty propertyID, valuetype AudioToolbox.AudioFileStreamPropertyFlag&amp; ioFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.OnPropertyFound(AudioToolbox.AudioFileStreamProperty,AudioToolbox.AudioFileStreamPropertyFlag@)" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyFound : AudioToolbox.AudioFileStreamProperty *  -&gt; unit&#xA;override this.OnPropertyFound : AudioToolbox.AudioFileStreamProperty *  -&gt; unit" Usage="audioFileStream.OnPropertyFound (propertyID, ioFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyID" Type="AudioToolbox.AudioFileStreamProperty" />
        <Parameter Name="ioFlags" Type="AudioToolbox.AudioFileStreamPropertyFlag" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="propertyID">The property that has been found.</param>
        <param name="ioFlags" />
        <summary>Invoked when a propety is found.</summary>
        <remarks>The default implementation merely raises the PropetyFound event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketDecoded">
      <MemberSignature Language="C#" Value="public EventHandler&lt;AudioToolbox.PacketReceivedEventArgs&gt; PacketDecoded;" />
      <MemberSignature Language="ILAsm" Value=".field public class System.EventHandler`1&lt;class AudioToolbox.PacketReceivedEventArgs&gt; PacketDecoded" />
      <MemberSignature Language="DocId" Value="F:AudioToolbox.AudioFileStream.PacketDecoded" />
      <MemberSignature Language="F#" Value="val mutable PacketDecoded : EventHandler&lt;AudioToolbox.PacketReceivedEventArgs&gt;" Usage="AudioToolbox.AudioFileStream.PacketDecoded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AudioToolbox.PacketReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This event is raised when a packet has been decoded.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketSizeUpperBound">
      <MemberSignature Language="C#" Value="public int PacketSizeUpperBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSizeUpperBound" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.PacketSizeUpperBound" />
      <MemberSignature Language="F#" Value="member this.PacketSizeUpperBound : int" Usage="AudioToolbox.AudioFileStream.PacketSizeUpperBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The largest possible packet size.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketTableInfo">
      <MemberSignature Language="C#" Value="public Nullable&lt;AudioToolbox.AudioFilePacketTableInfo&gt; PacketTableInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype AudioToolbox.AudioFilePacketTableInfo&gt; PacketTableInfo" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.PacketTableInfo" />
      <MemberSignature Language="F#" Value="member this.PacketTableInfo : Nullable&lt;AudioToolbox.AudioFilePacketTableInfo&gt;" Usage="AudioToolbox.AudioFileStream.PacketTableInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;AudioToolbox.AudioFilePacketTableInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains information about the valid frames in the audio file stream (their start and end).</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketToByte">
      <MemberSignature Language="C#" Value="public long PacketToByte (long packet, out bool isEstimate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 PacketToByte(int64 packet, [out] bool&amp; isEstimate) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.PacketToByte(System.Int64,System.Boolean@)" />
      <MemberSignature Language="F#" Value="member this.PacketToByte : int64 *  -&gt; int64" Usage="audioFileStream.PacketToByte (packet, isEstimate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packet" Type="System.Int64" />
        <Parameter Name="isEstimate" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="packet">Packet number.</param>
        <param name="isEstimate">On return, the value will be true if the byte offset is an estimate.</param>
        <summary>Maps a packet number to a byte number in the audio file stream.</summary>
        <returns>
        </returns>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketToFrame">
      <MemberSignature Language="C#" Value="public long PacketToFrame (long packet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 PacketToFrame(int64 packet) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.PacketToFrame(System.Int64)" />
      <MemberSignature Language="F#" Value="member this.PacketToFrame : int64 -&gt; int64" Usage="audioFileStream.PacketToFrame packet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packet" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="packet">Packet number to map.</param>
        <summary>Maps a packet number to an audio frame number in the audio file stream.</summary>
        <returns>
        </returns>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseBytes">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioFileStreamStatus ParseBytes (byte[] bytes, bool discontinuity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioFileStreamStatus ParseBytes(unsigned int8[] bytes, bool discontinuity) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.ParseBytes(System.Byte[],System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ParseBytes : byte[] * bool -&gt; AudioToolbox.AudioFileStreamStatus" Usage="audioFileStream.ParseBytes (bytes, discontinuity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioFileStreamStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="discontinuity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">The buffer that contains the audio data to decode.</param>
        <param name="discontinuity">True if this invocation to ParseBytes is contiguous to the previous one, false otherwise.</param>
        <summary>Parse and decode the array of bytes provided.</summary>
        <returns>Parsing status.</returns>
        <remarks>
          <para> 
	    The OnPacketDecoded/OnProperty found methods are
	    invoked as data is parsed.  If you have not subclassed
	    this class, you can alternatively hook up to the
	    PacketDecoded and PropertyFound events to receive parsing
	    notifications.  
	  </para>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseBytes">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioFileStreamStatus ParseBytes (int size, IntPtr data, bool discontinuity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioFileStreamStatus ParseBytes(int32 size, native int data, bool discontinuity) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.ParseBytes(System.Int32,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ParseBytes : int * nativeint * bool -&gt; AudioToolbox.AudioFileStreamStatus" Usage="audioFileStream.ParseBytes (size, data, discontinuity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioFileStreamStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="discontinuity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="size">The number of bytes to parse from the provided block.</param>
        <param name="data">A pointer to the audio data to decode.</param>
        <param name="discontinuity">True if this invocation to ParseBytes is contiguous to the previous one, false otherwise.</param>
        <summary>Parse and decode the block of data provided.</summary>
        <returns>Parse status.</returns>
        <remarks>
          <para>The OnPacketDecoded/OnProperty found methods are invoked as data is parsed.   If you have not subclassed this class, you can alternatively hook up to the PacketDecoded and PropertyFound events to receive parsing notifications.</para>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseBytes">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioFileStreamStatus ParseBytes (byte[] bytes, int offset, int count, bool discontinuity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioFileStreamStatus ParseBytes(unsigned int8[] bytes, int32 offset, int32 count, bool discontinuity) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.ParseBytes(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ParseBytes : byte[] * int * int * bool -&gt; AudioToolbox.AudioFileStreamStatus" Usage="audioFileStream.ParseBytes (bytes, offset, count, discontinuity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioFileStreamStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="discontinuity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">Buffer containing the data.</param>
        <param name="offset">First byte withing the array that contains the data to decode.</param>
        <param name="count">Number of bytes to parse.</param>
        <param name="discontinuity">True if this invocation to ParseBytes is contiguous to the previous one, false otherwise.</param>
        <summary>Parses and decode a portion of the array of bytes provided.</summary>
        <returns>The status from parsing the buffer.</returns>
        <remarks>
          <para>The OnPacketDecoded/OnProperty found methods are invoked as data is parsed.   If you have not subclassed this class, you can alternatively hook up to the PacketDecoded and PropertyFound events to receive parsing notifications.</para>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyFound">
      <MemberSignature Language="C#" Value="public EventHandler&lt;AudioToolbox.PropertyFoundEventArgs&gt; PropertyFound;" />
      <MemberSignature Language="ILAsm" Value=".field public class System.EventHandler`1&lt;class AudioToolbox.PropertyFoundEventArgs&gt; PropertyFound" />
      <MemberSignature Language="DocId" Value="F:AudioToolbox.AudioFileStream.PropertyFound" />
      <MemberSignature Language="F#" Value="val mutable PropertyFound : EventHandler&lt;AudioToolbox.PropertyFoundEventArgs&gt;" Usage="AudioToolbox.AudioFileStream.PropertyFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AudioToolbox.PropertyFoundEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This event is raised when a property has been found on the decoded data.</summary>
        <remarks>The most interesting property that is raised is AudioFileStreamProperty.ReadyToProducePackets;   When this property is parsed there is enough information to create the output queue.   The MagicCookie and the StreamBasicDescription contain the information necessary to create a working instance of the OutputAudioQueue.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadyToProducePackets">
      <MemberSignature Language="C#" Value="public bool ReadyToProducePackets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadyToProducePackets" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.ReadyToProducePackets" />
      <MemberSignature Language="F#" Value="member this.ReadyToProducePackets : bool" Usage="AudioToolbox.AudioFileStream.ReadyToProducePackets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Set to true once the file stream parser has read enough of the headers to be able to produce audio packets.</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioFileStreamStatus Seek (long packetOffset, out long dataByteOffset, out bool isEstimate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioFileStreamStatus Seek(int64 packetOffset, [out] int64&amp; dataByteOffset, [out] bool&amp; isEstimate) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.Seek(System.Int64,System.Int64@,System.Boolean@)" />
      <MemberSignature Language="F#" Value="member this.Seek : int64 *  *  -&gt; AudioToolbox.AudioFileStreamStatus" Usage="audioFileStream.Seek (packetOffset, dataByteOffset, isEstimate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioFileStreamStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packetOffset" Type="System.Int64" />
        <Parameter Name="dataByteOffset" Type="System.Int64" RefType="out" />
        <Parameter Name="isEstimate" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="packetOffset">The offset of the packet to map.</param>
        <param name="dataByteOffset">Upon return, the data byte offset in the audio file stream. </param>
        <param name="isEstimate">On return, the value will be true if the byte offset is an estimate.</param>
        <summary>Maps the absolute file offset for the specified packetOffset.</summary>
        <returns>
        </returns>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public bool SetProperty (AudioToolbox.AudioFileStreamProperty property, int dataSize, IntPtr propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetProperty(valuetype AudioToolbox.AudioFileStreamProperty property, int32 dataSize, native int propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioFileStream.SetProperty(AudioToolbox.AudioFileStreamProperty,System.Int32,System.IntPtr)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : AudioToolbox.AudioFileStreamProperty * int * nativeint -&gt; bool" Usage="audioFileStream.SetProperty (property, dataSize, propertyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="AudioToolbox.AudioFileStreamProperty" />
        <Parameter Name="dataSize" Type="System.Int32" />
        <Parameter Name="propertyData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="property">The property to set.</param>
        <param name="dataSize">The size of the data to set.</param>
        <param name="propertyData">Pointer to the property data.</param>
        <summary>Low-level property setting API.   Use the exposed managed properties instead.</summary>
        <returns>true if the operation successful.</returns>
        <remarks>Most properties have been exposed with C# properties, there should be no need to call this directly, unless new properties are introduced that are not bound by MonoTouch.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StreamBasicDescription">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioStreamBasicDescription StreamBasicDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AudioToolbox.AudioStreamBasicDescription StreamBasicDescription" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioFileStream.StreamBasicDescription" />
      <MemberSignature Language="F#" Value="member this.StreamBasicDescription : AudioToolbox.AudioStreamBasicDescription" Usage="AudioToolbox.AudioFileStream.StreamBasicDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Advice("Use DataFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioStreamBasicDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Format of the data</summary>
        <value>
        </value>
        <remarks>
          <para>
	    This updates the <see cref="P:AudioToolbox.AudioFileStream.LastError" /> property.
	  </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
