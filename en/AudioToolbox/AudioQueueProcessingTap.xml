<Type Name="AudioQueueProcessingTap" FullName="AudioToolbox.AudioQueueProcessingTap">
  <TypeSignature Language="C#" Value="public class AudioQueueProcessingTap : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioQueueProcessingTap extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AudioToolbox.AudioQueueProcessingTap" />
  <TypeSignature Language="F#" Value="type AudioQueueProcessingTap = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Holds the state for an AudioQueue processing tap.</summary>
    <remarks>
      <para>
	Instances of this class are returned by the <see cref="M:AudioToolbox.AudioQueue.CreateProcessingTap(AudioToolbox.AudioQueueProcessingTapDelegate,AudioToolbox.AudioQueueProcessingTapFlags,AudioToolbox.AudioQueueStatus@)" />
	from AudioQueue and hold the state to the audio processing tap that was created as well as containing information like MaxFrames and the ProcessingFormat.
      </para>
      <para>
	You can terminate the processing tap by calling the Dispose
	method or by releasing the AudioQueue that created it.
      </para>
      <example>
        <code lang="c#">
        </code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioQueueProcessingTap.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="audioQueueProcessingTap.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the AudioQueueProcessingTap object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the AudioQueueProcessingTap class.</para>
          <para>Calling the Dispose method when the application is finished using the AudioQueueProcessingTap ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioQueueProcessingTap.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="audioQueueProcessingTap.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the AudioQueueProcessingTap object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the AudioQueueProcessingTap class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the AudioQueueProcessingTap ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AudioQueueProcessingTap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioQueueProcessingTap.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="audioQueueProcessingTap.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the AudioQueueProcessingTap object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueueTime">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioQueueStatus GetQueueTime (out double sampleTime, out uint frameCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioQueueStatus GetQueueTime([out] float64&amp; sampleTime, [out] unsigned int32&amp; frameCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioQueueProcessingTap.GetQueueTime(System.Double@,System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.GetQueueTime :  *  -&gt; AudioToolbox.AudioQueueStatus" Usage="audioQueueProcessingTap.GetQueueTime (sampleTime, frameCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioQueueStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleTime" Type="System.Double" RefType="out" />
        <Parameter Name="frameCount" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sampleTime">Returns the sample time for the output queue.</param>
        <param name="frameCount">Frame count for the audio being processed by the tap..</param>
        <summary>Get the current Queue Time.</summary>
        <returns>
        </returns>
        <remarks>
          <para>
	    This method should only be called from the AudioProcessingTap callback.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceAudio">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioQueueStatus GetSourceAudio (uint numberOfFrames, ref AudioToolbox.AudioTimeStamp timeStamp, out AudioToolbox.AudioQueueProcessingTapFlags flags, out uint parentNumberOfFrames, AudioToolbox.AudioBuffers data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AudioToolbox.AudioQueueStatus GetSourceAudio(unsigned int32 numberOfFrames, valuetype AudioToolbox.AudioTimeStamp&amp; timeStamp, [out] valuetype AudioToolbox.AudioQueueProcessingTapFlags&amp; flags, [out] unsigned int32&amp; parentNumberOfFrames, class AudioToolbox.AudioBuffers data) cil managed" />
      <MemberSignature Language="DocId" Value="M:AudioToolbox.AudioQueueProcessingTap.GetSourceAudio(System.UInt32,AudioToolbox.AudioTimeStamp@,AudioToolbox.AudioQueueProcessingTapFlags@,System.UInt32@,AudioToolbox.AudioBuffers)" />
      <MemberSignature Language="F#" Value="member this.GetSourceAudio : uint32 *  *  *  * AudioToolbox.AudioBuffers -&gt; AudioToolbox.AudioQueueStatus" Usage="audioQueueProcessingTap.GetSourceAudio (numberOfFrames, timeStamp, flags, parentNumberOfFrames, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioQueueStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfFrames" Type="System.UInt32" />
        <Parameter Name="timeStamp" Type="AudioToolbox.AudioTimeStamp" RefType="ref" />
        <Parameter Name="flags" Type="AudioToolbox.AudioQueueProcessingTapFlags" RefType="out" />
        <Parameter Name="parentNumberOfFrames" Type="System.UInt32" RefType="out" />
        <Parameter Name="data" Type="AudioToolbox.AudioBuffers" />
      </Parameters>
      <Docs>
        <param name="numberOfFrames">Number of frames requires by the Tap processor.</param>
        <param name="timeStamp">For input queues, the timestamp is returned.  For output queues, it must contain the timestamp.</param>
        <param name="flags">Flags</param>
        <param name="parentNumberOfFrames">Returns the number of provided frames.</param>
        <param name="data">The AudioBuffers that contain the source data.</param>
        <summary>Deprecated: Retrieve source audio.</summary>
        <returns>
        </returns>
        <remarks>
          <para>
	    Memory management for the AudioBuffers is as follows.  If
	    the AudioBuffer Data field contains IntPtr.Zero, the
	    AudioQueue will allocate the buffers and release them
	    after the tap processor has executed.  If the value is
	    not-null, it must point to a block of memory large enough
	    to hold the requested number of frames.
	  </para>
          <para>
	    This method should only be called from the AudioProcessingTap callback.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxFrames">
      <MemberSignature Language="C#" Value="public uint MaxFrames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxFrames" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioQueueProcessingTap.MaxFrames" />
      <MemberSignature Language="F#" Value="member this.MaxFrames : uint32" Usage="AudioToolbox.AudioQueueProcessingTap.MaxFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maximum number of sample frames per tap.</summary>
        <value>
        </value>
        <remarks>Apple lists this as being "50 msec of audio, 2048 samples at 44.1Khz".</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessingFormat">
      <MemberSignature Language="C#" Value="public AudioToolbox.AudioStreamBasicDescription ProcessingFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AudioToolbox.AudioStreamBasicDescription ProcessingFormat" />
      <MemberSignature Language="DocId" Value="P:AudioToolbox.AudioQueueProcessingTap.ProcessingFormat" />
      <MemberSignature Language="F#" Value="member this.ProcessingFormat : AudioToolbox.AudioStreamBasicDescription" Usage="AudioToolbox.AudioQueueProcessingTap.ProcessingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AudioToolbox.AudioStreamBasicDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The format of the data that will be provided to the tap render function.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
