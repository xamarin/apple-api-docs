<Type Name="CPMapTemplateDelegate" FullName="CarPlay.CPMapTemplateDelegate">
  <TypeSignature Language="C#" Value="public class CPMapTemplateDelegate : Foundation.NSObject, CarPlay.ICPMapTemplateDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CPMapTemplateDelegate extends Foundation.NSObject implements class CarPlay.ICPMapTemplateDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CarPlay.CPMapTemplateDelegate" />
  <TypeSignature Language="F#" Value="type CPMapTemplateDelegate = class&#xA;    inherit NSObject&#xA;    interface ICPMapTemplateDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CarPlay.ICPMapTemplateDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("Xamarin_iOS__CarPlay_CPMapTemplateDelegate", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Default implementation of <see cref="T:CarPlay.ICPMapTemplateDelegate" />, providing the delegate object for <see cref="T:CarPlay.CPMapTemplate" /> objects.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPMapTemplateDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CPMapTemplateDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CarPlay.CPMapTemplateDelegate : Foundation.NSObjectFlag -&gt; CarPlay.CPMapTemplateDelegate" Usage="new CarPlay.CPMapTemplateDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CPMapTemplateDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CarPlay.CPMapTemplateDelegate : nativeint -&gt; CarPlay.CPMapTemplateDelegate" Usage="new CarPlay.CPMapTemplateDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidBeginPanGesture">
      <MemberSignature Language="C#" Value="public virtual void DidBeginPanGesture (CarPlay.CPMapTemplate mapTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidBeginPanGesture(class CarPlay.CPMapTemplate mapTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.DidBeginPanGesture(CarPlay.CPMapTemplate)" />
      <MemberSignature Language="F#" Value="abstract member DidBeginPanGesture : CarPlay.CPMapTemplate -&gt; unit&#xA;override this.DidBeginPanGesture : CarPlay.CPMapTemplate -&gt; unit" Usage="cPMapTemplateDelegate.DidBeginPanGesture mapTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplateDidBeginPanGesture:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidCancelNavigation">
      <MemberSignature Language="C#" Value="public virtual void DidCancelNavigation (CarPlay.CPMapTemplate mapTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidCancelNavigation(class CarPlay.CPMapTemplate mapTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.DidCancelNavigation(CarPlay.CPMapTemplate)" />
      <MemberSignature Language="F#" Value="abstract member DidCancelNavigation : CarPlay.CPMapTemplate -&gt; unit&#xA;override this.DidCancelNavigation : CarPlay.CPMapTemplate -&gt; unit" Usage="cPMapTemplateDelegate.DidCancelNavigation mapTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplateDidCancelNavigation:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <summary>The system calls this method after navigation has been cancelled.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDismissNavigationAlert">
      <MemberSignature Language="C#" Value="public virtual void DidDismissNavigationAlert (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPNavigationAlert navigationAlert, CarPlay.CPNavigationAlertDismissalContext dismissalContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDismissNavigationAlert(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPNavigationAlert navigationAlert, valuetype CarPlay.CPNavigationAlertDismissalContext dismissalContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.DidDismissNavigationAlert(CarPlay.CPMapTemplate,CarPlay.CPNavigationAlert,CarPlay.CPNavigationAlertDismissalContext)" />
      <MemberSignature Language="F#" Value="abstract member DidDismissNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert * CarPlay.CPNavigationAlertDismissalContext -&gt; unit&#xA;override this.DidDismissNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert * CarPlay.CPNavigationAlertDismissalContext -&gt; unit" Usage="cPMapTemplateDelegate.DidDismissNavigationAlert (mapTemplate, navigationAlert, dismissalContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:didDismissNavigationAlert:dismissalContext:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="navigationAlert" Type="CarPlay.CPNavigationAlert" />
        <Parameter Name="dismissalContext" Type="CarPlay.CPNavigationAlertDismissalContext" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="navigationAlert">To be added.</param>
        <param name="dismissalContext">To be added.</param>
        <summary>The system calls this method after the <paramref name="navigationAlert" /> has been dismissed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDismissPanningInterface">
      <MemberSignature Language="C#" Value="public virtual void DidDismissPanningInterface (CarPlay.CPMapTemplate mapTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDismissPanningInterface(class CarPlay.CPMapTemplate mapTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.DidDismissPanningInterface(CarPlay.CPMapTemplate)" />
      <MemberSignature Language="F#" Value="abstract member DidDismissPanningInterface : CarPlay.CPMapTemplate -&gt; unit&#xA;override this.DidDismissPanningInterface : CarPlay.CPMapTemplate -&gt; unit" Usage="cPMapTemplateDelegate.DidDismissPanningInterface mapTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplateDidDismissPanningInterface:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <summary>The system calls this method after the panning interface has been dismissed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEndPanGesture">
      <MemberSignature Language="C#" Value="public virtual void DidEndPanGesture (CarPlay.CPMapTemplate mapTemplate, CoreGraphics.CGPoint velocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEndPanGesture(class CarPlay.CPMapTemplate mapTemplate, valuetype CoreGraphics.CGPoint velocity) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.DidEndPanGesture(CarPlay.CPMapTemplate,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member DidEndPanGesture : CarPlay.CPMapTemplate * CoreGraphics.CGPoint -&gt; unit&#xA;override this.DidEndPanGesture : CarPlay.CPMapTemplate * CoreGraphics.CGPoint -&gt; unit" Usage="cPMapTemplateDelegate.DidEndPanGesture (mapTemplate, velocity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:didEndPanGestureWithVelocity:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="velocity" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="velocity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidShowNavigationAlert">
      <MemberSignature Language="C#" Value="public virtual void DidShowNavigationAlert (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPNavigationAlert navigationAlert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidShowNavigationAlert(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPNavigationAlert navigationAlert) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.DidShowNavigationAlert(CarPlay.CPMapTemplate,CarPlay.CPNavigationAlert)" />
      <MemberSignature Language="F#" Value="abstract member DidShowNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert -&gt; unit&#xA;override this.DidShowNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert -&gt; unit" Usage="cPMapTemplateDelegate.DidShowNavigationAlert (mapTemplate, navigationAlert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:didShowNavigationAlert:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="navigationAlert" Type="CarPlay.CPNavigationAlert" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="navigationAlert">To be added.</param>
        <summary>The system calls this method shortly after beginning the display of a navigation alert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidShowPanningInterface">
      <MemberSignature Language="C#" Value="public virtual void DidShowPanningInterface (CarPlay.CPMapTemplate mapTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidShowPanningInterface(class CarPlay.CPMapTemplate mapTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.DidShowPanningInterface(CarPlay.CPMapTemplate)" />
      <MemberSignature Language="F#" Value="abstract member DidShowPanningInterface : CarPlay.CPMapTemplate -&gt; unit&#xA;override this.DidShowPanningInterface : CarPlay.CPMapTemplate -&gt; unit" Usage="cPMapTemplateDelegate.DidShowPanningInterface mapTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplateDidShowPanningInterface:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <summary>The system calls this method shortly after beginning display of the panning interface.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdatePanGesture">
      <MemberSignature Language="C#" Value="public virtual void DidUpdatePanGesture (CarPlay.CPMapTemplate mapTemplate, CoreGraphics.CGPoint translation, CoreGraphics.CGPoint velocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdatePanGesture(class CarPlay.CPMapTemplate mapTemplate, valuetype CoreGraphics.CGPoint translation, valuetype CoreGraphics.CGPoint velocity) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.DidUpdatePanGesture(CarPlay.CPMapTemplate,CoreGraphics.CGPoint,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdatePanGesture : CarPlay.CPMapTemplate * CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit&#xA;override this.DidUpdatePanGesture : CarPlay.CPMapTemplate * CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit" Usage="cPMapTemplateDelegate.DidUpdatePanGesture (mapTemplate, translation, velocity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="">
          <AttributeName>Foundation.Export("mapTemplate:didUpdatePanGestureWithDelta:velocity:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:didUpdatePanGestureWithTranslation:velocity:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" Index="0" />
        <Parameter Name="translation" Type="CoreGraphics.CGPoint" Index="1" FrameworkAlternate="xamarin-ios-sdk-12" />
        <Parameter Name="velocity" Type="CoreGraphics.CGPoint" Index="2" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="translation">To be added.</param>
        <param name="velocity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayStyle">
      <MemberSignature Language="C#" Value="public virtual CarPlay.CPManeuverDisplayStyle GetDisplayStyle (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPManeuver maneuver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CarPlay.CPManeuverDisplayStyle GetDisplayStyle(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPManeuver maneuver) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.GetDisplayStyle(CarPlay.CPMapTemplate,CarPlay.CPManeuver)" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayStyle : CarPlay.CPMapTemplate * CarPlay.CPManeuver -&gt; CarPlay.CPManeuverDisplayStyle&#xA;override this.GetDisplayStyle : CarPlay.CPMapTemplate * CarPlay.CPManeuver -&gt; CarPlay.CPManeuverDisplayStyle" Usage="cPMapTemplateDelegate.GetDisplayStyle (mapTemplate, maneuver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:displayStyleForManeuver:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CarPlay.CPManeuverDisplayStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="maneuver" Type="CarPlay.CPManeuver" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="maneuver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pan">
      <MemberSignature Language="C#" Value="public virtual void Pan (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPPanDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pan(class CarPlay.CPMapTemplate mapTemplate, valuetype CarPlay.CPPanDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.Pan(CarPlay.CPMapTemplate,CarPlay.CPPanDirection)" />
      <MemberSignature Language="F#" Value="abstract member Pan : CarPlay.CPMapTemplate * CarPlay.CPPanDirection -&gt; unit&#xA;override this.Pan : CarPlay.CPMapTemplate * CarPlay.CPPanDirection -&gt; unit" Usage="cPMapTemplateDelegate.Pan (mapTemplate, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:panWithDirection:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="direction" Type="CarPlay.CPPanDirection" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="direction">To be added.</param>
        <summary>The system calls this method when the <paramref name="mapTemplate" /> has been panned in the <paramref name="direction" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PanBegan">
      <MemberSignature Language="C#" Value="public virtual void PanBegan (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPPanDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PanBegan(class CarPlay.CPMapTemplate mapTemplate, valuetype CarPlay.CPPanDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.PanBegan(CarPlay.CPMapTemplate,CarPlay.CPPanDirection)" />
      <MemberSignature Language="F#" Value="abstract member PanBegan : CarPlay.CPMapTemplate * CarPlay.CPPanDirection -&gt; unit&#xA;override this.PanBegan : CarPlay.CPMapTemplate * CarPlay.CPPanDirection -&gt; unit" Usage="cPMapTemplateDelegate.PanBegan (mapTemplate, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:panBeganWithDirection:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="direction" Type="CarPlay.CPPanDirection" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="direction">To be added.</param>
        <summary>The system calls this method shortly after panning has begun.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PanEnded">
      <MemberSignature Language="C#" Value="public virtual void PanEnded (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPPanDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PanEnded(class CarPlay.CPMapTemplate mapTemplate, valuetype CarPlay.CPPanDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.PanEnded(CarPlay.CPMapTemplate,CarPlay.CPPanDirection)" />
      <MemberSignature Language="F#" Value="abstract member PanEnded : CarPlay.CPMapTemplate * CarPlay.CPPanDirection -&gt; unit&#xA;override this.PanEnded : CarPlay.CPMapTemplate * CarPlay.CPPanDirection -&gt; unit" Usage="cPMapTemplateDelegate.PanEnded (mapTemplate, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:panEndedWithDirection:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="direction" Type="CarPlay.CPPanDirection" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="direction">To be added.</param>
        <summary>The system calls this method shortly after panning has ended.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPreview">
      <MemberSignature Language="C#" Value="public virtual void SelectedPreview (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPTrip trip, CarPlay.CPRouteChoice routeChoice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectedPreview(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPTrip trip, class CarPlay.CPRouteChoice routeChoice) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.SelectedPreview(CarPlay.CPMapTemplate,CarPlay.CPTrip,CarPlay.CPRouteChoice)" />
      <MemberSignature Language="F#" Value="abstract member SelectedPreview : CarPlay.CPMapTemplate * CarPlay.CPTrip * CarPlay.CPRouteChoice -&gt; unit&#xA;override this.SelectedPreview : CarPlay.CPMapTemplate * CarPlay.CPTrip * CarPlay.CPRouteChoice -&gt; unit" Usage="cPMapTemplateDelegate.SelectedPreview (mapTemplate, trip, routeChoice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:selectedPreviewForTrip:usingRouteChoice:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="trip" Type="CarPlay.CPTrip" />
        <Parameter Name="routeChoice" Type="CarPlay.CPRouteChoice" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="trip">To be added.</param>
        <param name="routeChoice">To be added.</param>
        <summary>The system calls this method after <paramref name="routeChoice" /> has been made. The developer should create a preview.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldShowNotificationForManeuver">
      <MemberSignature Language="C#" Value="public virtual bool ShouldShowNotificationForManeuver (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPManeuver maneuver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldShowNotificationForManeuver(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPManeuver maneuver) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.ShouldShowNotificationForManeuver(CarPlay.CPMapTemplate,CarPlay.CPManeuver)" />
      <MemberSignature Language="F#" Value="abstract member ShouldShowNotificationForManeuver : CarPlay.CPMapTemplate * CarPlay.CPManeuver -&gt; bool&#xA;override this.ShouldShowNotificationForManeuver : CarPlay.CPMapTemplate * CarPlay.CPManeuver -&gt; bool" Usage="cPMapTemplateDelegate.ShouldShowNotificationForManeuver (mapTemplate, maneuver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:shouldShowNotificationForManeuver:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="maneuver" Type="CarPlay.CPManeuver" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="maneuver">To be added.</param>
        <summary>Developers should override this method to return <see langword="true" /> if the system should show a notification for <paramref name="maneuver" /> even when the app is in the background.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldShowNotificationForNavigationAlert">
      <MemberSignature Language="C#" Value="public virtual bool ShouldShowNotificationForNavigationAlert (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPNavigationAlert navigationAlert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldShowNotificationForNavigationAlert(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPNavigationAlert navigationAlert) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.ShouldShowNotificationForNavigationAlert(CarPlay.CPMapTemplate,CarPlay.CPNavigationAlert)" />
      <MemberSignature Language="F#" Value="abstract member ShouldShowNotificationForNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert -&gt; bool&#xA;override this.ShouldShowNotificationForNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert -&gt; bool" Usage="cPMapTemplateDelegate.ShouldShowNotificationForNavigationAlert (mapTemplate, navigationAlert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:shouldShowNotificationForNavigationAlert:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="navigationAlert" Type="CarPlay.CPNavigationAlert" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="navigationAlert">To be added.</param>
        <summary>Developers should override this method to return <see langword="true" /> if the system should show <paramref name="navigationAlert" /> even when the app is in the background.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUpdateNotificationForManeuver">
      <MemberSignature Language="C#" Value="public virtual bool ShouldUpdateNotificationForManeuver (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPManeuver maneuver, CarPlay.CPTravelEstimates travelEstimates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldUpdateNotificationForManeuver(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPManeuver maneuver, class CarPlay.CPTravelEstimates travelEstimates) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.ShouldUpdateNotificationForManeuver(CarPlay.CPMapTemplate,CarPlay.CPManeuver,CarPlay.CPTravelEstimates)" />
      <MemberSignature Language="F#" Value="abstract member ShouldUpdateNotificationForManeuver : CarPlay.CPMapTemplate * CarPlay.CPManeuver * CarPlay.CPTravelEstimates -&gt; bool&#xA;override this.ShouldUpdateNotificationForManeuver : CarPlay.CPMapTemplate * CarPlay.CPManeuver * CarPlay.CPTravelEstimates -&gt; bool" Usage="cPMapTemplateDelegate.ShouldUpdateNotificationForManeuver (mapTemplate, maneuver, travelEstimates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:shouldUpdateNotificationForManeuver:withTravelEstimates:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="maneuver" Type="CarPlay.CPManeuver" />
        <Parameter Name="travelEstimates" Type="CarPlay.CPTravelEstimates" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="maneuver">To be added.</param>
        <param name="travelEstimates">To be added.</param>
        <summary>Developers should override this method to return <see langword="true" /> if the system should update notifications with <paramref name="travelEstimates" /> even when the app is in the background.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartedTrip">
      <MemberSignature Language="C#" Value="public virtual void StartedTrip (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPTrip trip, CarPlay.CPRouteChoice routeChoice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartedTrip(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPTrip trip, class CarPlay.CPRouteChoice routeChoice) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.StartedTrip(CarPlay.CPMapTemplate,CarPlay.CPTrip,CarPlay.CPRouteChoice)" />
      <MemberSignature Language="F#" Value="abstract member StartedTrip : CarPlay.CPMapTemplate * CarPlay.CPTrip * CarPlay.CPRouteChoice -&gt; unit&#xA;override this.StartedTrip : CarPlay.CPMapTemplate * CarPlay.CPTrip * CarPlay.CPRouteChoice -&gt; unit" Usage="cPMapTemplateDelegate.StartedTrip (mapTemplate, trip, routeChoice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:startedTrip:usingRouteChoice:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="trip" Type="CarPlay.CPTrip" />
        <Parameter Name="routeChoice" Type="CarPlay.CPRouteChoice" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="trip">To be added.</param>
        <param name="routeChoice">To be added.</param>
        <summary>The system calls this method shortly after the trip has started.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDismissNavigationAlert">
      <MemberSignature Language="C#" Value="public virtual void WillDismissNavigationAlert (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPNavigationAlert navigationAlert, CarPlay.CPNavigationAlertDismissalContext dismissalContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillDismissNavigationAlert(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPNavigationAlert navigationAlert, valuetype CarPlay.CPNavigationAlertDismissalContext dismissalContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.WillDismissNavigationAlert(CarPlay.CPMapTemplate,CarPlay.CPNavigationAlert,CarPlay.CPNavigationAlertDismissalContext)" />
      <MemberSignature Language="F#" Value="abstract member WillDismissNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert * CarPlay.CPNavigationAlertDismissalContext -&gt; unit&#xA;override this.WillDismissNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert * CarPlay.CPNavigationAlertDismissalContext -&gt; unit" Usage="cPMapTemplateDelegate.WillDismissNavigationAlert (mapTemplate, navigationAlert, dismissalContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:willDismissNavigationAlert:dismissalContext:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="navigationAlert" Type="CarPlay.CPNavigationAlert" />
        <Parameter Name="dismissalContext" Type="CarPlay.CPNavigationAlertDismissalContext" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="navigationAlert">To be added.</param>
        <param name="dismissalContext">To be added.</param>
        <summary>The system calls this method before dismissing the <paramref name="DidShowNavigationAlert" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDismissPanningInterface">
      <MemberSignature Language="C#" Value="public virtual void WillDismissPanningInterface (CarPlay.CPMapTemplate mapTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillDismissPanningInterface(class CarPlay.CPMapTemplate mapTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.WillDismissPanningInterface(CarPlay.CPMapTemplate)" />
      <MemberSignature Language="F#" Value="abstract member WillDismissPanningInterface : CarPlay.CPMapTemplate -&gt; unit&#xA;override this.WillDismissPanningInterface : CarPlay.CPMapTemplate -&gt; unit" Usage="cPMapTemplateDelegate.WillDismissPanningInterface mapTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplateWillDismissPanningInterface:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <summary>The system calls this method before dismissing the panning interface.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillShowNavigationAlert">
      <MemberSignature Language="C#" Value="public virtual void WillShowNavigationAlert (CarPlay.CPMapTemplate mapTemplate, CarPlay.CPNavigationAlert navigationAlert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillShowNavigationAlert(class CarPlay.CPMapTemplate mapTemplate, class CarPlay.CPNavigationAlert navigationAlert) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplateDelegate.WillShowNavigationAlert(CarPlay.CPMapTemplate,CarPlay.CPNavigationAlert)" />
      <MemberSignature Language="F#" Value="abstract member WillShowNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert -&gt; unit&#xA;override this.WillShowNavigationAlert : CarPlay.CPMapTemplate * CarPlay.CPNavigationAlert -&gt; unit" Usage="cPMapTemplateDelegate.WillShowNavigationAlert (mapTemplate, navigationAlert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("mapTemplate:willShowNavigationAlert:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapTemplate" Type="CarPlay.CPMapTemplate" />
        <Parameter Name="navigationAlert" Type="CarPlay.CPNavigationAlert" />
      </Parameters>
      <Docs>
        <param name="mapTemplate">To be added.</param>
        <param name="navigationAlert">To be added.</param>
        <summary>The system calls this method shortly before showing the <paramref name="navigationAlert" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
