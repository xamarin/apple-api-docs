<Type Name="CPMapTemplate" FullName="CarPlay.CPMapTemplate">
  <TypeSignature Language="C#" Value="public class CPMapTemplate : CarPlay.CPTemplate, CarPlay.ICPBarButtonProviding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CPMapTemplate extends CarPlay.CPTemplate implements class CarPlay.ICPBarButtonProviding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CarPlay.CPMapTemplate" />
  <TypeSignature Language="F#" Value="type CPMapTemplate = class&#xA;    inherit CPTemplate&#xA;    interface ICPBarButtonProviding&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CarPlay.CPTemplate</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CarPlay.ICPBarButtonProviding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("CPMapTemplate", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:CarPlay.CPTemplate" /> subclass that displays a map.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPMapTemplate (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new CarPlay.CPMapTemplate : Foundation.NSCoder -&gt; CarPlay.CPMapTemplate" Usage="new CarPlay.CPMapTemplate coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CPMapTemplate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CarPlay.CPMapTemplate : Foundation.NSObjectFlag -&gt; CarPlay.CPMapTemplate" Usage="new CarPlay.CPMapTemplate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CPMapTemplate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CarPlay.CPMapTemplate : nativeint -&gt; CarPlay.CPMapTemplate" Usage="new CarPlay.CPMapTemplate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyHidesNavigationBar">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticallyHidesNavigationBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyHidesNavigationBar" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.AutomaticallyHidesNavigationBar" />
      <MemberSignature Language="F#" Value="member this.AutomaticallyHidesNavigationBar : bool with get, set" Usage="CarPlay.CPMapTemplate.AutomaticallyHidesNavigationBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("automaticallyHidesNavigationBar")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setAutomaticallyHidesNavigationBar:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value that, if <see langword="true" />, has the system automatically hide the navigation bar.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="CarPlay.CPMapTemplate.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentNavigationAlert">
      <MemberSignature Language="C#" Value="public virtual CarPlay.CPNavigationAlert CurrentNavigationAlert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CarPlay.CPNavigationAlert CurrentNavigationAlert" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.CurrentNavigationAlert" />
      <MemberSignature Language="F#" Value="member this.CurrentNavigationAlert : CarPlay.CPNavigationAlert" Usage="CarPlay.CPMapTemplate.CurrentNavigationAlert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("currentNavigationAlert")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("currentNavigationAlert", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CarPlay.CPNavigationAlert</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the currently display <see cref="T:CarPlay.CPNavigationAlert" /> or <see langword="null" />.</summary>
        <value>This method may return <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissNavigationAlert">
      <MemberSignature Language="C#" Value="public virtual void DismissNavigationAlert (bool animated, Action&lt;bool&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DismissNavigationAlert(bool animated, class System.Action`1&lt;bool&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.DismissNavigationAlert(System.Boolean,System.Action{System.Boolean})" />
      <MemberSignature Language="F#" Value="abstract member DismissNavigationAlert : bool * Action&lt;bool&gt; -&gt; unit&#xA;override this.DismissNavigationAlert : bool * Action&lt;bool&gt; -&gt; unit" Usage="cPMapTemplate.DismissNavigationAlert (animated, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("dismissNavigationAlertAnimated:completion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animated" Type="System.Boolean" />
        <Parameter Name="completion" Type="System.Action&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V2))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="animated">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>Dismisses the current navigation alert and calls <paramref name="completion" /> afterwards.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissNavigationAlertAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; DismissNavigationAlertAsync (bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; DismissNavigationAlertAsync(bool animated) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.DismissNavigationAlertAsync(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DismissNavigationAlertAsync : bool -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.DismissNavigationAlertAsync : bool -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cPMapTemplate.DismissNavigationAlertAsync animated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="animated">To be added.</param>
        <summary>Asynchronously dismisses the animation.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissPanningInterface">
      <MemberSignature Language="C#" Value="public virtual void DismissPanningInterface (bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DismissPanningInterface(bool animated) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.DismissPanningInterface(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DismissPanningInterface : bool -&gt; unit&#xA;override this.DismissPanningInterface : bool -&gt; unit" Usage="cPMapTemplate.DismissPanningInterface animated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("dismissPanningInterfaceAnimated:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="animated">To be added.</param>
        <summary>Dismisses the panning interface.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="cPMapTemplate.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CPMapTemplate object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CPMapTemplate class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CPMapTemplate ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GuidanceBackgroundColor">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIColor GuidanceBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor GuidanceBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.GuidanceBackgroundColor" />
      <MemberSignature Language="F#" Value="member this.GuidanceBackgroundColor : UIKit.UIColor with get, set" Usage="CarPlay.CPMapTemplate.GuidanceBackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("guidanceBackgroundColor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setGuidanceBackgroundColor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("guidanceBackgroundColor", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setGuidanceBackgroundColor:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesButtonsWithNavigationBar">
      <MemberSignature Language="C#" Value="public virtual bool HidesButtonsWithNavigationBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesButtonsWithNavigationBar" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.HidesButtonsWithNavigationBar" />
      <MemberSignature Language="F#" Value="member this.HidesButtonsWithNavigationBar : bool with get, set" Usage="CarPlay.CPMapTemplate.HidesButtonsWithNavigationBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("hidesButtonsWithNavigationBar")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setHidesButtonsWithNavigationBar:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get or sets the value that, if <see langword="true" />, indicates that buttons should be hidden when the navigation bar is.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HideTripPreviews">
      <MemberSignature Language="C#" Value="public virtual void HideTripPreviews ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HideTripPreviews() cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.HideTripPreviews" />
      <MemberSignature Language="F#" Value="abstract member HideTripPreviews : unit -&gt; unit&#xA;override this.HideTripPreviews : unit -&gt; unit" Usage="cPMapTemplate.HideTripPreviews " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("hideTripPreviews")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Developers call this to indicate that trip previews should not be displayed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingNavigationBarButtons">
      <MemberSignature Language="C#" Value="public virtual CarPlay.CPBarButton[] LeadingNavigationBarButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CarPlay.CPBarButton[] LeadingNavigationBarButtons" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.LeadingNavigationBarButtons" />
      <MemberSignature Language="F#" Value="member this.LeadingNavigationBarButtons : CarPlay.CPBarButton[] with get, set" Usage="CarPlay.CPMapTemplate.LeadingNavigationBarButtons" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:CarPlay.ICPBarButtonProviding.LeadingNavigationBarButtons</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("leadingNavigationBarButtons")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setLeadingNavigationBarButtons:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("leadingNavigationBarButtons", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setLeadingNavigationBarButtons:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CarPlay.CPBarButton[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the buttons that precede the navigation bar.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapButtons">
      <MemberSignature Language="C#" Value="public virtual CarPlay.CPMapButton[] MapButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CarPlay.CPMapButton[] MapButtons" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.MapButtons" />
      <MemberSignature Language="F#" Value="member this.MapButtons : CarPlay.CPMapButton[] with get, set" Usage="CarPlay.CPMapTemplate.MapButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("mapButtons")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setMapButtons:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("mapButtons", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMapButtons:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CarPlay.CPMapButton[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the buttons displayed on the map.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapDelegate">
      <MemberSignature Language="C#" Value="public CarPlay.ICPMapTemplateDelegate MapDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CarPlay.ICPMapTemplateDelegate MapDelegate" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.MapDelegate" />
      <MemberSignature Language="F#" Value="member this.MapDelegate : CarPlay.ICPMapTemplateDelegate with get, set" Usage="CarPlay.CPMapTemplate.MapDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CarPlay.ICPMapTemplateDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the delegate object for the map.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PanningInterfaceVisible">
      <MemberSignature Language="C#" Value="public virtual bool PanningInterfaceVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PanningInterfaceVisible" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.PanningInterfaceVisible" />
      <MemberSignature Language="F#" Value="member this.PanningInterfaceVisible : bool" Usage="CarPlay.CPMapTemplate.PanningInterfaceVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isPanningInterfaceVisible")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentNavigationAlert">
      <MemberSignature Language="C#" Value="public virtual void PresentNavigationAlert (CarPlay.CPNavigationAlert navigationAlert, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PresentNavigationAlert(class CarPlay.CPNavigationAlert navigationAlert, bool animated) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.PresentNavigationAlert(CarPlay.CPNavigationAlert,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member PresentNavigationAlert : CarPlay.CPNavigationAlert * bool -&gt; unit&#xA;override this.PresentNavigationAlert : CarPlay.CPNavigationAlert * bool -&gt; unit" Usage="cPMapTemplate.PresentNavigationAlert (navigationAlert, animated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("presentNavigationAlert:animated:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationAlert" Type="CarPlay.CPNavigationAlert" />
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigationAlert">To be added.</param>
        <param name="animated">To be added.</param>
        <summary>Developers call this method to display <paramref name="navigationAlert" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPanningInterface">
      <MemberSignature Language="C#" Value="public virtual void ShowPanningInterface (bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowPanningInterface(bool animated) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.ShowPanningInterface(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ShowPanningInterface : bool -&gt; unit&#xA;override this.ShowPanningInterface : bool -&gt; unit" Usage="cPMapTemplate.ShowPanningInterface animated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("showPanningInterfaceAnimated:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="animated">To be added.</param>
        <summary>Brings up the panning interface.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRouteChoicesPreview">
      <MemberSignature Language="C#" Value="public virtual void ShowRouteChoicesPreview (CarPlay.CPTrip tripPreview, CarPlay.CPTripPreviewTextConfiguration textConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowRouteChoicesPreview(class CarPlay.CPTrip tripPreview, class CarPlay.CPTripPreviewTextConfiguration textConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.ShowRouteChoicesPreview(CarPlay.CPTrip,CarPlay.CPTripPreviewTextConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member ShowRouteChoicesPreview : CarPlay.CPTrip * CarPlay.CPTripPreviewTextConfiguration -&gt; unit&#xA;override this.ShowRouteChoicesPreview : CarPlay.CPTrip * CarPlay.CPTripPreviewTextConfiguration -&gt; unit" Usage="cPMapTemplate.ShowRouteChoicesPreview (tripPreview, textConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("showRouteChoicesPreviewForTrip:textConfiguration:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tripPreview" Type="CarPlay.CPTrip" />
        <Parameter Name="textConfiguration" Type="CarPlay.CPTripPreviewTextConfiguration" />
      </Parameters>
      <Docs>
        <param name="tripPreview">To be added.</param>
        <param name="textConfiguration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTripPreviews">
      <MemberSignature Language="C#" Value="public virtual void ShowTripPreviews (CarPlay.CPTrip[] tripPreviews, CarPlay.CPTripPreviewTextConfiguration textConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowTripPreviews(class CarPlay.CPTrip[] tripPreviews, class CarPlay.CPTripPreviewTextConfiguration textConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.ShowTripPreviews(CarPlay.CPTrip[],CarPlay.CPTripPreviewTextConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member ShowTripPreviews : CarPlay.CPTrip[] * CarPlay.CPTripPreviewTextConfiguration -&gt; unit&#xA;override this.ShowTripPreviews : CarPlay.CPTrip[] * CarPlay.CPTripPreviewTextConfiguration -&gt; unit" Usage="cPMapTemplate.ShowTripPreviews (tripPreviews, textConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("showTripPreviews:textConfiguration:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tripPreviews" Type="CarPlay.CPTrip[]" />
        <Parameter Name="textConfiguration" Type="CarPlay.CPTripPreviewTextConfiguration" />
      </Parameters>
      <Docs>
        <param name="tripPreviews">To be added.</param>
        <param name="textConfiguration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNavigationSession">
      <MemberSignature Language="C#" Value="public virtual CarPlay.CPNavigationSession StartNavigationSession (CarPlay.CPTrip trip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CarPlay.CPNavigationSession StartNavigationSession(class CarPlay.CPTrip trip) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.StartNavigationSession(CarPlay.CPTrip)" />
      <MemberSignature Language="F#" Value="abstract member StartNavigationSession : CarPlay.CPTrip -&gt; CarPlay.CPNavigationSession&#xA;override this.StartNavigationSession : CarPlay.CPTrip -&gt; CarPlay.CPNavigationSession" Usage="cPMapTemplate.StartNavigationSession trip" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("startNavigationSessionForTrip:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CarPlay.CPNavigationSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trip" Type="CarPlay.CPTrip" />
      </Parameters>
      <Docs>
        <param name="trip">To be added.</param>
        <summary>Begins navigation for the <paramref name="trip" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingNavigationBarButtons">
      <MemberSignature Language="C#" Value="public virtual CarPlay.CPBarButton[] TrailingNavigationBarButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CarPlay.CPBarButton[] TrailingNavigationBarButtons" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.TrailingNavigationBarButtons" />
      <MemberSignature Language="F#" Value="member this.TrailingNavigationBarButtons : CarPlay.CPBarButton[] with get, set" Usage="CarPlay.CPMapTemplate.TrailingNavigationBarButtons" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:CarPlay.ICPBarButtonProviding.TrailingNavigationBarButtons</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("trailingNavigationBarButtons")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setTrailingNavigationBarButtons:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("trailingNavigationBarButtons", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setTrailingNavigationBarButtons:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CarPlay.CPBarButton[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the buttons that trail the navigation bar.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TripEstimateStyle">
      <MemberSignature Language="C#" Value="public virtual CarPlay.CPTripEstimateStyle TripEstimateStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CarPlay.CPTripEstimateStyle TripEstimateStyle" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.TripEstimateStyle" />
      <MemberSignature Language="F#" Value="member this.TripEstimateStyle : CarPlay.CPTripEstimateStyle with get, set" Usage="CarPlay.CPMapTemplate.TripEstimateStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("tripEstimateStyle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setTripEstimateStyle:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("tripEstimateStyle", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setTripEstimateStyle:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CarPlay.CPTripEstimateStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTravelEstimates">
      <MemberSignature Language="C#" Value="public virtual void UpdateTravelEstimates (CarPlay.CPTravelEstimates estimates, CarPlay.CPTrip trip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTravelEstimates(class CarPlay.CPTravelEstimates estimates, class CarPlay.CPTrip trip) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.UpdateTravelEstimates(CarPlay.CPTravelEstimates,CarPlay.CPTrip)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTravelEstimates : CarPlay.CPTravelEstimates * CarPlay.CPTrip -&gt; unit&#xA;override this.UpdateTravelEstimates : CarPlay.CPTravelEstimates * CarPlay.CPTrip -&gt; unit" Usage="cPMapTemplate.UpdateTravelEstimates (estimates, trip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("updateTravelEstimates:forTrip:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="estimates" Type="CarPlay.CPTravelEstimates" />
        <Parameter Name="trip" Type="CarPlay.CPTrip" />
      </Parameters>
      <Docs>
        <param name="estimates">The improved time and distance estimates.</param>
        <param name="trip">The trip to which the estimates should be applied.</param>
        <summary>Modifies the time and distance estimate for <paramref name="trip" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTravelEstimates">
      <MemberSignature Language="C#" Value="public virtual void UpdateTravelEstimates (CarPlay.CPTravelEstimates estimates, CarPlay.CPTrip trip, CarPlay.CPTimeRemainingColor timeRemainingColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTravelEstimates(class CarPlay.CPTravelEstimates estimates, class CarPlay.CPTrip trip, valuetype CarPlay.CPTimeRemainingColor timeRemainingColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:CarPlay.CPMapTemplate.UpdateTravelEstimates(CarPlay.CPTravelEstimates,CarPlay.CPTrip,CarPlay.CPTimeRemainingColor)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTravelEstimates : CarPlay.CPTravelEstimates * CarPlay.CPTrip * CarPlay.CPTimeRemainingColor -&gt; unit&#xA;override this.UpdateTravelEstimates : CarPlay.CPTravelEstimates * CarPlay.CPTrip * CarPlay.CPTimeRemainingColor -&gt; unit" Usage="cPMapTemplate.UpdateTravelEstimates (estimates, trip, timeRemainingColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("updateTravelEstimates:forTrip:withTimeRemainingColor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="estimates" Type="CarPlay.CPTravelEstimates" />
        <Parameter Name="trip" Type="CarPlay.CPTrip" />
        <Parameter Name="timeRemainingColor" Type="CarPlay.CPTimeRemainingColor" />
      </Parameters>
      <Docs>
        <param name="estimates">To be added.</param>
        <param name="trip">To be added.</param>
        <param name="timeRemainingColor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakMapDelegate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WeakMapDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject WeakMapDelegate" />
      <MemberSignature Language="DocId" Value="P:CarPlay.CPMapTemplate.WeakMapDelegate" />
      <MemberSignature Language="F#" Value="member this.WeakMapDelegate : Foundation.NSObject with get, set" Usage="CarPlay.CPMapTemplate.WeakMapDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("mapDelegate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setMapDelegate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("mapDelegate", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMapDelegate:", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
