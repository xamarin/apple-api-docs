<Type Name="HMHomeDelegate" FullName="MonoTouch.HomeKit.HMHomeDelegate">
  <TypeSignature Language="C#" Value="public class HMHomeDelegate : MonoTouch.Foundation.NSObject, IDisposable, MonoTouch.HomeKit.IHMHomeDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMHomeDelegate extends MonoTouch.Foundation.NSObject implements class MonoTouch.HomeKit.IHMHomeDelegate, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="old">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="new">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.HomeKit.IHMHomeDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("HMHomeDelegate", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_8_0)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate object for <see cref="T:MonoTouch.HomeKit.HMHome" /> objects, providing methods that can be overridden to react to events relating to additions, subtractions, and updates of various Home Kit objects.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMHomeDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMHomeDelegate (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMHomeDelegate (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When you invoke the constructor that takes the NSObjectFlag.Empty you taking advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to you.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is your responsibility to completely initialize the object if you chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if your constructors invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, you should instead chain to the proper constructor in your class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMHomeDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoTouch.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddAccessory">
      <MemberSignature Language="C#" Value="public virtual void DidAddAccessory (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMAccessory accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddAccessory(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didAddAccessory:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="accessory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddActionSet">
      <MemberSignature Language="C#" Value="public virtual void DidAddActionSet (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMActionSet actionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddActionSet(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMActionSet actionSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didAddActionSet:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="actionSet">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddRoom">
      <MemberSignature Language="C#" Value="public virtual void DidAddRoom (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddRoom(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didAddRoom:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="room">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddRoomToZone">
      <MemberSignature Language="C#" Value="public virtual void DidAddRoomToZone (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room, MonoTouch.HomeKit.HMZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddRoomToZone(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room, class MonoTouch.HomeKit.HMZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didAddRoom:toZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="room">To be added.</param>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddServiceGroup">
      <MemberSignature Language="C#" Value="public virtual void DidAddServiceGroup (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMServiceGroup serviceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddServiceGroup(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMServiceGroup serviceGroup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didAddServiceGroup:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="serviceGroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddServiceToServiceGroup">
      <MemberSignature Language="C#" Value="public virtual void DidAddServiceToServiceGroup (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMService service, MonoTouch.HomeKit.HMServiceGroup serviceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddServiceToServiceGroup(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMService service, class MonoTouch.HomeKit.HMServiceGroup serviceGroup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didAddService:toServiceGroup:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
        <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="service">To be added.</param>
        <param name="serviceGroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddTrigger">
      <MemberSignature Language="C#" Value="public virtual void DidAddTrigger (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddTrigger(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMTrigger trigger) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didAddTrigger:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="trigger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddZone">
      <MemberSignature Language="C#" Value="public virtual void DidAddZone (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddZone(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didAddZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEncounterError">
      <MemberSignature Language="C#" Value="public virtual void DidEncounterError (MonoTouch.HomeKit.HMHome home, MonoTouch.Foundation.NSError error, MonoTouch.HomeKit.HMAccessory accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEncounterError(class MonoTouch.HomeKit.HMHome home, class MonoTouch.Foundation.NSError error, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didEncounterError:forAccessory:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="error">To be added.</param>
        <param name="accessory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveAccessory">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveAccessory (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMAccessory accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveAccessory(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didRemoveAccessory:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="accessory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveActionSet">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveActionSet (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMActionSet actionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveActionSet(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMActionSet actionSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didRemoveActionSet:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="actionSet">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveRoom">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveRoom (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveRoom(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didRemoveRoom:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="room">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveRoomFromZone">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveRoomFromZone (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room, MonoTouch.HomeKit.HMZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveRoomFromZone(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room, class MonoTouch.HomeKit.HMZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didRemoveRoom:fromZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="room">To be added.</param>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveServiceFromServiceGroup">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveServiceFromServiceGroup (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMService service, MonoTouch.HomeKit.HMServiceGroup serviceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveServiceFromServiceGroup(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMService service, class MonoTouch.HomeKit.HMServiceGroup serviceGroup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didRemoveService:fromServiceGroup:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
        <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="service">To be added.</param>
        <param name="serviceGroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveServiceGroup">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveServiceGroup (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMServiceGroup serviceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveServiceGroup(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMServiceGroup serviceGroup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didRemoveServiceGroup:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="serviceGroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveTrigger">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveTrigger (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveTrigger(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMTrigger trigger) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didRemoveTrigger:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="trigger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveZone">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveZone (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveZone(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didRemoveZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateActionsForActionSet">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateActionsForActionSet (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMActionSet actionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateActionsForActionSet(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMActionSet actionSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didUpdateActionsForActionSet:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="actionSet">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateName">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateName (MonoTouch.HomeKit.HMHome home);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateName(class MonoTouch.HomeKit.HMHome home) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("homeDidUpdateName:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateNameForActionSet">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateNameForActionSet (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMActionSet actionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateNameForActionSet(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMActionSet actionSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didUpdateNameForActionSet:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="actionSet">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateNameForRoom">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateNameForRoom (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateNameForRoom(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didUpdateNameForRoom:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="room">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateNameForServiceGroup">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateNameForServiceGroup (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMServiceGroup serviceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateNameForServiceGroup(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMServiceGroup serviceGroup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didUpdateNameForServiceGroup:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="serviceGroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateNameForTrigger">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateNameForTrigger (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateNameForTrigger(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMTrigger trigger) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didUpdateNameForTrigger:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="trigger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateNameForZone">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateNameForZone (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateNameForZone(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didUpdateNameForZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="zone">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateRoom">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateRoom (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room, MonoTouch.HomeKit.HMAccessory accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateRoom(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didUpdateRoom:forAccessory:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="room">To be added.</param>
        <param name="accessory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateTrigger">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateTrigger (MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateTrigger(class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMTrigger trigger) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("home:didUpdateTrigger:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
      </Parameters>
      <Docs>
        <param name="home">To be added.</param>
        <param name="trigger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
