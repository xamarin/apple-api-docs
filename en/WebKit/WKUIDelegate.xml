<Type Name="WKUIDelegate" FullName="WebKit.WKUIDelegate">
  <TypeSignature Language="C#" Value="public class WKUIDelegate : Foundation.NSObject, IDisposable, WebKit.IWKUIDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WKUIDelegate extends Foundation.NSObject implements class ObjCRuntime.INativeObject, class System.IDisposable, class WebKit.IWKUIDelegate" />
  <TypeSignature Language="DocId" Value="T:WebKit.WKUIDelegate" />
  <TypeSignature Language="F#" Value="type WKUIDelegate = class&#xA;    inherit NSObject&#xA;    interface IWKUIDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>WebKit.IWKUIDelegate</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("WKUIDelegate", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A delegate object that allows presenting native UI elements on behalf of a Web page.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/WebKit/Reference/WKUIDelegate_Ref/index.html">Apple documentation for <c>WKUIDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WKUIDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WKUIDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new WebKit.WKUIDelegate : Foundation.NSObjectFlag -&gt; WebKit.WKUIDelegate" Usage="new WebKit.WKUIDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WKUIDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new WebKit.WKUIDelegate : nativeint -&gt; WebKit.WKUIDelegate" Usage="new WebKit.WKUIDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitPreviewingViewController">
      <MemberSignature Language="C#" Value="public virtual void CommitPreviewingViewController (WebKit.WKWebView webView, UIKit.UIViewController previewingViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitPreviewingViewController(class WebKit.WKWebView webView, class UIKit.UIViewController previewingViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.CommitPreviewingViewController(WebKit.WKWebView,UIKit.UIViewController)" />
      <MemberSignature Language="F#" Value="abstract member CommitPreviewingViewController : WebKit.WKWebView * UIKit.UIViewController -&gt; unit&#xA;override this.CommitPreviewingViewController : WebKit.WKWebView * UIKit.UIViewController -&gt; unit" Usage="wKUIDelegate.CommitPreviewingViewController (webView, previewingViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("webView:commitPreviewingViewController:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webView" Type="WebKit.WKWebView" />
        <Parameter Name="previewingViewController" Type="UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="webView">To be added.</param>
        <param name="previewingViewController">To be added.</param>
        <summary>Method that is called to respond when the user pops a preview action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWebView">
      <MemberSignature Language="C#" Value="public virtual WebKit.WKWebView CreateWebView (WebKit.WKWebView webView, WebKit.WKWebViewConfiguration configuration, WebKit.WKNavigationAction navigationAction, WebKit.WKWindowFeatures windowFeatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class WebKit.WKWebView CreateWebView(class WebKit.WKWebView webView, class WebKit.WKWebViewConfiguration configuration, class WebKit.WKNavigationAction navigationAction, class WebKit.WKWindowFeatures windowFeatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.CreateWebView(WebKit.WKWebView,WebKit.WKWebViewConfiguration,WebKit.WKNavigationAction,WebKit.WKWindowFeatures)" />
      <MemberSignature Language="F#" Value="abstract member CreateWebView : WebKit.WKWebView * WebKit.WKWebViewConfiguration * WebKit.WKNavigationAction * WebKit.WKWindowFeatures -&gt; WebKit.WKWebView&#xA;override this.CreateWebView : WebKit.WKWebView * WebKit.WKWebViewConfiguration * WebKit.WKNavigationAction * WebKit.WKWindowFeatures -&gt; WebKit.WKWebView" Usage="wKUIDelegate.CreateWebView (webView, configuration, navigationAction, windowFeatures)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebKit.WKWebView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webView" Type="WebKit.WKWebView" />
        <Parameter Name="configuration" Type="WebKit.WKWebViewConfiguration" />
        <Parameter Name="navigationAction" Type="WebKit.WKNavigationAction" />
        <Parameter Name="windowFeatures" Type="WebKit.WKWindowFeatures" />
      </Parameters>
      <Docs>
        <param name="webView">To be added.</param>
        <param name="configuration">To be added.</param>
        <param name="navigationAction">To be added.</param>
        <param name="windowFeatures">To be added.</param>
        <summary>Creates and configures a new <see cref="T:WebKit.WKWebView" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidClose">
      <MemberSignature Language="C#" Value="public virtual void DidClose (WebKit.WKWebView webView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidClose(class WebKit.WKWebView webView) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.DidClose(WebKit.WKWebView)" />
      <MemberSignature Language="F#" Value="abstract member DidClose : WebKit.WKWebView -&gt; unit&#xA;override this.DidClose : WebKit.WKWebView -&gt; unit" Usage="wKUIDelegate.DidClose webView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("webViewDidClose:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webView" Type="WebKit.WKWebView" />
      </Parameters>
      <Docs>
        <param name="webView">To be added.</param>
        <summary>Called shortly after the DOM window closed successfully.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviewingViewController">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIViewController GetPreviewingViewController (WebKit.WKWebView webView, WebKit.WKPreviewElementInfo elementInfo, WebKit.IWKPreviewActionItem[] previewActions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIViewController GetPreviewingViewController(class WebKit.WKWebView webView, class WebKit.WKPreviewElementInfo elementInfo, class WebKit.IWKPreviewActionItem[] previewActions) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.GetPreviewingViewController(WebKit.WKWebView,WebKit.WKPreviewElementInfo,WebKit.IWKPreviewActionItem[])" />
      <MemberSignature Language="F#" Value="abstract member GetPreviewingViewController : WebKit.WKWebView * WebKit.WKPreviewElementInfo * WebKit.IWKPreviewActionItem[] -&gt; UIKit.UIViewController&#xA;override this.GetPreviewingViewController : WebKit.WKWebView * WebKit.WKPreviewElementInfo * WebKit.IWKPreviewActionItem[] -&gt; UIKit.UIViewController" Usage="wKUIDelegate.GetPreviewingViewController (webView, elementInfo, previewActions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("webView:previewingViewControllerForElement:defaultActions:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIViewController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webView" Type="WebKit.WKWebView" />
        <Parameter Name="elementInfo" Type="WebKit.WKPreviewElementInfo" />
        <Parameter Name="previewActions" Type="WebKit.IWKPreviewActionItem[]" />
      </Parameters>
      <Docs>
        <param name="webView">To be added.</param>
        <param name="elementInfo">To be added.</param>
        <param name="previewActions">To be added.</param>
        <summary>Method that is called when the user peeks at content.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunJavaScriptAlertPanel">
      <MemberSignature Language="C#" Value="public virtual void RunJavaScriptAlertPanel (WebKit.WKWebView webView, string message, WebKit.WKFrameInfo frame, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunJavaScriptAlertPanel(class WebKit.WKWebView webView, string message, class WebKit.WKFrameInfo frame, class System.Action completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.RunJavaScriptAlertPanel(WebKit.WKWebView,System.String,WebKit.WKFrameInfo,System.Action)" />
      <MemberSignature Language="F#" Value="abstract member RunJavaScriptAlertPanel : WebKit.WKWebView * string * WebKit.WKFrameInfo * Action -&gt; unit&#xA;override this.RunJavaScriptAlertPanel : WebKit.WKWebView * string * WebKit.WKFrameInfo * Action -&gt; unit" Usage="wKUIDelegate.RunJavaScriptAlertPanel (webView, message, frame, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webView" Type="WebKit.WKWebView" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="frame" Type="WebKit.WKFrameInfo" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="webView">To be added.</param>
        <param name="message">To be added.</param>
        <param name="frame">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Shows a JavaScript alert to the user.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunJavaScriptConfirmPanel">
      <MemberSignature Language="C#" Value="public virtual void RunJavaScriptConfirmPanel (WebKit.WKWebView webView, string message, WebKit.WKFrameInfo frame, Action&lt;bool&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunJavaScriptConfirmPanel(class WebKit.WKWebView webView, string message, class WebKit.WKFrameInfo frame, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.RunJavaScriptConfirmPanel(WebKit.WKWebView,System.String,WebKit.WKFrameInfo,System.Action{System.Boolean})" />
      <MemberSignature Language="F#" Value="abstract member RunJavaScriptConfirmPanel : WebKit.WKWebView * string * WebKit.WKFrameInfo * Action&lt;bool&gt; -&gt; unit&#xA;override this.RunJavaScriptConfirmPanel : WebKit.WKWebView * string * WebKit.WKFrameInfo * Action&lt;bool&gt; -&gt; unit" Usage="wKUIDelegate.RunJavaScriptConfirmPanel (webView, message, frame, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webView" Type="WebKit.WKWebView" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="frame" Type="WebKit.WKFrameInfo" />
        <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V12))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="webView">To be added.</param>
        <param name="message">To be added.</param>
        <param name="frame">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Shows a JavaScript confirmation dialog to the user.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunJavaScriptTextInputPanel">
      <MemberSignature Language="C#" Value="public virtual void RunJavaScriptTextInputPanel (WebKit.WKWebView webView, string prompt, string defaultText, WebKit.WKFrameInfo frame, Action&lt;string&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunJavaScriptTextInputPanel(class WebKit.WKWebView webView, string prompt, string defaultText, class WebKit.WKFrameInfo frame, class System.Action`1&lt;string&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.RunJavaScriptTextInputPanel(WebKit.WKWebView,System.String,System.String,WebKit.WKFrameInfo,System.Action{System.String})" />
      <MemberSignature Language="F#" Value="abstract member RunJavaScriptTextInputPanel : WebKit.WKWebView * string * string * WebKit.WKFrameInfo * Action&lt;string&gt; -&gt; unit&#xA;override this.RunJavaScriptTextInputPanel : WebKit.WKWebView * string * string * WebKit.WKFrameInfo * Action&lt;string&gt; -&gt; unit" Usage="wKUIDelegate.RunJavaScriptTextInputPanel (webView, prompt, defaultText, frame, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webView" Type="WebKit.WKWebView" />
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="defaultText" Type="System.String" />
        <Parameter Name="frame" Type="WebKit.WKFrameInfo" />
        <Parameter Name="completionHandler" Type="System.Action&lt;System.String&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V28))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="webView">To be added.</param>
        <param name="prompt">To be added.</param>
        <param name="defaultText">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="frame">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Shows a JavaScript text input box to the user.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreviewElement">
      <MemberSignature Language="C#" Value="public virtual bool ShouldPreviewElement (WebKit.WKWebView webView, WebKit.WKPreviewElementInfo elementInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldPreviewElement(class WebKit.WKWebView webView, class WebKit.WKPreviewElementInfo elementInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.WKUIDelegate.ShouldPreviewElement(WebKit.WKWebView,WebKit.WKPreviewElementInfo)" />
      <MemberSignature Language="F#" Value="abstract member ShouldPreviewElement : WebKit.WKWebView * WebKit.WKPreviewElementInfo -&gt; bool&#xA;override this.ShouldPreviewElement : WebKit.WKWebView * WebKit.WKPreviewElementInfo -&gt; bool" Usage="wKUIDelegate.ShouldPreviewElement (webView, elementInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("webView:shouldPreviewElement:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webView" Type="WebKit.WKWebView" />
        <Parameter Name="elementInfo" Type="WebKit.WKPreviewElementInfo" />
      </Parameters>
      <Docs>
        <param name="webView">To be added.</param>
        <param name="elementInfo">To be added.</param>
        <summary>Method that is called to find out if the element should provide a preview.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
