<Type Name="IWKScriptMessageHandler" FullName="WebKit.IWKScriptMessageHandler">
  <TypeSignature Language="C#" Value="public interface IWKScriptMessageHandler : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWKScriptMessageHandler implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:WebKit.IWKScriptMessageHandler" />
  <TypeSignature Language="F#" Value="type IWKScriptMessageHandler = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="WKScriptMessageHandler", WrapperType=typeof(WebKit.WKScriptMessageHandlerWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidReceiveScriptMessage", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="userContentController:didReceiveScriptMessage:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidReceiveScriptMessage", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(WebKit.WKUserContentController), typeof(WebKit.WKScriptMessage) }, Selector="userContentController:didReceiveScriptMessage:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:WebKit.WKScriptMessageHandler" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:WebKit.WKScriptMessageHandler" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:WebKit.WKScriptMessageHandler" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:WebKit.WKScriptMessageHandler_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidReceiveScriptMessage">
      <MemberSignature Language="C#" Value="public void DidReceiveScriptMessage (WebKit.WKUserContentController userContentController, WebKit.WKScriptMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReceiveScriptMessage(class WebKit.WKUserContentController userContentController, class WebKit.WKScriptMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebKit.IWKScriptMessageHandler.DidReceiveScriptMessage(WebKit.WKUserContentController,WebKit.WKScriptMessage)" />
      <MemberSignature Language="F#" Value="abstract member DidReceiveScriptMessage : WebKit.WKUserContentController * WebKit.WKScriptMessage -&gt; unit" Usage="iWKScriptMessageHandler.DidReceiveScriptMessage (userContentController, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("userContentController:didReceiveScriptMessage:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userContentController" Type="WebKit.WKUserContentController" />
        <Parameter Name="message" Type="WebKit.WKScriptMessage" />
      </Parameters>
      <Docs>
        <param name="userContentController">To be added.</param>
        <param name="message">To be added.</param>
        <summary>Method that is called after a message is received from a script.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
