<Type Name="MidiPacketsEventArgs" FullName="CoreMidi.MidiPacketsEventArgs">
  <TypeSignature Language="C#" Value="public class MidiPacketsEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MidiPacketsEventArgs extends System.EventArgs implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreMidi.MidiPacketsEventArgs" />
  <TypeSignature Language="F#" Value="type MidiPacketsEventArgs = class&#xA;    inherit EventArgs&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides data for the <see cref="E:CoreMidi.MidiPort.MessageReceived" /> and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Core%20Midi%20Midi%20Packets%20Event%20Args%20Message%20Received&amp;scope=Xamarin" title="E:CoreMidi.MidiPacketsEventArgs.MessageReceived">E:CoreMidi.MidiPacketsEventArgs.MessageReceived</a></format> events.</summary>
    <remarks>
    </remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/CoreMidiSample/">CoreMidiSample</related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiPacketsEventArgs.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="midiPacketsEventArgs.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the MidiPacketsEventArgs object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the MidiPacketsEventArgs class.</para>
          <para>Calling the Dispose method when the application is finished using the MidiPacketsEventArgs ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiPacketsEventArgs.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="midiPacketsEventArgs.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the MidiPacketsEventArgs object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the MidiPacketsEventArgs class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the MidiPacketsEventArgs ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MidiPacketsEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiPacketsEventArgs.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="midiPacketsEventArgs.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the MidiPacketsEventArgs object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketListRaw">
      <MemberSignature Language="C#" Value="public IntPtr PacketListRaw { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int PacketListRaw" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiPacketsEventArgs.PacketListRaw" />
      <MemberSignature Language="F#" Value="member this.PacketListRaw : nativeint" Usage="CoreMidi.MidiPacketsEventArgs.PacketListRaw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Low-level pointer to the packet list, use Packets instead.</summary>
        <value>
        </value>
        <remarks>This is provided in case you want to decode the value
        using a native library or some other existing MIDI parsing
        code.  Otherwise you can consume the strongly typed Packets
        property.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Packets">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiPacket[] Packets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreMidi.MidiPacket[] Packets" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiPacketsEventArgs.Packets" />
      <MemberSignature Language="F#" Value="member this.Packets : CoreMidi.MidiPacket[]" Usage="CoreMidi.MidiPacketsEventArgs.Packets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiPacket[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the individual MIDI packets</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
