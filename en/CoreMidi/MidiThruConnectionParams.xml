<Type Name="MidiThruConnectionParams" FullName="CoreMidi.MidiThruConnectionParams">
  <TypeSignature Language="C#" Value="public class MidiThruConnectionParams" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MidiThruConnectionParams extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CoreMidi.MidiThruConnectionParams" />
  <TypeSignature Language="F#" Value="type MidiThruConnectionParams = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>MIDI transformations and routings.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MidiThruConnectionParams ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnectionParams.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelMap">
      <MemberSignature Language="C#" Value="public byte[] ChannelMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] ChannelMap" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.ChannelMap" />
      <MemberSignature Language="F#" Value="member this.ChannelMap : byte[] with get, set" Usage="CoreMidi.MidiThruConnectionParams.ChannelMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Map of the 16 MIDI channels</summary>
        <value>To be added.</value>
        <remarks>Set a MIDI channel to 0xFF to filter it out. It can have the following channel values range 0 to 15 or 1 to 16.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPressure">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiTransform ChannelPressure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiTransform ChannelPressure" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.ChannelPressure" />
      <MemberSignature Language="F#" Value="member this.ChannelPressure : CoreMidi.MidiTransform with get, set" Usage="CoreMidi.MidiThruConnectionParams.ChannelPressure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Instructs how monophonic channels pressure are transformed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiControlTransform[] Controls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiControlTransform[] Controls" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.Controls" />
      <MemberSignature Language="F#" Value="member this.Controls : CoreMidi.MidiControlTransform[] with get, set" Usage="CoreMidi.MidiThruConnectionParams.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiControlTransform[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Midi control transformations.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Destinations">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiThruConnectionEndpoint[] Destinations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiThruConnectionEndpoint[] Destinations" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.Destinations" />
      <MemberSignature Language="F#" Value="member this.Destinations : CoreMidi.MidiThruConnectionEndpoint[] with get, set" Usage="CoreMidi.MidiThruConnectionParams.Destinations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiThruConnectionEndpoint[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Midi output destination routes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterOutAllControls">
      <MemberSignature Language="C#" Value="public bool FilterOutAllControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterOutAllControls" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.FilterOutAllControls" />
      <MemberSignature Language="F#" Value="member this.FilterOutAllControls : bool with get, set" Usage="CoreMidi.MidiThruConnectionParams.FilterOutAllControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Flag to set all MIDI continuous control messages to be filtered out.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterOutBeatClock">
      <MemberSignature Language="C#" Value="public bool FilterOutBeatClock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterOutBeatClock" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.FilterOutBeatClock" />
      <MemberSignature Language="F#" Value="member this.FilterOutBeatClock : bool with get, set" Usage="CoreMidi.MidiThruConnectionParams.FilterOutBeatClock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Flag to set all MIDI play, stop, resume and clock messages to be filtered out.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterOutMtc">
      <MemberSignature Language="C#" Value="public bool FilterOutMtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterOutMtc" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.FilterOutMtc" />
      <MemberSignature Language="F#" Value="member this.FilterOutMtc : bool with get, set" Usage="CoreMidi.MidiThruConnectionParams.FilterOutMtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Flag to set all MIDI time code messages to be filtered out.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterOutSysEx">
      <MemberSignature Language="C#" Value="public bool FilterOutSysEx { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterOutSysEx" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.FilterOutSysEx" />
      <MemberSignature Language="F#" Value="member this.FilterOutSysEx : bool with get, set" Usage="CoreMidi.MidiThruConnectionParams.FilterOutSysEx" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Flag to set all MIDI system exclusive messages to be filtered out.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterOutTuneRequest">
      <MemberSignature Language="C#" Value="public bool FilterOutTuneRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterOutTuneRequest" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.FilterOutTuneRequest" />
      <MemberSignature Language="F#" Value="member this.FilterOutTuneRequest : bool with get, set" Usage="CoreMidi.MidiThruConnectionParams.FilterOutTuneRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Flag to set all MIDI tune request messages to be filtered out.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighNote">
      <MemberSignature Language="C#" Value="public byte HighNote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 HighNote" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.HighNote" />
      <MemberSignature Language="F#" Value="member this.HighNote : byte with get, set" Usage="CoreMidi.MidiThruConnectionParams.HighNote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Highest note to filter.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="P:CoreMidi.MidiThruConnectionParams.HighNote" /> is greater than or equal to <see cref="P:CoreMidi.MidiThruConnectionParams.LowNote" /> means that notes outside this range will be filtered out.</para>
          <para>
          </para>
          <para>
            <see cref="P:CoreMidi.MidiThruConnectionParams.LowNote" /> is greater than <see cref="P:CoreMidi.MidiThruConnectionParams.HighNote" /> means that notes inside this range will be filtered out.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighVelocity">
      <MemberSignature Language="C#" Value="public byte HighVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 HighVelocity" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.HighVelocity" />
      <MemberSignature Language="F#" Value="member this.HighVelocity : byte with get, set" Usage="CoreMidi.MidiThruConnectionParams.HighVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Highest velocity to filter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPressure">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiTransform KeyPressure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiTransform KeyPressure" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.KeyPressure" />
      <MemberSignature Language="F#" Value="member this.KeyPressure : CoreMidi.MidiTransform with get, set" Usage="CoreMidi.MidiThruConnectionParams.KeyPressure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Instructs how polyphonic key pressure events are transformed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LowNote">
      <MemberSignature Language="C#" Value="public byte LowNote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 LowNote" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.LowNote" />
      <MemberSignature Language="F#" Value="member this.LowNote : byte with get, set" Usage="CoreMidi.MidiThruConnectionParams.LowNote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lowest note to filter.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="P:CoreMidi.MidiThruConnectionParams.HighNote" /> is greater than or equal to <see cref="P:CoreMidi.MidiThruConnectionParams.LowNote" /> means that notes outside this range will be filtered out.</para>
          <para>
          </para>
          <para>
            <see cref="P:CoreMidi.MidiThruConnectionParams.LowNote" /> is greater than <see cref="P:CoreMidi.MidiThruConnectionParams.HighNote" /> means that notes inside this range will be filtered out.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowVelocity">
      <MemberSignature Language="C#" Value="public byte LowVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 LowVelocity" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.LowVelocity" />
      <MemberSignature Language="F#" Value="member this.LowVelocity : byte with get, set" Usage="CoreMidi.MidiThruConnectionParams.LowVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lowest velocity to filter.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Maps">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiValueMap[] Maps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiValueMap[] Maps" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.Maps" />
      <MemberSignature Language="F#" Value="member this.Maps : CoreMidi.MidiValueMap[] with get, set" Usage="CoreMidi.MidiThruConnectionParams.Maps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiValueMap[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>MIDI value maps.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteNumber">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiTransform NoteNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiTransform NoteNumber" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.NoteNumber" />
      <MemberSignature Language="F#" Value="member this.NoteNumber : CoreMidi.MidiTransform with get, set" Usage="CoreMidi.MidiThruConnectionParams.NoteNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Instructs how note numbers are transformed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PitchBend">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiTransform PitchBend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiTransform PitchBend" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.PitchBend" />
      <MemberSignature Language="F#" Value="member this.PitchBend : CoreMidi.MidiTransform with get, set" Usage="CoreMidi.MidiThruConnectionParams.PitchBend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Instructs how pitch bend events are transformed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgramChange">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiTransform ProgramChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiTransform ProgramChange" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.ProgramChange" />
      <MemberSignature Language="F#" Value="member this.ProgramChange : CoreMidi.MidiTransform with get, set" Usage="CoreMidi.MidiThruConnectionParams.ProgramChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Instructs how program change events are transformed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiThruConnectionEndpoint[] Sources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiThruConnectionEndpoint[] Sources" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.Sources" />
      <MemberSignature Language="F#" Value="member this.Sources : CoreMidi.MidiThruConnectionEndpoint[] with get, set" Usage="CoreMidi.MidiThruConnectionParams.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiThruConnectionEndpoint[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Midi input routes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Velocity">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiTransform Velocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMidi.MidiTransform Velocity" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnectionParams.Velocity" />
      <MemberSignature Language="F#" Value="member this.Velocity : CoreMidi.MidiTransform with get, set" Usage="CoreMidi.MidiThruConnectionParams.Velocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Instructs how velocity notes are transformed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
