<Type Name="MidiObject" FullName="CoreMidi.MidiObject">
  <TypeSignature Language="C#" Value="public class MidiObject : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi MidiObject extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreMidi.MidiObject" />
  <TypeSignature Language="F#" Value="type MidiObject = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Base class for the <see cref="T:CoreMidi.MidiClient" />, <see cref="T:CoreMidi.MidiPort" />, <see cref="T:CoreMidi.MidiEntity" />, <see cref="T:CoreMidi.MidiDevice" /> and <see cref="T:CoreMidi.MidiEndpoint" /> classes.</summary>
    <remarks>

      Provides the shared properties for the various Midi classes.

    </remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/CoreMidiSample/">CoreMidiSample</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MidiObject (int handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new CoreMidi.MidiObject : int -&gt; CoreMidi.MidiObject" Usage="new CoreMidi.MidiObject handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="midiObject.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the MidiObject object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the MidiObject class.</para>
          <para>Calling the Dispose method when the application is finished using the MidiObject ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="midiObject.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the MidiObject object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the MidiObject class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the MidiObject ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MidiObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="midiObject.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the MidiObject object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByUniqueId">
      <MemberSignature Language="C#" Value="public static CoreMidi.MidiError FindByUniqueId (int uniqueId, out CoreMidi.MidiObject result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreMidi.MidiError FindByUniqueId(int32 uniqueId, [out] class CoreMidi.MidiObject&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.FindByUniqueId(System.Int32,CoreMidi.MidiObject@)" />
      <MemberSignature Language="F#" Value="static member FindByUniqueId : int *  -&gt; CoreMidi.MidiError" Usage="CoreMidi.MidiObject.FindByUniqueId (uniqueId, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.Int32" />
        <Parameter Name="result" Type="CoreMidi.MidiObject" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueId">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public Foundation.NSData GetData (IntPtr property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData GetData(native int property) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.GetData(System.IntPtr)" />
      <MemberSignature Language="F#" Value="member this.GetData : nativeint -&gt; Foundation.NSData" Usage="midiObject.GetData property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDictionaryProperties">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary GetDictionaryProperties (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary GetDictionaryProperties(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.GetDictionaryProperties(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.GetDictionaryProperties : bool -&gt; Foundation.NSDictionary" Usage="midiObject.GetDictionaryProperties deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">Whether this should query properties of nested objects need to be included.</param>
        <summary>Returns the object properties as a dictionary.</summary>
        <returns>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (IntPtr property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(native int property) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.GetString(System.IntPtr)" />
      <MemberSignature Language="F#" Value="member this.GetString : nativeint -&gt; string" Usage="midiObject.GetString property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public int Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Handle" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiObject.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : int" Usage="CoreMidi.MidiObject.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiError RemoveProperty (string property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMidi.MidiError RemoveProperty(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.RemoveProperty(System.String)" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; CoreMidi.MidiError" Usage="midiObject.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (IntPtr property, Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetData(native int property, class Foundation.NSData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.SetData(System.IntPtr,Foundation.NSData)" />
      <MemberSignature Language="F#" Value="member this.SetData : nativeint * Foundation.NSData -&gt; unit" Usage="midiObject.SetData (property, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.IntPtr" />
        <Parameter Name="data" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetString">
      <MemberSignature Language="C#" Value="public void SetString (IntPtr property, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetString(native int property, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiObject.SetString(System.IntPtr,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetString : nativeint * string -&gt; unit" Usage="midiObject.SetString (property, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.IntPtr" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
