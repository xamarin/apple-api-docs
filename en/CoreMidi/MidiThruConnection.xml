<Type Name="MidiThruConnection" FullName="CoreMidi.MidiThruConnection">
  <TypeSignature Language="C#" Value="public class MidiThruConnection : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MidiThruConnection extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreMidi.MidiThruConnection" />
  <TypeSignature Language="F#" Value="type MidiThruConnection = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Manages MIDI play-through connections.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal MidiThruConnection (uint handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(unsigned int32 handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.#ctor(System.UInt32)" />
      <MemberSignature Language="F#" Value="new CoreMidi.MidiThruConnection : uint32 -&gt; CoreMidi.MidiThruConnection" Usage="new CoreMidi.MidiThruConnection handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static CoreMidi.MidiThruConnection Create (string persistentOwnerID, CoreMidi.MidiThruConnectionParams connectionParams);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMidi.MidiThruConnection Create(string persistentOwnerID, class CoreMidi.MidiThruConnectionParams connectionParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.Create(System.String,CoreMidi.MidiThruConnectionParams)" />
      <MemberSignature Language="F#" Value="static member Create : string * CoreMidi.MidiThruConnectionParams -&gt; CoreMidi.MidiThruConnection" Usage="CoreMidi.MidiThruConnection.Create (persistentOwnerID, connectionParams)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiThruConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistentOwnerID" Type="System.String" />
        <Parameter Name="connectionParams" Type="CoreMidi.MidiThruConnectionParams" />
      </Parameters>
      <Docs>
        <param name="persistentOwnerID">To be added.</param>
        <param name="connectionParams">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static CoreMidi.MidiThruConnection Create (string persistentOwnerID, CoreMidi.MidiThruConnectionParams connectionParams, out CoreMidi.MidiError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMidi.MidiThruConnection Create(string persistentOwnerID, class CoreMidi.MidiThruConnectionParams connectionParams, [out] valuetype CoreMidi.MidiError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.Create(System.String,CoreMidi.MidiThruConnectionParams,CoreMidi.MidiError@)" />
      <MemberSignature Language="F#" Value="static member Create : string * CoreMidi.MidiThruConnectionParams *  -&gt; CoreMidi.MidiThruConnection" Usage="CoreMidi.MidiThruConnection.Create (persistentOwnerID, connectionParams, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiThruConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistentOwnerID" Type="System.String" />
        <Parameter Name="connectionParams" Type="CoreMidi.MidiThruConnectionParams" />
        <Parameter Name="error" Type="CoreMidi.MidiError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="persistentOwnerID">To be added.</param>
        <param name="connectionParams">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="midiThruConnection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the MidiThruConnection object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the MidiThruConnection class.</para>
          <para>Calling the Dispose method when the application is finished using the MidiThruConnection ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="midiThruConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the MidiThruConnection object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the MidiThruConnection class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the MidiThruConnection ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MidiThruConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="midiThruConnection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the MidiThruConnection object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static CoreMidi.MidiThruConnection[] Find (string persistentOwnerID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMidi.MidiThruConnection[] Find(string persistentOwnerID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.Find(System.String)" />
      <MemberSignature Language="F#" Value="static member Find : string -&gt; CoreMidi.MidiThruConnection[]" Usage="CoreMidi.MidiThruConnection.Find persistentOwnerID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiThruConnection[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistentOwnerID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="persistentOwnerID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static CoreMidi.MidiThruConnection[] Find (string persistentOwnerID, out CoreMidi.MidiError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreMidi.MidiThruConnection[] Find(string persistentOwnerID, [out] valuetype CoreMidi.MidiError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.Find(System.String,CoreMidi.MidiError@)" />
      <MemberSignature Language="F#" Value="static member Find : string *  -&gt; CoreMidi.MidiThruConnection[]" Usage="CoreMidi.MidiThruConnection.Find (persistentOwnerID, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiThruConnection[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistentOwnerID" Type="System.String" />
        <Parameter Name="error" Type="CoreMidi.MidiError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="persistentOwnerID">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParams">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiThruConnectionParams GetParams ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreMidi.MidiThruConnectionParams GetParams() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.GetParams" />
      <MemberSignature Language="F#" Value="member this.GetParams : unit -&gt; CoreMidi.MidiThruConnectionParams" Usage="midiThruConnection.GetParams " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiThruConnectionParams</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParams">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiThruConnectionParams GetParams (out CoreMidi.MidiError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreMidi.MidiThruConnectionParams GetParams([out] valuetype CoreMidi.MidiError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.GetParams(CoreMidi.MidiError@)" />
      <MemberSignature Language="F#" Value="member this.GetParams :  -&gt; CoreMidi.MidiThruConnectionParams" Usage="midiThruConnection.GetParams error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiThruConnectionParams</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="CoreMidi.MidiError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public uint Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Handle" />
      <MemberSignature Language="DocId" Value="P:CoreMidi.MidiThruConnection.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : uint32" Usage="CoreMidi.MidiThruConnection.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParams">
      <MemberSignature Language="C#" Value="public CoreMidi.MidiError SetParams (CoreMidi.MidiThruConnectionParams connectionParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CoreMidi.MidiError SetParams(class CoreMidi.MidiThruConnectionParams connectionParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreMidi.MidiThruConnection.SetParams(CoreMidi.MidiThruConnectionParams)" />
      <MemberSignature Language="F#" Value="member this.SetParams : CoreMidi.MidiThruConnectionParams -&gt; CoreMidi.MidiError" Usage="midiThruConnection.SetParams connectionParams" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreMidi.MidiError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionParams" Type="CoreMidi.MidiThruConnectionParams" />
      </Parameters>
      <Docs>
        <param name="connectionParams">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
