<Type Name="SKPhysicsWorldBodiesEnumeratorHandler" FullName="SpriteKit.SKPhysicsWorldBodiesEnumeratorHandler">
  <TypeSignature Language="C#" Value="public delegate void SKPhysicsWorldBodiesEnumeratorHandler(SKPhysicsBody body, out bool stop);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SKPhysicsWorldBodiesEnumeratorHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:SpriteKit.SKPhysicsWorldBodiesEnumeratorHandler" />
  <TypeSignature Language="F#" Value="type SKPhysicsWorldBodiesEnumeratorHandler = delegate of SKPhysicsBody *  -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="body" Type="SpriteKit.SKPhysicsBody" />
    <Parameter Name="stop" Type="System.Boolean" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="body">To be added.</param>
    <param name="stop">To be added.</param>
    <summary>The delegate used to enumerate <see cref="T:SpriteKit.SKPhysicsBody" />s with <see cref="M:SpriteKit.SKPhysicsWorld.EnumerateBodies(System.Drawing.PointF,SpriteKit.SKPhysicsWorldBodiesEnumeratorHandler" /> and <see cref="M:SpriteKit.SKPhysicsWorld.EnumerateBodies(System.Drawing.RectangleFF,SpriteKit.SKPhysicsWorldBodiesEnumeratorHandler" /></summary>
    <remarks>
      <para> Note that because <paramref name="stop" /> is an <c>out</c> parameter, this cannot be specified using lambda syntax.</para>
    </remarks>
  </Docs>
</Type>
