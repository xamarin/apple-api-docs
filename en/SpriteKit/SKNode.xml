<Type Name="SKNode" FullName="SpriteKit.SKNode">
  <TypeSignature Language="C#" Value="public class SKNode : UIKit.UIResponder, Foundation.INSCopying, Foundation.INSSecureCoding, IDisposable, System.Collections.Generic.IEnumerable&lt;SpriteKit.SKNode&gt;, UIKit.IUIFocusItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKNode extends UIKit.UIResponder implements class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.Collections.Generic.IEnumerable`1&lt;class SpriteKit.SKNode&gt;, class System.Collections.IEnumerable, class System.IDisposable, class UIKit.IUIFocusEnvironment, class UIKit.IUIFocusItem" />
  <TypeSignature Language="DocId" Value="T:SpriteKit.SKNode" />
  <TypeSignature Language="F#" Value="type SKNode = class&#xA;    inherit UIResponder&#xA;    interface IEnumerable&#xA;    interface seq&lt;SKNode&gt;&#xA;    interface INSCoding&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCopying&#xA;    interface INSSecureCoding&#xA;    interface IUIFocusEnvironment&#xA;    interface IUIFocusItem" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UIKit.UIResponder</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;SpriteKit.SKNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIFocusEnvironment</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIFocusItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("SKNode", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The building block out of which scene-graphs are made. The root of the tree is an <see cref="T:SpriteKit.SKScene" />.</summary>
    <remarks>
      <para>
        <img href="xamarin-media/SpriteKit/_images/SKNode.Hierarchy.png" />
      </para>
      <para>
        <list type="table">
          <listheader>
            <term>Class</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="T:SpriteKit.SKCropNode" />
            </term>
            <description>Uses a mask to crop its children.</description>
          </item>
          <item>
            <term>
              <see cref="T:SpriteKit.SKEffectNode" />
            </term>
            <description>Applies a <see cref="T:CoreImage.CIFilter" /> to its children.</description>
          </item>
          <item>
            <term>
              <see cref="T:SpriteKit.SKEmitterNode" />
            </term>
            <description>Produces and displays particles.</description>
          </item>
          <item>
            <term>
              <see cref="T:SpriteKit.SKLabelNode" />
            </term>
            <description>Displays text.</description>
          </item>
          <item>
            <term>
              <format type="text/html">
                <a href="https://docs.microsoft.com/en-us/search/index?search=Sprite%20Kit%20SKScene%20Node&amp;scope=Xamarin" title="T:SpriteKit.SKSceneNode">T:SpriteKit.SKSceneNode</a>
              </format>
            </term>
            <description>Runs an animation loop, including display, actions, and physics.</description>
          </item>
          <item>
            <term>
              <see cref="T:SpriteKit.SKShapeNode" />
            </term>
            <description>Displays a <see cref="T:CoreGraphics.CGPath" />-based shape.</description>
          </item>
          <item>
            <term>
              <see cref="T:SpriteKit.SKSpriteNode" />
            </term>
            <description>Displays a textured sprite.</description>
          </item>
        </list>
      </para>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/SpriteKit/Reference/SKNode_Ref/index.html">Apple documentation for <c>SKNode</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKNode (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new SpriteKit.SKNode : Foundation.NSCoder -&gt; SpriteKit.SKNode" Usage="new SpriteKit.SKNode coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SKNode (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new SpriteKit.SKNode : Foundation.NSObjectFlag -&gt; SpriteKit.SKNode" Usage="new SpriteKit.SKNode t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal SKNode (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new SpriteKit.SKNode : nativeint -&gt; SpriteKit.SKNode" Usage="new SpriteKit.SKNode handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (SpriteKit.SKNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class SpriteKit.SKNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.Add(SpriteKit.SKNode)" />
      <MemberSignature Language="F#" Value="member this.Add : SpriteKit.SKNode -&gt; unit" Usage="sKNode.Add node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="SpriteKit.SKNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>Adds <paramref name="node" /> to the end of the list of child nodes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public virtual void AddChild (SpriteKit.SKNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChild(class SpriteKit.SKNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.AddChild(SpriteKit.SKNode)" />
      <MemberSignature Language="F#" Value="abstract member AddChild : SpriteKit.SKNode -&gt; unit&#xA;override this.AddChild : SpriteKit.SKNode -&gt; unit" Usage="sKNode.AddChild node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addChild:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="SpriteKit.SKNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>Adds <paramref name="node" /> to the end of the list of child nodes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNodes">
      <MemberSignature Language="C#" Value="public void AddNodes (params SpriteKit.SKNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNodes(class SpriteKit.SKNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.AddNodes(SpriteKit.SKNode[])" />
      <MemberSignature Language="F#" Value="member this.AddNodes : SpriteKit.SKNode[] -&gt; unit" Usage="sKNode.AddNodes nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="SpriteKit.SKNode[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <summary>Adds <paramref name="nodes" /> to the end of the list of child nodes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual nfloat Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Alpha" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Alpha" />
      <MemberSignature Language="F#" Value="member this.Alpha : nfloat with get, set" Usage="SpriteKit.SKNode.Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("alpha")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setAlpha:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the transparency for the node. 1.0 is opaque.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeValues">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary&lt;Foundation.NSString,SpriteKit.SKAttributeValue&gt; AttributeValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary`2&lt;class Foundation.NSString, class SpriteKit.SKAttributeValue&gt; AttributeValues" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.AttributeValues" />
      <MemberSignature Language="F#" Value="member this.AttributeValues : Foundation.NSDictionary&lt;Foundation.NSString, SpriteKit.SKAttributeValue&gt; with get, set" Usage="SpriteKit.SKNode.AttributeValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("attributeValues")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setAttributeValues:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("attributeValues", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setAttributeValues:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary&lt;Foundation.NSString,SpriteKit.SKAttributeValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateAccumulatedFrame">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect CalculateAccumulatedFrame ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect CalculateAccumulatedFrame() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.CalculateAccumulatedFrame" />
      <MemberSignature Language="F#" Value="abstract member CalculateAccumulatedFrame : unit -&gt; CoreGraphics.CGRect&#xA;override this.CalculateAccumulatedFrame : unit -&gt; CoreGraphics.CGRect" Usage="sKNode.CalculateAccumulatedFrame " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("calculateAccumulatedFrame")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates and returns the smallest rectangle that contains the node and all of its child nodes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBecomeFocused">
      <MemberSignature Language="C#" Value="public virtual bool CanBecomeFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBecomeFocused" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.CanBecomeFocused" />
      <MemberSignature Language="F#" Value="member this.CanBecomeFocused : bool" Usage="SpriteKit.SKNode.CanBecomeFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:UIKit.IUIFocusItem.CanBecomeFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("canBecomeFocused")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKNode[] Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKNode[] Children" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Children" />
      <MemberSignature Language="F#" Value="member this.Children : SpriteKit.SKNode[]" Usage="SpriteKit.SKNode.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("children")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of this node's child nodes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="SpriteKit.SKNode.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKConstraint[] Constraints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKConstraint[] Constraints" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Constraints" />
      <MemberSignature Language="F#" Value="member this.Constraints : SpriteKit.SKConstraint[] with get, set" Usage="SpriteKit.SKNode.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("constraints")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setConstraints:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("constraints", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setConstraints:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKConstraint[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the list of constraints that are applied to this node.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>Gets or sets the list of constraints that are applied to the node.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPoint">
      <MemberSignature Language="C#" Value="public virtual bool ContainsPoint (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsPoint(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.ContainsPoint(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member ContainsPoint : CoreGraphics.CGPoint -&gt; bool&#xA;override this.ContainsPoint : CoreGraphics.CGPoint -&gt; bool" Usage="sKNode.ContainsPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("containsPoint:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>Returns <see langword="true" /> if <paramref name="point" /> is contained by the node, otherwise false.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPointFromNode">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint ConvertPointFromNode (CoreGraphics.CGPoint point, SpriteKit.SKNode sourceNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGPoint ConvertPointFromNode(valuetype CoreGraphics.CGPoint point, class SpriteKit.SKNode sourceNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.ConvertPointFromNode(CoreGraphics.CGPoint,SpriteKit.SKNode)" />
      <MemberSignature Language="F#" Value="abstract member ConvertPointFromNode : CoreGraphics.CGPoint * SpriteKit.SKNode -&gt; CoreGraphics.CGPoint&#xA;override this.ConvertPointFromNode : CoreGraphics.CGPoint * SpriteKit.SKNode -&gt; CoreGraphics.CGPoint" Usage="sKNode.ConvertPointFromNode (point, sourceNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("convertPoint:fromNode:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
        <Parameter Name="sourceNode" Type="SpriteKit.SKNode" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="sourceNode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPointToNode">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint ConvertPointToNode (CoreGraphics.CGPoint point, SpriteKit.SKNode sourceNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGPoint ConvertPointToNode(valuetype CoreGraphics.CGPoint point, class SpriteKit.SKNode sourceNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.ConvertPointToNode(CoreGraphics.CGPoint,SpriteKit.SKNode)" />
      <MemberSignature Language="F#" Value="abstract member ConvertPointToNode : CoreGraphics.CGPoint * SpriteKit.SKNode -&gt; CoreGraphics.CGPoint&#xA;override this.ConvertPointToNode : CoreGraphics.CGPoint * SpriteKit.SKNode -&gt; CoreGraphics.CGPoint" Usage="sKNode.ConvertPointToNode (point, sourceNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("convertPoint:toNode:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
        <Parameter Name="sourceNode" Type="SpriteKit.SKNode" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="sourceNode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="sKNode.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">Zone to use to allocate this object, or null to use the default zone.</param>
        <summary>Performs a copy of the underlying Objective-C object.</summary>
        <returns>This method performs a copy of the underlying Objective-C object state and returns a new instance of it.  It does not actually try to replicate any managed state.</returns>
        <remarks>Implementation of the INSCopyable interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKNode Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKNode Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.Create" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; SpriteKit.SKNode" Usage="SpriteKit.SKNode.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("node")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new node.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKNode Create (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKNode Create(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.Create(System.String)" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; SpriteKit.SKNode" Usage="SpriteKit.SKNode.Create filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("nodeWithFileNamed:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKNode Create (string filename, Foundation.NSSet&lt;ObjCRuntime.Class&gt; classes, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKNode Create(string filename, class Foundation.NSSet`1&lt;class ObjCRuntime.Class&gt; classes, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.Create(System.String,Foundation.NSSet{ObjCRuntime.Class},Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member Create : string * Foundation.NSSet&lt;ObjCRuntime.Class&gt; *  -&gt; SpriteKit.SKNode" Usage="SpriteKit.SKNode.Create (filename, classes, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(12, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(5, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="classes" Type="Foundation.NSSet&lt;ObjCRuntime.Class&gt;" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filename">To be added.</param>
        <param name="classes">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKNode Create (string filename, Type[] types, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKNode Create(string filename, class System.Type[] types, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.Create(System.String,System.Type[],Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member Create : string * Type[] *  -&gt; SpriteKit.SKNode" Usage="SpriteKit.SKNode.Create (filename, types, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.TV(12, 0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Watch(5, 0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filename">To be added.</param>
        <param name="types">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidHintFocusMovement">
      <MemberSignature Language="C#" Value="public virtual void DidHintFocusMovement (UIKit.UIFocusMovementHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidHintFocusMovement(class UIKit.UIFocusMovementHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.DidHintFocusMovement(UIKit.UIFocusMovementHint)" />
      <MemberSignature Language="F#" Value="abstract member DidHintFocusMovement : UIKit.UIFocusMovementHint -&gt; unit&#xA;override this.DidHintFocusMovement : UIKit.UIFocusMovementHint -&gt; unit" Usage="sKNode.DidHintFocusMovement hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("didHintFocusMovement:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="UIKit.UIFocusMovementHint" />
      </Parameters>
      <Docs>
        <param name="hint">The focus hint.</param>
        <summary>Called when the user's finger moves on the device or pad, to alert the Node that a focus change may occur.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateFocus">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateFocus (UIKit.UIFocusUpdateContext context, UIKit.UIFocusAnimationCoordinator coordinator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateFocus(class UIKit.UIFocusUpdateContext context, class UIKit.UIFocusAnimationCoordinator coordinator) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.DidUpdateFocus(UIKit.UIFocusUpdateContext,UIKit.UIFocusAnimationCoordinator)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateFocus : UIKit.UIFocusUpdateContext * UIKit.UIFocusAnimationCoordinator -&gt; unit&#xA;override this.DidUpdateFocus : UIKit.UIFocusUpdateContext * UIKit.UIFocusAnimationCoordinator -&gt; unit" Usage="sKNode.DidUpdateFocus (context, coordinator)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:UIKit.IUIFocusEnvironment.DidUpdateFocus(UIKit.UIFocusUpdateContext,UIKit.UIFocusAnimationCoordinator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("didUpdateFocusInContext:withAnimationCoordinator:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="UIKit.UIFocusUpdateContext" />
        <Parameter Name="coordinator" Type="UIKit.UIFocusAnimationCoordinator" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="coordinator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sKNode.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the SKNode object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the SKNode class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the SKNode ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.EncodeTo(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="abstract member EncodeTo : Foundation.NSCoder -&gt; unit&#xA;override this.EncodeTo : Foundation.NSCoder -&gt; unit" Usage="sKNode.EncodeTo encoder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCoding.EncodeTo(Foundation.NSCoder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">The encoder object where the state of the object will be stored</param>
        <summary>Encodes the state of the object on the provided encoder</summary>
        <remarks>
          <para>This method is part of the <see cref="T:Foundation.NSCoding" /> protocol and is used by applications to preserve the state of the object into an archive.</para>
          <para>Users will typically create a <see cref="T:Foundation.NSKeyedArchiver" /> and then invoke the <see cref="M:Foundation.NSKeyedArchiver.ArchiveRootObjectToFile(Foundation.NSObject,System.String)" /> which will call into this method</para>
          <para>If developers want to allow their object to be archived, they should override this method and store their state in using the provided <paramref name="encoder" /> parameter.   In addition, developers should also implement a constructor that takes an NSCoder argument and is exported with [Export ("initWithCoder:")]</para>
          <example>
            <code lang="C#"><![CDATA[public void override EncodeTo (NSCoder coder){
    coder.Encode (1, key: "version");
    coder.Encode (userName, key: "userName");
    coder.Encode (hostName, key: "hostName");]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateChildNodes">
      <MemberSignature Language="C#" Value="public virtual void EnumerateChildNodes (string name, SpriteKit.SKNodeChildEnumeratorHandler enumerationHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumerateChildNodes(string name, class SpriteKit.SKNodeChildEnumeratorHandler enumerationHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.EnumerateChildNodes(System.String,SpriteKit.SKNodeChildEnumeratorHandler)" />
      <MemberSignature Language="F#" Value="abstract member EnumerateChildNodes : string * SpriteKit.SKNodeChildEnumeratorHandler -&gt; unit&#xA;override this.EnumerateChildNodes : string * SpriteKit.SKNodeChildEnumeratorHandler -&gt; unit" Usage="sKNode.EnumerateChildNodes (name, enumerationHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("enumerateChildNodesWithName:usingBlock:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="enumerationHandler" Type="SpriteKit.SKNodeChildEnumeratorHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDSKNodeChildEnumeratorHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="enumerationHandler">To be added.</param>
        <summary>Passes each child node that matches <paramref name="name" />, along with a reference to a boolean value, to <paramref name="enumerationHandler" />. App devs can set the referenced boolean value to <see langword="true" /> to stop iteration.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusBehavior">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKNodeFocusBehavior FocusBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SpriteKit.SKNodeFocusBehavior FocusBehavior" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.FocusBehavior" />
      <MemberSignature Language="F#" Value="member this.FocusBehavior : SpriteKit.SKNodeFocusBehavior with get, set" Usage="SpriteKit.SKNode.FocusBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("focusBehavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setFocusBehavior:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("focusBehavior", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setFocusBehavior:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNodeFocusBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusItemContainer">
      <MemberSignature Language="C#" Value="public virtual UIKit.IUIFocusItemContainer FocusItemContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.IUIFocusItemContainer FocusItemContainer" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.FocusItemContainer" />
      <MemberSignature Language="F#" Value="member this.FocusItemContainer : UIKit.IUIFocusItemContainer" Usage="SpriteKit.SKNode.FocusItemContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("focusItemContainer")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIFocusItemContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the container that manages focus information for child focus items.</summary>
        <value>The container that manages focus information for child focus items.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frame">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect Frame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGRect Frame" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Frame" />
      <MemberSignature Language="F#" Value="member this.Frame : CoreGraphics.CGRect" Usage="SpriteKit.SKNode.Frame" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("frame")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the rectangle, in the parent node's coordinate system, that contains only the current node.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFile&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FromFile&lt;T&gt; (string file) where T : SpriteKit.SKNode;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FromFile&lt;(class SpriteKit.SKNode) T&gt;(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.FromFile``1(System.String)" />
      <MemberSignature Language="F#" Value="static member FromFile : string -&gt; 'T (requires 'T :&gt; SpriteKit.SKNode)" Usage="SpriteKit.SKNode.FromFile file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>SpriteKit.SKNode</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="file">

Filename containing the SpriteKit assets, without the extension.</param>
        <summary>Creates a new <see cref="T:SpriteKit.SKNode" /> by loading the assets from a file included in the application. </summary>
        <returns>

The new instance of the node.   The parameter type <typeparamref name="T" /> is used to determine which kind of class you want to get out of the file.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionForKey">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKAction GetActionForKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class SpriteKit.SKAction GetActionForKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetActionForKey(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetActionForKey : string -&gt; SpriteKit.SKAction&#xA;override this.GetActionForKey : string -&gt; SpriteKit.SKAction" Usage="sKNode.GetActionForKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("actionForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>Returns the action that is identified by <paramref name="key" />, or <see langword="null" /> if no action exists for the key.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildNode">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKNode GetChildNode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class SpriteKit.SKNode GetChildNode(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetChildNode(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetChildNode : string -&gt; SpriteKit.SKNode&#xA;override this.GetChildNode : string -&gt; SpriteKit.SKNode" Usage="sKNode.GetChildNode name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("childNodeWithName:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Searches for and returns the first node that is matched by <paramref name="name" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;SpriteKit.SKNode&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class SpriteKit.SKNode&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;SpriteKit.SKNode&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;SpriteKit.SKNode&gt;" Usage="sKNode.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(SpriteKit.SKNode/&lt;GetEnumerator&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;SpriteKit.SKNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates over the child nodes that belong to the current node.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodeAtPoint">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKNode GetNodeAtPoint (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class SpriteKit.SKNode GetNodeAtPoint(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetNodeAtPoint(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member GetNodeAtPoint : CoreGraphics.CGPoint -&gt; SpriteKit.SKNode&#xA;override this.GetNodeAtPoint : CoreGraphics.CGPoint -&gt; SpriteKit.SKNode" Usage="sKNode.GetNodeAtPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("nodeAtPoint:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>Returns either the most deeply nested descendant that contains <paramref name="point" />, where <paramref name="point" /> is specified in the current node's coordinate system.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodesAtPoint">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKNode[] GetNodesAtPoint (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class SpriteKit.SKNode[] GetNodesAtPoint(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetNodesAtPoint(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member GetNodesAtPoint : CoreGraphics.CGPoint -&gt; SpriteKit.SKNode[]&#xA;override this.GetNodesAtPoint : CoreGraphics.CGPoint -&gt; SpriteKit.SKNode[]" Usage="sKNode.GetNodesAtPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("nodesAtPoint:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>Returns an array that contains all the child nodes that contain <paramref name="point" />, where <paramref name="point" /> is specified in the current node's coordinate system.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsMatching">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKNode GetObjectsMatching (string nameExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class SpriteKit.SKNode GetObjectsMatching(string nameExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetObjectsMatching(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetObjectsMatching : string -&gt; SpriteKit.SKNode&#xA;override this.GetObjectsMatching : string -&gt; SpriteKit.SKNode" Usage="sKNode.GetObjectsMatching nameExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("objectForKeyedSubscript:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nameExpression">To be added.</param>
        <summary>Returns an array that contains all the nodes that are matched by <paramref name="nameExpression" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObstaclesFromNodeBounds">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPolygonObstacle[] GetObstaclesFromNodeBounds (SpriteKit.SKNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPolygonObstacle[] GetObstaclesFromNodeBounds(class SpriteKit.SKNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetObstaclesFromNodeBounds(SpriteKit.SKNode[])" />
      <MemberSignature Language="F#" Value="static member GetObstaclesFromNodeBounds : SpriteKit.SKNode[] -&gt; GameplayKit.GKPolygonObstacle[]" Usage="SpriteKit.SKNode.GetObstaclesFromNodeBounds nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("obstaclesFromNodeBounds:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPolygonObstacle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="SpriteKit.SKNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObstaclesFromNodePhysicsBodies">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPolygonObstacle[] GetObstaclesFromNodePhysicsBodies (SpriteKit.SKNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPolygonObstacle[] GetObstaclesFromNodePhysicsBodies(class SpriteKit.SKNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetObstaclesFromNodePhysicsBodies(SpriteKit.SKNode[])" />
      <MemberSignature Language="F#" Value="static member GetObstaclesFromNodePhysicsBodies : SpriteKit.SKNode[] -&gt; GameplayKit.GKPolygonObstacle[]" Usage="SpriteKit.SKNode.GetObstaclesFromNodePhysicsBodies nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("obstaclesFromNodePhysicsBodies:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPolygonObstacle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="SpriteKit.SKNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObstaclesFromSpriteTextures">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPolygonObstacle[] GetObstaclesFromSpriteTextures (SpriteKit.SKNode[] sprites, float accuracy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPolygonObstacle[] GetObstaclesFromSpriteTextures(class SpriteKit.SKNode[] sprites, float32 accuracy) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetObstaclesFromSpriteTextures(SpriteKit.SKNode[],System.Single)" />
      <MemberSignature Language="F#" Value="static member GetObstaclesFromSpriteTextures : SpriteKit.SKNode[] * single -&gt; GameplayKit.GKPolygonObstacle[]" Usage="SpriteKit.SKNode.GetObstaclesFromSpriteTextures (sprites, accuracy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("obstaclesFromSpriteTextures:accuracy:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPolygonObstacle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sprites" Type="SpriteKit.SKNode[]" />
        <Parameter Name="accuracy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sprites">To be added.</param>
        <param name="accuracy">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKAttributeValue GetValue (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class SpriteKit.SKAttributeValue GetValue(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.GetValue(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetValue : string -&gt; SpriteKit.SKAttributeValue&#xA;override this.GetValue : string -&gt; SpriteKit.SKAttributeValue" Usage="sKNode.GetValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("valueForAttributeNamed:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAttributeValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasActions">
      <MemberSignature Language="C#" Value="public virtual bool HasActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasActions" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.HasActions" />
      <MemberSignature Language="F#" Value="member this.HasActions : bool" Usage="SpriteKit.SKNode.HasActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("hasActions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that tells whether the node is currently running actions.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public virtual bool Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Hidden" />
      <MemberSignature Language="F#" Value="member this.Hidden : bool with get, set" Usage="SpriteKit.SKNode.Hidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isHidden")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setHidden:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that tells whether the node and its descendants are rendered to the screen.</summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InParentHierarchy">
      <MemberSignature Language="C#" Value="public virtual bool InParentHierarchy (SpriteKit.SKNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InParentHierarchy(class SpriteKit.SKNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.InParentHierarchy(SpriteKit.SKNode)" />
      <MemberSignature Language="F#" Value="abstract member InParentHierarchy : SpriteKit.SKNode -&gt; bool&#xA;override this.InParentHierarchy : SpriteKit.SKNode -&gt; bool" Usage="sKNode.InParentHierarchy node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("inParentHierarchy:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="SpriteKit.SKNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>Returns <see langword="true" /> if the current node is in the hierarchy below <paramref name="node" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertChild">
      <MemberSignature Language="C#" Value="public virtual void InsertChild (SpriteKit.SKNode node, nint index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertChild(class SpriteKit.SKNode node, valuetype System.nint index) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.InsertChild(SpriteKit.SKNode,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member InsertChild : SpriteKit.SKNode * nint -&gt; unit&#xA;override this.InsertChild : SpriteKit.SKNode * nint -&gt; unit" Usage="sKNode.InsertChild (node, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("insertChild:atIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="SpriteKit.SKNode" />
        <Parameter Name="index" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="index">To be added.</param>
        <summary>Inserts <paramref name="node" /> at the position that is specified by <paramref name="index" /> into the list of this node's children.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectsNode">
      <MemberSignature Language="C#" Value="public virtual bool IntersectsNode (SpriteKit.SKNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IntersectsNode(class SpriteKit.SKNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.IntersectsNode(SpriteKit.SKNode)" />
      <MemberSignature Language="F#" Value="abstract member IntersectsNode : SpriteKit.SKNode -&gt; bool&#xA;override this.IntersectsNode : SpriteKit.SKNode -&gt; bool" Usage="sKNode.IntersectsNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("intersectsNode:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="SpriteKit.SKNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>Returns <see langword="true" /> if the current node's frame intersects with the frame of the specified <paramref name="node" />, not counting the children of either node.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public virtual bool IsEqual (SpriteKit.SKNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEqual(class SpriteKit.SKNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.IsEqual(SpriteKit.SKNode)" />
      <MemberSignature Language="F#" Value="override this.IsEqual : SpriteKit.SKNode -&gt; bool" Usage="sKNode.IsEqual node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("isEqualToNode:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="SpriteKit.SKNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToParent">
      <MemberSignature Language="C#" Value="public virtual void MoveToParent (SpriteKit.SKNode parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToParent(class SpriteKit.SKNode parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.MoveToParent(SpriteKit.SKNode)" />
      <MemberSignature Language="F#" Value="abstract member MoveToParent : SpriteKit.SKNode -&gt; unit&#xA;override this.MoveToParent : SpriteKit.SKNode -&gt; unit" Usage="sKNode.MoveToParent parent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("moveToParent:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="SpriteKit.SKNode" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <summary>Changes the <see cref="P:SpriteKit.SKNode.Parent" /> of this <see cref="T:SpriteKit.SKNode" /> to <paramref name="parent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="SpriteKit.SKNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("name")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setName:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("name", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setName:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name that is used when searching for the node.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObstaclesFromNodeBounds">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPolygonObstacle[] ObstaclesFromNodeBounds (SpriteKit.SKNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPolygonObstacle[] ObstaclesFromNodeBounds(class SpriteKit.SKNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.ObstaclesFromNodeBounds(SpriteKit.SKNode[])" />
      <MemberSignature Language="F#" Value="static member ObstaclesFromNodeBounds : SpriteKit.SKNode[] -&gt; GameplayKit.GKPolygonObstacle[]" Usage="SpriteKit.SKNode.ObstaclesFromNodeBounds nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("obstaclesFromNodeBounds:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPolygonObstacle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="SpriteKit.SKNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <summary>Creates a new <see cref="T:GameplayKit.GKPolygonObstacle" /> for each <see cref="T:SpriteKit.SKNode" /> in <paramref name="nodes" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObstaclesFromNodePhysicsBodies">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPolygonObstacle[] ObstaclesFromNodePhysicsBodies (SpriteKit.SKNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPolygonObstacle[] ObstaclesFromNodePhysicsBodies(class SpriteKit.SKNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.ObstaclesFromNodePhysicsBodies(SpriteKit.SKNode[])" />
      <MemberSignature Language="F#" Value="static member ObstaclesFromNodePhysicsBodies : SpriteKit.SKNode[] -&gt; GameplayKit.GKPolygonObstacle[]" Usage="SpriteKit.SKNode.ObstaclesFromNodePhysicsBodies nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("obstaclesFromNodePhysicsBodies:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPolygonObstacle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="SpriteKit.SKNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <summary>Creates a new <see cref="T:GameplayKit.GKPolygonObstacle" /> for each <see cref="P:SpriteKit.SKNode.PhysicsBody" /> in the <see cref="T:SpriteKit.SKNode" /> object in <paramref name="nodes" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObstaclesFromSpriteTextures">
      <MemberSignature Language="C#" Value="public static GameplayKit.GKPolygonObstacle[] ObstaclesFromSpriteTextures (SpriteKit.SKNode[] sprites, float accuracy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKPolygonObstacle[] ObstaclesFromSpriteTextures(class SpriteKit.SKNode[] sprites, float32 accuracy) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.ObstaclesFromSpriteTextures(SpriteKit.SKNode[],System.Single)" />
      <MemberSignature Language="F#" Value="static member ObstaclesFromSpriteTextures : SpriteKit.SKNode[] * single -&gt; GameplayKit.GKPolygonObstacle[]" Usage="SpriteKit.SKNode.ObstaclesFromSpriteTextures (sprites, accuracy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("obstaclesFromSpriteTextures:accuracy:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GameplayKit.GKPolygonObstacle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sprites" Type="SpriteKit.SKNode[]" />
        <Parameter Name="accuracy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sprites">To be added.</param>
        <param name="accuracy">To be added.</param>
        <summary>Creates a new <see cref="T:GameplayKit.GKPolygonObstacle" /> by converting the <see cref="P:SpriteKit.SKSpriteNode.Texture" /> of each <see cref="T:SpriteKit.SKNode" /> object in <paramref name="nodes" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKNode Parent" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : SpriteKit.SKNode" Usage="SpriteKit.SKNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("parent")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets this node's parent.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentFocusEnvironment">
      <MemberSignature Language="C#" Value="public virtual UIKit.IUIFocusEnvironment ParentFocusEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.IUIFocusEnvironment ParentFocusEnvironment" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.ParentFocusEnvironment" />
      <MemberSignature Language="F#" Value="member this.ParentFocusEnvironment : UIKit.IUIFocusEnvironment" Usage="SpriteKit.SKNode.ParentFocusEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("parentFocusEnvironment")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("parentFocusEnvironment", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIFocusEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent focus environment.</summary>
        <value>The parent focus environment.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paused">
      <MemberSignature Language="C#" Value="public virtual bool Paused { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Paused" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Paused" />
      <MemberSignature Language="F#" Value="member this.Paused : bool with get, set" Usage="SpriteKit.SKNode.Paused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isPaused")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setPaused:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that causes this node and its descendants to be skipped when actions are processed for the scene. <see langword="true" /> causes them to be skipped.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicsBody">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKPhysicsBody PhysicsBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKPhysicsBody PhysicsBody" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.PhysicsBody" />
      <MemberSignature Language="F#" Value="member this.PhysicsBody : SpriteKit.SKPhysicsBody with get, set" Usage="SpriteKit.SKNode.PhysicsBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("physicsBody")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setPhysicsBody:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("physicsBody", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setPhysicsBody:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKPhysicsBody</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the physics body, if any, that controls the node's position and rotation.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint Position" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Position" />
      <MemberSignature Language="F#" Value="member this.Position : CoreGraphics.CGPoint with get, set" Usage="SpriteKit.SKNode.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("position")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setPosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the node's position.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredFocusedView">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIView PreferredFocusedView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIView PreferredFocusedView" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.PreferredFocusedView" />
      <MemberSignature Language="F#" Value="member this.PreferredFocusedView : UIKit.UIView" Usage="SpriteKit.SKNode.PreferredFocusedView" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:UIKit.IUIFocusEnvironment.PreferredFocusedView</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'PreferredFocusEnvironments' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("preferredFocusedView")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'PreferredFocusEnvironments' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("preferredFocusedView", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredFocusEnvironments">
      <MemberSignature Language="C#" Value="public virtual UIKit.IUIFocusEnvironment[] PreferredFocusEnvironments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.IUIFocusEnvironment[] PreferredFocusEnvironments" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.PreferredFocusEnvironments" />
      <MemberSignature Language="F#" Value="member this.PreferredFocusEnvironments : UIKit.IUIFocusEnvironment[]" Usage="SpriteKit.SKNode.PreferredFocusEnvironments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("preferredFocusEnvironments")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("preferredFocusEnvironments", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIFocusEnvironment[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReachConstraints">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKReachConstraints ReachConstraints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKReachConstraints ReachConstraints" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.ReachConstraints" />
      <MemberSignature Language="F#" Value="member this.ReachConstraints : SpriteKit.SKReachConstraints with get, set" Usage="SpriteKit.SKNode.ReachConstraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("reachConstraints")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setReachConstraints:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("reachConstraints", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setReachConstraints:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKReachConstraints</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraints that operate on the node for inverse kinematic reaching.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActionForKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveActionForKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveActionForKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RemoveActionForKey(System.String)" />
      <MemberSignature Language="F#" Value="abstract member RemoveActionForKey : string -&gt; unit&#xA;override this.RemoveActionForKey : string -&gt; unit" Usage="sKNode.RemoveActionForKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeActionForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>Removes the action that is identified by <paramref name="key" />, if present.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllActions">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RemoveAllActions" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllActions : unit -&gt; unit&#xA;override this.RemoveAllActions : unit -&gt; unit" Usage="sKNode.RemoveAllActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeAllActions")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all the actions from the node.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildren">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RemoveAllChildren" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllChildren : unit -&gt; unit&#xA;override this.RemoveAllChildren : unit -&gt; unit" Usage="sKNode.RemoveAllChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeAllChildren")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all of the node's child nodes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChildren">
      <MemberSignature Language="C#" Value="public virtual void RemoveChildren (SpriteKit.SKNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveChildren(class SpriteKit.SKNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RemoveChildren(SpriteKit.SKNode[])" />
      <MemberSignature Language="F#" Value="abstract member RemoveChildren : SpriteKit.SKNode[] -&gt; unit&#xA;override this.RemoveChildren : SpriteKit.SKNode[] -&gt; unit" Usage="sKNode.RemoveChildren nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeChildrenInArray:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="SpriteKit.SKNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">To be added.</param>
        <summary>Removes the specified list of nodes from the current node's list of child nodes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromParent">
      <MemberSignature Language="C#" Value="public virtual void RemoveFromParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RemoveFromParent" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromParent : unit -&gt; unit&#xA;override this.RemoveFromParent : unit -&gt; unit" Usage="sKNode.RemoveFromParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeFromParent")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes this node from its parent.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAction">
      <MemberSignature Language="C#" Value="public virtual void RunAction (SpriteKit.SKAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAction(class SpriteKit.SKAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RunAction(SpriteKit.SKAction)" />
      <MemberSignature Language="F#" Value="abstract member RunAction : SpriteKit.SKAction -&gt; unit&#xA;override this.RunAction : SpriteKit.SKAction -&gt; unit" Usage="sKNode.RunAction action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("runAction:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="SpriteKit.SKAction" />
      </Parameters>
      <Docs>
        <param name="action">The action to add and run.</param>
        <summary>Adds an action to the node that will first be processed in the next animation loop.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAction">
      <MemberSignature Language="C#" Value="public virtual void RunAction (SpriteKit.SKAction action, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAction(class SpriteKit.SKAction action, class System.Action completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RunAction(SpriteKit.SKAction,System.Action)" />
      <MemberSignature Language="F#" Value="abstract member RunAction : SpriteKit.SKAction * Action -&gt; unit&#xA;override this.RunAction : SpriteKit.SKAction * Action -&gt; unit" Usage="sKNode.RunAction (action, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("runAction:completion:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="SpriteKit.SKAction" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="action">The action to add and run.</param>
        <param name="completionHandler">A handler to run after the action completes.</param>
        <summary>Adds an action to the node that will be processed in the next animation loop, and calls <paramref name="completionHandler" /> after the action completes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAction">
      <MemberSignature Language="C#" Value="public virtual void RunAction (SpriteKit.SKAction action, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAction(class SpriteKit.SKAction action, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RunAction(SpriteKit.SKAction,System.String)" />
      <MemberSignature Language="F#" Value="abstract member RunAction : SpriteKit.SKAction * string -&gt; unit&#xA;override this.RunAction : SpriteKit.SKAction * string -&gt; unit" Usage="sKNode.RunAction (action, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("runAction:withKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="SpriteKit.SKAction" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">The action to add and run.</param>
        <param name="key">A key for the action.</param>
        <summary>Adds an action to the node, accessible with the specified <paramref name="key" />, that will be processed in the next animation loop.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RunActionAsync (SpriteKit.SKAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RunActionAsync(class SpriteKit.SKAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.RunActionAsync(SpriteKit.SKAction)" />
      <MemberSignature Language="F#" Value="abstract member RunActionAsync : SpriteKit.SKAction -&gt; System.Threading.Tasks.Task&#xA;override this.RunActionAsync : SpriteKit.SKAction -&gt; System.Threading.Tasks.Task" Usage="sKNode.RunActionAsync action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="SpriteKit.SKAction" />
      </Parameters>
      <Docs>
        <param name="action">The action to add and run.</param>
        <summary>Adds an action to the node that will be processed in the next animation loop, and calls <paramref name="completionHandler" /> after the action completes.</summary>
        <returns>A task that represents the asynchronous RunAction operation</returns>
        <remarks>
          <para copied="true">The RunActionAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scene">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKScene Scene { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKScene Scene" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Scene" />
      <MemberSignature Language="F#" Value="member this.Scene : SpriteKit.SKScene" Usage="SpriteKit.SKNode.Scene" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("scene")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKScene</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the scene in which the node is processed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNeedsFocusUpdate">
      <MemberSignature Language="C#" Value="public virtual void SetNeedsFocusUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNeedsFocusUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.SetNeedsFocusUpdate" />
      <MemberSignature Language="F#" Value="abstract member SetNeedsFocusUpdate : unit -&gt; unit&#xA;override this.SetNeedsFocusUpdate : unit -&gt; unit" Usage="sKNode.SetNeedsFocusUpdate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:UIKit.IUIFocusEnvironment.SetNeedsFocusUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setNeedsFocusUpdate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="C#" Value="public virtual void SetScale (nfloat scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScale(valuetype System.nfloat scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.SetScale(System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member SetScale : nfloat -&gt; unit&#xA;override this.SetScale : nfloat -&gt; unit" Usage="sKNode.SetScale scale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setScale:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>Sets the X- and Y-scales to <paramref name="scale" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (SpriteKit.SKAttributeValue value, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(class SpriteKit.SKAttributeValue value, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.SetValue(SpriteKit.SKAttributeValue,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetValue : SpriteKit.SKAttributeValue * string -&gt; unit&#xA;override this.SetValue : SpriteKit.SKAttributeValue * string -&gt; unit" Usage="sKNode.SetValue (value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setValue:forAttributeNamed:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Attributes are only available for node classes supporting SKShader (see SKSpriteNode etc.).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="SpriteKit.SKAttributeValue" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUpdateFocus">
      <MemberSignature Language="C#" Value="public virtual bool ShouldUpdateFocus (UIKit.UIFocusUpdateContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldUpdateFocus(class UIKit.UIFocusUpdateContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.ShouldUpdateFocus(UIKit.UIFocusUpdateContext)" />
      <MemberSignature Language="F#" Value="abstract member ShouldUpdateFocus : UIKit.UIFocusUpdateContext -&gt; bool&#xA;override this.ShouldUpdateFocus : UIKit.UIFocusUpdateContext -&gt; bool" Usage="sKNode.ShouldUpdateFocus context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:UIKit.IUIFocusEnvironment.ShouldUpdateFocus(UIKit.UIFocusUpdateContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("shouldUpdateFocusInContext:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="UIKit.UIFocusUpdateContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public virtual nfloat Speed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Speed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.Speed" />
      <MemberSignature Language="F#" Value="member this.Speed : nfloat with get, set" Usage="SpriteKit.SKNode.Speed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("speed")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets a value that controls the speed at which actions are run on the node. 1.0 corresponds to normal speed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Internal.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFocusIfNeeded">
      <MemberSignature Language="C#" Value="public virtual void UpdateFocusIfNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFocusIfNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKNode.UpdateFocusIfNeeded" />
      <MemberSignature Language="F#" Value="abstract member UpdateFocusIfNeeded : unit -&gt; unit&#xA;override this.UpdateFocusIfNeeded : unit -&gt; unit" Usage="sKNode.UpdateFocusIfNeeded " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:UIKit.IUIFocusEnvironment.UpdateFocusIfNeeded</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("updateFocusIfNeeded")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserData">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSMutableDictionary UserData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSMutableDictionary UserData" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.UserData" />
      <MemberSignature Language="F#" Value="member this.UserData : Foundation.NSMutableDictionary with get, set" Usage="SpriteKit.SKNode.UserData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("userData")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setUserData:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("userData", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setUserData:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSMutableDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the dictionary of values that the application developer can use to store custom data on the node.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserInteractionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool UserInteractionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserInteractionEnabled" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.UserInteractionEnabled" />
      <MemberSignature Language="F#" Value="member this.UserInteractionEnabled : bool with get, set" Usage="SpriteKit.SKNode.UserInteractionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isUserInteractionEnabled")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setUserInteractionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that controls whether the node responds to touch.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XScale">
      <MemberSignature Language="C#" Value="public virtual nfloat XScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat XScale" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.XScale" />
      <MemberSignature Language="F#" Value="member this.XScale : nfloat with get, set" Usage="SpriteKit.SKNode.XScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("xScale")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setXScale:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the scale factor for the X direction.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YScale">
      <MemberSignature Language="C#" Value="public virtual nfloat YScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat YScale" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.YScale" />
      <MemberSignature Language="F#" Value="member this.YScale : nfloat with get, set" Usage="SpriteKit.SKNode.YScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("yScale")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setYScale:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the scale factor for the Y direction..</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZPosition">
      <MemberSignature Language="C#" Value="public virtual nfloat ZPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ZPosition" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.ZPosition" />
      <MemberSignature Language="F#" Value="member this.ZPosition : nfloat with get, set" Usage="SpriteKit.SKNode.ZPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("zPosition")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setZPosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or set the node's position in the Z direction.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZRotation">
      <MemberSignature Language="C#" Value="public virtual nfloat ZRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ZRotation" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKNode.ZRotation" />
      <MemberSignature Language="F#" Value="member this.ZRotation : nfloat with get, set" Usage="SpriteKit.SKNode.ZRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("zRotation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setZRotation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the node's rotation about the Z axis.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
