<Type Name="SKEmitterNode" FullName="SpriteKit.SKEmitterNode">
  <TypeSignature Language="C#" Value="public class SKEmitterNode : SpriteKit.SKNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKEmitterNode extends SpriteKit.SKNode" />
  <TypeSignature Language="DocId" Value="T:SpriteKit.SKEmitterNode" />
  <TypeSignature Language="F#" Value="type SKEmitterNode = class&#xA;    inherit SKNode" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SpriteKit.SKNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("SKEmitterNode", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A  <see cref="T:SpriteKit.SKNode" /> that produces colored and textured particles.</summary>
    <remarks>
      <para>Emitted particles are not directly accessible to the application developer; their behavior can be controlled either via the creation parameters configurable in <see cref="T:SpriteKit.SKEmitterNode" /> or by a <see cref="T:SpriteKit.SKKeyframeSequence" />.</para>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/SpriteKit/Reference/SKEmitterNode_Ref/index.html">Apple documentation for <c>SKEmitterNode</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKEmitterNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKEmitterNode (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new SpriteKit.SKEmitterNode : Foundation.NSCoder -&gt; SpriteKit.SKEmitterNode" Usage="new SpriteKit.SKEmitterNode coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SKEmitterNode (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new SpriteKit.SKEmitterNode : Foundation.NSObjectFlag -&gt; SpriteKit.SKEmitterNode" Usage="new SpriteKit.SKEmitterNode t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal SKEmitterNode (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new SpriteKit.SKEmitterNode : nativeint -&gt; SpriteKit.SKEmitterNode" Usage="new SpriteKit.SKEmitterNode handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceSimulationTime">
      <MemberSignature Language="C#" Value="public virtual void AdvanceSimulationTime (double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceSimulationTime(float64 sec) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.AdvanceSimulationTime(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member AdvanceSimulationTime : double -&gt; unit&#xA;override this.AdvanceSimulationTime : double -&gt; unit" Usage="sKEmitterNode.AdvanceSimulationTime sec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("advanceSimulationTime:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="sec">To be added.</param>
        <summary>Advances the emitter's simulation time, which emits nwe particles and advances emitted particles.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeValues">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary&lt;Foundation.NSString,SpriteKit.SKAttributeValue&gt; AttributeValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary`2&lt;class Foundation.NSString, class SpriteKit.SKAttributeValue&gt; AttributeValues" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.AttributeValues" />
      <MemberSignature Language="F#" Value="member this.AttributeValues : Foundation.NSDictionary&lt;Foundation.NSString, SpriteKit.SKAttributeValue&gt; with get, set" Usage="SpriteKit.SKEmitterNode.AttributeValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("attributeValues", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAttributeValues:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary&lt;Foundation.NSString,SpriteKit.SKAttributeValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a dictionary of attribute values for the attached shader.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="SpriteKit.SKEmitterNode.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sKEmitterNode.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the SKEmitterNode object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the SKEmitterNode class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the SKEmitterNode ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmissionAngle">
      <MemberSignature Language="C#" Value="public virtual nfloat EmissionAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat EmissionAngle" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.EmissionAngle" />
      <MemberSignature Language="F#" Value="member this.EmissionAngle : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.EmissionAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("emissionAngle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setEmissionAngle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average angle, in radians, at which particles are admitted.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmissionAngleRange">
      <MemberSignature Language="C#" Value="public virtual nfloat EmissionAngleRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat EmissionAngleRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.EmissionAngleRange" />
      <MemberSignature Language="F#" Value="member this.EmissionAngleRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.EmissionAngleRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("emissionAngleRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setEmissionAngleRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range about the emission angle from which particles are emitted.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldBitMask">
      <MemberSignature Language="C#" Value="public virtual uint FieldBitMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 FieldBitMask" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.FieldBitMask" />
      <MemberSignature Language="F#" Value="member this.FieldBitMask : uint32 with get, set" Usage="SpriteKit.SKEmitterNode.FieldBitMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("fieldBitMask")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFieldBitMask:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a mask that controls which physics fields interact with the emitted particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKAttributeValue GetValue (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class SpriteKit.SKAttributeValue GetValue(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.GetValue(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetValue : string -&gt; SpriteKit.SKAttributeValue" Usage="sKEmitterNode.GetValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("valueForAttributeNamed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAttributeValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key that specifies the attribute whose value to get.</param>
        <summary>Returns the attribute value for the specified <paramref name="key" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumParticlesToEmit">
      <MemberSignature Language="C#" Value="public virtual nuint NumParticlesToEmit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumParticlesToEmit" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.NumParticlesToEmit" />
      <MemberSignature Language="F#" Value="member this.NumParticlesToEmit : nuint with get, set" Usage="SpriteKit.SKEmitterNode.NumParticlesToEmit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("numParticlesToEmit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setNumParticlesToEmit:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the total number of particles that the emitter should emit. (However, a value of 0 indicates that the emitter will emit particles endlessly.)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleAction">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKAction ParticleAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKAction ParticleAction" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleAction" />
      <MemberSignature Language="F#" Value="member this.ParticleAction : SpriteKit.SKAction with get, set" Usage="SpriteKit.SKEmitterNode.ParticleAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleAction", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleAction:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an immutable action that new particles will execute.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleAlpha">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleAlpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleAlpha" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleAlpha" />
      <MemberSignature Language="F#" Value="member this.ParticleAlpha : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleAlpha")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleAlpha:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average transparency of new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleAlphaRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleAlphaRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleAlphaRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleAlphaRange" />
      <MemberSignature Language="F#" Value="member this.ParticleAlphaRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleAlphaRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleAlphaRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleAlphaRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range of transparency for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleAlphaSequence">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKKeyframeSequence ParticleAlphaSequence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKKeyframeSequence ParticleAlphaSequence" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleAlphaSequence" />
      <MemberSignature Language="F#" Value="member this.ParticleAlphaSequence : SpriteKit.SKKeyframeSequence with get, set" Usage="SpriteKit.SKEmitterNode.ParticleAlphaSequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleAlphaSequence", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleAlphaSequence:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKKeyframeSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that sets alpha, alpha range, and the rate of change of the alpha channel.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleAlphaSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleAlphaSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleAlphaSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleAlphaSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleAlphaSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleAlphaSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleAlphaSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleAlphaSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount that particle alpha will change per second.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleBirthRate">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleBirthRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleBirthRate" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleBirthRate" />
      <MemberSignature Language="F#" Value="member this.ParticleBirthRate : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleBirthRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleBirthRate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleBirthRate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount by which particles are created.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleBlendMode">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKBlendMode ParticleBlendMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SpriteKit.SKBlendMode ParticleBlendMode" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleBlendMode" />
      <MemberSignature Language="F#" Value="member this.ParticleBlendMode : SpriteKit.SKBlendMode with get, set" Usage="SpriteKit.SKEmitterNode.ParticleBlendMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleBlendMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleBlendMode:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKBlendMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the blending mode to use when blending particles into the frame buffer.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColor">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIColor ParticleColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor ParticleColor" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColor" />
      <MemberSignature Language="F#" Value="member this.ParticleColor : UIKit.UIColor with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColor", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColor:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorAlphaRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorAlphaRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorAlphaRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorAlphaRange" />
      <MemberSignature Language="F#" Value="member this.ParticleColorAlphaRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorAlphaRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorAlphaRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorAlphaRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range of alpha values, centered around the average particle alpha, for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorAlphaSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorAlphaSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorAlphaSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorAlphaSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleColorAlphaSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorAlphaSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorAlphaSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorAlphaSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount by which the alpha channel of the particle color changes per second.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorBlendFactor">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorBlendFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorBlendFactor" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorBlendFactor" />
      <MemberSignature Language="F#" Value="member this.ParticleColorBlendFactor : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorBlendFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorBlendFactor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorBlendFactor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average initial blend factor for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorBlendFactorRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorBlendFactorRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorBlendFactorRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorBlendFactorRange" />
      <MemberSignature Language="F#" Value="member this.ParticleColorBlendFactorRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorBlendFactorRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorBlendFactorRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorBlendFactorRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range of initial blend factors, centered around the average blend factor, for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorBlendFactorSequence">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKKeyframeSequence ParticleColorBlendFactorSequence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKKeyframeSequence ParticleColorBlendFactorSequence" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorBlendFactorSequence" />
      <MemberSignature Language="F#" Value="member this.ParticleColorBlendFactorSequence : SpriteKit.SKKeyframeSequence with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorBlendFactorSequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorBlendFactorSequence", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorBlendFactorSequence:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKKeyframeSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that represents the color blend factor, color blend factor range, and color blend factor speed.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorBlendFactorSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorBlendFactorSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorBlendFactorSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorBlendFactorSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleColorBlendFactorSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorBlendFactorSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorBlendFactorSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorBlendFactorSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount by which the color blend factor changes per second.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorBlueRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorBlueRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorBlueRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorBlueRange" />
      <MemberSignature Language="F#" Value="member this.ParticleColorBlueRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorBlueRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorBlueRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorBlueRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average value, of the blue channel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorBlueSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorBlueSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorBlueSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorBlueSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleColorBlueSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorBlueSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorBlueSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorBlueSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount by which the blue channel changes per second for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorGreenRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorGreenRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorGreenRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorGreenRange" />
      <MemberSignature Language="F#" Value="member this.ParticleColorGreenRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorGreenRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorGreenRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorGreenRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average value, of the green channel for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorGreenSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorGreenSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorGreenSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorGreenSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleColorGreenSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorGreenSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorGreenSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorGreenSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount by which the green channel changes per second for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorRedRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorRedRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorRedRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorRedRange" />
      <MemberSignature Language="F#" Value="member this.ParticleColorRedRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorRedRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorRedRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorRedRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average value, of the red channel for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorRedSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleColorRedSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleColorRedSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorRedSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleColorRedSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorRedSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorRedSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorRedSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount by which the red channel changes per second for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleColorSequence">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKKeyframeSequence ParticleColorSequence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKKeyframeSequence ParticleColorSequence" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleColorSequence" />
      <MemberSignature Language="F#" Value="member this.ParticleColorSequence : SpriteKit.SKKeyframeSequence with get, set" Usage="SpriteKit.SKEmitterNode.ParticleColorSequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleColorSequence", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleColorSequence:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKKeyframeSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that represents: the average color; the ranges for the alpha, red, blue, and green channels about their average values; and the alpha, red, blue, and green rates of change.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleLifetime">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleLifetime" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleLifetime" />
      <MemberSignature Language="F#" Value="member this.ParticleLifetime : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleLifetime")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleLifetime:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average particle lifetime.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleLifetimeRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleLifetimeRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleLifetimeRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleLifetimeRange" />
      <MemberSignature Language="F#" Value="member this.ParticleLifetimeRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleLifetimeRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleLifetimeRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleLifetimeRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average lifetime, of lifetimes for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticlePosition">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint ParticlePosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint ParticlePosition" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticlePosition" />
      <MemberSignature Language="F#" Value="member this.ParticlePosition : CoreGraphics.CGPoint with get, set" Usage="SpriteKit.SKEmitterNode.ParticlePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particlePosition")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticlePosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average position for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticlePositionRange">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGVector ParticlePositionRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGVector ParticlePositionRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticlePositionRange" />
      <MemberSignature Language="F#" Value="member this.ParticlePositionRange : CoreGraphics.CGVector with get, set" Usage="SpriteKit.SKEmitterNode.ParticlePositionRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particlePositionRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticlePositionRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average position, of positions for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleRenderOrder">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKParticleRenderOrder ParticleRenderOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SpriteKit.SKParticleRenderOrder ParticleRenderOrder" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleRenderOrder" />
      <MemberSignature Language="F#" Value="member this.ParticleRenderOrder : SpriteKit.SKParticleRenderOrder with get, set" Usage="SpriteKit.SKEmitterNode.ParticleRenderOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleRenderOrder", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleRenderOrder:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKParticleRenderOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The order in which particles are rendered.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleRotation">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleRotation" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleRotation" />
      <MemberSignature Language="F#" Value="member this.ParticleRotation : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleRotation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleRotation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average rotation for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleRotationRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleRotationRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleRotationRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleRotationRange" />
      <MemberSignature Language="F#" Value="member this.ParticleRotationRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleRotationRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleRotationRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleRotationRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average rotation, of rotations for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleRotationSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleRotationSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleRotationSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleRotationSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleRotationSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleRotationSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleRotationSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleRotationSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the rotation speed for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleScale">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleScale" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleScale" />
      <MemberSignature Language="F#" Value="member this.ParticleScale : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleScale")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleScale:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average scale for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleScaleRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleScaleRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleScaleRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleScaleRange" />
      <MemberSignature Language="F#" Value="member this.ParticleScaleRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleScaleRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleScaleRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleScaleRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average scale, of scales for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleScaleSequence">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKKeyframeSequence ParticleScaleSequence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKKeyframeSequence ParticleScaleSequence" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleScaleSequence" />
      <MemberSignature Language="F#" Value="member this.ParticleScaleSequence : SpriteKit.SKKeyframeSequence with get, set" Usage="SpriteKit.SKEmitterNode.ParticleScaleSequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleScaleSequence", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleScaleSequence:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKKeyframeSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that represents the scale, scale range, and scale speed for new particles</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleScaleSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleScaleSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleScaleSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleScaleSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleScaleSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleScaleSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleScaleSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleScaleSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the scale speed for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleSize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize ParticleSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize ParticleSize" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleSize" />
      <MemberSignature Language="F#" Value="member this.ParticleSize : CoreGraphics.CGSize with get, set" Usage="SpriteKit.SKEmitterNode.ParticleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average speed for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleSpeedRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleSpeedRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleSpeedRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleSpeedRange" />
      <MemberSignature Language="F#" Value="member this.ParticleSpeedRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleSpeedRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleSpeedRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleSpeedRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average speed, of speeds for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleTexture">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKTexture ParticleTexture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKTexture ParticleTexture" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleTexture" />
      <MemberSignature Language="F#" Value="member this.ParticleTexture : SpriteKit.SKTexture with get, set" Usage="SpriteKit.SKEmitterNode.ParticleTexture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleTexture", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleTexture:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKTexture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a texture to use when rendering particles.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleZPosition">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleZPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleZPosition" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleZPosition" />
      <MemberSignature Language="F#" Value="member this.ParticleZPosition : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleZPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleZPosition")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleZPosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets or sets the average Z position for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleZPositionRange">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleZPositionRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleZPositionRange" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleZPositionRange" />
      <MemberSignature Language="F#" Value="member this.ParticleZPositionRange : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleZPositionRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleZPositionRange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleZPositionRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the range, about the average Z position, of Z positions for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleZPositionSpeed">
      <MemberSignature Language="C#" Value="public virtual nfloat ParticleZPositionSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ParticleZPositionSpeed" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.ParticleZPositionSpeed" />
      <MemberSignature Language="F#" Value="member this.ParticleZPositionSpeed : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.ParticleZPositionSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("particleZPositionSpeed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setParticleZPositionSpeed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Z position speed for new particles.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSimulation">
      <MemberSignature Language="C#" Value="public virtual void ResetSimulation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetSimulation() cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.ResetSimulation" />
      <MemberSignature Language="F#" Value="abstract member ResetSimulation : unit -&gt; unit&#xA;override this.ResetSimulation : unit -&gt; unit" Usage="sKEmitterNode.ResetSimulation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resetSimulation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all current particles and begins emitting new particles.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (SpriteKit.SKAttributeValue value, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(class SpriteKit.SKAttributeValue value, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKEmitterNode.SetValue(SpriteKit.SKAttributeValue,System.String)" />
      <MemberSignature Language="F#" Value="override this.SetValue : SpriteKit.SKAttributeValue * string -&gt; unit" Usage="sKEmitterNode.SetValue (value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setValue:forAttributeNamed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="SpriteKit.SKAttributeValue" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The attribute value to set.</param>
        <param name="key">The key for the attribute to set.</param>
        <summary>Sets the attribute value at <paramref name="key" /> to the provided <paramref name="value" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shader">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKShader Shader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKShader Shader" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.Shader" />
      <MemberSignature Language="F#" Value="member this.Shader : SpriteKit.SKShader with get, set" Usage="SpriteKit.SKEmitterNode.Shader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("shader", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setShader:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKShader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a custom shader to use when rendering new particles.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNode">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKNode TargetNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKNode TargetNode" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.TargetNode" />
      <MemberSignature Language="F#" Value="member this.TargetNode : SpriteKit.SKNode with get, set" Usage="SpriteKit.SKEmitterNode.TargetNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("targetNode", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTargetNode:", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the node that will render the emitted particles.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XAcceleration">
      <MemberSignature Language="C#" Value="public virtual nfloat XAcceleration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat XAcceleration" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.XAcceleration" />
      <MemberSignature Language="F#" Value="member this.XAcceleration : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.XAcceleration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("xAcceleration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setXAcceleration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the particle acceleration in the X direction.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YAcceleration">
      <MemberSignature Language="C#" Value="public virtual nfloat YAcceleration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat YAcceleration" />
      <MemberSignature Language="DocId" Value="P:SpriteKit.SKEmitterNode.YAcceleration" />
      <MemberSignature Language="F#" Value="member this.YAcceleration : nfloat with get, set" Usage="SpriteKit.SKEmitterNode.YAcceleration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("yAcceleration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setYAcceleration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the particle acceleration in the Y direction.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
