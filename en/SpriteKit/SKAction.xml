<Type Name="SKAction" FullName="SpriteKit.SKAction">
  <TypeSignature Language="C#" Value="public class SKAction : Foundation.NSObject, Foundation.INSCoding, Foundation.INSCopying, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKAction extends Foundation.NSObject implements class Foundation.INSCoding, class Foundation.INSCopying, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("SKAction", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Modifies properties on a <see cref="T:SpriteKit.SKNode" />, often animating the changes. Sometimes reversible.</summary>
    <remarks>
      <para>Application developers use the static methods of <see cref="T:SpriteKit.SKAction" /> to create actions that can be applied to the <see cref="T:SpriteKit.SKNode" />s of a <see cref="T:SpriteKit.SKScene" />. Generally, animations are animated.</para>
      <para>The <see cref="M:SpriteKit.SKAction.Group" />, <see cref="M:SpriteKit.MKAction.RepeatAction" /> and <see cref="M:SpriteKit.MKAction.RepeatForever" />, and <see cref="M:SpriteKit.SKAction.Sequence" /> methods are composite actions that take, as parameters, children <see cref="T:SpriteKit.SKAction" />s. </para>
      <para>Once a <see cref="T:SpriteKit.SKAction" /> is created, application developers run it with the <see cref="M:SpriteKit.SKNode.RunAction" /> method, as shown in this example:</para>
      <example>
        <code lang="C#"><![CDATA[
var actions = SKAction.Group(
	new SKAction[] {
		SKAction.MoveBy(new CGVector(10, 10), 1),
		SKAction.FadeAlphaTo(0.3f, 1),
		SKAction.ScaleBy(0.8f, 1)
});

b.Node.RunAction(actions);          
          ]]></code>
      </example>
    </remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/SpriteKit/Reference/SKAction_Ref/index.html">Apple documentation for <c>SKAction</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKAction (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SKAction (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SKAction (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Animate">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Animate (SpriteKit.SKWarpGeometry[] warps, Foundation.NSNumber[] times);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Animate(class SpriteKit.SKWarpGeometry[] warps, class Foundation.NSNumber[] times) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("animateWithWarps:times:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warps" Type="SpriteKit.SKWarpGeometry[]" />
        <Parameter Name="times" Type="Foundation.NSNumber[]" />
      </Parameters>
      <Docs>
        <param name="warps">To be added.</param>
        <param name="times">To be added.</param>
        <summary>Creates and returns an action that distorts a node through the provided geometries at the specified times.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Animate">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Animate (SpriteKit.SKWarpGeometry[] warps, Foundation.NSNumber[] times, bool restore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Animate(class SpriteKit.SKWarpGeometry[] warps, class Foundation.NSNumber[] times, bool restore) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("animateWithWarps:times:restore:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warps" Type="SpriteKit.SKWarpGeometry[]" />
        <Parameter Name="times" Type="Foundation.NSNumber[]" />
        <Parameter Name="restore" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="warps">To be added.</param>
        <param name="times">To be added.</param>
        <param name="restore">To be added.</param>
        <summary>Creates and returns an action that distorts a node through the provided geometries at the specified times.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateWithNormalTextures">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction AnimateWithNormalTextures (SpriteKit.SKTexture[] textures, double secondsPerFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction AnimateWithNormalTextures(class SpriteKit.SKTexture[] textures, float64 secondsPerFrame) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("animateWithNormalTextures:timePerFrame:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textures" Type="SpriteKit.SKTexture[]" />
        <Parameter Name="secondsPerFrame" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textures">To be added.</param>
        <param name="secondsPerFrame">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> that animates changes to a <see cref="T:SpriteKit.SKSpriteNode" /> object's <see cref="P:SpriteKit.SKSpriteNode.NormalTexture" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateWithNormalTextures">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction AnimateWithNormalTextures (SpriteKit.SKTexture[] textures, double secondsPerFrame, bool resize, bool restore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction AnimateWithNormalTextures(class SpriteKit.SKTexture[] textures, float64 secondsPerFrame, bool resize, bool restore) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("animateWithNormalTextures:timePerFrame:resize:restore:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textures" Type="SpriteKit.SKTexture[]" />
        <Parameter Name="secondsPerFrame" Type="System.Double" />
        <Parameter Name="resize" Type="System.Boolean" />
        <Parameter Name="restore" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="textures">To be added.</param>
        <param name="secondsPerFrame">To be added.</param>
        <param name="resize">To be added.</param>
        <param name="restore">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> that animates changes to a <see cref="T:SpriteKit.SKSpriteNode" /> object's <see cref="P:SpriteKit.SKSpriteNode.NormalTexture" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateWithTextures">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction AnimateWithTextures (SpriteKit.SKTexture[] textures, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction AnimateWithTextures(class SpriteKit.SKTexture[] textures, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("animateWithTextures:timePerFrame:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textures" Type="SpriteKit.SKTexture[]" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textures">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>Creates an action that sequentially replaces <see cref="P:SpriteKit.SKSpriteNode.Texture" /> property of SKSpriteNode on which it is run with each texture that is contained in <paramref name="textures" />, every <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateWithTextures">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction AnimateWithTextures (SpriteKit.SKTexture[] textures, double sec, bool resize, bool restore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction AnimateWithTextures(class SpriteKit.SKTexture[] textures, float64 sec, bool resize, bool restore) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("animateWithTextures:timePerFrame:resize:restore:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textures" Type="SpriteKit.SKTexture[]" />
        <Parameter Name="sec" Type="System.Double" />
        <Parameter Name="resize" Type="System.Boolean" />
        <Parameter Name="restore" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="textures">To be added.</param>
        <param name="sec">To be added.</param>
        <param name="resize">To be added.</param>
        <param name="restore">To be added.</param>
        <summary>Creates an action that sequentially replaces the <see cref="P:SpriteKit.SKSpriteNode.Texture" /> property of the SKSpriteNode on which it is run with each texture that is contained in <paramref name="textures" />, every <paramref name="sec" /> seconds, resizing the sprite to match the current texture size if <paramref name="resize" /> is set to true.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorizeWithColor">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ColorizeWithColor (UIKit.UIColor color, nfloat colorBlendFactor, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ColorizeWithColor(class UIKit.UIColor color, valuetype System.nfloat colorBlendFactor, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("colorizeWithColor:colorBlendFactor:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="UIKit.UIColor" />
        <Parameter Name="colorBlendFactor" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="colorBlendFactor">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorizeWithColorBlendFactor">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ColorizeWithColorBlendFactor (nfloat colorBlendFactor, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ColorizeWithColorBlendFactor(valuetype System.nfloat colorBlendFactor, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("colorizeWithColorBlendFactor:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorBlendFactor" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="colorBlendFactor">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">Zone to use to allocate this object, or null to use the default zone.</param>
        <summary>Performs a copy of the underlying Objective-C object.</summary>
        <returns>This method performs a copy of the underlying Objective-C object state and returns a new instance of it.  It does not actually try to replicate any managed state.</returns>
        <remarks>Implementation of the INSCopyable interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Create (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Create(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("actionNamed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> with the specified <paramref name="name" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Create (string name, Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Create(string name, class Foundation.NSUrl url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("actionNamed:fromURL:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="url">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> with the specified <paramref name="name" />, as defined in the action file located at <paramref name="url" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Create (string name, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Create(string name, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("actionNamed:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> with the specified <paramref name="name" />, of the specified duration, in seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Create (string name, Foundation.NSUrl url, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Create(string name, class Foundation.NSUrl url, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("actionNamed:fromURL:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="url">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> with the specified <paramref name="name" />, as defined in the action file located at <paramref name="url" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplyAngularImpulse">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateApplyAngularImpulse (nfloat impulse, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateApplyAngularImpulse(valuetype System.nfloat impulse, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("applyAngularImpulse:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impulse" Type="System.nfloat" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="impulse">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplyForce">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateApplyForce (CoreGraphics.CGVector force, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateApplyForce(valuetype CoreGraphics.CGVector force, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("applyForce:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="CoreGraphics.CGVector" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> that applies <paramref name="force" /> to the center of gravity of a <see cref="T:SpriteKit.SKNode" /> object's <see cref="P:SpriteKit.SKNode.PhysicsBody" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplyForce">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateApplyForce (CoreGraphics.CGVector force, CoreGraphics.CGPoint point, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateApplyForce(valuetype CoreGraphics.CGVector force, valuetype CoreGraphics.CGPoint point, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("applyForce:atPoint:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="CoreGraphics.CGVector" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <param name="point">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplyImpulse">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateApplyImpulse (CoreGraphics.CGVector impulse, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateApplyImpulse(valuetype CoreGraphics.CGVector impulse, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("applyImpulse:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impulse" Type="CoreGraphics.CGVector" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="impulse">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> that applies the specified <paramref name="impulse" /> to the center of gravity of a <see cref="T:SpriteKit.SKNode" /> object's <see cref="P:SpriteKit.SKNode.PhysicsBody" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplyImpulse">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateApplyImpulse (CoreGraphics.CGVector impulse, CoreGraphics.CGPoint point, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateApplyImpulse(valuetype CoreGraphics.CGVector impulse, valuetype CoreGraphics.CGPoint point, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("applyImpulse:atPoint:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impulse" Type="CoreGraphics.CGVector" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="impulse">To be added.</param>
        <param name="point">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplyTorque">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateApplyTorque (nfloat torque, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateApplyTorque(valuetype System.nfloat torque, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("applyTorque:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="torque" Type="System.nfloat" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="torque">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeChargeBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeChargeBy (float by, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeChargeBy(float32 by, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeChargeBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="by" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="by">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> that changes the <see cref="P:SpriteKit.SKPhysicsBody.Charge" /> by the specified amount of a <see cref="T:SpriteKit.SKNode" /> object's <see cref="P:SpriteKit.SKNode.PhysicsBody" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeChargeTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeChargeTo (float newCharge, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeChargeTo(float32 newCharge, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeChargeTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCharge" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newCharge">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Factory method to create a <see cref="T:SpriteKit.SKAction" /> that changes the <see cref="P:SpriteKit.SKPhysicsBody.Charge" /> the specified of a <see cref="T:SpriteKit.SKNode" /> object's <see cref="P:SpriteKit.SKNode.PhysicsBody" /> to <paramref name="newCharge" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeMassBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeMassBy (float by, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeMassBy(float32 by, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeMassBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="by" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="by">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Alters the <see cref="P:SpriteKit.SKPhysicsBody.Mass" /> of a <see cref="T:SpriteKit.SKPhysicsBody" /> by the specified amount.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeMassTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeMassTo (float newMass, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeMassTo(float32 newMass, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeMassTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMass" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newMass">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Sets to <paramref name="newMass" /> the <see cref="P:SpriteKit.SKPhysicsBody.Mass" /> of a <see cref="T:SpriteKit.SKPhysicsBody" /> by the specified amount.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeObstructionBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeObstructionBy (float by, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeObstructionBy(float32 by, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeObstructionBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="by" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="by">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Changes the obstruction of an <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeObstructionTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeObstructionTo (float target, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeObstructionTo(float32 target, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeObstructionTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Sets the obstruction of an <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeOcclusionBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeOcclusionBy (float by, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeOcclusionBy(float32 by, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeOcclusionBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="by" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="by">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Changes the occlusion of a <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeOcclusionTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeOcclusionTo (float target, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeOcclusionTo(float32 target, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeOcclusionTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Sets the occlusion of a <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangePlaybackRate">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangePlaybackRate (float playbackRate, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangePlaybackRate(float32 playbackRate, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changePlaybackRateTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playbackRate" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="playbackRate">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Sets the playback speed of an <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangePlaybackRateBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangePlaybackRateBy (float playbackRate, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangePlaybackRateBy(float32 playbackRate, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changePlaybackRateBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playbackRate" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="playbackRate">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Changes the playback speed of an <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeReverbBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeReverbBy (float by, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeReverbBy(float32 by, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeReverbBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="by" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="by">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Changes the reverb of an <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeReverbTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeReverbTo (float target, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeReverbTo(float32 target, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeReverbTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Sets the reverb of an <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeVolume">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeVolume (float newVolume, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeVolume(float32 newVolume, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeVolumeTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newVolume" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newVolume">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Sets the volume of a <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangeVolumeBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateChangeVolumeBy (float by, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateChangeVolumeBy(float32 by, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("changeVolumeBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="by" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="by">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Changes the volume of an <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePause">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreatePause ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreatePause() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pause")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Factory method to create an <see cref="T:SpriteKit.SKAction" /> that pauses playback of an audio node.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePlay">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreatePlay ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreatePlay() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("play")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Factory method to create an <see cref="T:SpriteKit.SKAction" /> that begins playback of an audio node.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStereoPanBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateStereoPanBy (float by, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateStereoPanBy(float32 by, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stereoPanBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="by" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="by">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Factory method to create an <see cref="T:SpriteKit.SKAction" /> that modifies the stereo panning of a <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStereoPanTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateStereoPanTo (float target, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateStereoPanTo(float32 target, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stereoPanTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Factory method to create an <see cref="T:SpriteKit.SKAction" /> that sets the stereo panning of a <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStop">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CreateStop ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CreateStop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stop")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Factory method to create an <see cref="T:SpriteKit.SKAction" /> that stops and resets the playback of a <see cref="T:SpriteKit.SKAudioNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomActionWithDuration">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction CustomActionWithDuration (double seconds, SpriteKit.SKActionDurationHandler actionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction CustomActionWithDuration(float64 seconds, class SpriteKit.SKActionDurationHandler actionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("customActionWithDuration:actionBlock:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
        <Parameter Name="actionHandler" Type="SpriteKit.SKActionDurationHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDSKActionDurationHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <param name="actionHandler">To be added.</param>
        <summary>A custom action that repeats for some amount of time.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The <paramref name="actionHandler" /> is called repeatedly until <paramref name="seconds" /> has passed.</para>
          <para>The custom action is not reversible: <see cref="P:SpriteKit.SKAction.ReversedAction" /> returns an <see cref="T:SpriteKit.SKAction" /> whose behavior is the <paramref name="actionHandler" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual double Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("duration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDuration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the expected duration of the animation action when its speed is set to 1.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeTo">
      <MemberSignature Language="C#" Value="public virtual void EncodeTo (Foundation.NSCoder encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncodeTo(class Foundation.NSCoder encoder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("encodeWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="encoder">The encoder object where the state of the object will be stored</param>
        <summary>Encodes the state of the object on the provided encoder</summary>
        <remarks>
          <para>This method is part of the <see cref="T:Foundation.NSCoding" /> protocol and is used by applications to preserve the state of the object into an archive.</para>
          <para>Users will typically create a <see cref="T:Foundation.NSKeyedArchiver" /> and then invoke the <see cref="M:Foundation.NSKeyedArchiver.ArchiveRootObjectToFile" /> which will call into this method</para>
          <para>If developers want to allow their object to be archived, they should override this method and store their state in using the provided <paramref name="encoder" /> parameter.   In addition, developers should also implement a constructor that takes an NSCoder argument and is exported with [Export ("initWithCoder:")]</para>
          <example>
            <code lang="C#"><![CDATA[public void override EncodeTo (NSCoder coder){
    coder.Encode (1, key: "version");
    coder.Encode (userName, key: "userName");
    coder.Encode (hostName, key: "hostName");]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FadeAlphaBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FadeAlphaBy (nfloat factor, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FadeAlphaBy(valuetype System.nfloat factor, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fadeAlphaBy:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FadeAlphaTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FadeAlphaTo (nfloat alpha, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FadeAlphaTo(valuetype System.nfloat alpha, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fadeAlphaTo:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FadeInWithDuration">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FadeInWithDuration (double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FadeInWithDuration(float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fadeInWithDuration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="sec">To be added.</param>
        <summary>Creates an action that changes the alpha channel of the <see cref="P:SpriteKit.SKSpriteNode.Color" /> property on the SKSpriteNode on which it is run to 1, over <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FadeOutWithDuration">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FadeOutWithDuration (double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FadeOutWithDuration(float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fadeOutWithDuration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="sec">To be added.</param>
        <summary>Creates an action that changes the alpha channel of the <see cref="P:SpriteKit.SKSpriteNode.Color" /> property on the SKSpriteNode on which it is run to 0, over <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Falloff">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Falloff (float to, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Falloff(float32 to, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the 'FalloffBy' method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="to">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Creates an action that changes the <see cref="P:SpriteKit.SKFieldNode.Falloff" /> property of the SKFieldNode to which is applied to the specified value over <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FalloffBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FalloffBy (float to, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FalloffBy(float32 to, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("falloffBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="to">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Returns an action that animates the rate at which the effect of a physics field is reduced by distance.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FalloffTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FalloffTo (float falloff, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FalloffTo(float32 falloff, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("falloffTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="falloff" Type="System.Single" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="falloff">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>Returns an action that animates the rate at which the effect of a physics field is reduced by distance.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowPath">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FollowPath (CoreGraphics.CGPath path, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FollowPath(class CoreGraphics.CGPath path, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("followPath:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="CoreGraphics.CGPath" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>Creates an action that moves the <see cref="T:SpriteKit.SKNode" /> on which it is run over the <paramref name="path" />, taking <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowPath">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FollowPath (CoreGraphics.CGPath path, nfloat speed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FollowPath(class CoreGraphics.CGPath path, valuetype System.nfloat speed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("followPath:speed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="CoreGraphics.CGPath" />
        <Parameter Name="speed" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="speed">To be added.</param>
        <summary>Creates an action that moves the <see cref="T:SpriteKit.SKNode" /> on which it is run over the <paramref name="path" />, at the specified <paramref name="speed" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowPath">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FollowPath (CoreGraphics.CGPath path, bool offset, bool orient, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FollowPath(class CoreGraphics.CGPath path, bool offset, bool orient, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("followPath:asOffset:orientToPath:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="CoreGraphics.CGPath" />
        <Parameter Name="offset" Type="System.Boolean" />
        <Parameter Name="orient" Type="System.Boolean" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="orient">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>Creates an action that moves the <see cref="T:SpriteKit.SKNode" /> on which it is run over the <paramref name="path" />, with the specified offset and orientation, taking <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowPath">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction FollowPath (CoreGraphics.CGPath path, bool offset, bool orient, nfloat speed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction FollowPath(class CoreGraphics.CGPath path, bool offset, bool orient, valuetype System.nfloat speed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("followPath:asOffset:orientToPath:speed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="CoreGraphics.CGPath" />
        <Parameter Name="offset" Type="System.Boolean" />
        <Parameter Name="orient" Type="System.Boolean" />
        <Parameter Name="speed" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="orient">To be added.</param>
        <param name="speed">To be added.</param>
        <summary>Creates an action that moves the <see cref="T:SpriteKit.SKNode" /> on which it is run over the <paramref name="path" />, with the specified offset, orientation, and speed.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Group (SpriteKit.SKAction[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Group(class SpriteKit.SKAction[] actions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("group:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="SpriteKit.SKAction[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">To be added.</param>
        <summary>Creates an action that starts a list of actions at the same time.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Hide() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("hide")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an action that hides the <see cref="T:SpriteKit.SKNode" /> on which it is run.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction MoveBy (CoreGraphics.CGVector delta, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction MoveBy(valuetype CoreGraphics.CGVector delta, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveBy:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="CoreGraphics.CGVector" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="delta">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Creates an action that moves the <see cref="T:SpriteKit.SKNode" /> on which it is run in the magnitude and direction of <paramref name="delta" />, over <paramref name="duration" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction MoveBy (nfloat deltaX, nfloat deltaY, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction MoveBy(valuetype System.nfloat deltaX, valuetype System.nfloat deltaY, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveByX:y:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaX" Type="System.nfloat" />
        <Parameter Name="deltaY" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="deltaX">To be added.</param>
        <param name="deltaY">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction MoveTo (CoreGraphics.CGPoint location, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction MoveTo(valuetype CoreGraphics.CGPoint location, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveTo:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="CoreGraphics.CGPoint" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToX">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction MoveToX (nfloat x, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction MoveToX(valuetype System.nfloat x, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveToX:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToY">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction MoveToY (nfloat y, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction MoveToY(valuetype System.nfloat y, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("moveToY:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelector">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction PerformSelector (ObjCRuntime.Selector selector, Foundation.NSObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction PerformSelector(class ObjCRuntime.Selector selector, class Foundation.NSObject target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performSelector:onTarget:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="ObjCRuntime.Selector" />
        <Parameter Name="target" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="selector">To be added.</param>
        <param name="target">To be added.</param>
        <summary>Creates an action that runs <paramref name="selector" /> on <paramref name="target" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySoundFileNamed">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction PlaySoundFileNamed (string soundFile, bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction PlaySoundFileNamed(string soundFile, bool wait) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("playSoundFileNamed:waitForCompletion:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soundFile" Type="System.String" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="soundFile">To be added.</param>
        <param name="wait">To be added.</param>
        <summary>Plays the sound file that is located in the app's bundle and is named <paramref name="soundFile" />, setting the action duration to the length of the sound file if <paramref name="wait" /> is set to <see langword="true" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReachTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ReachTo (CoreGraphics.CGPoint position, SpriteKit.SKNode rootNode, double secs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ReachTo(valuetype CoreGraphics.CGPoint position, class SpriteKit.SKNode rootNode, float64 secs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("reachTo:rootNode:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="CoreGraphics.CGPoint" />
        <Parameter Name="rootNode" Type="SpriteKit.SKNode" />
        <Parameter Name="secs" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rootNode">To be added.</param>
        <param name="secs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReachTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ReachTo (CoreGraphics.CGPoint position, SpriteKit.SKNode rootNode, nfloat velocity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ReachTo(valuetype CoreGraphics.CGPoint position, class SpriteKit.SKNode rootNode, valuetype System.nfloat velocity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("reachTo:rootNode:velocity:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="CoreGraphics.CGPoint" />
        <Parameter Name="rootNode" Type="SpriteKit.SKNode" />
        <Parameter Name="velocity" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rootNode">To be added.</param>
        <param name="velocity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReachToNode">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ReachToNode (SpriteKit.SKNode node, SpriteKit.SKNode rootNode, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ReachToNode(class SpriteKit.SKNode node, class SpriteKit.SKNode rootNode, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("reachToNode:rootNode:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="SpriteKit.SKNode" />
        <Parameter Name="rootNode" Type="SpriteKit.SKNode" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="rootNode">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>Creates an action that moves the node to which it is applied by rotating it, along with all nodes between it and <paramref name="rootNode" />, so that it is closer to <paramref name="node" />, over <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReachToNode">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ReachToNode (SpriteKit.SKNode node, SpriteKit.SKNode rootNode, nfloat velocity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ReachToNode(class SpriteKit.SKNode node, class SpriteKit.SKNode rootNode, valuetype System.nfloat velocity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("reachToNode:rootNode:velocity:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="SpriteKit.SKNode" />
        <Parameter Name="rootNode" Type="SpriteKit.SKNode" />
        <Parameter Name="velocity" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="rootNode">To be added.</param>
        <param name="velocity">To be added.</param>
        <summary>Creates an action that moves the node to which it is applied by rotating it, along with all nodes between it and <paramref name="rootNode" />, so that it is closer to <paramref name="node" />, in a way that moves the node at the speed that is specified by <paramref name="velocity" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromParent">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction RemoveFromParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction RemoveFromParent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("removeFromParent")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an action that removes the node on which it is run from its parent.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatAction">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction RepeatAction (SpriteKit.SKAction action, nuint count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction RepeatAction(class SpriteKit.SKAction action, valuetype System.nuint count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("repeatAction:count:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="SpriteKit.SKAction" />
        <Parameter Name="count" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="count">To be added.</param>
        <summary>Creates an action that repeats <paramref name="action" /> a specified number of times on the node on which it is run.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatActionForever">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction RepeatActionForever (SpriteKit.SKAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction RepeatActionForever(class SpriteKit.SKAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("repeatActionForever:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="SpriteKit.SKAction" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>Creates an action that forever repeats <paramref name="action" /> on the node on which it is run.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeByWidth">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ResizeByWidth (nfloat width, nfloat height, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ResizeByWidth(valuetype System.nfloat width, valuetype System.nfloat height, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resizeByWidth:height:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.nfloat" />
        <Parameter Name="height" Type="System.nfloat" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ResizeTo (CoreGraphics.CGSize size, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ResizeTo(valuetype CoreGraphics.CGSize size, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="CoreGraphics.CGSize" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ResizeTo (nfloat width, nfloat height, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ResizeTo(valuetype System.nfloat width, valuetype System.nfloat height, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resizeToWidth:height:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.nfloat" />
        <Parameter Name="height" Type="System.nfloat" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeToHeight">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ResizeToHeight (nfloat height, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ResizeToHeight(valuetype System.nfloat height, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resizeToHeight:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="height" Type="System.nfloat" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="height">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeToWidth">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ResizeToWidth (nfloat width, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ResizeToWidth(valuetype System.nfloat width, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("resizeToWidth:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.nfloat" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReversedAction">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKAction ReversedAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKAction ReversedAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("reversedAction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reversed action for the action on which it is run. (For actions that cannot be reversed, the returned action will be the identical action.)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateByAngle">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction RotateByAngle (nfloat radians, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction RotateByAngle(valuetype System.nfloat radians, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rotateByAngle:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radians" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="radians">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateToAngle">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction RotateToAngle (nfloat radians, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction RotateToAngle(valuetype System.nfloat radians, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rotateToAngle:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radians" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="radians">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateToAngle">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction RotateToAngle (nfloat radians, double sec, bool shortedUnitArc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction RotateToAngle(valuetype System.nfloat radians, float64 sec, bool shortedUnitArc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rotateToAngle:duration:shortestUnitArc:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radians" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
        <Parameter Name="shortedUnitArc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="radians">To be added.</param>
        <param name="sec">To be added.</param>
        <param name="shortedUnitArc">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Run (Action block);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Run(class System.Action block) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("runBlock:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <summary>Creates an action that runs another action on a node.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Run (Action block, CoreFoundation.DispatchQueue queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Run(class System.Action block, class CoreFoundation.DispatchQueue queue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("runBlock:queue:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="queue" Type="CoreFoundation.DispatchQueue" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <param name="queue">To be added.</param>
        <summary>Creates an action that runs another action on a dispatch queue.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAction">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction RunAction (SpriteKit.SKAction action, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction RunAction(class SpriteKit.SKAction action, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("runAction:onChildWithName:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="SpriteKit.SKAction" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="name">To be added.</param>
        <summary>Creates an action that runs another action on a named child of a node.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ScaleBy (nfloat scale, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ScaleBy(valuetype System.nfloat scale, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scaleBy:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ScaleBy (nfloat xScale, nfloat yScale, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ScaleBy(valuetype System.nfloat xScale, valuetype System.nfloat yScale, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scaleXBy:y:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xScale" Type="System.nfloat" />
        <Parameter Name="yScale" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xScale">To be added.</param>
        <param name="yScale">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ScaleTo (CoreGraphics.CGSize size, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ScaleTo(valuetype CoreGraphics.CGSize size, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scaleToSize:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="CoreGraphics.CGSize" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ScaleTo (nfloat scale, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ScaleTo(valuetype System.nfloat scale, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scaleTo:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ScaleTo (nfloat xScale, nfloat yScale, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ScaleTo(valuetype System.nfloat xScale, valuetype System.nfloat yScale, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scaleXTo:y:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xScale" Type="System.nfloat" />
        <Parameter Name="yScale" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xScale">To be added.</param>
        <param name="yScale">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleXTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ScaleXTo (nfloat scale, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ScaleXTo(valuetype System.nfloat scale, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scaleXTo:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleYTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction ScaleYTo (nfloat scale, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction ScaleYTo(valuetype System.nfloat scale, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("scaleYTo:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sequence">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Sequence (SpriteKit.SKAction[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Sequence(class SpriteKit.SKAction[] actions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("sequence:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="SpriteKit.SKAction[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">To be added.</param>
        <summary>Creates an action that sequentially runs the actions in the specified array.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNormalTexture">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction SetNormalTexture (SpriteKit.SKTexture texture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction SetNormalTexture(class SpriteKit.SKTexture texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setNormalTexture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="SpriteKit.SKTexture" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <summary>Factory method that creates a <see cref="T:SpriteKit.SKAction" /> that changes the <see cref="P:SpriteKit.SKSpriteNode.NormalTexure" /> of a <see cref="T:SpriteKit.SKSpriteNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNormalTexture">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction SetNormalTexture (SpriteKit.SKTexture texture, bool resize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction SetNormalTexture(class SpriteKit.SKTexture texture, bool resize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setNormalTexture:resize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="SpriteKit.SKTexture" />
        <Parameter Name="resize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="resize">To be added.</param>
        <summary>Factory method that creates a <see cref="T:SpriteKit.SKAction" /> that changes the <see cref="P:SpriteKit.SKSpriteNode.NormalTexure" /> of a <see cref="T:SpriteKit.SKSpriteNode" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTexture">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction SetTexture (SpriteKit.SKTexture texture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction SetTexture(class SpriteKit.SKTexture texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setTexture:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 1, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="SpriteKit.SKTexture" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <summary>Creates an action that sets the texture on the node on which it is run.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTexture">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction SetTexture (SpriteKit.SKTexture texture, bool resize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction SetTexture(class SpriteKit.SKTexture texture, bool resize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setTexture:resize:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 1, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="SpriteKit.SKTexture" />
        <Parameter Name="resize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="resize">To be added.</param>
        <summary>Creates an action that sets and resizes the texture on the node on which it is run.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTimingFunction">
      <MemberSignature Language="C#" Value="public virtual void SetTimingFunction (SpriteKit.SKActionTimingFunction timingFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTimingFunction(class SpriteKit.SKActionTimingFunction timingFunction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the 'TimingFunction' property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timingFunction" Type="SpriteKit.SKActionTimingFunction">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDSKActionTimingFunction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="timingFunction">To be added.</param>
        <summary>Sets the function that transforms the times at which actions occur.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public virtual nfloat Speed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Speed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("speed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSpeed:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a multiplier for the action's speed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction SpeedBy (nfloat speed, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction SpeedBy(valuetype System.nfloat speed, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("speedBy:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speed" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speed">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction SpeedTo (nfloat speed, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction SpeedTo(valuetype System.nfloat speed, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("speedTo:duration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speed" Type="System.nfloat" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speed">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrengthBy">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction StrengthBy (float strength, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction StrengthBy(float32 strength, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("strengthBy:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Single" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="strength">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>Creates an action that adds <paramref name="strength" /> to the <see cref="P:SpriteKit.SKFieldNode.Strength" /> property of the SKFieldNode to which is applied, over <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrengthTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction StrengthTo (float strength, double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction StrengthTo(float32 strength, float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("strengthTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Single" />
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="strength">To be added.</param>
        <param name="sec">To be added.</param>
        <summary>Creates an action that changes the <see cref="P:SpriteKit.SKFieldNode.Strength" /> property of the SKFieldNode to which is applied to the specified value over <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimingFunction">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKActionTimingFunction TimingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SpriteKit.SKActionTimingFunction TimingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("timingFunction", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTimingFunction:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKActionTimingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a function that transforms wall clock time before it is passed to the animation.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimingMode">
      <MemberSignature Language="C#" Value="public virtual SpriteKit.SKActionTimingMode TimingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SpriteKit.SKActionTimingMode TimingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Foundation.Export("timingMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTimingMode:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKActionTimingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the timing mode, which controls whether the animation time proceeds linearly, eases in, eases out, or eases in and out.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unhide">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction Unhide ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction Unhide() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unhide")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an action that unhides, or shows, a node.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForDuration">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction WaitForDuration (double sec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction WaitForDuration(float64 sec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("waitForDuration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sec" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="sec">To be added.</param>
        <summary>Creates an action that waits for <paramref name="sec" /> seconds.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForDuration">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction WaitForDuration (double sec, double durationRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction WaitForDuration(float64 sec, float64 durationRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("waitForDuration:withRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sec" Type="System.Double" />
        <Parameter Name="durationRange" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="sec">To be added.</param>
        <param name="durationRange">To be added.</param>
        <summary>Creates an action that waits for a random amount of time in the range (<paramref name="sec" /> - <paramref name="durationRange" />, <paramref name="sec" /> + <paramref name="durationRange" />).</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarpTo">
      <MemberSignature Language="C#" Value="public static SpriteKit.SKAction WarpTo (SpriteKit.SKWarpGeometry warp, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKAction WarpTo(class SpriteKit.SKWarpGeometry warp, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("warpTo:duration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SpriteKit.SKAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warp" Type="SpriteKit.SKWarpGeometry" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="warp">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Returns an action that warps the contents of a node over the specified <paramref name="duration" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
