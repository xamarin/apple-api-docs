<Type Name="SKSceneDelegate_Extensions" FullName="SpriteKit.SKSceneDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class SKSceneDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SKSceneDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:SpriteKit.SKSceneDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type SKSceneDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:SpriteKit.ISKSceneDelegate" /> interface to support all the methods from the <see cref="T:SpriteKit.SKSceneDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:SpriteKit.ISKSceneDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:SpriteKit.SKSceneDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidApplyConstraints">
      <MemberSignature Language="C#" Value="public static void DidApplyConstraints (this SpriteKit.ISKSceneDelegate This, SpriteKit.SKScene scene);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidApplyConstraints(class SpriteKit.ISKSceneDelegate This, class SpriteKit.SKScene scene) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKSceneDelegate_Extensions.DidApplyConstraints(SpriteKit.ISKSceneDelegate,SpriteKit.SKScene)" />
      <MemberSignature Language="F#" Value="static member DidApplyConstraints : SpriteKit.ISKSceneDelegate * SpriteKit.SKScene -&gt; unit" Usage="SpriteKit.SKSceneDelegate_Extensions.DidApplyConstraints (This, scene)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="SpriteKit.ISKSceneDelegate" RefType="this" />
        <Parameter Name="scene" Type="SpriteKit.SKScene" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="scene">To be added.</param>
        <summary>Method that is called after constraints are applied to <paramref name="scene" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEvaluateActions">
      <MemberSignature Language="C#" Value="public static void DidEvaluateActions (this SpriteKit.ISKSceneDelegate This, SpriteKit.SKScene scene);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEvaluateActions(class SpriteKit.ISKSceneDelegate This, class SpriteKit.SKScene scene) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKSceneDelegate_Extensions.DidEvaluateActions(SpriteKit.ISKSceneDelegate,SpriteKit.SKScene)" />
      <MemberSignature Language="F#" Value="static member DidEvaluateActions : SpriteKit.ISKSceneDelegate * SpriteKit.SKScene -&gt; unit" Usage="SpriteKit.SKSceneDelegate_Extensions.DidEvaluateActions (This, scene)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="SpriteKit.ISKSceneDelegate" RefType="this" />
        <Parameter Name="scene" Type="SpriteKit.SKScene" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="scene">To be added.</param>
        <summary>Method that is called after all scene actions are evaluated for <paramref name="scene" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishUpdate">
      <MemberSignature Language="C#" Value="public static void DidFinishUpdate (this SpriteKit.ISKSceneDelegate This, SpriteKit.SKScene scene);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishUpdate(class SpriteKit.ISKSceneDelegate This, class SpriteKit.SKScene scene) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKSceneDelegate_Extensions.DidFinishUpdate(SpriteKit.ISKSceneDelegate,SpriteKit.SKScene)" />
      <MemberSignature Language="F#" Value="static member DidFinishUpdate : SpriteKit.ISKSceneDelegate * SpriteKit.SKScene -&gt; unit" Usage="SpriteKit.SKSceneDelegate_Extensions.DidFinishUpdate (This, scene)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="SpriteKit.ISKSceneDelegate" RefType="this" />
        <Parameter Name="scene" Type="SpriteKit.SKScene" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="scene">To be added.</param>
        <summary>Method that is called after the <paramref name="scene" /> is updated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSimulatePhysics">
      <MemberSignature Language="C#" Value="public static void DidSimulatePhysics (this SpriteKit.ISKSceneDelegate This, SpriteKit.SKScene scene);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSimulatePhysics(class SpriteKit.ISKSceneDelegate This, class SpriteKit.SKScene scene) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKSceneDelegate_Extensions.DidSimulatePhysics(SpriteKit.ISKSceneDelegate,SpriteKit.SKScene)" />
      <MemberSignature Language="F#" Value="static member DidSimulatePhysics : SpriteKit.ISKSceneDelegate * SpriteKit.SKScene -&gt; unit" Usage="SpriteKit.SKSceneDelegate_Extensions.DidSimulatePhysics (This, scene)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="SpriteKit.ISKSceneDelegate" RefType="this" />
        <Parameter Name="scene" Type="SpriteKit.SKScene" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="scene">To be added.</param>
        <summary>Method that is called after physics simulation for <paramref name="scene" /> is complete.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public static void Update (this SpriteKit.ISKSceneDelegate This, double currentTime, SpriteKit.SKScene scene);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Update(class SpriteKit.ISKSceneDelegate This, float64 currentTime, class SpriteKit.SKScene scene) cil managed" />
      <MemberSignature Language="DocId" Value="M:SpriteKit.SKSceneDelegate_Extensions.Update(SpriteKit.ISKSceneDelegate,System.Double,SpriteKit.SKScene)" />
      <MemberSignature Language="F#" Value="static member Update : SpriteKit.ISKSceneDelegate * double * SpriteKit.SKScene -&gt; unit" Usage="SpriteKit.SKSceneDelegate_Extensions.Update (This, currentTime, scene)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="SpriteKit.ISKSceneDelegate" RefType="this" />
        <Parameter Name="currentTime" Type="System.Double" />
        <Parameter Name="scene" Type="SpriteKit.SKScene" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="currentTime">To be added.</param>
        <param name="scene">To be added.</param>
        <summary>Method that is called once per frame, if <paramref name="scene" /> is presented and not paused, before any animation takes place.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
