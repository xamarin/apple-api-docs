<Type Name="UIViewImplicitlyAnimating_Extensions" FullName="UIKit.UIViewImplicitlyAnimating_Extensions">
  <TypeSignature Language="C#" Value="public static class UIViewImplicitlyAnimating_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UIViewImplicitlyAnimating_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIViewImplicitlyAnimating_Extensions" />
  <TypeSignature Language="F#" Value="type UIViewImplicitlyAnimating_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension class defining methods for animations that can be modified while they are running.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAnimations">
      <MemberSignature Language="C#" Value="public static void AddAnimations (this UIKit.IUIViewImplicitlyAnimating This, Action animation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAnimations(class UIKit.IUIViewImplicitlyAnimating This, class System.Action animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIViewImplicitlyAnimating_Extensions.AddAnimations(UIKit.IUIViewImplicitlyAnimating,System.Action)" />
      <MemberSignature Language="F#" Value="static member AddAnimations : UIKit.IUIViewImplicitlyAnimating * Action -&gt; unit" Usage="UIKit.UIViewImplicitlyAnimating_Extensions.AddAnimations (This, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIViewImplicitlyAnimating" RefType="this" />
        <Parameter Name="animation" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="animation">To be added.</param>
        <summary>Appends the specified <paramref name="animation" /><format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Action&amp;scope=Xamarin" title="T:System.Action">T:System.Action</a></format> to the callback list.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnimations">
      <MemberSignature Language="C#" Value="public static void AddAnimations (this UIKit.IUIViewImplicitlyAnimating This, Action animation, nfloat delayFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAnimations(class UIKit.IUIViewImplicitlyAnimating This, class System.Action animation, valuetype System.nfloat delayFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIViewImplicitlyAnimating_Extensions.AddAnimations(UIKit.IUIViewImplicitlyAnimating,System.Action,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member AddAnimations : UIKit.IUIViewImplicitlyAnimating * Action * nfloat -&gt; unit" Usage="UIKit.UIViewImplicitlyAnimating_Extensions.AddAnimations (This, animation, delayFactor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIViewImplicitlyAnimating" RefType="this" />
        <Parameter Name="animation" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="delayFactor" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="animation">To be added.</param>
        <param name="delayFactor">To be added.</param>
        <summary>Appends the specified <paramref name="animation" /><format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Action&amp;scope=Xamarin" title="T:System.Action">T:System.Action</a></format> to the callback list.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompletion">
      <MemberSignature Language="C#" Value="public static void AddCompletion (this UIKit.IUIViewImplicitlyAnimating This, Action&lt;UIKit.UIViewAnimatingPosition&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCompletion(class UIKit.IUIViewImplicitlyAnimating This, class System.Action`1&lt;valuetype UIKit.UIViewAnimatingPosition&gt; completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIViewImplicitlyAnimating_Extensions.AddCompletion(UIKit.IUIViewImplicitlyAnimating,System.Action{UIKit.UIViewAnimatingPosition})" />
      <MemberSignature Language="F#" Value="static member AddCompletion : UIKit.IUIViewImplicitlyAnimating * Action&lt;UIKit.UIViewAnimatingPosition&gt; -&gt; unit" Usage="UIKit.UIViewImplicitlyAnimating_Extensions.AddCompletion (This, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIViewImplicitlyAnimating" RefType="this" />
        <Parameter Name="completion" Type="System.Action&lt;UIKit.UIViewAnimatingPosition&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="completion">To be added.</param>
        <summary>Adds the <paramref name="completion" /> to run when the animation(s) end.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueAnimation">
      <MemberSignature Language="C#" Value="public static void ContinueAnimation (this UIKit.IUIViewImplicitlyAnimating This, UIKit.IUITimingCurveProvider parameters, nfloat durationFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContinueAnimation(class UIKit.IUIViewImplicitlyAnimating This, class UIKit.IUITimingCurveProvider parameters, valuetype System.nfloat durationFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIViewImplicitlyAnimating_Extensions.ContinueAnimation(UIKit.IUIViewImplicitlyAnimating,UIKit.IUITimingCurveProvider,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member ContinueAnimation : UIKit.IUIViewImplicitlyAnimating * UIKit.IUITimingCurveProvider * nfloat -&gt; unit" Usage="UIKit.UIViewImplicitlyAnimating_Extensions.ContinueAnimation (This, parameters, durationFactor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIViewImplicitlyAnimating" RefType="this" />
        <Parameter Name="parameters" Type="UIKit.IUITimingCurveProvider" />
        <Parameter Name="durationFactor" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="parameters">New timing information.</param>
        <param name="durationFactor">A multiplier applied to the animation's original duration.</param>
        <summary>Changes the timing of the animation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
