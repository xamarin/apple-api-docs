<Type Name="UIStepper+UIStepperAppearance" FullName="UIKit.UIStepper+UIStepperAppearance">
  <TypeSignature Language="C#" Value="public class UIStepper.UIStepperAppearance : UIKit.UIControl.UIControlAppearance" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit UIStepper/UIStepperAppearance extends UIKit.UIControl/UIControlAppearance" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UIKit.UIControl+UIControlAppearance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Appearance class for objects of type <see cref="T:UIKit.UIStepper" />.</para>
    </summary>
    <remarks>
      <para>This appearance class is a strongly typed subclass of UIAppearance that is intended to be used with objects of class <see cref="T:UIKit.UIStepper" />.   You can obtain an instance to this class by either accessing the static <see cref="P:UIKit.UIStepper.Appearance" /> property on the <see cref="T:UIKit.UIStepper" /> or by calling the <see cref="M:UIKit.UIStepper.AppearanceWhenContainedIn" /> to get a UIAppearance that is context sensitive.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UIStepperAppearance (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIImage BackgroundImage (MonoTouch.UIKit.UIControlState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIImage BackgroundImage(valuetype MonoTouch.UIKit.UIControlState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("backgroundImageForState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="MonoTouch.UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>The UIImage used as the backgroundimage for the UIStepper for the specified <paramref name="state" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecrementImage">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIImage GetDecrementImage (MonoTouch.UIKit.UIControlState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIImage GetDecrementImage(valuetype MonoTouch.UIKit.UIControlState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("decrementImageForState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="MonoTouch.UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>The image used for the stepper for the specified <paramref name="state" />..</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDividerImage">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIImage GetDividerImage (MonoTouch.UIKit.UIControlState leftState, MonoTouch.UIKit.UIControlState rightState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIImage GetDividerImage(valuetype MonoTouch.UIKit.UIControlState leftState, valuetype MonoTouch.UIKit.UIControlState rightState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("dividerImageForLeftSegmentState:rightSegmentState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftState" Type="MonoTouch.UIKit.UIControlState" />
        <Parameter Name="rightState" Type="MonoTouch.UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="leftState">To be added.</param>
        <param name="rightState">To be added.</param>
        <summary>The UIImage used as the divider image for the specified pair of UIControlStates.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementImage">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIImage GetIncrementImage (MonoTouch.UIKit.UIControlState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIImage GetIncrementImage(valuetype MonoTouch.UIKit.UIControlState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("incrementImageForState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="MonoTouch.UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>The UIImage used for the incrementer for the specified <paramref name="state" />..</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundImage">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundImage (MonoTouch.UIKit.UIImage image, MonoTouch.UIKit.UIControlState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundImage(class MonoTouch.UIKit.UIImage image, valuetype MonoTouch.UIKit.UIControlState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setBackgroundImage:forState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
        <Parameter Name="state" Type="MonoTouch.UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Sets the background image used for the specified <paramref name="state" />..</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDecrementImage">
      <MemberSignature Language="C#" Value="public virtual void SetDecrementImage (MonoTouch.UIKit.UIImage image, MonoTouch.UIKit.UIControlState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDecrementImage(class MonoTouch.UIKit.UIImage image, valuetype MonoTouch.UIKit.UIControlState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setDecrementImage:forState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
        <Parameter Name="state" Type="MonoTouch.UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Sets the decrement image for the specified <paramref name="state" />..</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDividerImage">
      <MemberSignature Language="C#" Value="public virtual void SetDividerImage (MonoTouch.UIKit.UIImage image, MonoTouch.UIKit.UIControlState leftState, MonoTouch.UIKit.UIControlState rightState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDividerImage(class MonoTouch.UIKit.UIImage image, valuetype MonoTouch.UIKit.UIControlState leftState, valuetype MonoTouch.UIKit.UIControlState rightState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setDividerImage:forLeftSegmentState:rightSegmentState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
        <Parameter Name="leftState" Type="MonoTouch.UIKit.UIControlState" />
        <Parameter Name="rightState" Type="MonoTouch.UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="leftState">To be added.</param>
        <param name="rightState">To be added.</param>
        <summary>Sets the divider image used for the specified pair of UIControlStates.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIncrementImage">
      <MemberSignature Language="C#" Value="public virtual void SetIncrementImage (MonoTouch.UIKit.UIImage image, MonoTouch.UIKit.UIControlState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIncrementImage(class MonoTouch.UIKit.UIImage image, valuetype MonoTouch.UIKit.UIControlState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setIncrementImage:forState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 6, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
        <Parameter Name="state" Type="MonoTouch.UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Sets the increment image for the specified <paramref name="state" />..</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>