<Type Name="UIFloatRange" FullName="UIKit.UIFloatRange">
  <TypeSignature Language="C#" Value="public struct UIFloatRange : IEquatable&lt;UIKit.UIFloatRange&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit UIFloatRange extends System.ValueType implements class System.IEquatable`1&lt;valuetype UIKit.UIFloatRange&gt;" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIFloatRange" />
  <TypeSignature Language="F#" Value="type UIFloatRange = struct" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;UIKit.UIFloatRange&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A range of single-precision floating point numbers.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIFloatRange (nfloat minimum, nfloat maximum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.nfloat minimum, valuetype System.nfloat maximum) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIFloatRange.#ctor(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="new UIKit.UIFloatRange : nfloat * nfloat -&gt; UIKit.UIFloatRange" Usage="new UIKit.UIFloatRange (minimum, maximum)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minimum" Type="System.nfloat" />
        <Parameter Name="maximum" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="minimum">To be added.</param>
        <param name="maximum">To be added.</param>
        <summary>Creates a <see cref="T:UIKit.UIFloatRange" /> representing the closed interval [<paramref name="minimum" />, <paramref name="maximum" />].</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIFloatRange.Equals(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uIFloatRange.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Whether two <see cref="T:UIKit.UIFloatRange" /> objects have equal values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (UIKit.UIFloatRange other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype UIKit.UIFloatRange other) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIFloatRange.Equals(UIKit.UIFloatRange)" />
      <MemberSignature Language="F#" Value="override this.Equals : UIKit.UIFloatRange -&gt; bool" Usage="uIFloatRange.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="UIKit.UIFloatRange" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Whether two <see cref="T:UIKit.UIFloatRange" /> objects have equal values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIFloatRange.GetHashCode" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uIFloatRange.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>A hash for the interval.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Infinite">
      <MemberSignature Language="C#" Value="public static UIKit.UIFloatRange Infinite;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype UIKit.UIFloatRange Infinite" />
      <MemberSignature Language="DocId" Value="F:UIKit.UIFloatRange.Infinite" />
      <MemberSignature Language="F#" Value=" staticval mutable Infinite : UIKit.UIFloatRange" Usage="UIKit.UIFloatRange.Infinite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("UIFloatRangeInfinite")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIFloatRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An infinitely large range.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinite">
      <MemberSignature Language="C#" Value="public bool IsInfinite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInfinite" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIFloatRange.IsInfinite" />
      <MemberSignature Language="F#" Value="member this.IsInfinite : bool" Usage="UIKit.UIFloatRange.IsInfinite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the range is infinitely large.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public nfloat Maximum;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.nfloat Maximum" />
      <MemberSignature Language="DocId" Value="F:UIKit.UIFloatRange.Maximum" />
      <MemberSignature Language="F#" Value="val mutable Maximum : nfloat" Usage="UIKit.UIFloatRange.Maximum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum value in the interval.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public nfloat Minimum;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.nfloat Minimum" />
      <MemberSignature Language="DocId" Value="F:UIKit.UIFloatRange.Minimum" />
      <MemberSignature Language="F#" Value="val mutable Minimum : nfloat" Usage="UIKit.UIFloatRange.Minimum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum value in the interval.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static UIKit.UIFloatRange Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype UIKit.UIFloatRange Zero" />
      <MemberSignature Language="DocId" Value="F:UIKit.UIFloatRange.Zero" />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : UIKit.UIFloatRange" Usage="UIKit.UIFloatRange.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("UIFloatRangeZero")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIFloatRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:UIKit.UIFloatRange" /> that has no magnitude.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
