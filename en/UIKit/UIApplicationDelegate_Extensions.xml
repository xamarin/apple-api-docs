<Type Name="UIApplicationDelegate_Extensions" FullName="UIKit.UIApplicationDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UIApplicationDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UIApplicationDelegate_Extensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:UIKit.IUIApplicationDelegate" /> interface to support all the methods from the <see cref="T:UIKit.UIApplicationDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:UIKit.IUIApplicationDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:UIKit.UIApplicationDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessibilityPerformMagicTap">
      <MemberSignature Language="C#" Value="public static bool AccessibilityPerformMagicTap (this UIKit.IUIApplicationDelegate This);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AccessibilityPerformMagicTap(class UIKit.IUIApplicationDelegate This) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <summary>Performs the most important action of the app. Often, this is toggling the most important state of the app.</summary>
        <returns>
          <see langword="true" /> if the action succeeded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationSignificantTimeChange">
      <MemberSignature Language="C#" Value="public static void ApplicationSignificantTimeChange (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ApplicationSignificantTimeChange(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates a significant change in time, such as midnight, change to Daylight Savings, or a shift in timezone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedStatusBarFrame">
      <MemberSignature Language="C#" Value="public static void ChangedStatusBarFrame (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, CoreGraphics.CGRect oldStatusBarFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangedStatusBarFrame(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, valuetype CoreGraphics.CGRect oldStatusBarFrame) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="oldStatusBarFrame" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="oldStatusBarFrame">The status bar's previous Frame.</param>
        <summary>Indicates that the frame of the status bar has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueUserActivity">
      <MemberSignature Language="C#" Value="public static bool ContinueUserActivity (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSUserActivity userActivity, UIKit.UIApplicationRestorationHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContinueUserActivity(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSUserActivity userActivity, class UIKit.UIApplicationRestorationHandler completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="userActivity" Type="Foundation.NSUserActivity" />
        <Parameter Name="completionHandler" Type="UIKit.UIApplicationRestorationHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDUIApplicationRestorationHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">The  singleton.</param>
        <param name="userActivity">The user activity identifier.</param>
        <param name="completionHandler">System-provided callback that can be called with appropriate  or  objects.</param>
        <summary>Informs the app that there is data associated with continuing a task specified as a <see cref="T:Foundation.NSUserActivity" /> object, and then returns whether the app continued the activity.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeStatusBarOrientation">
      <MemberSignature Language="C#" Value="public static void DidChangeStatusBarOrientation (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIInterfaceOrientation oldStatusBarOrientation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeStatusBarOrientation(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, valuetype UIKit.UIInterfaceOrientation oldStatusBarOrientation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="oldStatusBarOrientation" Type="UIKit.UIInterfaceOrientation" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="oldStatusBarOrientation">The status bar's previous orientation.</param>
        <summary>Indicates that the orientation of the status bar has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDecodeRestorableState">
      <MemberSignature Language="C#" Value="public static void DidDecodeRestorableState (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDecodeRestorableState(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="coder">To be added.</param>
        <summary>Indicates that the app should restore highest-level state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEnterBackground">
      <MemberSignature Language="C#" Value="public static void DidEnterBackground (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEnterBackground(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates that the application has entered the background.</summary>
        <remarks>
          <para>Apps should complete processing this method in approximately 5 seconds. If more time is necessary, applications can call <see cref="M:UIKit.UIApplication.BeginBackgroundTask" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFailToContinueUserActivitiy">
      <MemberSignature Language="C#" Value="public static void DidFailToContinueUserActivitiy (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string userActivityType, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailToContinueUserActivitiy(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string userActivityType, class Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="userActivityType" Type="System.String" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="userActivityType">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Informs the app that the activity of the <paramref name="userActivityType" /> type could not be continued, and specifies a <paramref name="error" /> as the reason for the failure.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReceiveRemoteNotification">
      <MemberSignature Language="C#" Value="public static void DidReceiveRemoteNotification (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary userInfo, Action&lt;UIKit.UIBackgroundFetchResult&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveRemoteNotification(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary userInfo, class System.Action`1&lt;valuetype UIKit.UIBackgroundFetchResult&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="userInfo" Type="Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action&lt;UIKit.UIBackgroundFetchResult&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V4))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Handle to the UIApplication.</param>
        <param name="userInfo">To be added.</param>
        <param name="completionHandler">Callback to invoke to notify the operating system of the result of the background fetch operation.</param>
        <summary>Indicates that the app received a remote notification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRegisterUserNotificationSettings">
      <MemberSignature Language="C#" Value="public static void DidRegisterUserNotificationSettings (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIUserNotificationSettings notificationSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRegisterUserNotificationSettings(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class UIKit.UIUserNotificationSettings notificationSettings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'UNUserNotificationCenter.RequestAuthorization' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="notificationSettings" Type="UIKit.UIUserNotificationSettings" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="notificationSettings">To be added.</param>
        <summary>Informs the app of the type of notifications it can use, as a <see cref="T:UIKit.UIUserNotificationSettings" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedToRegisterForRemoteNotifications">
      <MemberSignature Language="C#" Value="public static void FailedToRegisterForRemoteNotifications (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToRegisterForRemoteNotifications(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="error">To be added.</param>
        <summary>Indicates that Apple Push Service did not successfully compete the registration process.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishedLaunching">
      <MemberSignature Language="C#" Value="public static void FinishedLaunching (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedLaunching(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>The application has finished launching.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishedLaunching">
      <MemberSignature Language="C#" Value="public static bool FinishedLaunching (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary launchOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FinishedLaunching(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary launchOptions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="launchOptions" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="launchOptions">An NSDictionary with the launch options, can be null.   Possible key values are UIApplication's LaunchOption static properties.</param>
        <summary>Indicates that launching has finished and the app will shortly begin running.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedInterfaceOrientations">
      <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask GetSupportedInterfaceOrientations (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIWindow forWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask GetSupportedInterfaceOrientations(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class UIKit.UIWindow forWindow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIInterfaceOrientationMask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="forWindow" Type="UIKit.UIWindow">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.Transient</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="forWindow">To be added.</param>
        <summary>The interface orientations supported by the app.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewController">
      <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetViewController (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string[] restorationIdentifierComponents, Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetViewController(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string[] restorationIdentifierComponents, class Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIViewController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="restorationIdentifierComponents" Type="System.String[]" />
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="restorationIdentifierComponents">An array of identifiers that identify the path to the desired view controller, which should be last.</param>
        <param name="coder">To be added.</param>
        <summary>Retrieves the UIViewController identified by the last value in the restorationIdentifierComponents parameter.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static UIKit.UIWindow GetWindow (this UIKit.IUIApplicationDelegate This);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIWindow GetWindow(class UIKit.IUIApplicationDelegate This) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAction">
      <MemberSignature Language="C#" Value="public static void HandleAction (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string actionIdentifier, Foundation.NSDictionary remoteNotificationInfo, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string actionIdentifier, class Foundation.NSDictionary remoteNotificationInfo, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'UNUserNotificationCenterDelegate.DidReceiveNotificationResponse' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="actionIdentifier" Type="System.String" />
        <Parameter Name="remoteNotificationInfo" Type="Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="actionIdentifier">To be added.</param>
        <param name="remoteNotificationInfo">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Informs the app of a custom action to perform based on a push notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="remoteNoticationInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAction">
      <MemberSignature Language="C#" Value="public static void HandleAction (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string actionIdentifier, UIKit.UILocalNotification localNotification, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string actionIdentifier, class UIKit.UILocalNotification localNotification, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'UNUserNotificationCenterDelegate.DidReceiveNotificationResponse' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="actionIdentifier" Type="System.String" />
        <Parameter Name="localNotification" Type="UIKit.UILocalNotification" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="actionIdentifier">To be added.</param>
        <param name="localNotification">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Informs the app that the user selected an action identified by the <paramref name="actionIdentifier" /> value from an alert of a <see cref="T:UIKit.UILocalNotification" /> object, and executes the <paramref name="completionHandler" /> block after it completes the action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAction">
      <MemberSignature Language="C#" Value="public static void HandleAction (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string actionIdentifier, Foundation.NSDictionary remoteNotificationInfo, Foundation.NSDictionary responseInfo, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string actionIdentifier, class Foundation.NSDictionary remoteNotificationInfo, class Foundation.NSDictionary responseInfo, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'UNUserNotificationCenterDelegate.DidReceiveNotificationResponse' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="actionIdentifier" Type="System.String" />
        <Parameter Name="remoteNotificationInfo" Type="Foundation.NSDictionary" />
        <Parameter Name="responseInfo" Type="Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="actionIdentifier">To be added.</param>
        <param name="remoteNotificationInfo">To be added.</param>
        <param name="responseInfo">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Informs the app of a custom action to perform based on a remote notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="remoteNoticationInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAction">
      <MemberSignature Language="C#" Value="public static void HandleAction (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string actionIdentifier, UIKit.UILocalNotification localNotification, Foundation.NSDictionary responseInfo, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string actionIdentifier, class UIKit.UILocalNotification localNotification, class Foundation.NSDictionary responseInfo, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'UNUserNotificationCenterDelegate.DidReceiveNotificationResponse' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="actionIdentifier" Type="System.String" />
        <Parameter Name="localNotification" Type="UIKit.UILocalNotification" />
        <Parameter Name="responseInfo" Type="Foundation.NSDictionary" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="actionIdentifier">To be added.</param>
        <param name="localNotification">To be added.</param>
        <param name="responseInfo">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Informs the app of a custom action to perform based on a local notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="responseInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEventsForBackgroundUrl">
      <MemberSignature Language="C#" Value="public static void HandleEventsForBackgroundUrl (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string sessionIdentifier, Action completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleEventsForBackgroundUrl(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string sessionIdentifier, class System.Action completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="sessionIdentifier" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="sessionIdentifier">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Raised when events relating to a background <see cref="T:UIKit.NSUrlSession" /> are waiting to be processed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleIntent">
      <MemberSignature Language="C#" Value="public static void HandleIntent (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Intents.INIntent intent, Action&lt;Intents.INIntentResponse&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleIntent(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Intents.INIntent intent, class System.Action`1&lt;class Intents.INIntentResponse&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="intent" Type="Intents.INIntent" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Intents.INIntentResponse&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V177))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">The application that created the intent.</param>
        <param name="intent">The intent.</param>
        <param name="completionHandler">A handler to run after the operation completes.</param>
        <summary>The system is requesting that the application handle the specified <paramref name="intent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleOpenURL">
      <MemberSignature Language="C#" Value="public static bool HandleOpenURL (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HandleOpenURL(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSUrl url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, "Override 'OpenUrl (UIApplication, NSUrl, NSDictionary)'. The later will be called if both are implemented.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="url">To be added.</param>
        <summary>Developers should use <see cref="M:UIKit.UIApplicationDelegate.OpenUrl" /> rather than this deprecated method.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleWatchKitExtensionRequest">
      <MemberSignature Language="C#" Value="public static void HandleWatchKitExtensionRequest (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary userInfo, Action&lt;Foundation.NSDictionary&gt; reply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleWatchKitExtensionRequest(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary userInfo, class System.Action`1&lt;class Foundation.NSDictionary&gt; reply) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 2, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="userInfo" Type="Foundation.NSDictionary" />
        <Parameter Name="reply" Type="System.Action&lt;Foundation.NSDictionary&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V10))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="userInfo">To be added.</param>
        <param name="reply">To be added.</param>
        <summary>A watchkit extension has made a request.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="public static void OnActivated (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnActivated(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>The app has moved from the inactive to actie state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResignActivation">
      <MemberSignature Language="C#" Value="public static void OnResignActivation (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnResignActivation(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>The app is about to move from the active state to the inactive state.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenUrl">
      <MemberSignature Language="C#" Value="public static bool OpenUrl (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication app, Foundation.NSUrl url, Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OpenUrl(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication app, class Foundation.NSUrl url, class Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="app" Type="UIKit.UIApplication" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="app">To be added.</param>
        <param name="url">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Indicates that the application should open the specified <paramref name="url" /> with context from <paramref name="options" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenUrl">
      <MemberSignature Language="C#" Value="public static bool OpenUrl (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSUrl url, string sourceApplication, Foundation.NSObject annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OpenUrl(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSUrl url, string sourceApplication, class Foundation.NSObject annotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, "Override 'OpenUrl (UIApplication, NSUrl, NSDictionary)'. The later will be called if both are implemented.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="sourceApplication" Type="System.String" />
        <Parameter Name="annotation" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to this application ().</param>
        <param name="url">The  specified by the calling application.</param>
        <param name="sourceApplication">The bundle ID of the calling application.</param>
        <param name="annotation">Optional property-list data passed by the calling application.</param>
        <summary>Loads a resource from the specified URL.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformActionForShortcutItem">
      <MemberSignature Language="C#" Value="public static void PerformActionForShortcutItem (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIApplicationShortcutItem shortcutItem, UIKit.UIOperationHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformActionForShortcutItem(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class UIKit.UIApplicationShortcutItem shortcutItem, class UIKit.UIOperationHandler completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="shortcutItem" Type="UIKit.UIApplicationShortcutItem" />
        <Parameter Name="completionHandler" Type="UIKit.UIOperationHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDUIOperationHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="shortcutItem">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Called by the system when the user initiates a Home screen quick action, unless the interaction was handled in <see cref="M:UIKit.UIApplicationDelegate.WillFinishLaunching" /> or <see cref="M:UIKit.UIApplicationDelegate.DidFinishLaunching" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFetch">
      <MemberSignature Language="C#" Value="public static void PerformFetch (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Action&lt;UIKit.UIBackgroundFetchResult&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformFetch(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class System.Action`1&lt;valuetype UIKit.UIBackgroundFetchResult&gt; completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="completionHandler" Type="System.Action&lt;UIKit.UIBackgroundFetchResult&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V4))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Handle to the UIApplication.</param>
        <param name="completionHandler">Callback to invoke to notify the operating system of the result of the background fetch operation.</param>
        <summary>Indicates that the application can begin a fetch operation if it has data to download.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedDataDidBecomeAvailable">
      <MemberSignature Language="C#" Value="public static void ProtectedDataDidBecomeAvailable (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProtectedDataDidBecomeAvailable(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Protected files are now available.</summary>
        <remarks>
          <para>Content protection encrypts and restricts access to protected files in certain situations, such as when the device is locked. This method will be called when the device is unlocked and the files are available for reading.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedDataWillBecomeUnavailable">
      <MemberSignature Language="C#" Value="public static void ProtectedDataWillBecomeUnavailable (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProtectedDataWillBecomeUnavailable(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates that protected files are about to be encrypted and unavailable for reading.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedLocalNotification">
      <MemberSignature Language="C#" Value="public static void ReceivedLocalNotification (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UILocalNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedLocalNotification(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class UIKit.UILocalNotification notification) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'UNUserNotificationCenterDelegate.WillPresentNotification/DidReceiveNotificationResponse' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="notification" Type="UIKit.UILocalNotification" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="notification">To be added.</param>
        <summary>Indicates that the app received a local notification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedRemoteNotification">
      <MemberSignature Language="C#" Value="public static void ReceivedRemoteNotification (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary userInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedRemoteNotification(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary userInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'UNUserNotificationCenterDelegate.WillPresentNotification/DidReceiveNotificationResponse' for user visible notifications and 'ReceivedRemoteNotification' for silent remote notifications.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="userInfo" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="userInfo">A dictionary whose "aps" key contains information related to the notification</param>
        <summary>Indicates that the app received a remote notification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMemoryWarning">
      <MemberSignature Language="C#" Value="public static void ReceiveMemoryWarning (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMemoryWarning(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>The app has received a low-memory warning from the system.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredForRemoteNotifications">
      <MemberSignature Language="C#" Value="public static void RegisteredForRemoteNotifications (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSData deviceToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisteredForRemoteNotifications(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSData deviceToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="deviceToken" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="deviceToken">To be added.</param>
        <summary>Indicates that the device successfully registered with Apple Push Service.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindow">
      <MemberSignature Language="C#" Value="public static void SetWindow (this UIKit.IUIApplicationDelegate This, UIKit.UIWindow value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindow(class UIKit.IUIApplicationDelegate This, class UIKit.UIWindow value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="value" Type="UIKit.UIWindow" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldAllowExtensionPointIdentifier">
      <MemberSignature Language="C#" Value="public static bool ShouldAllowExtensionPointIdentifier (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSString extensionPointIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAllowExtensionPointIdentifier(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSString extensionPointIdentifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="extensionPointIdentifier" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="extensionPointIdentifier">To be added.</param>
        <summary>Requests permission from the app to run app extensions based on the extension point identified by <paramref name="extensionPointIdentifier" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldRequestHealthAuthorization">
      <MemberSignature Language="C#" Value="public static void ShouldRequestHealthAuthorization (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShouldRequestHealthAuthorization(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <summary>The system calls this method when the developer's app should ask the user for access to HealthKit data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldRestoreApplicationState">
      <MemberSignature Language="C#" Value="public static bool ShouldRestoreApplicationState (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRestoreApplicationState(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="coder">To be added.</param>
        <summary>Whether the application should restore saved state information.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSaveApplicationState">
      <MemberSignature Language="C#" Value="public static bool ShouldSaveApplicationState (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSaveApplicationState(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="coder">To be added.</param>
        <summary>Whether the application should save application state information.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserActivityUpdated">
      <MemberSignature Language="C#" Value="public static void UserActivityUpdated (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSUserActivity userActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityUpdated(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSUserActivity userActivity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="userActivity" Type="Foundation.NSUserActivity" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="userActivity">To be added.</param>
        <summary>Informs the app that the <see cref="T:Foundation.NSUserActivity" /> object in <paramref name="userActivity" /> has been updated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDidAcceptCloudKitShare">
      <MemberSignature Language="C#" Value="public static void UserDidAcceptCloudKitShare (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, CloudKit.CKShareMetadata cloudKitShareMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserDidAcceptCloudKitShare(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class CloudKit.CKShareMetadata cloudKitShareMetadata) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="cloudKitShareMetadata" Type="CloudKit.CKShareMetadata" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">To be added.</param>
        <param name="cloudKitShareMetadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeStatusBarFrame">
      <MemberSignature Language="C#" Value="public static void WillChangeStatusBarFrame (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, CoreGraphics.CGRect newStatusBarFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarFrame(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, valuetype CoreGraphics.CGRect newStatusBarFrame) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="newStatusBarFrame" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="newStatusBarFrame">To be added.</param>
        <summary>Indicates that the frame of the status bar is about to change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeStatusBarOrientation">
      <MemberSignature Language="C#" Value="public static void WillChangeStatusBarOrientation (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIInterfaceOrientation newStatusBarOrientation, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarOrientation(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, valuetype UIKit.UIInterfaceOrientation newStatusBarOrientation, float64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="newStatusBarOrientation" Type="UIKit.UIInterfaceOrientation" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="newStatusBarOrientation">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Indicates that the orientation of the status bar is about to change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillContinueUserActivity">
      <MemberSignature Language="C#" Value="public static bool WillContinueUserActivity (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string userActivityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WillContinueUserActivity(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string userActivityType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="userActivityType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">The  singleton for the app.</param>
        <param name="userActivityType">The user activity identifier.</param>
        <summary>Informs the app that the user is attempting to continue a <paramref name="userActivityType" /> action for which data might not be available, and returns to notify the user that the app will continue the activity.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEncodeRestorableState">
      <MemberSignature Language="C#" Value="public static void WillEncodeRestorableState (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEncodeRestorableState(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSCoder coder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="coder">To be added.</param>
        <summary>Indicates that the app is about to store application state data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEnterForeground">
      <MemberSignature Language="C#" Value="public static void WillEnterForeground (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEnterForeground(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates that the application is about to enter the foreground.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillFinishLaunching">
      <MemberSignature Language="C#" Value="public static bool WillFinishLaunching (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary launchOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WillFinishLaunching(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary launchOptions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
        <Parameter Name="launchOptions" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <param name="launchOptions">An NSDictionary with the launch options, can be null.   Possible key values are UIApplication's LaunchOption static properties.</param>
        <summary>Indicates that the app is about to finish its launching procedures.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillTerminate">
      <MemberSignature Language="C#" Value="public static void WillTerminate (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillTerminate(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIApplicationDelegate" RefType="this" />
        <Parameter Name="application" Type="UIKit.UIApplication" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
        <summary>Indicates that the app is about to terminate.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
