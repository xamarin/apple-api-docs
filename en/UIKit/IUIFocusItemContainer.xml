<Type Name="IUIFocusItemContainer" FullName="UIKit.IUIFocusItemContainer">
  <TypeSignature Language="C#" Value="public interface IUIFocusItemContainer : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIFocusItemContainer implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUIFocusItemContainer" />
  <TypeSignature Language="F#" Value="type IUIFocusItemContainer = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="UIFocusItemContainer", WrapperType=typeof(UIKit.UIFocusItemContainerWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="coordinateSpace", IsProperty=true, IsRequired=true, IsStatic=false, Name="CoordinateSpace", PropertyType=typeof(UIKit.IUICoordinateSpace), Selector="coordinateSpace")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetFocusItems", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(CoreGraphics.CGRect) }, ReturnType=typeof(UIKit.IUIFocusItem[]), Selector="focusItemsInRect:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Manages spatial information for focus items in a focus environment.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CoordinateSpace">
      <MemberSignature Language="C#" Value="public UIKit.IUICoordinateSpace CoordinateSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.IUICoordinateSpace CoordinateSpace" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUIFocusItemContainer.CoordinateSpace" />
      <MemberSignature Language="F#" Value="member this.CoordinateSpace : UIKit.IUICoordinateSpace" Usage="UIKit.IUIFocusItemContainer.CoordinateSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("coordinateSpace")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUICoordinateSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the coordinate space implemenation.</summary>
        <value>The coordinate space implemenation.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusItems">
      <MemberSignature Language="C#" Value="public UIKit.IUIFocusItem[] GetFocusItems (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.IUIFocusItem[] GetFocusItems(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUIFocusItemContainer.GetFocusItems(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member GetFocusItems : CoreGraphics.CGRect -&gt; UIKit.IUIFocusItem[]" Usage="iUIFocusItemContainer.GetFocusItems rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("focusItemsInRect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIFocusItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">The rectangle whose focus items to get.</param>
        <summary>Returns a list of all the child focus items within the specified rectangle.</summary>
        <returns>The list of all the child focus items within the specified rectangle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
