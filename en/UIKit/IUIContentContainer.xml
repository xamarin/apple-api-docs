<Type Name="IUIContentContainer" FullName="UIKit.IUIContentContainer">
  <TypeSignature Language="C#" Value="public interface IUIContentContainer : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIContentContainer implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUIContentContainer" />
  <TypeSignature Language="F#" Value="type IUIContentContainer = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="UIContentContainer", WrapperType=typeof(UIKit.UIContentContainerWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="PreferredContentSizeDidChangeForChildContentContainer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="preferredContentSizeDidChangeForChildContentContainer:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SystemLayoutFittingSizeDidChangeForChildContentContainer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="systemLayoutFittingSizeDidChangeForChildContentContainer:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetSizeForChildContentContainer", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(CoreGraphics.CGSize), Selector="sizeForChildContentContainer:withParentContainerSize:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ViewWillTransitionToSize", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="viewWillTransitionToSize:withTransitionCoordinator:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="WillTransitionToTraitCollection", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="willTransitionToTraitCollection:withTransitionCoordinator:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="preferredContentSize", IsProperty=true, IsRequired=true, IsStatic=false, Name="PreferredContentSize", PropertyType=typeof(CoreGraphics.CGSize), Selector="preferredContentSize")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="PreferredContentSizeDidChangeForChildContentContainer", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(UIKit.IUIContentContainer) }, Selector="preferredContentSizeDidChangeForChildContentContainer:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SystemLayoutFittingSizeDidChangeForChildContentContainer", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(UIKit.IUIContentContainer) }, Selector="systemLayoutFittingSizeDidChangeForChildContentContainer:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetSizeForChildContentContainer", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(UIKit.IUIContentContainer), typeof(CoreGraphics.CGSize) }, ReturnType=typeof(CoreGraphics.CGSize), Selector="sizeForChildContentContainer:withParentContainerSize:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ViewWillTransitionToSize", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(CoreGraphics.CGSize), typeof(UIKit.IUIViewControllerTransitionCoordinator) }, Selector="viewWillTransitionToSize:withTransitionCoordinator:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="WillTransitionToTraitCollection", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(UIKit.UITraitCollection), typeof(UIKit.IUIViewControllerTransitionCoordinator) }, Selector="willTransitionToTraitCollection:withTransitionCoordinator:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:UIKit.UIContentContainer" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:UIKit.UIContentContainer" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:UIKit.UIContentContainer" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=UIKit%20UIContent%20Container_%20Extensions&amp;scope=Xamarin" title="T:UIKit.UIContentContainer_Extensions">T:UIKit.UIContentContainer_Extensions</a></format> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSizeForChildContentContainer">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGSize GetSizeForChildContentContainer (UIKit.IUIContentContainer contentContainer, CoreGraphics.CGSize parentContainerSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGSize GetSizeForChildContentContainer(class UIKit.IUIContentContainer contentContainer, valuetype CoreGraphics.CGSize parentContainerSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUIContentContainer.GetSizeForChildContentContainer(UIKit.IUIContentContainer,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="abstract member GetSizeForChildContentContainer : UIKit.IUIContentContainer * CoreGraphics.CGSize -&gt; CoreGraphics.CGSize" Usage="iUIContentContainer.GetSizeForChildContentContainer (contentContainer, parentContainerSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("sizeForChildContentContainer:withParentContainerSize:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentContainer" Type="UIKit.IUIContentContainer" />
        <Parameter Name="parentContainerSize" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="contentContainer">The child container whose size is being request.</param>
        <param name="parentContainerSize">The  of the .</param>
        <summary>Gets the size of the content of the specified child <see cref="T:UIKit.IUIContentContainer" /> by using the size of the parent container.</summary>
        <returns>The <see cref="T:System.Drawing.SizeF" /> of the content of the <paramref name="contentContainer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredContentSize">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGSize PreferredContentSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize PreferredContentSize" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUIContentContainer.PreferredContentSize" />
      <MemberSignature Language="F#" Value="member this.PreferredContentSize : CoreGraphics.CGSize" Usage="UIKit.IUIContentContainer.PreferredContentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("preferredContentSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the preferred size for the content of the container.</summary>
        <value>The preferred <see cref="T:System.Drawing.SizeF" /> of the contents of <c>this</c> <see cref="T:UIKit.IUIContentContainer" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredContentSizeDidChangeForChildContentContainer">
      <MemberSignature Language="C#" Value="public void PreferredContentSizeDidChangeForChildContentContainer (UIKit.IUIContentContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreferredContentSizeDidChangeForChildContentContainer(class UIKit.IUIContentContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUIContentContainer.PreferredContentSizeDidChangeForChildContentContainer(UIKit.IUIContentContainer)" />
      <MemberSignature Language="F#" Value="abstract member PreferredContentSizeDidChangeForChildContentContainer : UIKit.IUIContentContainer -&gt; unit" Usage="iUIContentContainer.PreferredContentSizeDidChangeForChildContentContainer container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("preferredContentSizeDidChangeForChildContentContainer:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="UIKit.IUIContentContainer" />
      </Parameters>
      <Docs>
        <param name="container">The child .</param>
        <summary>Notifies this controller that the preferred size for content for a specified child container has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemLayoutFittingSizeDidChangeForChildContentContainer">
      <MemberSignature Language="C#" Value="public void SystemLayoutFittingSizeDidChangeForChildContentContainer (UIKit.IUIContentContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SystemLayoutFittingSizeDidChangeForChildContentContainer(class UIKit.IUIContentContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUIContentContainer.SystemLayoutFittingSizeDidChangeForChildContentContainer(UIKit.IUIContentContainer)" />
      <MemberSignature Language="F#" Value="abstract member SystemLayoutFittingSizeDidChangeForChildContentContainer : UIKit.IUIContentContainer -&gt; unit" Usage="iUIContentContainer.SystemLayoutFittingSizeDidChangeForChildContentContainer container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("systemLayoutFittingSizeDidChangeForChildContentContainer:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="UIKit.IUIContentContainer" />
      </Parameters>
      <Docs>
        <param name="container">The child .</param>
        <summary>Notifies this container that auto layout resized a specified child container.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewWillTransitionToSize">
      <MemberSignature Language="C#" Value="public void ViewWillTransitionToSize (CoreGraphics.CGSize toSize, UIKit.IUIViewControllerTransitionCoordinator coordinator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ViewWillTransitionToSize(valuetype CoreGraphics.CGSize toSize, class UIKit.IUIViewControllerTransitionCoordinator coordinator) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUIContentContainer.ViewWillTransitionToSize(CoreGraphics.CGSize,UIKit.IUIViewControllerTransitionCoordinator)" />
      <MemberSignature Language="F#" Value="abstract member ViewWillTransitionToSize : CoreGraphics.CGSize * UIKit.IUIViewControllerTransitionCoordinator -&gt; unit" Usage="iUIContentContainer.ViewWillTransitionToSize (toSize, coordinator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("viewWillTransitionToSize:withTransitionCoordinator:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSize" Type="CoreGraphics.CGSize" />
        <Parameter Name="coordinator" Type="UIKit.IUIViewControllerTransitionCoordinator" />
      </Parameters>
      <Docs>
        <param name="toSize">To be added.</param>
        <param name="coordinator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillTransitionToTraitCollection">
      <MemberSignature Language="C#" Value="public void WillTransitionToTraitCollection (UIKit.UITraitCollection traitCollection, UIKit.IUIViewControllerTransitionCoordinator coordinator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillTransitionToTraitCollection(class UIKit.UITraitCollection traitCollection, class UIKit.IUIViewControllerTransitionCoordinator coordinator) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUIContentContainer.WillTransitionToTraitCollection(UIKit.UITraitCollection,UIKit.IUIViewControllerTransitionCoordinator)" />
      <MemberSignature Language="F#" Value="abstract member WillTransitionToTraitCollection : UIKit.UITraitCollection * UIKit.IUIViewControllerTransitionCoordinator -&gt; unit" Usage="iUIContentContainer.WillTransitionToTraitCollection (traitCollection, coordinator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("willTransitionToTraitCollection:withTransitionCoordinator:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traitCollection" Type="UIKit.UITraitCollection" />
        <Parameter Name="coordinator" Type="UIKit.IUIViewControllerTransitionCoordinator" />
      </Parameters>
      <Docs>
        <param name="traitCollection">The new trait collection.</param>
        <param name="coordinator">The  coordinating the transition.This parameter can be .</param>
        <summary>Notifies <c>this</c> that its trait collection will change to <paramref name="traitCollection" />, as coordinated by <paramref name="coordinator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
