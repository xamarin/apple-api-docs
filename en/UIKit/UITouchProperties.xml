<Type Name="UITouchProperties" FullName="UIKit.UITouchProperties">
  <TypeSignature Language="C#" Value="public enum UITouchProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UITouchProperties extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:UIKit.UITouchProperties" />
  <TypeSignature Language="F#" Value="type UITouchProperties = " />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Native</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A flagging enumeration of the properties of a <see cref="T:UIKit.UITouch" /> that may change.</summary>
    <remarks>
      <para>Different hardware devices have different capabilities that can vary over the duration of a touch. For instance, all current hardware allows the <see cref="F:UIKit.UITouchProperties.Location" /> property to vary, but only the Apple Pencil currently supports the <see cref="F:UIKit.UITouchProperties.Altitude" /> and <see cref="F:UIKit.UITouchProperties.Azimuth" /> values to change over the course of a touch.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Altitude">
      <MemberSignature Language="C#" Value="Altitude" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype UIKit.UITouchProperties Altitude = int64(4)" />
      <MemberSignature Language="DocId" Value="F:UIKit.UITouchProperties.Altitude" />
      <MemberSignature Language="F#" Value="Altitude = 4" Usage="UIKit.UITouchProperties.Altitude" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITouchProperties</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>The device allows for the possibility that the <see cref="P:UIKit.UITouch.AltitudeAngle" /> will vary over the course of a touch.</summary>
      </Docs>
    </Member>
    <Member MemberName="Azimuth">
      <MemberSignature Language="C#" Value="Azimuth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype UIKit.UITouchProperties Azimuth = int64(2)" />
      <MemberSignature Language="DocId" Value="F:UIKit.UITouchProperties.Azimuth" />
      <MemberSignature Language="F#" Value="Azimuth = 2" Usage="UIKit.UITouchProperties.Azimuth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITouchProperties</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The device allows for the possibility that the <see cref="M:UIKit.UITouch.GetAzimuthAngle(UIKit.UIView)" /> and <see cref="M:UIKit.UITouch.GetAzimuthUnitVector(UIKit.UIView)" /> will vary over the course of a touch.</summary>
      </Docs>
    </Member>
    <Member MemberName="Force">
      <MemberSignature Language="C#" Value="Force" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype UIKit.UITouchProperties Force = int64(1)" />
      <MemberSignature Language="DocId" Value="F:UIKit.UITouchProperties.Force" />
      <MemberSignature Language="F#" Value="Force = 1" Usage="UIKit.UITouchProperties.Force" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITouchProperties</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The device allows for the possibility that the <see cref="P:UIKit.UITouch.Force" /> will vary over the course of a touch.</summary>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="Location" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype UIKit.UITouchProperties Location = int64(8)" />
      <MemberSignature Language="DocId" Value="F:UIKit.UITouchProperties.Location" />
      <MemberSignature Language="F#" Value="Location = 8" Usage="UIKit.UITouchProperties.Location" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITouchProperties</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>The device allows for the possibility that the <see cref="M:UIKit.UITouch.LocationInView(UIKit.UIView)" /> will vary over the course of a touch.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
