<Type Name="UIStringAttributes" FullName="UIKit.UIStringAttributes">
  <TypeSignature Language="C#" Value="public class UIStringAttributes : Foundation.DictionaryContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIStringAttributes extends Foundation.DictionaryContainer" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIStringAttributes" />
  <TypeSignature Language="F#" Value="type UIStringAttributes = class&#xA;    inherit DictionaryContainer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.DictionaryContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Strongly helper to define UIKit attributes for use with <see cref="T:Foundation.NSAttributedString" />. </summary>
    <remarks>
      <para>

	You use this class to create attributes that can be used with
	both <see cref="T:Foundation.NSAttributedString" />
	and <see cref="T:Foundation.NSMutableAttributedString" />.
	Since this class is strongly typed, you will get code
	completion as well as avoid common mistakes when using
	attributed strings with UIKit.

      </para>
      <example>
        <code lang="C#"><![CDATA[
// 
// Using NSAttributedString with UIKit
//
var myText = new NSAttributedString ("Hello, world",
       new UIStringAttributes () {
              ForegroundColor =  UIColor.Red,
	      KerningAdjustment = 3
       });
label.AttributedText = myText;
	]]></code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIStringAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIStringAttributes.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIStringAttributes (Foundation.NSDictionary dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSDictionary dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIStringAttributes.#ctor(Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="new UIKit.UIStringAttributes : Foundation.NSDictionary -&gt; UIKit.UIStringAttributes" Usage="new UIKit.UIStringAttributes dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="dictionary">Dictionary to initialize from</param>
        <summary>Creates a UIStringAttributes from UIKit NSAttributedString attributes stored in a dictionary.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public UIKit.UIColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.BackgroundColor" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : UIKit.UIColor with get, set" Usage="UIKit.UIStringAttributes.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Background Color for the text.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineOffset">
      <MemberSignature Language="C#" Value="public Nullable&lt;float&gt; BaselineOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; BaselineOffset" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.BaselineOffset" />
      <MemberSignature Language="F#" Value="member this.BaselineOffset : Nullable&lt;single&gt; with get, set" Usage="UIKit.UIStringAttributes.BaselineOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The distance from the bottom of the bounding box of the glyphs of the string to their baseline.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expansion">
      <MemberSignature Language="C#" Value="public Nullable&lt;float&gt; Expansion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; Expansion" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.Expansion" />
      <MemberSignature Language="F#" Value="member this.Expansion : Nullable&lt;single&gt; with get, set" Usage="UIKit.UIStringAttributes.Expansion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The log of the expansion factor to be applied to glyphs.</summary>
        <value>The default value is 0, indicating no expansion.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public UIKit.UIFont Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIFont Font" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.Font" />
      <MemberSignature Language="F#" Value="member this.Font : UIKit.UIFont with get, set" Usage="UIKit.UIStringAttributes.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIFont</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Font to use for the text.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public UIKit.UIColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor ForegroundColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.ForegroundColor" />
      <MemberSignature Language="F#" Value="member this.ForegroundColor : UIKit.UIColor with get, set" Usage="UIKit.UIStringAttributes.ForegroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Foreground Color for the text</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KerningAdjustment">
      <MemberSignature Language="C#" Value="public Nullable&lt;float&gt; KerningAdjustment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; KerningAdjustment" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.KerningAdjustment" />
      <MemberSignature Language="F#" Value="member this.KerningAdjustment : Nullable&lt;single&gt; with get, set" Usage="UIKit.UIStringAttributes.KerningAdjustment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Kerning value used for the text</summary>
        <value>This value is measured in points, and the value zero is used to mean no kerning.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ligature">
      <MemberSignature Language="C#" Value="public Nullable&lt;Foundation.NSLigatureType&gt; Ligature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Foundation.NSLigatureType&gt; Ligature" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.Ligature" />
      <MemberSignature Language="F#" Value="member this.Ligature : Nullable&lt;Foundation.NSLigatureType&gt; with get, set" Usage="UIKit.UIStringAttributes.Ligature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Foundation.NSLigatureType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The style of ligatures to use.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Link">
      <MemberSignature Language="C#" Value="public Foundation.NSUrl Link { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl Link" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.Link" />
      <MemberSignature Language="F#" Value="member this.Link : Foundation.NSUrl with get, set" Usage="UIKit.UIStringAttributes.Link" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The destination URL of a hyperlink.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Obliqueness">
      <MemberSignature Language="C#" Value="public Nullable&lt;float&gt; Obliqueness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; Obliqueness" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.Obliqueness" />
      <MemberSignature Language="F#" Value="member this.Obliqueness : Nullable&lt;single&gt; with get, set" Usage="UIKit.UIStringAttributes.Obliqueness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The amount of skew to apply to glyphs.</summary>
        <value>The default value of 0 indicates no skew.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphStyle">
      <MemberSignature Language="C#" Value="public UIKit.NSParagraphStyle ParagraphStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.NSParagraphStyle ParagraphStyle" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.ParagraphStyle" />
      <MemberSignature Language="F#" Value="member this.ParagraphStyle : UIKit.NSParagraphStyle with get, set" Usage="UIKit.UIStringAttributes.ParagraphStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.NSParagraphStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used to specify a custom paragraph style.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public UIKit.NSShadow Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.NSShadow Shadow" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.Shadow" />
      <MemberSignature Language="F#" Value="member this.Shadow : UIKit.NSShadow with get, set" Usage="UIKit.UIStringAttributes.Shadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.NSShadow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shadow to use for the text.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrikethroughColor">
      <MemberSignature Language="C#" Value="public UIKit.UIColor StrikethroughColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor StrikethroughColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.StrikethroughColor" />
      <MemberSignature Language="F#" Value="member this.StrikethroughColor : UIKit.UIColor with get, set" Usage="UIKit.UIStringAttributes.StrikethroughColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color to be used for the strikethrough stroke.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrikethroughStyle">
      <MemberSignature Language="C#" Value="public Nullable&lt;Foundation.NSUnderlineStyle&gt; StrikethroughStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Foundation.NSUnderlineStyle&gt; StrikethroughStyle" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.StrikethroughStyle" />
      <MemberSignature Language="F#" Value="member this.StrikethroughStyle : Nullable&lt;Foundation.NSUnderlineStyle&gt; with get, set" Usage="UIKit.UIStringAttributes.StrikethroughStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Foundation.NSUnderlineStyle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Strikethrough style.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeColor">
      <MemberSignature Language="C#" Value="public UIKit.UIColor StrokeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor StrokeColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.StrokeColor" />
      <MemberSignature Language="F#" Value="member this.StrokeColor : UIKit.UIColor with get, set" Usage="UIKit.UIStringAttributes.StrokeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stroke Color.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeWidth">
      <MemberSignature Language="C#" Value="public Nullable&lt;float&gt; StrokeWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; StrokeWidth" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.StrokeWidth" />
      <MemberSignature Language="F#" Value="member this.StrokeWidth : Nullable&lt;single&gt; with get, set" Usage="UIKit.UIStringAttributes.StrokeWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The stroke width for drawing the text</summary>
        <value>Expressed as percentage of the font size.   Positive values stroke the text, negative values stroke and fill the text.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAttachment">
      <MemberSignature Language="C#" Value="public UIKit.NSTextAttachment TextAttachment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.NSTextAttachment TextAttachment" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.TextAttachment" />
      <MemberSignature Language="F#" Value="member this.TextAttachment : UIKit.NSTextAttachment with get, set" Usage="UIKit.UIStringAttributes.TextAttachment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.NSTextAttachment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The NSTextAttachment, if any.</summary>
        <value>The default value is <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffect">
      <MemberSignature Language="C#" Value="public UIKit.NSTextEffect TextEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.NSTextEffect TextEffect" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.TextEffect" />
      <MemberSignature Language="F#" Value="member this.TextEffect : UIKit.NSTextEffect with get, set" Usage="UIKit.UIStringAttributes.TextEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.NSTextEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The NSTextEffect applied to the string.</summary>
        <value>The default value is <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlineColor">
      <MemberSignature Language="C#" Value="public UIKit.UIColor UnderlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor UnderlineColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.UnderlineColor" />
      <MemberSignature Language="F#" Value="member this.UnderlineColor : UIKit.UIColor with get, set" Usage="UIKit.UIStringAttributes.UnderlineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color of the underline stroke.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlineStyle">
      <MemberSignature Language="C#" Value="public Nullable&lt;Foundation.NSUnderlineStyle&gt; UnderlineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Foundation.NSUnderlineStyle&gt; UnderlineStyle" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.UnderlineStyle" />
      <MemberSignature Language="F#" Value="member this.UnderlineStyle : Nullable&lt;Foundation.NSUnderlineStyle&gt; with get, set" Usage="UIKit.UIStringAttributes.UnderlineStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Foundation.NSUnderlineStyle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Underline style for the text.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakTextEffect">
      <MemberSignature Language="C#" Value="public Foundation.NSString WeakTextEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString WeakTextEffect" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.WeakTextEffect" />
      <MemberSignature Language="F#" Value="member this.WeakTextEffect : Foundation.NSString with get, set" Usage="UIKit.UIStringAttributes.WeakTextEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A reference to the text effect that does not prevent garbage collection of the underlying resource.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingDirectionInt">
      <MemberSignature Language="C#" Value="public Foundation.NSNumber[] WritingDirectionInt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] WritingDirectionInt" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIStringAttributes.WritingDirectionInt" />
      <MemberSignature Language="F#" Value="member this.WritingDirectionInt : Foundation.NSNumber[] with get, set" Usage="UIKit.UIStringAttributes.WritingDirectionInt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An array indicating the writing-direction overrides.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
