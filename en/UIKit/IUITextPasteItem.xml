<Type Name="IUITextPasteItem" FullName="UIKit.IUITextPasteItem">
  <TypeSignature Language="C#" Value="public interface IUITextPasteItem : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUITextPasteItem implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUITextPasteItem" />
  <TypeSignature Language="F#" Value="type IUITextPasteItem = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="UITextPasteItem", WrapperType=typeof(UIKit.UITextPasteItemWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetStringResult", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="setStringResult:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetAttributedStringResult", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="setAttributedStringResult:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetAttachmentResult", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="setAttachmentResult:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetNoResult", Selector="setNoResult")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetDefaultResult", Selector="setDefaultResult")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="itemProvider", IsProperty=true, IsRequired=true, IsStatic=false, Name="ItemProvider", PropertyType=typeof(Foundation.NSItemProvider), Selector="itemProvider")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="localObject", IsProperty=true, IsRequired=true, IsStatic=false, Name="LocalObject", PropertyType=typeof(Foundation.NSObject), Selector="localObject")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="defaultAttributes", IsProperty=true, IsRequired=true, IsStatic=false, Name="DefaultAttributes", PropertyType=typeof(Foundation.NSDictionary`2&lt;Foundation.NSString,Foundation.NSObject&gt;), Selector="defaultAttributes")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetStringResult", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(System.String) }, Selector="setStringResult:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetAttributedStringResult", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSAttributedString) }, Selector="setAttributedStringResult:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="SetAttachmentResult", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(UIKit.NSTextAttachment) }, Selector="setAttachmentResult:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface for working with paste and drop text items.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DefaultAttributes">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; DefaultAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; DefaultAttributes" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITextPasteItem.DefaultAttributes" />
      <MemberSignature Language="F#" Value="member this.DefaultAttributes : Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt;" Usage="UIKit.IUITextPasteItem.DefaultAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("defaultAttributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default attributes for plain text paste items.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProvider">
      <MemberSignature Language="C#" Value="public Foundation.NSItemProvider ItemProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSItemProvider ItemProvider" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITextPasteItem.ItemProvider" />
      <MemberSignature Language="F#" Value="member this.ItemProvider : Foundation.NSItemProvider" Usage="UIKit.IUITextPasteItem.ItemProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("itemProvider")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSItemProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the provider that provides the text data for the paste item.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalObject">
      <MemberSignature Language="C#" Value="public Foundation.NSObject LocalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject LocalObject" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITextPasteItem.LocalObject" />
      <MemberSignature Language="F#" Value="member this.LocalObject : Foundation.NSObject" Usage="UIKit.IUITextPasteItem.LocalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("localObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the context object, if present, that was attached to the item when it was lifted.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttachmentResult">
      <MemberSignature Language="C#" Value="public void SetAttachmentResult (UIKit.NSTextAttachment textAttachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttachmentResult(class UIKit.NSTextAttachment textAttachment) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITextPasteItem.SetAttachmentResult(UIKit.NSTextAttachment)" />
      <MemberSignature Language="F#" Value="abstract member SetAttachmentResult : UIKit.NSTextAttachment -&gt; unit" Usage="iUITextPasteItem.SetAttachmentResult textAttachment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setAttachmentResult:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textAttachment" Type="UIKit.NSTextAttachment" />
      </Parameters>
      <Docs>
        <param name="textAttachment">The new attachment value.</param>
        <summary>Sets the attachement result to the specified attachment.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttributedStringResult">
      <MemberSignature Language="C#" Value="public void SetAttributedStringResult (Foundation.NSAttributedString string);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttributedStringResult(class Foundation.NSAttributedString string) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITextPasteItem.SetAttributedStringResult(Foundation.NSAttributedString)" />
      <MemberSignature Language="F#" Value="abstract member SetAttributedStringResult : Foundation.NSAttributedString -&gt; unit" Usage="iUITextPasteItem.SetAttributedStringResult string" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setAttributedStringResult:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="Foundation.NSAttributedString" />
      </Parameters>
      <Docs>
        <param name="string">The new attachment value.</param>
        <summary>Sets the string value of the paste item.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultResult">
      <MemberSignature Language="C#" Value="public void SetDefaultResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITextPasteItem.SetDefaultResult" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultResult : unit -&gt; unit" Usage="iUITextPasteItem.SetDefaultResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setDefaultResult")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoResult">
      <MemberSignature Language="C#" Value="public void SetNoResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNoResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITextPasteItem.SetNoResult" />
      <MemberSignature Language="F#" Value="abstract member SetNoResult : unit -&gt; unit" Usage="iUITextPasteItem.SetNoResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setNoResult")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the text value to not be provided by its provider.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStringResult">
      <MemberSignature Language="C#" Value="public void SetStringResult (string string);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStringResult(string string) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITextPasteItem.SetStringResult(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetStringResult : string -&gt; unit" Usage="iUITextPasteItem.SetStringResult string" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setStringResult:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string">The new attachment value.</param>
        <summary>Sets the text result.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
