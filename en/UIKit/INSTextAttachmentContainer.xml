<Type Name="INSTextAttachmentContainer" FullName="UIKit.INSTextAttachmentContainer">
  <TypeSignature Language="C#" Value="public interface INSTextAttachmentContainer : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INSTextAttachmentContainer implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:UIKit.INSTextAttachmentContainer" />
  <TypeSignature Language="F#" Value="type INSTextAttachmentContainer = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="NSTextAttachmentContainer", WrapperType=typeof(UIKit.NSTextAttachmentContainerWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetImageForBounds", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(UIKit.UIImage), Selector="imageForBounds:textContainer:characterIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetAttachmentBounds", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(CoreGraphics.CGRect), Selector="attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetImageForBounds", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(CoreGraphics.CGRect), typeof(UIKit.NSTextContainer), typeof(System.nuint) }, ReturnType=typeof(UIKit.UIImage), Selector="imageForBounds:textContainer:characterIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetAttachmentBounds", ParameterByRef=new System.Boolean[] { false, false, false, false }, ParameterType=new System.Type[] { typeof(UIKit.NSTextContainer), typeof(CoreGraphics.CGRect), typeof(CoreGraphics.CGPoint), typeof(System.nuint) }, ReturnType=typeof(CoreGraphics.CGRect), Selector="attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:UIKit.NSTextAttachmentContainer" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:UIKit.NSTextAttachmentContainer" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:UIKit.NSTextAttachmentContainer" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=UIKit%20NSText%20Attachment%20Container_%20Extensions&amp;scope=Xamarin" title="T:UIKit.NSTextAttachmentContainer_Extensions">T:UIKit.NSTextAttachmentContainer_Extensions</a></format> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAttachmentBounds">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGRect GetAttachmentBounds (UIKit.NSTextContainer textContainer, CoreGraphics.CGRect proposedLineFragment, CoreGraphics.CGPoint glyphPosition, nuint characterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect GetAttachmentBounds(class UIKit.NSTextContainer textContainer, valuetype CoreGraphics.CGRect proposedLineFragment, valuetype CoreGraphics.CGPoint glyphPosition, valuetype System.nuint characterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.INSTextAttachmentContainer.GetAttachmentBounds(UIKit.NSTextContainer,CoreGraphics.CGRect,CoreGraphics.CGPoint,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetAttachmentBounds : UIKit.NSTextContainer * CoreGraphics.CGRect * CoreGraphics.CGPoint * nuint -&gt; CoreGraphics.CGRect" Usage="iNSTextAttachmentContainer.GetAttachmentBounds (textContainer, proposedLineFragment, glyphPosition, characterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContainer" Type="UIKit.NSTextContainer" />
        <Parameter Name="proposedLineFragment" Type="CoreGraphics.CGRect" />
        <Parameter Name="glyphPosition" Type="CoreGraphics.CGPoint" />
        <Parameter Name="characterIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="textContainer">To be added.</param>
        <param name="proposedLineFragment">To be added.</param>
        <param name="glyphPosition">To be added.</param>
        <param name="characterIndex">To be added.</param>
        <summary>Returns the bounds of the text attachment.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageForBounds">
      <MemberSignature Language="C#" Value="public UIKit.UIImage GetImageForBounds (CoreGraphics.CGRect bounds, UIKit.NSTextContainer textContainer, nuint characterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIImage GetImageForBounds(valuetype CoreGraphics.CGRect bounds, class UIKit.NSTextContainer textContainer, valuetype System.nuint characterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.INSTextAttachmentContainer.GetImageForBounds(CoreGraphics.CGRect,UIKit.NSTextContainer,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetImageForBounds : CoreGraphics.CGRect * UIKit.NSTextContainer * nuint -&gt; UIKit.UIImage" Usage="iNSTextAttachmentContainer.GetImageForBounds (bounds, textContainer, characterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("imageForBounds:textContainer:characterIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="CoreGraphics.CGRect" />
        <Parameter Name="textContainer" Type="UIKit.NSTextContainer" />
        <Parameter Name="characterIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="characterIndex">To be added.</param>
        <summary>Returns an image rendered in <paramref name="bounds" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
