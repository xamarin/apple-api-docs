<Type Name="UIScrollViewDelegate" FullName="UIKit.UIScrollViewDelegate">
  <TypeSignature Language="C#" Value="public class UIScrollViewDelegate : Foundation.NSObject, IDisposable, UIKit.IUIScrollViewDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIScrollViewDelegate extends Foundation.NSObject implements class ObjCRuntime.INativeObject, class System.IDisposable, class UIKit.IUIScrollViewDelegate" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIScrollViewDelegate" />
  <TypeSignature Language="F#" Value="type UIScrollViewDelegate = class&#xA;    inherit NSObject&#xA;    interface IUIScrollViewDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIScrollViewDelegate</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("UIScrollViewDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A class used to receive notifications from <see cref="T:UIKit.UIScrollView" />.</summary>
    <remarks>
      <para>A strongly typed implementation of a class that can be used to respond to events raised by the <see cref="T:UIKit.UIScrollView" />.</para>
      <para>The methods on this class can be used to respond to scroll view operations (such as scrolling, zooming, and animations), and in some cases affect those operations.</para>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIScrollViewDelegate_Protocol/index.html">Apple documentation for <c>UIScrollViewDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIScrollViewDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UIScrollViewDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new UIKit.UIScrollViewDelegate : Foundation.NSObjectFlag -&gt; UIKit.UIScrollViewDelegate" Usage="new UIKit.UIScrollViewDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal UIScrollViewDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new UIKit.UIScrollViewDelegate : nativeint -&gt; UIKit.UIScrollViewDelegate" Usage="new UIKit.UIScrollViewDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationEnded">
      <MemberSignature Language="C#" Value="public virtual void DecelerationEnded (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DecelerationEnded(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.DecelerationEnded(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member DecelerationEnded : UIKit.UIScrollView -&gt; unit&#xA;override this.DecelerationEnded : UIKit.UIScrollView -&gt; unit" Usage="uIScrollViewDelegate.DecelerationEnded scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewDidEndDecelerating:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view object that is decelerating the scrolling content.</param>
        <summary>Called when deceleration has ended (at the end of a scrolling movement).</summary>
        <remarks>The scroll view calls this method when scrolling movement comes to a halt. The <see cref="T:UIKit.UIScrollView" /><see cref="P:UIKit.UIScrollView.Decelerating" /> property indicates whether scrolling is in progress after the user has stopped dragging. </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationStarted">
      <MemberSignature Language="C#" Value="public virtual void DecelerationStarted (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DecelerationStarted(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.DecelerationStarted(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member DecelerationStarted : UIKit.UIScrollView -&gt; unit&#xA;override this.DecelerationStarted : UIKit.UIScrollView -&gt; unit" Usage="uIScrollViewDelegate.DecelerationStarted scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewWillBeginDecelerating:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view object that is decelerating the scrolling content.</param>
        <summary>Called when deceleration has started (at the end of a scrolling movement).</summary>
        <remarks>After the application user raises their finger from a dragging motion, the content view will decelerate over a short distance unless <see cref="P:UIKit.UIScrollView.PagingEnabled" /> is set to <see langword="true" />. </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeAdjustedContentInset">
      <MemberSignature Language="C#" Value="public virtual void DidChangeAdjustedContentInset (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeAdjustedContentInset(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.DidChangeAdjustedContentInset(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member DidChangeAdjustedContentInset : UIKit.UIScrollView -&gt; unit&#xA;override this.DidChangeAdjustedContentInset : UIKit.UIScrollView -&gt; unit" Usage="uIScrollViewDelegate.DidChangeAdjustedContentInset scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewDidChangeAdjustedContentInset:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">The scroll view whose insets changed.</param>
        <summary>Method that is called when the inset values change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidZoom">
      <MemberSignature Language="C#" Value="public virtual void DidZoom (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidZoom(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.DidZoom(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member DidZoom : UIKit.UIScrollView -&gt; unit&#xA;override this.DidZoom : UIKit.UIScrollView -&gt; unit" Usage="uIScrollViewDelegate.DidZoom scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewDidZoom:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view being zoomed.</param>
        <summary>Called when the scroll view's zoom factor has changed.</summary>
        <remarks>
          <para>This method will be called repeatedly during a pinch-to-zoom gesture.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingEnded">
      <MemberSignature Language="C#" Value="public virtual void DraggingEnded (UIKit.UIScrollView scrollView, bool willDecelerate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggingEnded(class UIKit.UIScrollView scrollView, bool willDecelerate) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.DraggingEnded(UIKit.UIScrollView,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DraggingEnded : UIKit.UIScrollView * bool -&gt; unit&#xA;override this.DraggingEnded : UIKit.UIScrollView * bool -&gt; unit" Usage="uIScrollViewDelegate.DraggingEnded (scrollView, willDecelerate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewDidEndDragging:willDecelerate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
        <Parameter Name="willDecelerate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view where the content finished scrolling.</param>
        <param name="willDecelerate">
          <see langword="true" /> if the scrolling movement will continue (but decelerate) after the user lifts their finger. If <see langword="false" /> then the scrolling stops immediately upon touch-up.</param>
        <summary>Called when dragging has ended.</summary>
        <remarks>Dragging ends when the user lifts their finger and stops scrolling the content directly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggingStarted">
      <MemberSignature Language="C#" Value="public virtual void DraggingStarted (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DraggingStarted(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.DraggingStarted(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member DraggingStarted : UIKit.UIScrollView -&gt; unit&#xA;override this.DraggingStarted : UIKit.UIScrollView -&gt; unit" Usage="uIScrollViewDelegate.DraggingStarted scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewWillBeginDragging:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view whose content is about to be scrolled.</param>
        <summary>Called when dragging is about to begin.</summary>
        <remarks>This method may not be called until dragging has already commenced a small distance.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollAnimationEnded">
      <MemberSignature Language="C#" Value="public virtual void ScrollAnimationEnded (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollAnimationEnded(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.ScrollAnimationEnded(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member ScrollAnimationEnded : UIKit.UIScrollView -&gt; unit&#xA;override this.ScrollAnimationEnded : UIKit.UIScrollView -&gt; unit" Usage="uIScrollViewDelegate.ScrollAnimationEnded scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewDidEndScrollingAnimation:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view that is performing a scrolling animation.</param>
        <summary>Called when a scrolling animation in the scroll view is finished.</summary>
        <remarks>The scroll view calls this method after <see cref="M:UIKit.UIScrollView.SetContentOffset(CoreGraphics.CGPoint,System.Boolean)" /> and <see cref="M:UIKit.UIScrollView.ScrollRectToVisible(CoreGraphics.CGRect,System.Boolean)" /> (but only if animations are requested).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrolled">
      <MemberSignature Language="C#" Value="public virtual void Scrolled (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Scrolled(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.Scrolled(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member Scrolled : UIKit.UIScrollView -&gt; unit&#xA;override this.Scrolled : UIKit.UIScrollView -&gt; unit" Usage="uIScrollViewDelegate.Scrolled scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewDidScroll:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view where the scrolling occurred.</param>
        <summary>Called when the user scrolls the content.</summary>
        <remarks>This method is typically implemented to obtain the change in content offset from <paramref name="scrollView" /> and draw the affected portion of the content view.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrolledToTop">
      <MemberSignature Language="C#" Value="public virtual void ScrolledToTop (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrolledToTop(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.ScrolledToTop(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member ScrolledToTop : UIKit.UIScrollView -&gt; unit&#xA;override this.ScrolledToTop : UIKit.UIScrollView -&gt; unit" Usage="uIScrollViewDelegate.ScrolledToTop scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewDidScrollToTop:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view that was scrolled.</param>
        <summary>Called when the scroll view is scrolled to the top of the content.</summary>
        <remarks>The scroll view calls this method when it finishes scrolling to the top of the content. It might be called immediately if the top is already shown. For the scroll-to-top gesture (tap on the status bar) to work, <see cref="P:UIKit.UIScrollView.ScrollsToTop" /> (on <see cref="T:UIKit.UIScrollView" />) must be set to <see langword="true" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldScrollToTop">
      <MemberSignature Language="C#" Value="public virtual bool ShouldScrollToTop (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldScrollToTop(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.ShouldScrollToTop(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member ShouldScrollToTop : UIKit.UIScrollView -&gt; bool&#xA;override this.ShouldScrollToTop : UIKit.UIScrollView -&gt; bool" Usage="uIScrollViewDelegate.ShouldScrollToTop scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewShouldScrollToTop:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view requesting whether scroll is allowed.</param>
        <summary>Called by the scroll view to determine whether it should scroll to the top of the content.</summary>
        <returns>
          <see langword="true" /> to allow scrolling to the top of the content, <see langword="false" /> to prevent it.</returns>
        <remarks>If this method is not implemented, <see langword="true" /> is the default. For the scroll-to-top gesture (tap on the status bar) to work, <see cref="P:UIKit.UIScrollView.ScrollsToTop" /> (on <see cref="T:UIKit.UIScrollView" />) must be set to <see langword="true" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewForZoomingInScrollView">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIView ViewForZoomingInScrollView (UIKit.UIScrollView scrollView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIView ViewForZoomingInScrollView(class UIKit.UIScrollView scrollView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.ViewForZoomingInScrollView(UIKit.UIScrollView)" />
      <MemberSignature Language="F#" Value="abstract member ViewForZoomingInScrollView : UIKit.UIScrollView -&gt; UIKit.UIView&#xA;override this.ViewForZoomingInScrollView : UIKit.UIScrollView -&gt; UIKit.UIView" Usage="uIScrollViewDelegate.ViewForZoomingInScrollView scrollView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("viewForZoomingInScrollView:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view displaying the content.</param>
        <summary>Returns the view to scale when zooming is about to occur in the scroll view.</summary>
        <returns>A <see cref="T:UIKit.UIView" /> that will be scaled by the zooming gesture. Return <see langword="null" /> to prevent zooming.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEndDragging">
      <MemberSignature Language="C#" Value="public virtual void WillEndDragging (UIKit.UIScrollView scrollView, CoreGraphics.CGPoint velocity, ref CoreGraphics.CGPoint targetContentOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillEndDragging(class UIKit.UIScrollView scrollView, valuetype CoreGraphics.CGPoint velocity, valuetype CoreGraphics.CGPoint&amp; targetContentOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.WillEndDragging(UIKit.UIScrollView,CoreGraphics.CGPoint,CoreGraphics.CGPoint@)" />
      <MemberSignature Language="F#" Value="abstract member WillEndDragging : UIKit.UIScrollView * CoreGraphics.CGPoint *  -&gt; unit&#xA;override this.WillEndDragging : UIKit.UIScrollView * CoreGraphics.CGPoint *  -&gt; unit" Usage="uIScrollViewDelegate.WillEndDragging (scrollView, velocity, targetContentOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewWillEndDragging:withVelocity:targetContentOffset:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
        <Parameter Name="velocity" Type="CoreGraphics.CGPoint" />
        <Parameter Name="targetContentOffset" Type="CoreGraphics.CGPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view where user touch ended.</param>
        <param name="velocity">The velocity of the scroll view (in points) when the touch ended.</param>
        <param name="targetContentOffset">The expected offset when the scrolling action decelerates to a stop.</param>
        <summary>Called when the user finishes scrolling the content.</summary>
        <remarks>
          <para>This method isn't called when the scroll view's <see cref="P:UIKit.UIScrollView.PagingEnabled" /> property is <see langword="true" />.</para>
          <para>The <see langword="ref" /> parameter <paramref name="targetContentOffset" /> can be modified in this method to adjust where the scroll view ends its scrolling animation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomingEnded">
      <MemberSignature Language="C#" Value="public virtual void ZoomingEnded (UIKit.UIScrollView scrollView, UIKit.UIView withView, nfloat atScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZoomingEnded(class UIKit.UIScrollView scrollView, class UIKit.UIView withView, valuetype System.nfloat atScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.ZoomingEnded(UIKit.UIScrollView,UIKit.UIView,System.nfloat)" />
      <MemberSignature Language="F#" Value="abstract member ZoomingEnded : UIKit.UIScrollView * UIKit.UIView * nfloat -&gt; unit&#xA;override this.ZoomingEnded : UIKit.UIScrollView * UIKit.UIView * nfloat -&gt; unit" Usage="uIScrollViewDelegate.ZoomingEnded (scrollView, withView, atScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewDidEndZooming:withView:atScale:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
        <Parameter Name="withView" Type="UIKit.UIView" />
        <Parameter Name="atScale" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view containing the content being zoomed.</param>
        <param name="withView">View representing the content that needs to be scaled.</param>
        <param name="atScale">The scale factor to use. This value must be between the limits set by the <see cref="T:UIKit.UIScrollView" /> properties <see cref="P:UIKit.UIScrollView.MinimumZoomScale" /> and <see cref="P:UIKit.UIScrollView.MaximumZoomScale" />.</param>
        <summary>Called when content zooming is complete.</summary>
        <remarks>This method is also called after any "bounce" animations, and after animated changes to the zoom level, and also after a zoom-related gesture ends (regardless of whether the zoom level was changed or not) .</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomingStarted">
      <MemberSignature Language="C#" Value="public virtual void ZoomingStarted (UIKit.UIScrollView scrollView, UIKit.UIView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZoomingStarted(class UIKit.UIScrollView scrollView, class UIKit.UIView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIScrollViewDelegate.ZoomingStarted(UIKit.UIScrollView,UIKit.UIView)" />
      <MemberSignature Language="F#" Value="abstract member ZoomingStarted : UIKit.UIScrollView * UIKit.UIView -&gt; unit&#xA;override this.ZoomingStarted : UIKit.UIScrollView * UIKit.UIView -&gt; unit" Usage="uIScrollViewDelegate.ZoomingStarted (scrollView, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scrollViewWillBeginZooming:withView:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollView" Type="UIKit.UIScrollView" />
        <Parameter Name="view" Type="UIKit.UIView" />
      </Parameters>
      <Docs>
        <param name="scrollView">Scroll view containing the content.</param>
        <param name="view">The content view about to be zoomed.</param>
        <summary>Called when a zooming operation is about to start.</summary>
        <remarks>This method is called at the beginning of zoom gestures and in cases where a change in zoom level will be animated. Use this method to store state information or any other processing before zooming the content view.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
