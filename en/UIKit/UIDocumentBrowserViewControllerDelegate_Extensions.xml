<Type Name="UIDocumentBrowserViewControllerDelegate_Extensions" FullName="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UIDocumentBrowserViewControllerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UIDocumentBrowserViewControllerDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIDocumentBrowserViewControllerDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type UIDocumentBrowserViewControllerDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:UIKit.IUIDocumentBrowserViewControllerDelegate" /> interface to support all the methods from the <see cref="T:UIKit.UIDocumentBrowserViewControllerDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:UIKit.IUIDocumentBrowserViewControllerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:UIKit.UIDocumentBrowserViewControllerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidImportDocument">
      <MemberSignature Language="C#" Value="public static void DidImportDocument (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl sourceUrl, Foundation.NSUrl destinationUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidImportDocument(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl sourceUrl, class Foundation.NSUrl destinationUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidImportDocument(UIKit.IUIDocumentBrowserViewControllerDelegate,UIKit.UIDocumentBrowserViewController,Foundation.NSUrl,Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="static member DidImportDocument : UIKit.IUIDocumentBrowserViewControllerDelegate * UIKit.UIDocumentBrowserViewController * Foundation.NSUrl * Foundation.NSUrl -&gt; unit" Usage="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidImportDocument (This, controller, sourceUrl, destinationUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="sourceUrl" Type="Foundation.NSUrl" />
        <Parameter Name="destinationUrl" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="controller">The controller that imported the document.</param>
        <param name="sourceUrl">The original document URL.</param>
        <param name="destinationUrl">The imported document's URL.</param>
        <summary>Developers may implement this method to respond after a document is imported.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidPickDocumentsAtUrls">
      <MemberSignature Language="C#" Value="public static void DidPickDocumentsAtUrls (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl[] documentUrls);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPickDocumentsAtUrls(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl[] documentUrls) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidPickDocumentsAtUrls(UIKit.IUIDocumentBrowserViewControllerDelegate,UIKit.UIDocumentBrowserViewController,Foundation.NSUrl[])" />
      <MemberSignature Language="F#" Value="static member DidPickDocumentsAtUrls : UIKit.IUIDocumentBrowserViewControllerDelegate * UIKit.UIDocumentBrowserViewController * Foundation.NSUrl[] -&gt; unit" Usage="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidPickDocumentsAtUrls (This, controller, documentUrls)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="documentUrls" Type="Foundation.NSUrl[]" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <param name="controller">To be added.</param>
        <param name="documentUrls">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidPickDocumentUrls">
      <MemberSignature Language="C#" Value="public static void DidPickDocumentUrls (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl[] documentUrls);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPickDocumentUrls(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl[] documentUrls) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidPickDocumentUrls(UIKit.IUIDocumentBrowserViewControllerDelegate,UIKit.UIDocumentBrowserViewController,Foundation.NSUrl[])" />
      <MemberSignature Language="F#" Value="static member DidPickDocumentUrls : UIKit.IUIDocumentBrowserViewControllerDelegate * UIKit.UIDocumentBrowserViewController * Foundation.NSUrl[] -&gt; unit" Usage="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidPickDocumentUrls (This, controller, documentUrls)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidPickDocumentsAtUrls (UIDocumentBrowserViewController, NSUrl[])' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="documentUrls" Type="Foundation.NSUrl[]" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="controller">The controller in which the URLs were picked .</param>
        <param name="documentUrls">The chosen URLs.</param>
        <summary>Developers may implement this method to respond after the user selects document URLs.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRequestDocumentCreation">
      <MemberSignature Language="C#" Value="public static void DidRequestDocumentCreation (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Action&lt;Foundation.NSUrl,UIKit.UIDocumentBrowserImportMode&gt; importHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestDocumentCreation(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class System.Action`2&lt;class Foundation.NSUrl, valuetype UIKit.UIDocumentBrowserImportMode&gt; importHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidRequestDocumentCreation(UIKit.IUIDocumentBrowserViewControllerDelegate,UIKit.UIDocumentBrowserViewController,System.Action{Foundation.NSUrl,UIKit.UIDocumentBrowserImportMode})" />
      <MemberSignature Language="F#" Value="static member DidRequestDocumentCreation : UIKit.IUIDocumentBrowserViewControllerDelegate * UIKit.UIDocumentBrowserViewController * Action&lt;Foundation.NSUrl, UIKit.UIDocumentBrowserImportMode&gt; -&gt; unit" Usage="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidRequestDocumentCreation (This, controller, importHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="importHandler" Type="System.Action&lt;Foundation.NSUrl,UIKit.UIDocumentBrowserImportMode&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V101))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="controller">The controller that made the request.</param>
        <param name="importHandler">The handler to run after the document is created.</param>
        <summary>Developers may implement this method to respond to a request to create a new document.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedToImportDocument">
      <MemberSignature Language="C#" Value="public static void FailedToImportDocument (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl documentUrl, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToImportDocument(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl documentUrl, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.FailedToImportDocument(UIKit.IUIDocumentBrowserViewControllerDelegate,UIKit.UIDocumentBrowserViewController,Foundation.NSUrl,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="static member FailedToImportDocument : UIKit.IUIDocumentBrowserViewControllerDelegate * UIKit.UIDocumentBrowserViewController * Foundation.NSUrl * Foundation.NSError -&gt; unit" Usage="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.FailedToImportDocument (This, controller, documentUrl, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="documentUrl" Type="Foundation.NSUrl" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="controller">The controller that failed to import the document.</param>
        <param name="documentUrl">The document's original URL.</param>
        <param name="error">
          <para>The error that occurred.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Developers may implement this method to respond when the application fails to import a document.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationActivities">
      <MemberSignature Language="C#" Value="public static UIKit.UIActivity[] GetApplicationActivities (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl[] documentUrls);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIActivity[] GetApplicationActivities(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl[] documentUrls) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.GetApplicationActivities(UIKit.IUIDocumentBrowserViewControllerDelegate,UIKit.UIDocumentBrowserViewController,Foundation.NSUrl[])" />
      <MemberSignature Language="F#" Value="static member GetApplicationActivities : UIKit.IUIDocumentBrowserViewControllerDelegate * UIKit.UIDocumentBrowserViewController * Foundation.NSUrl[] -&gt; UIKit.UIActivity[]" Usage="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.GetApplicationActivities (This, controller, documentUrls)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIActivity[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="documentUrls" Type="Foundation.NSUrl[]" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="controller">The controller that is making the request.</param>
        <param name="documentUrls">URLs to the documents to share.</param>
        <summary>Returns an array of custom application activities for an activity view.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPresent">
      <MemberSignature Language="C#" Value="public static void WillPresent (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, UIKit.UIActivityViewController activityViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class UIKit.UIActivityViewController activityViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.WillPresent(UIKit.IUIDocumentBrowserViewControllerDelegate,UIKit.UIDocumentBrowserViewController,UIKit.UIActivityViewController)" />
      <MemberSignature Language="F#" Value="static member WillPresent : UIKit.IUIDocumentBrowserViewControllerDelegate * UIKit.UIDocumentBrowserViewController * UIKit.UIActivityViewController -&gt; unit" Usage="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.WillPresent (This, controller, activityViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="activityViewController" Type="UIKit.UIActivityViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="controller">The controller that is about to present the activity.</param>
        <param name="activityViewController">The activity that will be presented.</param>
        <summary>Developers may implement this method to prepare for the display of an activity view.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
