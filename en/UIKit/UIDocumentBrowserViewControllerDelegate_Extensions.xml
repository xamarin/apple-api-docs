<Type Name="UIDocumentBrowserViewControllerDelegate_Extensions" FullName="UIKit.UIDocumentBrowserViewControllerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UIDocumentBrowserViewControllerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UIDocumentBrowserViewControllerDelegate_Extensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:UIKit.IUIDocumentBrowserViewControllerDelegate" /> interface to support all the methods from the <see cref="T:UIKit.UIDocumentBrowserViewControllerDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:UIKit.IUIDocumentBrowserViewControllerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:UIKit.UIDocumentBrowserViewControllerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidImportDocument">
      <MemberSignature Language="C#" Value="public static void DidImportDocument (this MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, MonoTouch.UIKit.UIDocumentBrowserViewController controller, MonoTouch.Foundation.NSUrl sourceUrl, MonoTouch.Foundation.NSUrl destinationUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidImportDocument(class MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, class MonoTouch.UIKit.UIDocumentBrowserViewController controller, class MonoTouch.Foundation.NSUrl sourceUrl, class MonoTouch.Foundation.NSUrl destinationUrl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="sourceUrl" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="destinationUrl" Type="MonoTouch.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="controller">To be added.</param>
        <param name="sourceUrl">To be added.</param>
        <param name="destinationUrl">To be added.</param>
        <summary>Developers may implement this method to respond after a document is imported.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidPickDocumentUrls">
      <MemberSignature Language="C#" Value="public static void DidPickDocumentUrls (this MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, MonoTouch.UIKit.UIDocumentBrowserViewController controller, MonoTouch.Foundation.NSUrl[] documentUrls);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPickDocumentUrls(class MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, class MonoTouch.UIKit.UIDocumentBrowserViewController controller, class MonoTouch.Foundation.NSUrl[] documentUrls) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="documentUrls" Type="MonoTouch.Foundation.NSUrl[]" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="controller">To be added.</param>
        <param name="documentUrls">To be added.</param>
        <summary>Developers may implement this method to respond after the user selects document URLs.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRequestDocumentCreation">
      <MemberSignature Language="C#" Value="public static void DidRequestDocumentCreation (this MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, MonoTouch.UIKit.UIDocumentBrowserViewController controller, Action&lt;MonoTouch.Foundation.NSUrl,MonoTouch.UIKit.UIDocumentBrowserImportMode&gt; importHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestDocumentCreation(class MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, class MonoTouch.UIKit.UIDocumentBrowserViewController controller, class System.Action`2&lt;class MonoTouch.Foundation.NSUrl, valuetype MonoTouch.UIKit.UIDocumentBrowserImportMode&gt; importHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="importHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrl,MonoTouch.UIKit.UIDocumentBrowserImportMode&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V94))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="controller">To be added.</param>
        <param name="importHandler">To be added.</param>
        <summary>Developers may implement this method to respond to a request to create a new document.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedToImportDocument">
      <MemberSignature Language="C#" Value="public static void FailedToImportDocument (this MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, MonoTouch.UIKit.UIDocumentBrowserViewController controller, MonoTouch.Foundation.NSUrl documentUrl, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToImportDocument(class MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, class MonoTouch.UIKit.UIDocumentBrowserViewController controller, class MonoTouch.Foundation.NSUrl documentUrl, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="documentUrl" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="controller">To be added.</param>
        <param name="documentUrl">To be added.</param>
        <param name="error">To be added.This parameter can be .</param>
        <summary>Developers may implement this method to respond when the application fails to import a document.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationActivities">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIActivity[] GetApplicationActivities (this MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, MonoTouch.UIKit.UIDocumentBrowserViewController controller, MonoTouch.Foundation.NSUrl[] documentUrls);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIActivity[] GetApplicationActivities(class MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, class MonoTouch.UIKit.UIDocumentBrowserViewController controller, class MonoTouch.Foundation.NSUrl[] documentUrls) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIActivity[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="documentUrls" Type="MonoTouch.Foundation.NSUrl[]" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="controller">To be added.</param>
        <param name="documentUrls">To be added.</param>
        <summary>Returns an array of custom application activities for an activity view.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPresent">
      <MemberSignature Language="C#" Value="public static void WillPresent (this MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, MonoTouch.UIKit.UIDocumentBrowserViewController controller, MonoTouch.UIKit.UIActivityViewController activityViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate This, class MonoTouch.UIKit.UIDocumentBrowserViewController controller, class MonoTouch.UIKit.UIActivityViewController activityViewController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
        <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
        <Parameter Name="activityViewController" Type="MonoTouch.UIKit.UIActivityViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="controller">To be added.</param>
        <param name="activityViewController">To be added.</param>
        <summary>Developers may implement this method to prepare for the display of an activity view.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>