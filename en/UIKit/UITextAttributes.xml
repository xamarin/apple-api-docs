<Type Name="UITextAttributes" FullName="UIKit.UITextAttributes">
  <TypeSignature Language="C#" Value="public class UITextAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UITextAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:UIKit.UITextAttributes" />
  <TypeSignature Language="F#" Value="type UITextAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Type used to describe the text attributes to set on some user interface elements.</summary>
    <remarks>
      <para>
	Typically developers create an instance of this class and
	fill out the various properties to configure the desired text
	attributes.
      </para>
      <para>
	For example, the following code can be used to change the style of the UINavigationBar:
      </para>
      <example>
        <code lang="C#"><![CDATA[
var attrs = new UITextAttributes () {
	Font = UIFont.FromName ("Chalkduster", 20),
	TextColor = UIColor.Red,
	TextShadowColor = UIColor.Black,
	TextShadowOffset = new UIOffset (6, 6)
};
myNavController.NavigationBar.SetTitleTextAttributes (attrs);
	]]></code>
      </example>
      <para> You can use code-completion inside the constructor for
	UITextAttributes without having to remember the properties
	that you want to set.  The above sample renders like this: <img href="xamarin-media/UIKit/_images/UITextAttributes.png"></img></para>
      <para> As of iOS5, you can set the text attributes on the
	following items: <see cref="T:UIKit.UIBarItem" />,
	<see cref="T:UIKit.UINavigationBar" />, <see cref="T:UIKit.UISearchBar" /> and <see cref="T:UIKit.UISegmentedControl" />.
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITextAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UITextAttributes.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>The default constructor does nothing, you must fill at least one property for this to be useful.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public UIKit.UIFont Font;" />
      <MemberSignature Language="ILAsm" Value=".field public class UIKit.UIFont Font" />
      <MemberSignature Language="DocId" Value="F:UIKit.UITextAttributes.Font" />
      <MemberSignature Language="F#" Value="val mutable Font : UIKit.UIFont" Usage="UIKit.UITextAttributes.Font" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIFont</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The font to use to render the text.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextColor">
      <MemberSignature Language="C#" Value="public UIKit.UIColor TextColor;" />
      <MemberSignature Language="ILAsm" Value=".field public class UIKit.UIColor TextColor" />
      <MemberSignature Language="DocId" Value="F:UIKit.UITextAttributes.TextColor" />
      <MemberSignature Language="F#" Value="val mutable TextColor : UIKit.UIColor" Usage="UIKit.UITextAttributes.TextColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color to use for the text.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextShadowColor">
      <MemberSignature Language="C#" Value="public UIKit.UIColor TextShadowColor;" />
      <MemberSignature Language="ILAsm" Value=".field public class UIKit.UIColor TextShadowColor" />
      <MemberSignature Language="DocId" Value="F:UIKit.UITextAttributes.TextShadowColor" />
      <MemberSignature Language="F#" Value="val mutable TextShadowColor : UIKit.UIColor" Usage="UIKit.UITextAttributes.TextShadowColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If you set the TextShadowOffset, the color to use for the shadow of the text.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextShadowOffset">
      <MemberSignature Language="C#" Value="public UIKit.UIOffset TextShadowOffset;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype UIKit.UIOffset TextShadowOffset" />
      <MemberSignature Language="DocId" Value="F:UIKit.UITextAttributes.TextShadowOffset" />
      <MemberSignature Language="F#" Value="val mutable TextShadowOffset : UIKit.UIOffset" Usage="UIKit.UITextAttributes.TextShadowOffset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The offset describing the distance between the text and its shadow.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
