<Type Name="UISplitViewControllerDelegate_Extensions" FullName="UIKit.UISplitViewControllerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UISplitViewControllerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UISplitViewControllerDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:UIKit.UISplitViewControllerDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type UISplitViewControllerDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:UIKit.IUISplitViewControllerDelegate" /> interface to support all the methods from the <see cref="T:UIKit.UISplitViewControllerDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:UIKit.IUISplitViewControllerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:UIKit.UISplitViewControllerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CollapseSecondViewController">
      <MemberSignature Language="C#" Value="public static bool CollapseSecondViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController, UIKit.UIViewController secondaryViewController, UIKit.UIViewController primaryViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CollapseSecondViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController, class UIKit.UIViewController secondaryViewController, class UIKit.UIViewController primaryViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.CollapseSecondViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UIViewController,UIKit.UIViewController)" />
      <MemberSignature Language="F#" Value="static member CollapseSecondViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UIViewController * UIKit.UIViewController -&gt; bool" Usage="UIKit.UISplitViewControllerDelegate_Extensions.CollapseSecondViewController (This, splitViewController, secondaryViewController, primaryViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="splitViewController" Type="UIKit.UISplitViewController" />
        <Parameter Name="secondaryViewController" Type="UIKit.UIViewController" />
        <Parameter Name="primaryViewController" Type="UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="splitViewController">Designates the split view controller with the collapsing interface.</param>
        <param name="secondaryViewController">Designates the secondary view controller for the split view interface.</param>
        <param name="primaryViewController">Designates the primary view controller for the split view interface.</param>
        <summary>Collapses the secondary view controller on <paramref name="splitViewController" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventShowDetailViewController">
      <MemberSignature Language="C#" Value="public static bool EventShowDetailViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController, UIKit.UIViewController vc, Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EventShowDetailViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController, class UIKit.UIViewController vc, class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.EventShowDetailViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UIViewController,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="static member EventShowDetailViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UIViewController * Foundation.NSObject -&gt; bool" Usage="UIKit.UISplitViewControllerDelegate_Extensions.EventShowDetailViewController (This, splitViewController, vc, sender)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="splitViewController" Type="UIKit.UISplitViewController" />
        <Parameter Name="vc" Type="UIKit.UIViewController" />
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="splitViewController">Designates the split view controller that has its secondary view being updated.</param>
        <param name="vc">The view controller that is being displayed in the secondary position.</param>
        <param name="sender">The action making the request.</param>
        <summary>Returns true if the delegate will display the detail view itself, rather than relying on <paramref name="splitViewController" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventShowViewController">
      <MemberSignature Language="C#" Value="public static bool EventShowViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController, UIKit.UIViewController vc, Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EventShowViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController, class UIKit.UIViewController vc, class Foundation.NSObject sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.EventShowViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UIViewController,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="static member EventShowViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UIViewController * Foundation.NSObject -&gt; bool" Usage="UIKit.UISplitViewControllerDelegate_Extensions.EventShowViewController (This, splitViewController, vc, sender)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="splitViewController" Type="UIKit.UISplitViewController" />
        <Parameter Name="vc" Type="UIKit.UIViewController" />
        <Parameter Name="sender" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="splitViewController">Designates the split view controller that has its primary view being updated.</param>
        <param name="vc">The view controller that is being displayed in the primary position.</param>
        <param name="sender">The action making the request.</param>
        <summary>Shows <paramref name="vc" /> in the primary position.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredInterfaceOrientationForPresentation">
      <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.GetPreferredInterfaceOrientationForPresentation(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController)" />
      <MemberSignature Language="F#" Value="static member GetPreferredInterfaceOrientationForPresentation : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController -&gt; UIKit.UIInterfaceOrientation" Usage="UIKit.UISplitViewControllerDelegate_Extensions.GetPreferredInterfaceOrientationForPresentation (This, splitViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIInterfaceOrientation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="splitViewController" Type="UIKit.UISplitViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="splitViewController">Designates the split view controller that will be presented onscreen.</param>
        <summary>Returns the preferred user interface orientation to use when presenting <paramref name="splitViewController" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryViewControllerForCollapsingSplitViewController">
      <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetPrimaryViewControllerForCollapsingSplitViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetPrimaryViewControllerForCollapsingSplitViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.GetPrimaryViewControllerForCollapsingSplitViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController)" />
      <MemberSignature Language="F#" Value="static member GetPrimaryViewControllerForCollapsingSplitViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController -&gt; UIKit.UIViewController" Usage="UIKit.UISplitViewControllerDelegate_Extensions.GetPrimaryViewControllerForCollapsingSplitViewController (This, splitViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIViewController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="splitViewController" Type="UIKit.UISplitViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="splitViewController">Designates the split view controller whose interface is collapsing.</param>
        <summary>Returns the primary view controller for the collapsing view controller <paramref name="splitViewController" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryViewControllerForExpandingSplitViewController">
      <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetPrimaryViewControllerForExpandingSplitViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetPrimaryViewControllerForExpandingSplitViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.GetPrimaryViewControllerForExpandingSplitViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController)" />
      <MemberSignature Language="F#" Value="static member GetPrimaryViewControllerForExpandingSplitViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController -&gt; UIKit.UIViewController" Usage="UIKit.UISplitViewControllerDelegate_Extensions.GetPrimaryViewControllerForExpandingSplitViewController (This, splitViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIViewController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="splitViewController" Type="UIKit.UISplitViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="splitViewController">To be added.</param>
        <summary>Returns the primary view controller for the expanding view controller <paramref name="splitViewController" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetDisplayModeForAction">
      <MemberSignature Language="C#" Value="public static UIKit.UISplitViewControllerDisplayMode GetTargetDisplayModeForAction (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UISplitViewControllerDisplayMode GetTargetDisplayModeForAction(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.GetTargetDisplayModeForAction(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController)" />
      <MemberSignature Language="F#" Value="static member GetTargetDisplayModeForAction : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController -&gt; UIKit.UISplitViewControllerDisplayMode" Usage="UIKit.UISplitViewControllerDelegate_Extensions.GetTargetDisplayModeForAction (This, svc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UISplitViewControllerDisplayMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="svc" Type="UIKit.UISplitViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="svc">Split view controller whose action might be triggered.</param>
        <summary>Returns the display mode for the <paramref name="svc" /> action.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparateSecondaryViewController">
      <MemberSignature Language="C#" Value="public static UIKit.UIViewController SeparateSecondaryViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController, UIKit.UIViewController primaryViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController SeparateSecondaryViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController, class UIKit.UIViewController primaryViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.SeparateSecondaryViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UIViewController)" />
      <MemberSignature Language="F#" Value="static member SeparateSecondaryViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UIViewController -&gt; UIKit.UIViewController" Usage="UIKit.UISplitViewControllerDelegate_Extensions.SeparateSecondaryViewController (This, splitViewController, primaryViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIViewController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="splitViewController" Type="UIKit.UISplitViewController" />
        <Parameter Name="primaryViewController" Type="UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="splitViewController">The split view controller with the expanding interface.</param>
        <param name="primaryViewController">Primary view controller specified for the expanded split view interface.</param>
        <summary>Returns a new secondary view controller to use in split-view mode, or nil to use the default.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldHideViewController">
      <MemberSignature Language="C#" Value="public static bool ShouldHideViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UIViewController viewController, UIKit.UIInterfaceOrientation inOrientation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldHideViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, class UIKit.UIViewController viewController, valuetype UIKit.UIInterfaceOrientation inOrientation) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.ShouldHideViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UIViewController,UIKit.UIInterfaceOrientation)" />
      <MemberSignature Language="F#" Value="static member ShouldHideViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UIViewController * UIKit.UIInterfaceOrientation -&gt; bool" Usage="UIKit.UISplitViewControllerDelegate_Extensions.ShouldHideViewController (This, svc, viewController, inOrientation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'UISearchController' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="svc" Type="UIKit.UISplitViewController" />
        <Parameter Name="viewController" Type="UIKit.UIViewController" />
        <Parameter Name="inOrientation" Type="UIKit.UIInterfaceOrientation" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="svc">The designated split view controller whose action might be triggered.</param>
        <param name="viewController">The specified view controller.</param>
        <param name="inOrientation">The specified orientation.</param>
        <summary>Developers should not use this deprecated method. Developers should use 'UISearchController' instead.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedInterfaceOrientations">
      <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.SupportedInterfaceOrientations(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController)" />
      <MemberSignature Language="F#" Value="static member SupportedInterfaceOrientations : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController -&gt; UIKit.UIInterfaceOrientationMask" Usage="UIKit.UISplitViewControllerDelegate_Extensions.SupportedInterfaceOrientations (This, splitViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIInterfaceOrientationMask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="splitViewController" Type="UIKit.UISplitViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="splitViewController">The split view controller.</param>
        <summary>Returns the supported interface orientations for <paramref name="splitViewController" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeDisplayMode">
      <MemberSignature Language="C#" Value="public static void WillChangeDisplayMode (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UISplitViewControllerDisplayMode displayMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeDisplayMode(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, valuetype UIKit.UISplitViewControllerDisplayMode displayMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.WillChangeDisplayMode(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UISplitViewControllerDisplayMode)" />
      <MemberSignature Language="F#" Value="static member WillChangeDisplayMode : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UISplitViewControllerDisplayMode -&gt; unit" Usage="UIKit.UISplitViewControllerDelegate_Extensions.WillChangeDisplayMode (This, svc, displayMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="svc" Type="UIKit.UISplitViewController" />
        <Parameter Name="displayMode" Type="UIKit.UISplitViewControllerDisplayMode" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="svc">The split view controller whose display mode is changing.</param>
        <param name="displayMode">TThe new display mode that will be applied.</param>
        <summary>The split view controller <paramref name="svc" /> will change its display mode to <paramref name="displayMode" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillHideViewController">
      <MemberSignature Language="C#" Value="public static void WillHideViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UIViewController aViewController, UIKit.UIBarButtonItem barButtonItem, UIKit.UIPopoverController pc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillHideViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, class UIKit.UIViewController aViewController, class UIKit.UIBarButtonItem barButtonItem, class UIKit.UIPopoverController pc) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.WillHideViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UIViewController,UIKit.UIBarButtonItem,UIKit.UIPopoverController)" />
      <MemberSignature Language="F#" Value="static member WillHideViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UIViewController * UIKit.UIBarButtonItem * UIKit.UIPopoverController -&gt; unit" Usage="UIKit.UISplitViewControllerDelegate_Extensions.WillHideViewController (This, svc, aViewController, barButtonItem, pc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'UISearchController' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="svc" Type="UIKit.UISplitViewController" />
        <Parameter Name="aViewController" Type="UIKit.UIViewController" />
        <Parameter Name="barButtonItem" Type="UIKit.UIBarButtonItem" />
        <Parameter Name="pc" Type="UIKit.UIPopoverController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="svc">The split view controller whose display mode is changing.</param>
        <param name="aViewController">Specified view controller.</param>
        <param name="barButtonItem">An enumeration of the predefined <see cref="T:UIKit.UIBarButtonItem" />s.</param>
        <param name="pc">Specified popover controller.</param>
        <summary>Indicates that the UISplitViewController is about to be hidden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPresentViewController">
      <MemberSignature Language="C#" Value="public static void WillPresentViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UIPopoverController pc, UIKit.UIViewController aViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, class UIKit.UIPopoverController pc, class UIKit.UIViewController aViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.WillPresentViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UIPopoverController,UIKit.UIViewController)" />
      <MemberSignature Language="F#" Value="static member WillPresentViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UIPopoverController * UIKit.UIViewController -&gt; unit" Usage="UIKit.UISplitViewControllerDelegate_Extensions.WillPresentViewController (This, svc, pc, aViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'UISearchController' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="svc" Type="UIKit.UISplitViewController" />
        <Parameter Name="pc" Type="UIKit.UIPopoverController" />
        <Parameter Name="aViewController" Type="UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="svc">The split view controller whose display mode is changing.</param>
        <param name="pc">Specified popover controller.</param>
        <param name="aViewController">Specified view controller.</param>
        <summary>Indicates that the UISplitViewController is about to be presented.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillShowViewController">
      <MemberSignature Language="C#" Value="public static void WillShowViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UIViewController aViewController, UIKit.UIBarButtonItem button);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, class UIKit.UIViewController aViewController, class UIKit.UIBarButtonItem button) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISplitViewControllerDelegate_Extensions.WillShowViewController(UIKit.IUISplitViewControllerDelegate,UIKit.UISplitViewController,UIKit.UIViewController,UIKit.UIBarButtonItem)" />
      <MemberSignature Language="F#" Value="static member WillShowViewController : UIKit.IUISplitViewControllerDelegate * UIKit.UISplitViewController * UIKit.UIViewController * UIKit.UIBarButtonItem -&gt; unit" Usage="UIKit.UISplitViewControllerDelegate_Extensions.WillShowViewController (This, svc, aViewController, button)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'UISearchController' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUISplitViewControllerDelegate" RefType="this" />
        <Parameter Name="svc" Type="UIKit.UISplitViewController" />
        <Parameter Name="aViewController" Type="UIKit.UIViewController" />
        <Parameter Name="button" Type="UIKit.UIBarButtonItem" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="svc">The split view controller whose display mode is changing.</param>
        <param name="aViewController">Specified view controller.</param>
        <param name="button">An enumeration of the predefined <see cref="T:UIKit.UIBarButtonItem" />s.</param>
        <summary>Indicates that the UISplitViewController is about to be shown.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
