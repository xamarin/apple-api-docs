<Type Name="IUITextDraggable" FullName="UIKit.IUITextDraggable">
  <TypeSignature Language="C#" Value="public interface IUITextDraggable : IDisposable, UIKit.IUITextInput" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUITextDraggable implements class ObjCRuntime.INativeObject, class System.IDisposable, class UIKit.IUIKeyInput, class UIKit.IUITextInput, class UIKit.IUITextInputTraits" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUITextDraggable" />
  <TypeSignature Language="F#" Value="type IUITextDraggable = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IUIKeyInput&#xA;    interface IUITextInputTraits&#xA;    interface IUITextInput" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIKeyInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUITextInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUITextInputTraits</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="UITextDraggable", WrapperType=typeof(UIKit.UITextDraggableWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Weak, GetterSelector="textDragDelegate", IsProperty=true, IsRequired=true, IsStatic=false, Name="TextDragDelegate", PropertyType=typeof(UIKit.IUITextDragDelegate), Selector="textDragDelegate", SetterSelector="setTextDragDelegate:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="textDragInteraction", IsProperty=true, IsRequired=true, IsStatic=false, Name="TextDragInteraction", PropertyType=typeof(UIKit.UIDragInteraction), Selector="textDragInteraction")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="isTextDragActive", IsProperty=true, IsRequired=true, IsStatic=false, Name="TextDragActive", PropertyType=typeof(System.Boolean), Selector="textDragActive")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.UnsafeUnretained, GetterSelector="textDragOptions", IsProperty=true, IsRequired=true, IsStatic=false, Name="TextDragOptions", PropertyType=typeof(UIKit.UITextDragOptions), Selector="textDragOptions", SetterSelector="setTextDragOptions:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface for treating a text view as a drag source.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TextDragActive">
      <MemberSignature Language="C#" Value="public bool TextDragActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextDragActive" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITextDraggable.TextDragActive" />
      <MemberSignature Language="F#" Value="member this.TextDragActive : bool" Usage="UIKit.IUITextDraggable.TextDragActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isTextDragActive")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether a drag session is active for the text view.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDragDelegate">
      <MemberSignature Language="C#" Value="public UIKit.IUITextDragDelegate TextDragDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.IUITextDragDelegate TextDragDelegate" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITextDraggable.TextDragDelegate" />
      <MemberSignature Language="F#" Value="member this.TextDragDelegate : UIKit.IUITextDragDelegate with get, set" Usage="UIKit.IUITextDraggable.TextDragDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textDragDelegate", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTextDragDelegate:", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUITextDragDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a delegate for managing drag source behavior.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDragInteraction">
      <MemberSignature Language="C#" Value="public UIKit.UIDragInteraction TextDragInteraction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIDragInteraction TextDragInteraction" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITextDraggable.TextDragInteraction" />
      <MemberSignature Language="F#" Value="member this.TextDragInteraction : UIKit.UIDragInteraction" Usage="UIKit.IUITextDraggable.TextDragInteraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textDragInteraction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIDragInteraction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the drag interaction on the text view.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDragOptions">
      <MemberSignature Language="C#" Value="public UIKit.UITextDragOptions TextDragOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UITextDragOptions TextDragOptions" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITextDraggable.TextDragOptions" />
      <MemberSignature Language="F#" Value="member this.TextDragOptions : UIKit.UITextDragOptions with get, set" Usage="UIKit.IUITextDraggable.TextDragOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("textDragOptions", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTextDragOptions:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UITextDragOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that controls how formatting is displayed in dragged text.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
