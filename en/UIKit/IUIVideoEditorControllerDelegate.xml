<Type Name="IUIVideoEditorControllerDelegate" FullName="UIKit.IUIVideoEditorControllerDelegate">
  <TypeSignature Language="C#" Value="public interface IUIVideoEditorControllerDelegate : IDisposable, UIKit.IUINavigationControllerDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIVideoEditorControllerDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable, class UIKit.IUINavigationControllerDelegate" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUIVideoEditorControllerDelegate" />
  <TypeSignature Language="F#" Value="type IUIVideoEditorControllerDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IUINavigationControllerDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUINavigationControllerDelegate</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="UIVideoEditorControllerDelegate", WrapperType=typeof(UIKit.UIVideoEditorControllerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="VideoSaved", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(UIKit.UIVideoEditorController), typeof(System.String) }, Selector="videoEditorController:didSaveEditedVideoToPath:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="Failed", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(UIKit.UIVideoEditorController), typeof(Foundation.NSError) }, Selector="videoEditorController:didFailWithError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UserCancelled", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(UIKit.UIVideoEditorController) }, Selector="videoEditorControllerDidCancel:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:UIKit.UIVideoEditorControllerDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:UIKit.UIVideoEditorControllerDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:UIKit.UIVideoEditorControllerDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:UIKit.UIVideoEditorControllerDelegate_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members />
</Type>
