<Type Name="IUICollectionViewDelegateFlowLayout" FullName="UIKit.IUICollectionViewDelegateFlowLayout">
  <TypeSignature Language="C#" Value="public interface IUICollectionViewDelegateFlowLayout : IDisposable, UIKit.IUICollectionViewDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUICollectionViewDelegateFlowLayout implements class ObjCRuntime.INativeObject, class System.IDisposable, class UIKit.IUICollectionViewDelegate, class UIKit.IUIScrollViewDelegate" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUICollectionViewDelegateFlowLayout" />
  <TypeSignature Language="F#" Value="type IUICollectionViewDelegateFlowLayout = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IUICollectionViewDelegate&#xA;    interface IUIScrollViewDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUICollectionViewDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIScrollViewDelegate</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="UICollectionViewDelegateFlowLayout", WrapperType=typeof(UIKit.UICollectionViewDelegateFlowLayoutWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetSizeForItem", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(CoreGraphics.CGSize), Selector="collectionView:layout:sizeForItemAtIndexPath:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetInsetForSection", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(UIKit.UIEdgeInsets), Selector="collectionView:layout:insetForSectionAtIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetMinimumLineSpacingForSection", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.nfloat), Selector="collectionView:layout:minimumLineSpacingForSectionAtIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetMinimumInteritemSpacingForSection", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.nfloat), Selector="collectionView:layout:minimumInteritemSpacingForSectionAtIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReferenceSizeForHeader", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(CoreGraphics.CGSize), Selector="collectionView:layout:referenceSizeForHeaderInSection:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReferenceSizeForFooter", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(CoreGraphics.CGSize), Selector="collectionView:layout:referenceSizeForFooterInSection:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetSizeForItem", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(UIKit.UICollectionView), typeof(UIKit.UICollectionViewLayout), typeof(Foundation.NSIndexPath) }, ReturnType=typeof(CoreGraphics.CGSize), Selector="collectionView:layout:sizeForItemAtIndexPath:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetInsetForSection", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(UIKit.UICollectionView), typeof(UIKit.UICollectionViewLayout), typeof(System.nint) }, ReturnType=typeof(UIKit.UIEdgeInsets), Selector="collectionView:layout:insetForSectionAtIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetMinimumLineSpacingForSection", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(UIKit.UICollectionView), typeof(UIKit.UICollectionViewLayout), typeof(System.nint) }, ReturnType=typeof(System.nfloat), Selector="collectionView:layout:minimumLineSpacingForSectionAtIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetMinimumInteritemSpacingForSection", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(UIKit.UICollectionView), typeof(UIKit.UICollectionViewLayout), typeof(System.nint) }, ReturnType=typeof(System.nfloat), Selector="collectionView:layout:minimumInteritemSpacingForSectionAtIndex:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReferenceSizeForHeader", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(UIKit.UICollectionView), typeof(UIKit.UICollectionViewLayout), typeof(System.nint) }, ReturnType=typeof(CoreGraphics.CGSize), Selector="collectionView:layout:referenceSizeForHeaderInSection:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReferenceSizeForFooter", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(UIKit.UICollectionView), typeof(UIKit.UICollectionViewLayout), typeof(System.nint) }, ReturnType=typeof(CoreGraphics.CGSize), Selector="collectionView:layout:referenceSizeForFooterInSection:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:UIKit.UICollectionViewDelegateFlowLayout" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:UIKit.UICollectionViewDelegateFlowLayout" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:UIKit.UICollectionViewDelegateFlowLayout" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:UIKit.UICollectionViewDelegateFlowLayout_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members />
</Type>
