<Type Name="UIDocumentInteractionControllerDelegate" FullName="UIKit.UIDocumentInteractionControllerDelegate">
  <TypeSignature Language="C#" Value="public class UIDocumentInteractionControllerDelegate : Foundation.NSObject, IDisposable, UIKit.IUIDocumentInteractionControllerDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIDocumentInteractionControllerDelegate extends Foundation.NSObject implements class ObjCRuntime.INativeObject, class System.IDisposable, class UIKit.IUIDocumentInteractionControllerDelegate" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIDocumentInteractionControllerDelegate" />
  <TypeSignature Language="F#" Value="type UIDocumentInteractionControllerDelegate = class&#xA;    inherit NSObject&#xA;    interface IUIDocumentInteractionControllerDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIDocumentInteractionControllerDelegate</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("UIDocumentInteractionControllerDelegate", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A class used to receive notifications from the <see cref="T:UIKit.UIDocumentInteractionController" /> class.</summary>
    <remarks>Application developers can override methods in this class in order to support different types of interaction with files on the device.</remarks>
    <altmember cref="T:UIKit.UIDocumentationInteractionController" />
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDocumentInteractionControllerDelegate_protocol/index.html">Apple documentation for <c>UIDocumentInteractionControllerDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIDocumentInteractionControllerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UIDocumentInteractionControllerDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new UIKit.UIDocumentInteractionControllerDelegate : Foundation.NSObjectFlag -&gt; UIKit.UIDocumentInteractionControllerDelegate" Usage="new UIKit.UIDocumentInteractionControllerDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal UIDocumentInteractionControllerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new UIKit.UIDocumentInteractionControllerDelegate : nativeint -&gt; UIKit.UIDocumentInteractionControllerDelegate" Usage="new UIKit.UIDocumentInteractionControllerDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPerformAction">
      <MemberSignature Language="C#" Value="public virtual bool CanPerformAction (UIKit.UIDocumentInteractionController controller, ObjCRuntime.Selector action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanPerformAction(class UIKit.UIDocumentInteractionController controller, class ObjCRuntime.Selector action) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.CanPerformAction(UIKit.UIDocumentInteractionController,ObjCRuntime.Selector)" />
      <MemberSignature Language="F#" Value="abstract member CanPerformAction : UIKit.UIDocumentInteractionController * ObjCRuntime.Selector -&gt; bool&#xA;override this.CanPerformAction : UIKit.UIDocumentInteractionController * ObjCRuntime.Selector -&gt; bool" Usage="uIDocumentInteractionControllerDelegate.CanPerformAction (controller, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionController:canPerformAction:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
        <Parameter Name="action" Type="ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="action">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Developers should not use this deprecated method, which determines whether the specified controller should support the specified action.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDismissOpenInMenu">
      <MemberSignature Language="C#" Value="public virtual void DidDismissOpenInMenu (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDismissOpenInMenu(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.DidDismissOpenInMenu(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member DidDismissOpenInMenu : UIKit.UIDocumentInteractionController -&gt; unit&#xA;override this.DidDismissOpenInMenu : UIKit.UIDocumentInteractionController -&gt; unit" Usage="uIDocumentInteractionControllerDelegate.DidDismissOpenInMenu controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerDidDismissOpenInMenu:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController has dismissed it's "Open In" menu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDismissOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void DidDismissOptionsMenu (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDismissOptionsMenu(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.DidDismissOptionsMenu(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member DidDismissOptionsMenu : UIKit.UIDocumentInteractionController -&gt; unit&#xA;override this.DidDismissOptionsMenu : UIKit.UIDocumentInteractionController -&gt; unit" Usage="uIDocumentInteractionControllerDelegate.DidDismissOptionsMenu controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerDidDismissOptionsMenu:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController has dismissed its options menu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEndPreview">
      <MemberSignature Language="C#" Value="public virtual void DidEndPreview (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEndPreview(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.DidEndPreview(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member DidEndPreview : UIKit.UIDocumentInteractionController -&gt; unit&#xA;override this.DidEndPreview : UIKit.UIDocumentInteractionController -&gt; unit" Usage="uIDocumentInteractionControllerDelegate.DidEndPreview controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerDidEndPreview:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController has dismissed its document preview.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidEndSendingToApplication">
      <MemberSignature Language="C#" Value="public virtual void DidEndSendingToApplication (UIKit.UIDocumentInteractionController controller, string application);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidEndSendingToApplication(class UIKit.UIDocumentInteractionController controller, string application) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.DidEndSendingToApplication(UIKit.UIDocumentInteractionController,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DidEndSendingToApplication : UIKit.UIDocumentInteractionController * string -&gt; unit&#xA;override this.DidEndSendingToApplication : UIKit.UIDocumentInteractionController * string -&gt; unit" Usage="uIDocumentInteractionControllerDelegate.DidEndSendingToApplication (controller, application)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionController:didEndSendingToApplication:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
        <Parameter Name="application" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="application">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Indicates that the UIDocumentInteractionController has handed off its document to the specified application.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAction">
      <MemberSignature Language="C#" Value="public virtual bool PerformAction (UIKit.UIDocumentInteractionController controller, ObjCRuntime.Selector action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformAction(class UIKit.UIDocumentInteractionController controller, class ObjCRuntime.Selector action) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.PerformAction(UIKit.UIDocumentInteractionController,ObjCRuntime.Selector)" />
      <MemberSignature Language="F#" Value="abstract member PerformAction : UIKit.UIDocumentInteractionController * ObjCRuntime.Selector -&gt; bool&#xA;override this.PerformAction : UIKit.UIDocumentInteractionController * ObjCRuntime.Selector -&gt; bool" Usage="uIDocumentInteractionControllerDelegate.PerformAction (controller, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionController:performAction:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
        <Parameter Name="action" Type="ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="action">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Developers should not use this deprecated method. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleForPreview">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect RectangleForPreview (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect RectangleForPreview(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.RectangleForPreview(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member RectangleForPreview : UIKit.UIDocumentInteractionController -&gt; CoreGraphics.CGRect&#xA;override this.RectangleForPreview : UIKit.UIDocumentInteractionController -&gt; CoreGraphics.CGRect" Usage="uIDocumentInteractionControllerDelegate.RectangleForPreview controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerRectForPreview:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController requires the rectangle to use as the starting point for animating the display of a document preview.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewControllerForPreview">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIViewController ViewControllerForPreview (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIViewController ViewControllerForPreview(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.ViewControllerForPreview(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member ViewControllerForPreview : UIKit.UIDocumentInteractionController -&gt; UIKit.UIViewController&#xA;override this.ViewControllerForPreview : UIKit.UIDocumentInteractionController -&gt; UIKit.UIViewController" Usage="uIDocumentInteractionControllerDelegate.ViewControllerForPreview controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerViewControllerForPreview:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIViewController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController needs a UIViewController for presenting a document preview.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewForPreview">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIView ViewForPreview (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIView ViewForPreview(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.ViewForPreview(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member ViewForPreview : UIKit.UIDocumentInteractionController -&gt; UIKit.UIView&#xA;override this.ViewForPreview : UIKit.UIDocumentInteractionController -&gt; UIKit.UIView" Usage="uIDocumentInteractionControllerDelegate.ViewForPreview controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerViewForPreview:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController requires the starting point for animating the display of a document preview.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillBeginPreview">
      <MemberSignature Language="C#" Value="public virtual void WillBeginPreview (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillBeginPreview(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.WillBeginPreview(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member WillBeginPreview : UIKit.UIDocumentInteractionController -&gt; unit&#xA;override this.WillBeginPreview : UIKit.UIDocumentInteractionController -&gt; unit" Usage="uIDocumentInteractionControllerDelegate.WillBeginPreview controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerWillBeginPreview:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController is about to display a document preview.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillBeginSendingToApplication">
      <MemberSignature Language="C#" Value="public virtual void WillBeginSendingToApplication (UIKit.UIDocumentInteractionController controller, string application);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillBeginSendingToApplication(class UIKit.UIDocumentInteractionController controller, string application) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.WillBeginSendingToApplication(UIKit.UIDocumentInteractionController,System.String)" />
      <MemberSignature Language="F#" Value="abstract member WillBeginSendingToApplication : UIKit.UIDocumentInteractionController * string -&gt; unit&#xA;override this.WillBeginSendingToApplication : UIKit.UIDocumentInteractionController * string -&gt; unit" Usage="uIDocumentInteractionControllerDelegate.WillBeginSendingToApplication (controller, application)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionController:willBeginSendingToApplication:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
        <Parameter Name="application" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <param name="application">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Indicates that the UIDocumentInteractionController's document is about to be opened by the specified application.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPresentOpenInMenu">
      <MemberSignature Language="C#" Value="public virtual void WillPresentOpenInMenu (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillPresentOpenInMenu(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.WillPresentOpenInMenu(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member WillPresentOpenInMenu : UIKit.UIDocumentInteractionController -&gt; unit&#xA;override this.WillPresentOpenInMenu : UIKit.UIDocumentInteractionController -&gt; unit" Usage="uIDocumentInteractionControllerDelegate.WillPresentOpenInMenu controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerWillPresentOpenInMenu:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController is about to display an "Open In" menu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPresentOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void WillPresentOptionsMenu (UIKit.UIDocumentInteractionController controller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillPresentOptionsMenu(class UIKit.UIDocumentInteractionController controller) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIDocumentInteractionControllerDelegate.WillPresentOptionsMenu(UIKit.UIDocumentInteractionController)" />
      <MemberSignature Language="F#" Value="abstract member WillPresentOptionsMenu : UIKit.UIDocumentInteractionController -&gt; unit&#xA;override this.WillPresentOptionsMenu : UIKit.UIDocumentInteractionController -&gt; unit" Usage="uIDocumentInteractionControllerDelegate.WillPresentOptionsMenu controller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("documentInteractionControllerWillPresentOptionsMenu:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controller" Type="UIKit.UIDocumentInteractionController" />
      </Parameters>
      <Docs>
        <param name="controller">To be added.</param>
        <summary>Indicates that the UIDocumentInteractionController is about to display an options menu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
