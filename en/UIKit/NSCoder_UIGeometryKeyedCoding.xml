<Type Name="NSCoder_UIGeometryKeyedCoding" FullName="UIKit.NSCoder_UIGeometryKeyedCoding">
  <TypeSignature Language="C#" Value="public static class NSCoder_UIGeometryKeyedCoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NSCoder_UIGeometryKeyedCoding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:UIKit.NSCoder_UIGeometryKeyedCoding" />
  <TypeSignature Language="F#" Value="type NSCoder_UIGeometryKeyedCoding = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A set of <see cref="T:Foundation.NSCoder" /> extension methods that add encoding of geometry-based data for use in UIKit.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeCGAffineTransform">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGAffineTransform DecodeCGAffineTransform (this Foundation.NSCoder This, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGAffineTransform DecodeCGAffineTransform(class Foundation.NSCoder This, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGAffineTransform(Foundation.NSCoder,System.String)" />
      <MemberSignature Language="F#" Value="static member DecodeCGAffineTransform : Foundation.NSCoder * string -&gt; CoreGraphics.CGAffineTransform" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGAffineTransform (This, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("decodeCGAffineTransformForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGAffineTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="key">Key identified with the affine transform.</param>
        <summary>Decodes and then returns the affine transform structure that is associated with the designated key.</summary>
        <returns>The affine transform structure that is associated with the designated key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeCGPoint">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint DecodeCGPoint (this Foundation.NSCoder This, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint DecodeCGPoint(class Foundation.NSCoder This, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGPoint(Foundation.NSCoder,System.String)" />
      <MemberSignature Language="F#" Value="static member DecodeCGPoint : Foundation.NSCoder * string -&gt; CoreGraphics.CGPoint" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGPoint (This, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("decodeCGPointForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="key">Key that is identified with the point.</param>
        <summary>Decodes and then returns the point structure that is associated with the designated key.</summary>
        <returns>The point structure that is associated with the designated key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeCGRect">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect DecodeCGRect (this Foundation.NSCoder This, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect DecodeCGRect(class Foundation.NSCoder This, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGRect(Foundation.NSCoder,System.String)" />
      <MemberSignature Language="F#" Value="static member DecodeCGRect : Foundation.NSCoder * string -&gt; CoreGraphics.CGRect" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGRect (This, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("decodeCGRectForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="key">Key that is identified with the affine transform.</param>
        <summary>Decodes and then returns the rectangle structure that is associated with the designated key.</summary>
        <returns>The rectangle structure that is associated with the designated key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeCGSize">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DecodeCGSize (this Foundation.NSCoder This, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DecodeCGSize(class Foundation.NSCoder This, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGSize(Foundation.NSCoder,System.String)" />
      <MemberSignature Language="F#" Value="static member DecodeCGSize : Foundation.NSCoder * string -&gt; CoreGraphics.CGSize" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGSize (This, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("decodeCGSizeForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="key">Key that is identified with the rect.</param>
        <summary>Decodes and then returns the size structure that is associated with the designated key.</summary>
        <returns>The size structure that is associated with the designated key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeCGVector">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGVector DecodeCGVector (this Foundation.NSCoder This, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGVector DecodeCGVector(class Foundation.NSCoder This, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGVector(Foundation.NSCoder,System.String)" />
      <MemberSignature Language="F#" Value="static member DecodeCGVector : Foundation.NSCoder * string -&gt; CoreGraphics.CGVector" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGVector (This, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("decodeCGVectorForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="key">Key that is identified with the vector.</param>
        <summary>Decodes and then returns the vector structure that is associated with the designated key.</summary>
        <returns>The vector structure that is associated with the designated key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeDirectionalEdgeInsets">
      <MemberSignature Language="C#" Value="public static UIKit.NSDirectionalEdgeInsets DecodeDirectionalEdgeInsets (this Foundation.NSCoder This, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.NSDirectionalEdgeInsets DecodeDirectionalEdgeInsets(class Foundation.NSCoder This, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.DecodeDirectionalEdgeInsets(Foundation.NSCoder,System.String)" />
      <MemberSignature Language="F#" Value="static member DecodeDirectionalEdgeInsets : Foundation.NSCoder * string -&gt; UIKit.NSDirectionalEdgeInsets" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.DecodeDirectionalEdgeInsets (This, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("decodeDirectionalEdgeInsetsForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.NSDirectionalEdgeInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeUIEdgeInsets">
      <MemberSignature Language="C#" Value="public static UIKit.UIEdgeInsets DecodeUIEdgeInsets (this Foundation.NSCoder This, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIEdgeInsets DecodeUIEdgeInsets(class Foundation.NSCoder This, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.DecodeUIEdgeInsets(Foundation.NSCoder,System.String)" />
      <MemberSignature Language="F#" Value="static member DecodeUIEdgeInsets : Foundation.NSCoder * string -&gt; UIKit.UIEdgeInsets" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.DecodeUIEdgeInsets (This, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("decodeUIEdgeInsetsForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIEdgeInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="key">Key that is identified with the edge insets.</param>
        <summary>Decodes and then returns the edge insets that are associated with the designated key.</summary>
        <returns>The edge insets that are associated with the designated key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeUIOffsetForKey">
      <MemberSignature Language="C#" Value="public static UIKit.UIOffset DecodeUIOffsetForKey (this Foundation.NSCoder This, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIOffset DecodeUIOffsetForKey(class Foundation.NSCoder This, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.DecodeUIOffsetForKey(Foundation.NSCoder,System.String)" />
      <MemberSignature Language="F#" Value="static member DecodeUIOffsetForKey : Foundation.NSCoder * string -&gt; UIKit.UIOffset" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.DecodeUIOffsetForKey (This, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("decodeUIOffsetForKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="key">Key that is identified with the offset.</param>
        <summary>Decodes and then returns the offset that is associated with the designated key.</summary>
        <returns>The offset that is associated with the designated key</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGAffineTransform transform, string forKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGAffineTransform transform, string forKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.Encode(Foundation.NSCoder,CoreGraphics.CGAffineTransform,System.String)" />
      <MemberSignature Language="F#" Value="static member Encode : Foundation.NSCoder * CoreGraphics.CGAffineTransform * string -&gt; unit" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.Encode (This, transform, forKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeCGAffineTransform:forKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="forKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="transform">The specified affine transform.</param>
        <param name="forKey">Designated key in the receiver archive.</param>
        <summary>Encodes the affine transform and also associates it with the designated key.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGPoint point, string forKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGPoint point, string forKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.Encode(Foundation.NSCoder,CoreGraphics.CGPoint,System.String)" />
      <MemberSignature Language="F#" Value="static member Encode : Foundation.NSCoder * CoreGraphics.CGPoint * string -&gt; unit" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.Encode (This, point, forKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeCGPoint:forKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
        <Parameter Name="forKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <param name="point">To be added.</param>
        <param name="forKey">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGRect rect, string forKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGRect rect, string forKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.Encode(Foundation.NSCoder,CoreGraphics.CGRect,System.String)" />
      <MemberSignature Language="F#" Value="static member Encode : Foundation.NSCoder * CoreGraphics.CGRect * string -&gt; unit" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.Encode (This, rect, forKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeCGRect:forKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="forKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <param name="rect">To be added.</param>
        <param name="forKey">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGSize size, string forKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGSize size, string forKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.Encode(Foundation.NSCoder,CoreGraphics.CGSize,System.String)" />
      <MemberSignature Language="F#" Value="static member Encode : Foundation.NSCoder * CoreGraphics.CGSize * string -&gt; unit" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.Encode (This, size, forKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeCGSize:forKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="size" Type="CoreGraphics.CGSize" />
        <Parameter Name="forKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">To be added.</param>
        <param name="size">To be added.</param>
        <param name="forKey">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGVector vector, string forKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGVector vector, string forKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.Encode(Foundation.NSCoder,CoreGraphics.CGVector,System.String)" />
      <MemberSignature Language="F#" Value="static member Encode : Foundation.NSCoder * CoreGraphics.CGVector * string -&gt; unit" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.Encode (This, vector, forKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeCGVector:forKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="vector" Type="CoreGraphics.CGVector" />
        <Parameter Name="forKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="vector">The specified vector.</param>
        <param name="forKey">Designated key in the receiver archive.</param>
        <summary>Encodes the vector and also associates it with the designated key.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, UIKit.NSDirectionalEdgeInsets directionalEdgeInsets, string forKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype UIKit.NSDirectionalEdgeInsets directionalEdgeInsets, string forKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.Encode(Foundation.NSCoder,UIKit.NSDirectionalEdgeInsets,System.String)" />
      <MemberSignature Language="F#" Value="static member Encode : Foundation.NSCoder * UIKit.NSDirectionalEdgeInsets * string -&gt; unit" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.Encode (This, directionalEdgeInsets, forKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeDirectionalEdgeInsets:forKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="directionalEdgeInsets" Type="UIKit.NSDirectionalEdgeInsets" />
        <Parameter Name="forKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this method operates.</param>
        <param name="directionalEdgeInsets">To be added.</param>
        <param name="forKey">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, UIKit.UIEdgeInsets edgeInsets, string forKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype UIKit.UIEdgeInsets edgeInsets, string forKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.Encode(Foundation.NSCoder,UIKit.UIEdgeInsets,System.String)" />
      <MemberSignature Language="F#" Value="static member Encode : Foundation.NSCoder * UIKit.UIEdgeInsets * string -&gt; unit" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.Encode (This, edgeInsets, forKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeUIEdgeInsets:forKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="edgeInsets" Type="UIKit.UIEdgeInsets" />
        <Parameter Name="forKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="edgeInsets">The specified edge insets.</param>
        <param name="forKey">Designated key in the receiver archive.</param>
        <summary>Encodes the edge insets and also associates them with the designated key.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, UIKit.UIOffset uiOffset, string forKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype UIKit.UIOffset uiOffset, string forKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.NSCoder_UIGeometryKeyedCoding.Encode(Foundation.NSCoder,UIKit.UIOffset,System.String)" />
      <MemberSignature Language="F#" Value="static member Encode : Foundation.NSCoder * UIKit.UIOffset * string -&gt; unit" Usage="UIKit.NSCoder_UIGeometryKeyedCoding.Encode (This, uiOffset, forKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("encodeUIOffset:forKey:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="Foundation.NSCoder" RefType="this" />
        <Parameter Name="uiOffset" Type="UIKit.UIOffset" />
        <Parameter Name="forKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="This">Foundation.NSCoder.</param>
        <param name="uiOffset">The specified offset.</param>
        <param name="forKey">Designated key in the receiver archive.</param>
        <summary>Encodes the offset and also associates it with the designated key.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
