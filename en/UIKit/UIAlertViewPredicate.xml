<Type Name="UIAlertViewPredicate" FullName="UIKit.UIAlertViewPredicate">
  <TypeSignature Language="C#" Value="public delegate bool UIAlertViewPredicate(UIAlertView alertView);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UIAlertViewPredicate extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIAlertViewPredicate" />
  <TypeSignature Language="F#" Value="type UIAlertViewPredicate = delegate of UIAlertView -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="alertView" Type="UIKit.UIAlertView" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="alertView">The <see cref="T:UIKit.UIAlertView" /> with which this delegate is associated.</param>
    <summary>A delegate for use with <see cref="P:UIKit.UIAlertView.ShouldEnableFirstOtherButton" />.</summary>
    <returns>
      <see langword="true" /> if the first non-cancel button in the alert should be enabled.</returns>
    <remarks>The application developer can use this delegate to programmatically decide if the first button that is not at the "cancel button" index (see <see cref="P:UIKit.UIAlertView.CancelButtonIndex" />) should be enabled.</remarks>
    <altmember cref="T:UIKit.UIAlertView" />
  </Docs>
</Type>
