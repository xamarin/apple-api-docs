<Type Name="IUIStateRestoring" FullName="UIKit.IUIStateRestoring">
  <TypeSignature Language="C#" Value="public interface IUIStateRestoring : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIStateRestoring implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUIStateRestoring" />
  <TypeSignature Language="F#" Value="type IUIStateRestoring = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="UIStateRestoring", WrapperType=typeof(UIKit.UIStateRestoringWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="EncodeRestorableState", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="encodeRestorableStateWithCoder:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DecodeRestorableState", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="decodeRestorableStateWithCoder:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ApplicationFinishedRestoringState", Selector="applicationFinishedRestoringState")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="restorationParent", IsProperty=true, IsRequired=false, IsStatic=false, Name="RestorationParent", PropertyType=typeof(UIKit.IUIStateRestoring), Selector="restorationParent")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="objectRestorationClass", IsProperty=true, IsRequired=false, IsStatic=false, Name="ObjectRestorationClass", PropertyType=typeof(ObjCRuntime.Class), Selector="objectRestorationClass")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="EncodeRestorableState", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSCoder) }, Selector="encodeRestorableStateWithCoder:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DecodeRestorableState", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(Foundation.NSCoder) }, Selector="decodeRestorableStateWithCoder:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:UIKit.UIStateRestoring" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:UIKit.UIStateRestoring" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:UIKit.UIStateRestoring" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:UIKit.UIStateRestoring_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members />
</Type>
