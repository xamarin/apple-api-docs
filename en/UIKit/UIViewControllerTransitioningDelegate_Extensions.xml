<Type Name="UIViewControllerTransitioningDelegate_Extensions" FullName="UIKit.UIViewControllerTransitioningDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UIViewControllerTransitioningDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UIViewControllerTransitioningDelegate_Extensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:UIKit.IUIViewControllerTransitioningDelegate" /> interface to support all the methods from the <see cref="T:UIKit.UIViewControllerTransitioningDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:UIKit.IUIViewControllerTransitioningDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:UIKit.UIViewControllerTransitioningDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAnimationControllerForDismissedController">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForDismissedController (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.UIViewController dismissed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForDismissedController(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.UIViewController dismissed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
        <Parameter Name="dismissed" Type="MonoTouch.UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="dismissed">To be added.</param>
        <summary>When a dismissal animation is called, this method can be overridden to provide a custom UIViewControllerAnimatedTransitioning.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationControllerForPresentedController">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForPresentedController (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.UIViewController presented, MonoTouch.UIKit.UIViewController presenting, MonoTouch.UIKit.UIViewController source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForPresentedController(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.UIViewController presented, class MonoTouch.UIKit.UIViewController presenting, class MonoTouch.UIKit.UIViewController source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
        <Parameter Name="presented" Type="MonoTouch.UIKit.UIViewController" />
        <Parameter Name="presenting" Type="MonoTouch.UIKit.UIViewController" />
        <Parameter Name="source" Type="MonoTouch.UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="presented">To be added.</param>
        <param name="presenting">To be added.</param>
        <param name="source">To be added.</param>
        <summary>Returns the animation controller that is used when <paramref name="presenting" /> presents <paramref name="presented" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteractionControllerForDismissal">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForDismissal (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForDismissal(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
        <Parameter Name="animator" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="animator">To be added.</param>
        <summary>When a controller is dismissed and an interaction is desired, this method can be overridden to provide a custom UIViewControllerInteractiveTransitioning.|When a dismissal interaction is called and an interaction animation is desired, t</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteractionControllerForPresentation">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForPresentation (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForPresentation(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
        <Parameter Name="animator" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="animator">To be added.</param>
        <summary>When a controller is presented and an interaction desired, this method can be overridden to provide a custom UIViewControllerInteractiveTransitioning.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPresentationControllerForPresentedViewController">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIPresentationController GetPresentationControllerForPresentedViewController (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.UIViewController presentedViewController, MonoTouch.UIKit.UIViewController presentingViewController, MonoTouch.UIKit.UIViewController sourceViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIPresentationController GetPresentationControllerForPresentedViewController(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.UIViewController presentedViewController, class MonoTouch.UIKit.UIViewController presentingViewController, class MonoTouch.UIKit.UIViewController sourceViewController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 8, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIPresentationController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
        <Parameter Name="presentedViewController" Type="MonoTouch.UIKit.UIViewController" />
        <Parameter Name="presentingViewController" Type="MonoTouch.UIKit.UIViewController" />
        <Parameter Name="sourceViewController" Type="MonoTouch.UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="presentedViewController">To be added.</param>
        <param name="presentingViewController">To be added.This parameter can be .</param>
        <param name="sourceViewController">To be added.</param>
        <summary>Returns the presentation controller that is used when <paramref name="presenting" /> presents <paramref name="presented" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>