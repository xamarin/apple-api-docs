<Type Name="UINavigationBar+UINavigationBarAppearance" FullName="UIKit.UINavigationBar+UINavigationBarAppearance">
  <TypeSignature Language="C#" Value="public class UINavigationBar.UINavigationBarAppearance : UIKit.UIView.UIViewAppearance" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit UINavigationBar/UINavigationBarAppearance extends UIKit.UIView/UIViewAppearance" />
  <TypeSignature Language="DocId" Value="T:UIKit.UINavigationBar.UINavigationBarAppearance" />
  <TypeSignature Language="F#" Value="type UINavigationBar.UINavigationBarAppearance = class&#xA;    inherit UIView.UIViewAppearance" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UIKit.UIView+UIViewAppearance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Appearance class for objects of type <see cref="T:UIKit.UINavigationBar" />.</summary>
    <remarks>
      <para>This appearance class is a strongly typed subclass of UIAppearance that is intended to be used with objects of class <see cref="T:UIKit.UINavigationBar" />.   You can obtain an instance to this class by either accessing the static <see cref="P:UIKit.UINavigationBar.Appearance" /> property on the <see cref="T:UIKit.UINavigationBar" /> or by calling the <see cref="M:UIKit.UINavigationBar.AppearanceWhenContainedIn" /> to get a UIAppearance that is context sensitive.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal UINavigationBarAppearance (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new UIKit.UINavigationBar.UINavigationBarAppearance : nativeint -&gt; UIKit.UINavigationBar.UINavigationBarAppearance" Usage="new UIKit.UINavigationBar.UINavigationBarAppearance handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackIndicatorImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage BackIndicatorImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIImage BackIndicatorImage" />
      <MemberSignature Language="DocId" Value="P:UIKit.UINavigationBar.UINavigationBarAppearance.BackIndicatorImage" />
      <MemberSignature Language="F#" Value="member this.BackIndicatorImage : UIKit.UIImage with get, set" Usage="UIKit.UINavigationBar.UINavigationBarAppearance.BackIndicatorImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("backIndicatorImage")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setBackIndicatorImage:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("backIndicatorImage", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setBackIndicatorImage:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The UIImage shown beside the back button.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackIndicatorTransitionMaskImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage BackIndicatorTransitionMaskImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIImage BackIndicatorTransitionMaskImage" />
      <MemberSignature Language="DocId" Value="P:UIKit.UINavigationBar.UINavigationBarAppearance.BackIndicatorTransitionMaskImage" />
      <MemberSignature Language="F#" Value="member this.BackIndicatorTransitionMaskImage : UIKit.UIImage with get, set" Usage="UIKit.UINavigationBar.UINavigationBarAppearance.BackIndicatorTransitionMaskImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("backIndicatorTransitionMaskImage")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setBackIndicatorTransitionMaskImage:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("backIndicatorTransitionMaskImage", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setBackIndicatorTransitionMaskImage:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The UIImage used as a mask for content during push and pop transitions.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarStyle">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIBarStyle BarStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UIBarStyle BarStyle" />
      <MemberSignature Language="DocId" Value="P:UIKit.UINavigationBar.UINavigationBarAppearance.BarStyle" />
      <MemberSignature Language="F#" Value="member this.BarStyle : UIKit.UIBarStyle with get, set" Usage="UIKit.UINavigationBar.UINavigationBarAppearance.BarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("barStyle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setBarStyle:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("barStyle", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setBarStyle:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIBarStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:UIKit.UIBarStyle" /> for the navigation bar.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarTintColor">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIColor BarTintColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor BarTintColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UINavigationBar.UINavigationBarAppearance.BarTintColor" />
      <MemberSignature Language="F#" Value="member this.BarTintColor : UIKit.UIColor with get, set" Usage="UIKit.UINavigationBar.UINavigationBarAppearance.BarTintColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("barTintColor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setBarTintColor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("barTintColor", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setBarTintColor:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The tint applied to the navigation bar background.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage GetBackgroundImage (UIKit.UIBarMetrics forBarMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIImage GetBackgroundImage(valuetype UIKit.UIBarMetrics forBarMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.GetBackgroundImage(UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member GetBackgroundImage : UIKit.UIBarMetrics -&gt; UIKit.UIImage&#xA;override this.GetBackgroundImage : UIKit.UIBarMetrics -&gt; UIKit.UIImage" Usage="uINavigationBarAppearance.GetBackgroundImage forBarMetrics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("backgroundImageForBarMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forBarMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="forBarMetrics">To be added.</param>
        <summary>The background image used for the specified UIBarMetrics.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage GetBackgroundImage (UIKit.UIBarPosition barPosition, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIImage GetBackgroundImage(valuetype UIKit.UIBarPosition barPosition, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.GetBackgroundImage(UIKit.UIBarPosition,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member GetBackgroundImage : UIKit.UIBarPosition * UIKit.UIBarMetrics -&gt; UIKit.UIImage&#xA;override this.GetBackgroundImage : UIKit.UIBarPosition * UIKit.UIBarMetrics -&gt; UIKit.UIImage" Usage="uINavigationBarAppearance.GetBackgroundImage (barPosition, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("backgroundImageForBarPosition:barMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="barPosition" Type="UIKit.UIBarPosition" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="barPosition">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>The background image used for the specified UIBarPosition and UIBarMetrics.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTitleTextAttributes">
      <MemberSignature Language="C#" Value="public virtual UIKit.UITextAttributes GetTitleTextAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UITextAttributes GetTitleTextAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.GetTitleTextAttributes" />
      <MemberSignature Language="F#" Value="abstract member GetTitleTextAttributes : unit -&gt; UIKit.UITextAttributes&#xA;override this.GetTitleTextAttributes : unit -&gt; UIKit.UITextAttributes" Usage="uINavigationBarAppearance.GetTitleTextAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITextAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Display attributes for the bar's title.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTitleVerticalPositionAdjustment">
      <MemberSignature Language="C#" Value="public virtual nfloat GetTitleVerticalPositionAdjustment (UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetTitleVerticalPositionAdjustment(valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.GetTitleVerticalPositionAdjustment(UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member GetTitleVerticalPositionAdjustment : UIKit.UIBarMetrics -&gt; nfloat&#xA;override this.GetTitleVerticalPositionAdjustment : UIKit.UIBarMetrics -&gt; nfloat" Usage="uINavigationBarAppearance.GetTitleVerticalPositionAdjustment barMetrics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("titleVerticalPositionAdjustmentForBarMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="barMetrics">To be added.</param>
        <summary>The vertical adjustment of the title for the specified UIBarMetrics.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeTitleTextAttributes">
      <MemberSignature Language="C#" Value="public UIKit.UIStringAttributes LargeTitleTextAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIStringAttributes LargeTitleTextAttributes" />
      <MemberSignature Language="DocId" Value="P:UIKit.UINavigationBar.UINavigationBarAppearance.LargeTitleTextAttributes" />
      <MemberSignature Language="F#" Value="member this.LargeTitleTextAttributes : UIKit.UIStringAttributes with get, set" Usage="UIKit.UINavigationBar.UINavigationBarAppearance.LargeTitleTextAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIStringAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:UIStringAttributes" /> for large title text in the navigation bar.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundImage">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundImage (UIKit.UIImage backgroundImage, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundImage(class UIKit.UIImage backgroundImage, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.SetBackgroundImage(UIKit.UIImage,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundImage : UIKit.UIImage * UIKit.UIBarMetrics -&gt; unit&#xA;override this.SetBackgroundImage : UIKit.UIImage * UIKit.UIBarMetrics -&gt; unit" Usage="uINavigationBarAppearance.SetBackgroundImage (backgroundImage, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setBackgroundImage:forBarMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backgroundImage" Type="UIKit.UIImage" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="backgroundImage">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>Sets the background image for the specified UIBarMetrics.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundImage">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundImage (UIKit.UIImage backgroundImage, UIKit.UIBarPosition barPosition, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundImage(class UIKit.UIImage backgroundImage, valuetype UIKit.UIBarPosition barPosition, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.SetBackgroundImage(UIKit.UIImage,UIKit.UIBarPosition,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundImage : UIKit.UIImage * UIKit.UIBarPosition * UIKit.UIBarMetrics -&gt; unit&#xA;override this.SetBackgroundImage : UIKit.UIImage * UIKit.UIBarPosition * UIKit.UIBarMetrics -&gt; unit" Usage="uINavigationBarAppearance.SetBackgroundImage (backgroundImage, barPosition, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setBackgroundImage:forBarPosition:barMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backgroundImage" Type="UIKit.UIImage" />
        <Parameter Name="barPosition" Type="UIKit.UIBarPosition" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="backgroundImage">To be added.</param>
        <param name="barPosition">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>Sets the background image to use for the specified UIBarPosition and UIBarMetrics.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitleTextAttributes">
      <MemberSignature Language="C#" Value="public virtual void SetTitleTextAttributes (UIKit.UITextAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitleTextAttributes(class UIKit.UITextAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.SetTitleTextAttributes(UIKit.UITextAttributes)" />
      <MemberSignature Language="F#" Value="abstract member SetTitleTextAttributes : UIKit.UITextAttributes -&gt; unit&#xA;override this.SetTitleTextAttributes : UIKit.UITextAttributes -&gt; unit" Usage="uINavigationBarAppearance.SetTitleTextAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="UIKit.UITextAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes">To be added.</param>
        <summary>Sets the text attributes used by the title text.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitleVerticalPositionAdjustment">
      <MemberSignature Language="C#" Value="public virtual void SetTitleVerticalPositionAdjustment (nfloat adjustment, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitleVerticalPositionAdjustment(valuetype System.nfloat adjustment, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationBar.UINavigationBarAppearance.SetTitleVerticalPositionAdjustment(System.nfloat,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member SetTitleVerticalPositionAdjustment : nfloat * UIKit.UIBarMetrics -&gt; unit&#xA;override this.SetTitleVerticalPositionAdjustment : nfloat * UIKit.UIBarMetrics -&gt; unit" Usage="uINavigationBarAppearance.SetTitleVerticalPositionAdjustment (adjustment, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setTitleVerticalPositionAdjustment:forBarMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adjustment" Type="System.nfloat" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="adjustment">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>Adjusts the vertical position of the title by <param name="adjustment" /> for <param name="barMetrics" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage ShadowImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIImage ShadowImage" />
      <MemberSignature Language="DocId" Value="P:UIKit.UINavigationBar.UINavigationBarAppearance.ShadowImage" />
      <MemberSignature Language="F#" Value="member this.ShadowImage : UIKit.UIImage with get, set" Usage="UIKit.UINavigationBar.UINavigationBarAppearance.ShadowImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("shadowImage")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setShadowImage:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("shadowImage", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setShadowImage:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The shadow image for the navigation bar.</summary>
        <value>The default is <see langword="null" />, which produces the default shadow image.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleTextAttributes">
      <MemberSignature Language="C#" Value="public UIKit.UIStringAttributes TitleTextAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIStringAttributes TitleTextAttributes" />
      <MemberSignature Language="DocId" Value="P:UIKit.UINavigationBar.UINavigationBarAppearance.TitleTextAttributes" />
      <MemberSignature Language="F#" Value="member this.TitleTextAttributes : UIKit.UIStringAttributes with get, set" Usage="UIKit.UINavigationBar.UINavigationBarAppearance.TitleTextAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIStringAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string attributes for the title text.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translucent">
      <MemberSignature Language="C#" Value="public virtual bool Translucent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Translucent" />
      <MemberSignature Language="DocId" Value="P:UIKit.UINavigationBar.UINavigationBarAppearance.Translucent" />
      <MemberSignature Language="F#" Value="member this.Translucent : bool with get, set" Usage="UIKit.UINavigationBar.UINavigationBarAppearance.Translucent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isTranslucent")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setTranslucent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the navigation bar is translucent.</summary>
        <value>The default value for this property is <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
