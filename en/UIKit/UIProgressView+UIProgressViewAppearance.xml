<Type Name="UIProgressView+UIProgressViewAppearance" FullName="UIKit.UIProgressView+UIProgressViewAppearance">
  <TypeSignature Language="C#" Value="public class UIProgressView.UIProgressViewAppearance : UIKit.UIView.UIViewAppearance" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit UIProgressView/UIProgressViewAppearance extends UIKit.UIView/UIViewAppearance" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIProgressView.UIProgressViewAppearance" />
  <TypeSignature Language="F#" Value="type UIProgressView.UIProgressViewAppearance = class&#xA;    inherit UIView.UIViewAppearance" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UIKit.UIView+UIViewAppearance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Appearance class for objects of type <see cref="T:UIKit.UIProgressView" />.</summary>
    <remarks>
      <para>This appearance class is a strongly typed subclass of UIAppearance that is intended to be used with objects of class <see cref="T:UIKit.UIProgressView" />.   You can obtain an instance to this class by either accessing the static <see cref="P:UIKit.UIProgressView.Appearance" /> property on the <see cref="T:UIKit.UIProgressView" /> or by calling the <see cref="M:UIKit.UIProgressView.AppearanceWhenContainedIn(System.Type[])" /> to get a UIAppearance that is context sensitive.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal UIProgressViewAppearance (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIProgressView.UIProgressViewAppearance.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new UIKit.UIProgressView.UIProgressViewAppearance : nativeint -&gt; UIKit.UIProgressView.UIProgressViewAppearance" Usage="new UIKit.UIProgressView.UIProgressViewAppearance handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage ProgressImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIImage ProgressImage" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIProgressView.UIProgressViewAppearance.ProgressImage" />
      <MemberSignature Language="F#" Value="member this.ProgressImage : UIKit.UIImage with get, set" Usage="UIKit.UIProgressView.UIProgressViewAppearance.ProgressImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("progressImage", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setProgressImage:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The UIImage used to indicate progress.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressTintColor">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIColor ProgressTintColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor ProgressTintColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIProgressView.UIProgressViewAppearance.ProgressTintColor" />
      <MemberSignature Language="F#" Value="member this.ProgressTintColor : UIKit.UIColor with get, set" Usage="UIKit.UIProgressView.UIProgressViewAppearance.ProgressTintColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("progressTintColor", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setProgressTintColor:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color to be applied as a tint to the background of the UIProgressView.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage TrackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIImage TrackImage" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIProgressView.UIProgressViewAppearance.TrackImage" />
      <MemberSignature Language="F#" Value="member this.TrackImage : UIKit.UIImage with get, set" Usage="UIKit.UIProgressView.UIProgressViewAppearance.TrackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("trackImage", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTrackImage:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The UIImage used to indicate the track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackTintColor">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIColor TrackTintColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor TrackTintColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UIProgressView.UIProgressViewAppearance.TrackTintColor" />
      <MemberSignature Language="F#" Value="member this.TrackTintColor : UIKit.UIColor with get, set" Usage="UIKit.UIProgressView.UIProgressViewAppearance.TrackTintColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("trackTintColor", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTrackTintColor:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color to be applied as a tint to the track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
