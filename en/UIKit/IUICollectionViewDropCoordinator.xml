<Type Name="IUICollectionViewDropCoordinator" FullName="UIKit.IUICollectionViewDropCoordinator">
  <TypeSignature Language="C#" Value="public interface IUICollectionViewDropCoordinator : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUICollectionViewDropCoordinator implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="UICollectionViewDropCoordinator", WrapperType=typeof(MonoTouch.UIKit.UICollectionViewDropCoordinatorWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DropItemToPlaceholder", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.UIKit.IUICollectionViewDropPlaceholderContext), Selector="dropItem:toPlaceholder:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DropItemToItem", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.UIKit.IUIDragAnimating), Selector="dropItem:toItemAtIndexPath:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DropItemIntoItem", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.UIKit.IUIDragAnimating), Selector="dropItem:intoItemAtIndexPath:rect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DropItemToTarget", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.UIKit.IUIDragAnimating), Selector="dropItem:toTarget:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="items", IsProperty=true, IsRequired=true, IsStatic=false, Name="Items", PropertyType=typeof(MonoTouch.UIKit.IUICollectionViewDropItem[]), Selector="items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="destinationIndexPath", IsProperty=true, IsRequired=true, IsStatic=false, Name="DestinationIndexPath", PropertyType=typeof(MonoTouch.Foundation.NSIndexPath), Selector="destinationIndexPath")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="proposal", IsProperty=true, IsRequired=true, IsStatic=false, Name="Proposal", PropertyType=typeof(MonoTouch.UIKit.UICollectionViewDropProposal), Selector="proposal")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="session", IsProperty=true, IsRequired=true, IsStatic=false, Name="Session", PropertyType=typeof(MonoTouch.UIKit.IUIDropSession), Selector="session")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 11, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.WatchOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>System-created object used to coordinate drop actions with a collection view.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DestinationIndexPath">
      <MemberSignature Language="C#" Value="public MonoTouch.Foundation.NSIndexPath DestinationIndexPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSIndexPath DestinationIndexPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("destinationIndexPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the index path for the insertion.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropItemIntoItem">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.IUIDragAnimating DropItemIntoItem (MonoTouch.UIKit.UIDragItem dragItem, MonoTouch.Foundation.NSIndexPath itemIndexPath, MonoTouch.CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.IUIDragAnimating DropItemIntoItem(class MonoTouch.UIKit.UIDragItem dragItem, class MonoTouch.Foundation.NSIndexPath itemIndexPath, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("dropItem:intoItemAtIndexPath:rect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIDragAnimating</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragItem" Type="MonoTouch.UIKit.UIDragItem" />
        <Parameter Name="itemIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="dragItem">To be added.</param>
        <param name="itemIndexPath">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>Drops the drag item into the specified rectangle, in the coordinate system of the item at the specified item index path.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropItemToItem">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.IUIDragAnimating DropItemToItem (MonoTouch.UIKit.UIDragItem dragItem, MonoTouch.Foundation.NSIndexPath itemIndexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.IUIDragAnimating DropItemToItem(class MonoTouch.UIKit.UIDragItem dragItem, class MonoTouch.Foundation.NSIndexPath itemIndexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("dropItem:toItemAtIndexPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIDragAnimating</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragItem" Type="MonoTouch.UIKit.UIDragItem" />
        <Parameter Name="itemIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="dragItem">To be added.</param>
        <param name="itemIndexPath">To be added.</param>
        <summary>Drops the drag item into the item at the specified item index path.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropItemToPlaceholder">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.IUICollectionViewDropPlaceholderContext DropItemToPlaceholder (MonoTouch.UIKit.UIDragItem dragItem, MonoTouch.UIKit.UICollectionViewDropPlaceholder placeholder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.IUICollectionViewDropPlaceholderContext DropItemToPlaceholder(class MonoTouch.UIKit.UIDragItem dragItem, class MonoTouch.UIKit.UICollectionViewDropPlaceholder placeholder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("dropItem:toPlaceholder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUICollectionViewDropPlaceholderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragItem" Type="MonoTouch.UIKit.UIDragItem" />
        <Parameter Name="placeholder" Type="MonoTouch.UIKit.UICollectionViewDropPlaceholder" />
      </Parameters>
      <Docs>
        <param name="dragItem">To be added.</param>
        <param name="placeholder">To be added.</param>
        <summary>Drops the drag item to the specified placeholder.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropItemToTarget">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.IUIDragAnimating DropItemToTarget (MonoTouch.UIKit.UIDragItem dragItem, MonoTouch.UIKit.UIDragPreviewTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.IUIDragAnimating DropItemToTarget(class MonoTouch.UIKit.UIDragItem dragItem, class MonoTouch.UIKit.UIDragPreviewTarget target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("dropItem:toTarget:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIDragAnimating</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragItem" Type="MonoTouch.UIKit.UIDragItem" />
        <Parameter Name="target" Type="MonoTouch.UIKit.UIDragPreviewTarget" />
      </Parameters>
      <Docs>
        <param name="dragItem">To be added.</param>
        <param name="target">To be added.</param>
        <summary>Drops the drag item to the specified target.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.IUICollectionViewDropItem[] Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.UIKit.IUICollectionViewDropItem[] Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("items")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUICollectionViewDropItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the drag items.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proposal">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.UICollectionViewDropProposal Proposal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.UIKit.UICollectionViewDropProposal Proposal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("proposal")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UICollectionViewDropProposal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the drop proposal.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.IUIDropSession Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.UIKit.IUIDropSession Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("session")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIDropSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the drop session.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>