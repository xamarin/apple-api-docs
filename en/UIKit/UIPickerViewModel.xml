<Type Name="UIPickerViewModel" FullName="UIKit.UIPickerViewModel">
  <TypeSignature Language="C#" Value="public class UIPickerViewModel : Foundation.NSObject, IDisposable, UIKit.IUIPickerViewModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIPickerViewModel extends Foundation.NSObject implements class ObjCRuntime.INativeObject, class System.IDisposable, class UIKit.IUIPickerViewDataSource, class UIKit.IUIPickerViewDelegate, class UIKit.IUIPickerViewModel" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIPickerViewModel" />
  <TypeSignature Language="F#" Value="type UIPickerViewModel = class&#xA;    inherit NSObject&#xA;    interface IUIPickerViewModel&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IUIPickerViewDataSource&#xA;    interface IUIPickerViewDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIPickerViewDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIPickerViewDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIPickerViewModel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol(IsInformal=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("UIPickerViewModel", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The model for the UIPickerView.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/MonoCatalog-MonoDevelop/">monocatalog</related>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/QuartzSample/">QuartzSample</related>
    <related type="externalDocumentation" href="https://developer.apple.com/reference/UIKit/UIPickerViewModel">Apple documentation for <c>UIPickerViewModel</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPickerViewModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UIPickerViewModel (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new UIKit.UIPickerViewModel : Foundation.NSObjectFlag -&gt; UIKit.UIPickerViewModel" Usage="new UIKit.UIPickerViewModel t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal UIPickerViewModel (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new UIKit.UIPickerViewModel : nativeint -&gt; UIKit.UIPickerViewModel" Usage="new UIKit.UIPickerViewModel handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributedTitle">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSAttributedString GetAttributedTitle (UIKit.UIPickerView pickerView, nint row, nint component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSAttributedString GetAttributedTitle(class UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.GetAttributedTitle(UIKit.UIPickerView,System.nint,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributedTitle : UIKit.UIPickerView * nint * nint -&gt; Foundation.NSAttributedString&#xA;override this.GetAttributedTitle : UIKit.UIPickerView * nint * nint -&gt; Foundation.NSAttributedString" Usage="uIPickerViewModel.GetAttributedTitle (pickerView, row, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pickerView:attributedTitleForRow:forComponent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="UIKit.UIPickerView" />
        <Parameter Name="row" Type="System.nint" />
        <Parameter Name="component" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="row">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Returns an attributed string that represents the title for the specified row of the specified component of <paramref name="pickerView" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponentCount">
      <MemberSignature Language="C#" Value="public virtual nint GetComponentCount (UIKit.UIPickerView pickerView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nint GetComponentCount(class UIKit.UIPickerView pickerView) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.GetComponentCount(UIKit.UIPickerView)" />
      <MemberSignature Language="F#" Value="abstract member GetComponentCount : UIKit.UIPickerView -&gt; nint&#xA;override this.GetComponentCount : UIKit.UIPickerView -&gt; nint" Usage="uIPickerViewModel.GetComponentCount pickerView" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:UIKit.IUIPickerViewDataSource.GetComponentCount(UIKit.UIPickerView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("numberOfComponentsInPickerView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="UIKit.UIPickerView" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <summary>The number of components in the specified UIPickerView.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponentWidth">
      <MemberSignature Language="C#" Value="public virtual nfloat GetComponentWidth (UIKit.UIPickerView pickerView, nint component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetComponentWidth(class UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.GetComponentWidth(UIKit.UIPickerView,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member GetComponentWidth : UIKit.UIPickerView * nint -&gt; nfloat&#xA;override this.GetComponentWidth : UIKit.UIPickerView * nint -&gt; nfloat" Usage="uIPickerViewModel.GetComponentWidth (pickerView, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pickerView:widthForComponent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="UIKit.UIPickerView" />
        <Parameter Name="component" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="component">To be added.</param>
        <summary>The width of the specified component.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowHeight">
      <MemberSignature Language="C#" Value="public virtual nfloat GetRowHeight (UIKit.UIPickerView pickerView, nint component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetRowHeight(class UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.GetRowHeight(UIKit.UIPickerView,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member GetRowHeight : UIKit.UIPickerView * nint -&gt; nfloat&#xA;override this.GetRowHeight : UIKit.UIPickerView * nint -&gt; nfloat" Usage="uIPickerViewModel.GetRowHeight (pickerView, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pickerView:rowHeightForComponent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="UIKit.UIPickerView" />
        <Parameter Name="component" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="component">To be added.</param>
        <summary>The height of a row in the UIPickerView.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowsInComponent">
      <MemberSignature Language="C#" Value="public virtual nint GetRowsInComponent (UIKit.UIPickerView pickerView, nint component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nint GetRowsInComponent(class UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.GetRowsInComponent(UIKit.UIPickerView,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member GetRowsInComponent : UIKit.UIPickerView * nint -&gt; nint&#xA;override this.GetRowsInComponent : UIKit.UIPickerView * nint -&gt; nint" Usage="uIPickerViewModel.GetRowsInComponent (pickerView, component)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:UIKit.IUIPickerViewDataSource.GetRowsInComponent(UIKit.UIPickerView,System.nint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pickerView:numberOfRowsInComponent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="UIKit.UIPickerView" />
        <Parameter Name="component" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="component">To be added.</param>
        <summary>The number of rows in the specified component.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTitle">
      <MemberSignature Language="C#" Value="public virtual string GetTitle (UIKit.UIPickerView pickerView, nint row, nint component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTitle(class UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.GetTitle(UIKit.UIPickerView,System.nint,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member GetTitle : UIKit.UIPickerView * nint * nint -&gt; string&#xA;override this.GetTitle : UIKit.UIPickerView * nint * nint -&gt; string" Usage="uIPickerViewModel.GetTitle (pickerView, row, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pickerView:titleForRow:forComponent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="UIKit.UIPickerView" />
        <Parameter Name="row" Type="System.nint" />
        <Parameter Name="component" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="row">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Application developers implement this method to provide the title for the specified row in the specified component.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIView GetView (UIKit.UIPickerView pickerView, nint row, nint component, UIKit.UIView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIView GetView(class UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component, class UIKit.UIView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.GetView(UIKit.UIPickerView,System.nint,System.nint,UIKit.UIView)" />
      <MemberSignature Language="F#" Value="abstract member GetView : UIKit.UIPickerView * nint * nint * UIKit.UIView -&gt; UIKit.UIView&#xA;override this.GetView : UIKit.UIPickerView * nint * nint * UIKit.UIView -&gt; UIKit.UIView" Usage="uIPickerViewModel.GetView (pickerView, row, component, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pickerView:viewForRow:forComponent:reusingView:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="UIKit.UIPickerView" />
        <Parameter Name="row" Type="System.nint" />
        <Parameter Name="component" Type="System.nint" />
        <Parameter Name="view" Type="UIKit.UIView" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="row">To be added.</param>
        <param name="component">To be added.</param>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public virtual void Selected (UIKit.UIPickerView pickerView, nint row, nint component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Selected(class UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPickerViewModel.Selected(UIKit.UIPickerView,System.nint,System.nint)" />
      <MemberSignature Language="F#" Value="abstract member Selected : UIKit.UIPickerView * nint * nint -&gt; unit&#xA;override this.Selected : UIKit.UIPickerView * nint * nint -&gt; unit" Usage="uIPickerViewModel.Selected (pickerView, row, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pickerView:didSelectRow:inComponent:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pickerView" Type="UIKit.UIPickerView" />
        <Parameter Name="row" Type="System.nint" />
        <Parameter Name="component" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="pickerView">To be added.</param>
        <param name="row">To be added.</param>
        <param name="component">To be added.</param>
        <summary>Indicates that the item at the specified row has been selected.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
