<Type Name="UINavigationControllerDelegate_Extensions" FullName="UIKit.UINavigationControllerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UINavigationControllerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UINavigationControllerDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:UIKit.UINavigationControllerDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type UINavigationControllerDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:UIKit.IUINavigationControllerDelegate" /> interface to support all the methods from the <see cref="T:UIKit.UINavigationControllerDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:UIKit.IUINavigationControllerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:UIKit.UINavigationControllerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidShowViewController">
      <MemberSignature Language="C#" Value="public static void DidShowViewController (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController, UIKit.UIViewController viewController, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidShowViewController(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController, class UIKit.UIViewController viewController, bool animated) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationControllerDelegate_Extensions.DidShowViewController(UIKit.IUINavigationControllerDelegate,UIKit.UINavigationController,UIKit.UIViewController,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member DidShowViewController : UIKit.IUINavigationControllerDelegate * UIKit.UINavigationController * UIKit.UIViewController * bool -&gt; unit" Usage="UIKit.UINavigationControllerDelegate_Extensions.DidShowViewController (This, navigationController, viewController, animated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="UIKit.UINavigationController" />
        <Parameter Name="viewController" Type="UIKit.UIViewController">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.Transient</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="navigationController">To be added.</param>
        <param name="viewController">To be added.</param>
        <param name="animated">To be added.</param>
        <summary>Extension method called shortly after the <paramref name="viewController" /> has been made visible.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationControllerForOperation">
      <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController, UIKit.UINavigationControllerOperation operation, UIKit.UIViewController fromViewController, UIKit.UIViewController toViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController, valuetype UIKit.UINavigationControllerOperation operation, class UIKit.UIViewController fromViewController, class UIKit.UIViewController toViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationControllerDelegate_Extensions.GetAnimationControllerForOperation(UIKit.IUINavigationControllerDelegate,UIKit.UINavigationController,UIKit.UINavigationControllerOperation,UIKit.UIViewController,UIKit.UIViewController)" />
      <MemberSignature Language="F#" Value="static member GetAnimationControllerForOperation : UIKit.IUINavigationControllerDelegate * UIKit.UINavigationController * UIKit.UINavigationControllerOperation * UIKit.UIViewController * UIKit.UIViewController -&gt; UIKit.IUIViewControllerAnimatedTransitioning" Usage="UIKit.UINavigationControllerDelegate_Extensions.GetAnimationControllerForOperation (This, navigationController, operation, fromViewController, toViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="UIKit.UINavigationController" />
        <Parameter Name="operation" Type="UIKit.UINavigationControllerOperation" />
        <Parameter Name="fromViewController" Type="UIKit.UIViewController" />
        <Parameter Name="toViewController" Type="UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="navigationController">To be added.</param>
        <param name="operation">To be added.</param>
        <param name="fromViewController">To be added.</param>
        <param name="toViewController">To be added.</param>
        <summary>Called by the system to retrieve the transition animation for the <paramref name="operation" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteractionControllerForAnimationController">
      <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController, UIKit.IUIViewControllerAnimatedTransitioning animationController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController, class UIKit.IUIViewControllerAnimatedTransitioning animationController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationControllerDelegate_Extensions.GetInteractionControllerForAnimationController(UIKit.IUINavigationControllerDelegate,UIKit.UINavigationController,UIKit.IUIViewControllerAnimatedTransitioning)" />
      <MemberSignature Language="F#" Value="static member GetInteractionControllerForAnimationController : UIKit.IUINavigationControllerDelegate * UIKit.UINavigationController * UIKit.IUIViewControllerAnimatedTransitioning -&gt; UIKit.IUIViewControllerInteractiveTransitioning" Usage="UIKit.UINavigationControllerDelegate_Extensions.GetInteractionControllerForAnimationController (This, navigationController, animationController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="UIKit.UINavigationController" />
        <Parameter Name="animationController" Type="UIKit.IUIViewControllerAnimatedTransitioning" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="navigationController">To be added.</param>
        <param name="animationController">To be added.</param>
        <summary>Called by the system to retrieve an interactive transition animation.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredInterfaceOrientation">
      <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationControllerDelegate_Extensions.GetPreferredInterfaceOrientation(UIKit.IUINavigationControllerDelegate,UIKit.UINavigationController)" />
      <MemberSignature Language="F#" Value="static member GetPreferredInterfaceOrientation : UIKit.IUINavigationControllerDelegate * UIKit.UINavigationController -&gt; UIKit.UIInterfaceOrientation" Usage="UIKit.UINavigationControllerDelegate_Extensions.GetPreferredInterfaceOrientation (This, navigationController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIInterfaceOrientation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="UIKit.UINavigationController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="navigationController">To be added.</param>
        <summary>Can be overridden to set the preferred interface orientation of the .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedInterfaceOrientations">
      <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationControllerDelegate_Extensions.SupportedInterfaceOrientations(UIKit.IUINavigationControllerDelegate,UIKit.UINavigationController)" />
      <MemberSignature Language="F#" Value="static member SupportedInterfaceOrientations : UIKit.IUINavigationControllerDelegate * UIKit.UINavigationController -&gt; UIKit.UIInterfaceOrientationMask" Usage="UIKit.UINavigationControllerDelegate_Extensions.SupportedInterfaceOrientations (This, navigationController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIInterfaceOrientationMask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="UIKit.UINavigationController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="navigationController">To be added.</param>
        <summary>Can be overridden to dynamically specify the supported orientations of the .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillShowViewController">
      <MemberSignature Language="C#" Value="public static void WillShowViewController (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController, UIKit.UIViewController viewController, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowViewController(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController, class UIKit.UIViewController viewController, bool animated) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UINavigationControllerDelegate_Extensions.WillShowViewController(UIKit.IUINavigationControllerDelegate,UIKit.UINavigationController,UIKit.UIViewController,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member WillShowViewController : UIKit.IUINavigationControllerDelegate * UIKit.UINavigationController * UIKit.UIViewController * bool -&gt; unit" Usage="UIKit.UINavigationControllerDelegate_Extensions.WillShowViewController (This, navigationController, viewController, animated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="UIKit.UINavigationController" />
        <Parameter Name="viewController" Type="UIKit.UIViewController">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.Transient</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="navigationController">To be added.</param>
        <param name="viewController">To be added.</param>
        <param name="animated">To be added.</param>
        <summary>Called by the system shortly before the  is displayed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
