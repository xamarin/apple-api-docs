<Type Name="UINavigationControllerDelegate_Extensions" FullName="UIKit.UINavigationControllerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UINavigationControllerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UINavigationControllerDelegate_Extensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:UIKit.IUINavigationControllerDelegate" /> interface to support all the methods from the <see cref="T:UIKit.UINavigationControllerDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:UIKit.IUINavigationControllerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:UIKit.UINavigationControllerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidShowViewController">
      <MemberSignature Language="C#" Value="public static void DidShowViewController (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController, MonoTouch.UIKit.UIViewController viewController, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidShowViewController(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController, class MonoTouch.UIKit.UIViewController viewController, bool animated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
        <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="navigationController">To be added.</param>
        <param name="viewController">To be added.</param>
        <param name="animated">To be added.</param>
        <summary>Extension method called shortly after the <paramref name="viewController" /> has been made visible.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationControllerForOperation">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController, MonoTouch.UIKit.UINavigationControllerOperation operation, MonoTouch.UIKit.UIViewController fromViewController, MonoTouch.UIKit.UIViewController toViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController, valuetype MonoTouch.UIKit.UINavigationControllerOperation operation, class MonoTouch.UIKit.UIViewController fromViewController, class MonoTouch.UIKit.UIViewController toViewController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
        <Parameter Name="operation" Type="MonoTouch.UIKit.UINavigationControllerOperation" />
        <Parameter Name="fromViewController" Type="MonoTouch.UIKit.UIViewController" />
        <Parameter Name="toViewController" Type="MonoTouch.UIKit.UIViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="navigationController">To be added.</param>
        <param name="operation">To be added.</param>
        <param name="fromViewController">To be added.</param>
        <param name="toViewController">To be added.</param>
        <summary>Called by the system to retrieve the transition animation for the <paramref name="operation" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteractionControllerForAnimationController">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController, MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animationController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController, class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animationController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
        <Parameter Name="animationController" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="navigationController">To be added.</param>
        <param name="animationController">To be added.</param>
        <summary>Called by the system to retrieve an interactive transition animation.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredInterfaceOrientation">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="navigationController">To be added.</param>
        <summary>Can be overridden to set the preferred interface orientation of the .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedInterfaceOrientations">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 7, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="navigationController">To be added.</param>
        <summary>Can be overridden to dynamically specify the supported orientations of the .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillShowViewController">
      <MemberSignature Language="C#" Value="public static void WillShowViewController (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController, MonoTouch.UIKit.UIViewController viewController, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowViewController(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController, class MonoTouch.UIKit.UIViewController viewController, bool animated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
        <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
        <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="navigationController">To be added.</param>
        <param name="viewController">To be added.</param>
        <param name="animated">To be added.</param>
        <summary>Called by the system shortly before the  is displayed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>