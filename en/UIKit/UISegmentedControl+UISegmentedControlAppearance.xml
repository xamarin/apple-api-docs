<Type Name="UISegmentedControl+UISegmentedControlAppearance" FullName="UIKit.UISegmentedControl+UISegmentedControlAppearance">
  <TypeSignature Language="C#" Value="public class UISegmentedControl.UISegmentedControlAppearance : UIKit.UIControl.UIControlAppearance" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit UISegmentedControl/UISegmentedControlAppearance extends UIKit.UIControl/UIControlAppearance" />
  <TypeSignature Language="DocId" Value="T:UIKit.UISegmentedControl.UISegmentedControlAppearance" />
  <TypeSignature Language="F#" Value="type UISegmentedControl.UISegmentedControlAppearance = class&#xA;    inherit UIControl.UIControlAppearance" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UIKit.UIControl+UIControlAppearance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Appearance class for objects of type <see cref="T:UIKit.UISegmentedControl" />.</summary>
    <remarks>
      <para>This appearance class is a strongly typed subclass of UIAppearance that is intended to be used with objects of class <see cref="T:UIKit.UISegmentedControl" />.   You can obtain an instance to this class by either accessing the static <see cref="P:UIKit.UISegmentedControl.Appearance" /> property on the <see cref="T:UIKit.UISegmentedControl" /> or by calling the <see cref="M:UIKit.UISegmentedControl.AppearanceWhenContainedIn" /> to get a UIAppearance that is context sensitive.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal UISegmentedControlAppearance (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new UIKit.UISegmentedControl.UISegmentedControlAppearance : nativeint -&gt; UIKit.UISegmentedControl.UISegmentedControlAppearance" Usage="new UIKit.UISegmentedControl.UISegmentedControlAppearance handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentPositionAdjustment">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIOffset ContentPositionAdjustment (UIKit.UISegmentedControlSegment leftCenterRightOrAlone, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype UIKit.UIOffset ContentPositionAdjustment(valuetype UIKit.UISegmentedControlSegment leftCenterRightOrAlone, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.ContentPositionAdjustment(UIKit.UISegmentedControlSegment,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member ContentPositionAdjustment : UIKit.UISegmentedControlSegment * UIKit.UIBarMetrics -&gt; UIKit.UIOffset&#xA;override this.ContentPositionAdjustment : UIKit.UISegmentedControlSegment * UIKit.UIBarMetrics -&gt; UIKit.UIOffset" Usage="uISegmentedControlAppearance.ContentPositionAdjustment (leftCenterRightOrAlone, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("contentPositionAdjustmentForSegmentType:barMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftCenterRightOrAlone" Type="UIKit.UISegmentedControlSegment" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="leftCenterRightOrAlone">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>The positioning offset for the specified UISegmentedControlSegment and UIBarMetrics.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DividerImageForLeftSegmentStaterightSegmentStatebarMetrics">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage DividerImageForLeftSegmentStaterightSegmentStatebarMetrics (UIKit.UIControlState leftState, UIKit.UIControlState rightState, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIImage DividerImageForLeftSegmentStaterightSegmentStatebarMetrics(valuetype UIKit.UIControlState leftState, valuetype UIKit.UIControlState rightState, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.DividerImageForLeftSegmentStaterightSegmentStatebarMetrics(UIKit.UIControlState,UIKit.UIControlState,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member DividerImageForLeftSegmentStaterightSegmentStatebarMetrics : UIKit.UIControlState * UIKit.UIControlState * UIKit.UIBarMetrics -&gt; UIKit.UIImage&#xA;override this.DividerImageForLeftSegmentStaterightSegmentStatebarMetrics : UIKit.UIControlState * UIKit.UIControlState * UIKit.UIBarMetrics -&gt; UIKit.UIImage" Usage="uISegmentedControlAppearance.DividerImageForLeftSegmentStaterightSegmentStatebarMetrics (leftState, rightState, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("dividerImageForLeftSegmentState:rightSegmentState:barMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftState" Type="UIKit.UIControlState" />
        <Parameter Name="rightState" Type="UIKit.UIControlState" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="leftState">To be added.</param>
        <param name="rightState">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>The divider image for the specified UIControlStates and UIBarMetrics.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage GetBackgroundImage (UIKit.UIControlState state, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIImage GetBackgroundImage(valuetype UIKit.UIControlState state, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.GetBackgroundImage(UIKit.UIControlState,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member GetBackgroundImage : UIKit.UIControlState * UIKit.UIBarMetrics -&gt; UIKit.UIImage&#xA;override this.GetBackgroundImage : UIKit.UIControlState * UIKit.UIBarMetrics -&gt; UIKit.UIImage" Usage="uISegmentedControlAppearance.GetBackgroundImage (state, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("backgroundImageForState:barMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="UIKit.UIControlState" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>The background image used for the specified UIControlState and UIBarMetrics.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTitleTextAttributes">
      <MemberSignature Language="C#" Value="public UIKit.UITextAttributes GetTitleTextAttributes (UIKit.UIControlState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class UIKit.UITextAttributes GetTitleTextAttributes(valuetype UIKit.UIControlState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.GetTitleTextAttributes(UIKit.UIControlState)" />
      <MemberSignature Language="F#" Value="member this.GetTitleTextAttributes : UIKit.UIControlState -&gt; UIKit.UITextAttributes" Usage="uISegmentedControlAppearance.GetTitleTextAttributes state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITextAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>The UITextAttributes for the title for the given UIControlState.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundImage">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundImage (UIKit.UIImage backgroundImage, UIKit.UIControlState state, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundImage(class UIKit.UIImage backgroundImage, valuetype UIKit.UIControlState state, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.SetBackgroundImage(UIKit.UIImage,UIKit.UIControlState,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundImage : UIKit.UIImage * UIKit.UIControlState * UIKit.UIBarMetrics -&gt; unit&#xA;override this.SetBackgroundImage : UIKit.UIImage * UIKit.UIControlState * UIKit.UIBarMetrics -&gt; unit" Usage="uISegmentedControlAppearance.SetBackgroundImage (backgroundImage, state, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setBackgroundImage:forState:barMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backgroundImage" Type="UIKit.UIImage" />
        <Parameter Name="state" Type="UIKit.UIControlState" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="backgroundImage">To be added.</param>
        <param name="state">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>Sets the background image used for the specified UIControlState and UIBarMetrics.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentPositionAdjustment">
      <MemberSignature Language="C#" Value="public virtual void SetContentPositionAdjustment (UIKit.UIOffset adjustment, UIKit.UISegmentedControlSegment leftCenterRightOrAlone, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentPositionAdjustment(valuetype UIKit.UIOffset adjustment, valuetype UIKit.UISegmentedControlSegment leftCenterRightOrAlone, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.SetContentPositionAdjustment(UIKit.UIOffset,UIKit.UISegmentedControlSegment,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member SetContentPositionAdjustment : UIKit.UIOffset * UIKit.UISegmentedControlSegment * UIKit.UIBarMetrics -&gt; unit&#xA;override this.SetContentPositionAdjustment : UIKit.UIOffset * UIKit.UISegmentedControlSegment * UIKit.UIBarMetrics -&gt; unit" Usage="uISegmentedControlAppearance.SetContentPositionAdjustment (adjustment, leftCenterRightOrAlone, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setContentPositionAdjustment:forSegmentType:barMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adjustment" Type="UIKit.UIOffset" />
        <Parameter Name="leftCenterRightOrAlone" Type="UIKit.UISegmentedControlSegment" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="adjustment">To be added.</param>
        <param name="leftCenterRightOrAlone">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>Sets the position adjustment for the specified UISegmentedControlSegment and UIBarMetrics.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDividerImage">
      <MemberSignature Language="C#" Value="public virtual void SetDividerImage (UIKit.UIImage dividerImage, UIKit.UIControlState leftSegmentState, UIKit.UIControlState rightSegmentState, UIKit.UIBarMetrics barMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDividerImage(class UIKit.UIImage dividerImage, valuetype UIKit.UIControlState leftSegmentState, valuetype UIKit.UIControlState rightSegmentState, valuetype UIKit.UIBarMetrics barMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.SetDividerImage(UIKit.UIImage,UIKit.UIControlState,UIKit.UIControlState,UIKit.UIBarMetrics)" />
      <MemberSignature Language="F#" Value="abstract member SetDividerImage : UIKit.UIImage * UIKit.UIControlState * UIKit.UIControlState * UIKit.UIBarMetrics -&gt; unit&#xA;override this.SetDividerImage : UIKit.UIImage * UIKit.UIControlState * UIKit.UIControlState * UIKit.UIBarMetrics -&gt; unit" Usage="uISegmentedControlAppearance.SetDividerImage (dividerImage, leftSegmentState, rightSegmentState, barMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividerImage" Type="UIKit.UIImage" />
        <Parameter Name="leftSegmentState" Type="UIKit.UIControlState" />
        <Parameter Name="rightSegmentState" Type="UIKit.UIControlState" />
        <Parameter Name="barMetrics" Type="UIKit.UIBarMetrics" />
      </Parameters>
      <Docs>
        <param name="dividerImage">To be added.</param>
        <param name="leftSegmentState">To be added.</param>
        <param name="rightSegmentState">To be added.</param>
        <param name="barMetrics">To be added.</param>
        <summary>Sets the divider image used for the specified UIControlStates and UIBarMetrics.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitleTextAttributes">
      <MemberSignature Language="C#" Value="public void SetTitleTextAttributes (UIKit.UITextAttributes attributes, UIKit.UIControlState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTitleTextAttributes(class UIKit.UITextAttributes attributes, valuetype UIKit.UIControlState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISegmentedControl.UISegmentedControlAppearance.SetTitleTextAttributes(UIKit.UITextAttributes,UIKit.UIControlState)" />
      <MemberSignature Language="F#" Value="member this.SetTitleTextAttributes : UIKit.UITextAttributes * UIKit.UIControlState -&gt; unit" Usage="uISegmentedControlAppearance.SetTitleTextAttributes (attributes, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="UIKit.UITextAttributes" />
        <Parameter Name="state" Type="UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="attributes">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Sets the text attributes used for the title for the specified UIControlState.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
