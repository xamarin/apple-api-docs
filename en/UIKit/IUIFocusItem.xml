<Type Name="IUIFocusItem" FullName="UIKit.IUIFocusItem">
  <TypeSignature Language="C#" Value="public interface IUIFocusItem : IDisposable, UIKit.IUIFocusEnvironment" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIFocusItem implements class ObjCRuntime.INativeObject, class System.IDisposable, class UIKit.IUIFocusEnvironment" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUIFocusItem" />
  <TypeSignature Language="F#" Value="type IUIFocusItem = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IUIFocusEnvironment" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>UIKit.IUIFocusEnvironment</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="UIFocusItem", WrapperType=typeof(UIKit.UIFocusItemWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="canBecomeFocused", IsProperty=true, IsRequired=true, IsStatic=false, Name="CanBecomeFocused", PropertyType=typeof(System.Boolean), Selector="canBecomeFocused")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="frame", IsProperty=true, IsRequired=false, IsStatic=false, Name="Frame", PropertyType=typeof(CoreGraphics.CGRect), Selector="frame")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidHintFocusMovement", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(UIKit.UIFocusMovementHint) }, Selector="didHintFocusMovement:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface that defines the <see cref="P:UIKit.IUIFocusItem.CanBecomeFocused" /> method.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanBecomeFocused">
      <MemberSignature Language="C#" Value="public bool CanBecomeFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBecomeFocused" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUIFocusItem.CanBecomeFocused" />
      <MemberSignature Language="F#" Value="member this.CanBecomeFocused : bool" Usage="UIKit.IUIFocusItem.CanBecomeFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("canBecomeFocused")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
