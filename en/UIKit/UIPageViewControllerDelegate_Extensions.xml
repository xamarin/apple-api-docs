<Type Name="UIPageViewControllerDelegate_Extensions" FullName="UIKit.UIPageViewControllerDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class UIPageViewControllerDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UIPageViewControllerDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:UIKit.UIPageViewControllerDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type UIPageViewControllerDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:UIKit.IUIPageViewControllerDelegate" /> interface to support all the methods from the <see cref="T:UIKit.UIPageViewControllerDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:UIKit.IUIPageViewControllerDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:UIKit.UIPageViewControllerDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidFinishAnimating">
      <MemberSignature Language="C#" Value="public static void DidFinishAnimating (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController, bool finished, UIKit.UIViewController[] previousViewControllers, bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishAnimating(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController, bool finished, class UIKit.UIViewController[] previousViewControllers, bool completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPageViewControllerDelegate_Extensions.DidFinishAnimating(UIKit.IUIPageViewControllerDelegate,UIKit.UIPageViewController,System.Boolean,UIKit.UIViewController[],System.Boolean)" />
      <MemberSignature Language="F#" Value="static member DidFinishAnimating : UIKit.IUIPageViewControllerDelegate * UIKit.UIPageViewController * bool * UIKit.UIViewController[] * bool -&gt; unit" Usage="UIKit.UIPageViewControllerDelegate_Extensions.DidFinishAnimating (This, pageViewController, finished, previousViewControllers, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="UIKit.UIPageViewController" />
        <Parameter Name="finished" Type="System.Boolean" />
        <Parameter Name="previousViewControllers" Type="UIKit.UIViewController[]" />
        <Parameter Name="completed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="pageViewController">To be added.</param>
        <param name="finished">To be added.</param>
        <param name="previousViewControllers">To be added.</param>
        <param name="completed">To be added.</param>
        <summary>Indicates that animation has completed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredInterfaceOrientationForPresentation">
      <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPageViewControllerDelegate_Extensions.GetPreferredInterfaceOrientationForPresentation(UIKit.IUIPageViewControllerDelegate,UIKit.UIPageViewController)" />
      <MemberSignature Language="F#" Value="static member GetPreferredInterfaceOrientationForPresentation : UIKit.IUIPageViewControllerDelegate * UIKit.UIPageViewController -&gt; UIKit.UIInterfaceOrientation" Usage="UIKit.UIPageViewControllerDelegate_Extensions.GetPreferredInterfaceOrientationForPresentation (This, pageViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIInterfaceOrientation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="UIKit.UIPageViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="pageViewController">To be added.</param>
        <summary>The preferred orientation of the UIPageViewController.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpineLocation">
      <MemberSignature Language="C#" Value="public static UIKit.UIPageViewControllerSpineLocation GetSpineLocation (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController, UIKit.UIInterfaceOrientation orientation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIPageViewControllerSpineLocation GetSpineLocation(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController, valuetype UIKit.UIInterfaceOrientation orientation) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPageViewControllerDelegate_Extensions.GetSpineLocation(UIKit.IUIPageViewControllerDelegate,UIKit.UIPageViewController,UIKit.UIInterfaceOrientation)" />
      <MemberSignature Language="F#" Value="static member GetSpineLocation : UIKit.IUIPageViewControllerDelegate * UIKit.UIPageViewController * UIKit.UIInterfaceOrientation -&gt; UIKit.UIPageViewControllerSpineLocation" Usage="UIKit.UIPageViewControllerDelegate_Extensions.GetSpineLocation (This, pageViewController, orientation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIPageViewControllerSpineLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="UIKit.UIPageViewController" />
        <Parameter Name="orientation" Type="UIKit.UIInterfaceOrientation" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="pageViewController">To be added.</param>
        <param name="orientation">To be added.</param>
        <summary>The location of the spine of the UIPageViewController.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedInterfaceOrientations">
      <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPageViewControllerDelegate_Extensions.SupportedInterfaceOrientations(UIKit.IUIPageViewControllerDelegate,UIKit.UIPageViewController)" />
      <MemberSignature Language="F#" Value="static member SupportedInterfaceOrientations : UIKit.IUIPageViewControllerDelegate * UIKit.UIPageViewController -&gt; UIKit.UIInterfaceOrientationMask" Usage="UIKit.UIPageViewControllerDelegate_Extensions.SupportedInterfaceOrientations (This, pageViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIInterfaceOrientationMask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="UIKit.UIPageViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="pageViewController">To be added.</param>
        <summary>The supported interface orientations.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillTransition">
      <MemberSignature Language="C#" Value="public static void WillTransition (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController, UIKit.UIViewController[] pendingViewControllers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillTransition(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController, class UIKit.UIViewController[] pendingViewControllers) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UIPageViewControllerDelegate_Extensions.WillTransition(UIKit.IUIPageViewControllerDelegate,UIKit.UIPageViewController,UIKit.UIViewController[])" />
      <MemberSignature Language="F#" Value="static member WillTransition : UIKit.IUIPageViewControllerDelegate * UIKit.UIPageViewController * UIKit.UIViewController[] -&gt; unit" Usage="UIKit.UIPageViewControllerDelegate_Extensions.WillTransition (This, pageViewController, pendingViewControllers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="UIKit.IUIPageViewControllerDelegate" RefType="this" />
        <Parameter Name="pageViewController" Type="UIKit.UIPageViewController" />
        <Parameter Name="pendingViewControllers" Type="UIKit.UIViewController[]" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="pageViewController">To be added.</param>
        <param name="pendingViewControllers">To be added.</param>
        <summary>Indicates that a transition is about to begin.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
