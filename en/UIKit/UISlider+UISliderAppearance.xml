<Type Name="UISlider+UISliderAppearance" FullName="UIKit.UISlider+UISliderAppearance">
  <TypeSignature Language="C#" Value="public class UISlider.UISliderAppearance : UIKit.UIControl.UIControlAppearance" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit UISlider/UISliderAppearance extends UIKit.UIControl/UIControlAppearance" />
  <TypeSignature Language="DocId" Value="T:UIKit.UISlider.UISliderAppearance" />
  <TypeSignature Language="F#" Value="type UISlider.UISliderAppearance = class&#xA;    inherit UIControl.UIControlAppearance" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UIKit.UIControl+UIControlAppearance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Appearance class for objects of type <see cref="T:UIKit.UISlider" />.</summary>
    <remarks>
      <para>This appearance class is a strongly typed subclass of UIAppearance that is intended to be used with objects of class <see cref="T:UIKit.UISlider" />.   You can obtain an instance to this class by either accessing the static <see cref="P:UIKit.UISlider.Appearance" /> property on the <see cref="T:UIKit.UISlider" /> or by calling the <see cref="M:UIKit.UISlider.AppearanceWhenContainedIn" /> to get a UIAppearance that is context sensitive.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal UISliderAppearance (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISlider.UISliderAppearance.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new UIKit.UISlider.UISliderAppearance : nativeint -&gt; UIKit.UISlider.UISliderAppearance" Usage="new UIKit.UISlider.UISliderAppearance handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTrackTintColor">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIColor MaximumTrackTintColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor MaximumTrackTintColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UISlider.UISliderAppearance.MaximumTrackTintColor" />
      <MemberSignature Language="F#" Value="member this.MaximumTrackTintColor : UIKit.UIColor with get, set" Usage="UIKit.UISlider.UISliderAppearance.MaximumTrackTintColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("maximumTrackTintColor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setMaximumTrackTintColor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("maximumTrackTintColor", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMaximumTrackTintColor:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color to apply as a tint to the standard maximum track images.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTrackImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage MaxTrackImage (UIKit.UIControlState forState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIImage MaxTrackImage(valuetype UIKit.UIControlState forState) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISlider.UISliderAppearance.MaxTrackImage(UIKit.UIControlState)" />
      <MemberSignature Language="F#" Value="abstract member MaxTrackImage : UIKit.UIControlState -&gt; UIKit.UIImage&#xA;override this.MaxTrackImage : UIKit.UIControlState -&gt; UIKit.UIImage" Usage="uISliderAppearance.MaxTrackImage forState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("maximumTrackImageForState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forState" Type="UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="forState">To be added.</param>
        <summary>The image to be used for the maximum track for the given UIControlState.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValueImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage MaxValueImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIImage MaxValueImage" />
      <MemberSignature Language="DocId" Value="P:UIKit.UISlider.UISliderAppearance.MaxValueImage" />
      <MemberSignature Language="F#" Value="member this.MaxValueImage : UIKit.UIImage with get, set" Usage="UIKit.UISlider.UISliderAppearance.MaxValueImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("maximumValueImage")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setMaximumValueImage:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("maximumValueImage", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMaximumValueImage:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The image to be used for the maximum value.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumTrackTintColor">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIColor MinimumTrackTintColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor MinimumTrackTintColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UISlider.UISliderAppearance.MinimumTrackTintColor" />
      <MemberSignature Language="F#" Value="member this.MinimumTrackTintColor : UIKit.UIColor with get, set" Usage="UIKit.UISlider.UISliderAppearance.MinimumTrackTintColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("minimumTrackTintColor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setMinimumTrackTintColor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("minimumTrackTintColor", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMinimumTrackTintColor:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color to apply as a tint to the standard minimum track images.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinTrackImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage MinTrackImage (UIKit.UIControlState forState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIImage MinTrackImage(valuetype UIKit.UIControlState forState) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISlider.UISliderAppearance.MinTrackImage(UIKit.UIControlState)" />
      <MemberSignature Language="F#" Value="abstract member MinTrackImage : UIKit.UIControlState -&gt; UIKit.UIImage&#xA;override this.MinTrackImage : UIKit.UIControlState -&gt; UIKit.UIImage" Usage="uISliderAppearance.MinTrackImage forState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("minimumTrackImageForState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forState" Type="UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="forState">To be added.</param>
        <summary>The image for the minimum track for the given UIControlState.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValueImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage MinValueImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIImage MinValueImage" />
      <MemberSignature Language="DocId" Value="P:UIKit.UISlider.UISliderAppearance.MinValueImage" />
      <MemberSignature Language="F#" Value="member this.MinValueImage : UIKit.UIImage with get, set" Usage="UIKit.UISlider.UISliderAppearance.MinValueImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("minimumValueImage")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setMinimumValueImage:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("minimumValueImage", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMinimumValueImage:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The image used for the minimum value.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxTrackImage">
      <MemberSignature Language="C#" Value="public virtual void SetMaxTrackImage (UIKit.UIImage image, UIKit.UIControlState forState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxTrackImage(class UIKit.UIImage image, valuetype UIKit.UIControlState forState) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISlider.UISliderAppearance.SetMaxTrackImage(UIKit.UIImage,UIKit.UIControlState)" />
      <MemberSignature Language="F#" Value="abstract member SetMaxTrackImage : UIKit.UIImage * UIKit.UIControlState -&gt; unit&#xA;override this.SetMaxTrackImage : UIKit.UIImage * UIKit.UIControlState -&gt; unit" Usage="uISliderAppearance.SetMaxTrackImage (image, forState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setMaximumTrackImage:forState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="UIKit.UIImage" />
        <Parameter Name="forState" Type="UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="forState">To be added.</param>
        <summary>Sets the image used for the maximum track image.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMinTrackImage">
      <MemberSignature Language="C#" Value="public virtual void SetMinTrackImage (UIKit.UIImage image, UIKit.UIControlState forState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinTrackImage(class UIKit.UIImage image, valuetype UIKit.UIControlState forState) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISlider.UISliderAppearance.SetMinTrackImage(UIKit.UIImage,UIKit.UIControlState)" />
      <MemberSignature Language="F#" Value="abstract member SetMinTrackImage : UIKit.UIImage * UIKit.UIControlState -&gt; unit&#xA;override this.SetMinTrackImage : UIKit.UIImage * UIKit.UIControlState -&gt; unit" Usage="uISliderAppearance.SetMinTrackImage (image, forState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setMinimumTrackImage:forState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="UIKit.UIImage" />
        <Parameter Name="forState" Type="UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="forState">To be added.</param>
        <summary>Sets the image used for the minimum track image.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThumbImage">
      <MemberSignature Language="C#" Value="public virtual void SetThumbImage (UIKit.UIImage image, UIKit.UIControlState forState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetThumbImage(class UIKit.UIImage image, valuetype UIKit.UIControlState forState) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISlider.UISliderAppearance.SetThumbImage(UIKit.UIImage,UIKit.UIControlState)" />
      <MemberSignature Language="F#" Value="abstract member SetThumbImage : UIKit.UIImage * UIKit.UIControlState -&gt; unit&#xA;override this.SetThumbImage : UIKit.UIImage * UIKit.UIControlState -&gt; unit" Usage="uISliderAppearance.SetThumbImage (image, forState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setThumbImage:forState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="UIKit.UIImage" />
        <Parameter Name="forState" Type="UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="image">To be added.</param>
        <param name="forState">To be added.</param>
        <summary>Sets the "thumb image" for the given UIControlState.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbImage">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIImage ThumbImage (UIKit.UIControlState forState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.UIImage ThumbImage(valuetype UIKit.UIControlState forState) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.UISlider.UISliderAppearance.ThumbImage(UIKit.UIControlState)" />
      <MemberSignature Language="F#" Value="abstract member ThumbImage : UIKit.UIControlState -&gt; UIKit.UIImage&#xA;override this.ThumbImage : UIKit.UIControlState -&gt; UIKit.UIImage" Usage="uISliderAppearance.ThumbImage forState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("thumbImageForState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forState" Type="UIKit.UIControlState" />
      </Parameters>
      <Docs>
        <param name="forState">To be added.</param>
        <summary>The image used to mark the current location.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbTintColor">
      <MemberSignature Language="C#" Value="public virtual UIKit.UIColor ThumbTintColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UIColor ThumbTintColor" />
      <MemberSignature Language="DocId" Value="P:UIKit.UISlider.UISliderAppearance.ThumbTintColor" />
      <MemberSignature Language="F#" Value="member this.ThumbTintColor : UIKit.UIColor with get, set" Usage="UIKit.UISlider.UISliderAppearance.ThumbTintColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("thumbTintColor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setThumbTintColor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("thumbTintColor", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setThumbTintColor:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color used to tint standard thumb images.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
