<Type Name="UIApplicationState" FullName="UIKit.UIApplicationState">
  <TypeSignature Language="C#" Value="public enum UIApplicationState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UIApplicationState extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 4, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Native</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An enumeration indicating the current application state.</summary>
    <remarks>
      <para> 
	When the user taps on the app icon, the app briefly
	goes through a transitional state of
	UIApplicationState.Inactive on its way to becoming
	UIApplicationState.Active. This is where the app gets
	itself ready to display to the user.
      </para>
      <para>
	When the app is open, the application state is UIApplicationState.Active.
      </para>
      <para>
	If the user presses the home button, and is returned to
	the springboard (home screen), or the application is
	interrupted by something, such as a phone call, the
	application state transitions back to
	UIApplicationState.Inactive.
      </para>
      <para> 
	For the application state of your app to become
	UIApplicationState.Background, your application would have
	to register for a background process. 
      </para>
      <para>
	Reference: http://stackoverflow.com/questions/7937400/need-clarification-about-uiapplicationstate
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="Active" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype UIKit.UIApplicationState Active = int64(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The application is currently active and on the foreground</summary>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="Background" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype UIKit.UIApplicationState Background = int64(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The application is executing in the background.   It does not receive events.</summary>
      </Docs>
    </Member>
    <Member MemberName="Inactive">
      <MemberSignature Language="C#" Value="Inactive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype UIKit.UIApplicationState Inactive = int64(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The application is in the foreground but not receiving events.   The application is placed in this state when moving in and out of the foreground state and also when the application is interrupted by a system notification.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
