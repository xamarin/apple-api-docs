<Type Name="IUITableViewDropCoordinator" FullName="UIKit.IUITableViewDropCoordinator">
  <TypeSignature Language="C#" Value="public interface IUITableViewDropCoordinator : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUITableViewDropCoordinator implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:UIKit.IUITableViewDropCoordinator" />
  <TypeSignature Language="F#" Value="type IUITableViewDropCoordinator = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="UITableViewDropCoordinator", WrapperType=typeof(UIKit.UITableViewDropCoordinatorWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="items", IsProperty=true, IsRequired=true, IsStatic=false, Name="Items", PropertyType=typeof(UIKit.IUITableViewDropItem[]), Selector="items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="destinationIndexPath", IsProperty=true, IsRequired=true, IsStatic=false, Name="DestinationIndexPath", PropertyType=typeof(Foundation.NSIndexPath), Selector="destinationIndexPath")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="proposal", IsProperty=true, IsRequired=true, IsStatic=false, Name="Proposal", PropertyType=typeof(UIKit.UITableViewDropProposal), Selector="proposal")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="session", IsProperty=true, IsRequired=true, IsStatic=false, Name="Session", PropertyType=typeof(UIKit.IUIDropSession), Selector="session")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DropItemToPlaceholder", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(UIKit.UIDragItem), typeof(UIKit.UITableViewDropPlaceholder) }, ReturnType=typeof(UIKit.IUITableViewDropPlaceholderContext), Selector="dropItem:toPlaceholder:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DropItemToRow", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(UIKit.UIDragItem), typeof(Foundation.NSIndexPath) }, ReturnType=typeof(UIKit.IUIDragAnimating), Selector="dropItem:toRowAtIndexPath:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DropItemIntoRow", ParameterByRef=new System.Boolean[] { false, false, false }, ParameterType=new System.Type[] { typeof(UIKit.UIDragItem), typeof(Foundation.NSIndexPath), typeof(CoreGraphics.CGRect) }, ReturnType=typeof(UIKit.IUIDragAnimating), Selector="dropItem:intoRowAtIndexPath:rect:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DropItemToTarget", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(UIKit.UIDragItem), typeof(UIKit.UIDragPreviewTarget) }, ReturnType=typeof(UIKit.IUIDragAnimating), Selector="dropItem:toTarget:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>System-created object used to coordinate drop actions with a table view.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DestinationIndexPath">
      <MemberSignature Language="C#" Value="public Foundation.NSIndexPath DestinationIndexPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSIndexPath DestinationIndexPath" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITableViewDropCoordinator.DestinationIndexPath" />
      <MemberSignature Language="F#" Value="member this.DestinationIndexPath : Foundation.NSIndexPath" Usage="UIKit.IUITableViewDropCoordinator.DestinationIndexPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("destinationIndexPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSIndexPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the index path for the insertion.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropItemIntoRow">
      <MemberSignature Language="C#" Value="public UIKit.IUIDragAnimating DropItemIntoRow (UIKit.UIDragItem dragItem, Foundation.NSIndexPath indexPath, CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.IUIDragAnimating DropItemIntoRow(class UIKit.UIDragItem dragItem, class Foundation.NSIndexPath indexPath, valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITableViewDropCoordinator.DropItemIntoRow(UIKit.UIDragItem,Foundation.NSIndexPath,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member DropItemIntoRow : UIKit.UIDragItem * Foundation.NSIndexPath * CoreGraphics.CGRect -&gt; UIKit.IUIDragAnimating" Usage="iUITableViewDropCoordinator.DropItemIntoRow (dragItem, indexPath, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dropItem:intoRowAtIndexPath:rect:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIDragAnimating</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragItem" Type="UIKit.UIDragItem" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="dragItem">The item to drop.</param>
        <param name="indexPath">The index path of the row into which to drop the item.</param>
        <param name="rect">The rectangle into which to animate the drop.</param>
        <summary>Drops the drag item into the specified rectangle, in the coordinate system of the item at the specified item index path.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropItemToPlaceholder">
      <MemberSignature Language="C#" Value="public UIKit.IUITableViewDropPlaceholderContext DropItemToPlaceholder (UIKit.UIDragItem dragItem, UIKit.UITableViewDropPlaceholder placeholder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.IUITableViewDropPlaceholderContext DropItemToPlaceholder(class UIKit.UIDragItem dragItem, class UIKit.UITableViewDropPlaceholder placeholder) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITableViewDropCoordinator.DropItemToPlaceholder(UIKit.UIDragItem,UIKit.UITableViewDropPlaceholder)" />
      <MemberSignature Language="F#" Value="abstract member DropItemToPlaceholder : UIKit.UIDragItem * UIKit.UITableViewDropPlaceholder -&gt; UIKit.IUITableViewDropPlaceholderContext" Usage="iUITableViewDropCoordinator.DropItemToPlaceholder (dragItem, placeholder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dropItem:toPlaceholder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUITableViewDropPlaceholderContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragItem" Type="UIKit.UIDragItem" />
        <Parameter Name="placeholder" Type="UIKit.UITableViewDropPlaceholder" />
      </Parameters>
      <Docs>
        <param name="dragItem">The item to drop.</param>
        <param name="placeholder">The placeholder into which to drop the item.</param>
        <summary>Drops the drag item to the specified placeholder.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropItemToRow">
      <MemberSignature Language="C#" Value="public UIKit.IUIDragAnimating DropItemToRow (UIKit.UIDragItem dragItem, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.IUIDragAnimating DropItemToRow(class UIKit.UIDragItem dragItem, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITableViewDropCoordinator.DropItemToRow(UIKit.UIDragItem,Foundation.NSIndexPath)" />
      <MemberSignature Language="F#" Value="abstract member DropItemToRow : UIKit.UIDragItem * Foundation.NSIndexPath -&gt; UIKit.IUIDragAnimating" Usage="iUITableViewDropCoordinator.DropItemToRow (dragItem, indexPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dropItem:toRowAtIndexPath:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIDragAnimating</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragItem" Type="UIKit.UIDragItem" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="dragItem">The item to drop.</param>
        <param name="indexPath">The index path at which to insert the item.</param>
        <summary>Drops the drag item to the row at the specified index path.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropItemToTarget">
      <MemberSignature Language="C#" Value="public UIKit.IUIDragAnimating DropItemToTarget (UIKit.UIDragItem dragItem, UIKit.UIDragPreviewTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class UIKit.IUIDragAnimating DropItemToTarget(class UIKit.UIDragItem dragItem, class UIKit.UIDragPreviewTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:UIKit.IUITableViewDropCoordinator.DropItemToTarget(UIKit.UIDragItem,UIKit.UIDragPreviewTarget)" />
      <MemberSignature Language="F#" Value="abstract member DropItemToTarget : UIKit.UIDragItem * UIKit.UIDragPreviewTarget -&gt; UIKit.IUIDragAnimating" Usage="iUITableViewDropCoordinator.DropItemToTarget (dragItem, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("dropItem:toTarget:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIDragAnimating</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragItem" Type="UIKit.UIDragItem" />
        <Parameter Name="target" Type="UIKit.UIDragPreviewTarget" />
      </Parameters>
      <Docs>
        <param name="dragItem">The item to drop.</param>
        <param name="target">The drop target.</param>
        <summary>Drops the drag item to the specified target.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public UIKit.IUITableViewDropItem[] Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.IUITableViewDropItem[] Items" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITableViewDropCoordinator.Items" />
      <MemberSignature Language="F#" Value="member this.Items : UIKit.IUITableViewDropItem[]" Usage="UIKit.IUITableViewDropCoordinator.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("items")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUITableViewDropItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the drag items.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proposal">
      <MemberSignature Language="C#" Value="public UIKit.UITableViewDropProposal Proposal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.UITableViewDropProposal Proposal" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITableViewDropCoordinator.Proposal" />
      <MemberSignature Language="F#" Value="member this.Proposal : UIKit.UITableViewDropProposal" Usage="UIKit.IUITableViewDropCoordinator.Proposal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("proposal")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.UITableViewDropProposal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the drop proposal.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public UIKit.IUIDropSession Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class UIKit.IUIDropSession Session" />
      <MemberSignature Language="DocId" Value="P:UIKit.IUITableViewDropCoordinator.Session" />
      <MemberSignature Language="F#" Value="member this.Session : UIKit.IUIDropSession" Usage="UIKit.IUITableViewDropCoordinator.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("session")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UIKit.IUIDropSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the drop session.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
