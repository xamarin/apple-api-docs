<Type Name="CBPeripheralManagerDelegate" FullName="CoreBluetooth.CBPeripheralManagerDelegate">
  <TypeSignature Language="C#" Value="public abstract class CBPeripheralManagerDelegate : Foundation.NSObject, CoreBluetooth.ICBPeripheralManagerDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CBPeripheralManagerDelegate extends Foundation.NSObject implements class CoreBluetooth.ICBPeripheralManagerDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreBluetooth.CBPeripheralManagerDelegate" />
  <TypeSignature Language="F#" Value="type CBPeripheralManagerDelegate = class&#xA;    inherit NSObject&#xA;    interface ICBPeripheralManagerDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CoreBluetooth.ICBPeripheralManagerDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("CBPeripheralManagerDelegate", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate object for <see cref="T:Corebluetooth.CBPeripheralManager" />. Adds methods for events relating to availability, publishing, advertising, and subscription.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/CoreBluetooth/Reference/CBPeripheralManagerDelegate_Protocol/index.html">Apple documentation for <c>CBPeripheralManagerDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CBPeripheralManagerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CBPeripheralManagerDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreBluetooth.CBPeripheralManagerDelegate : Foundation.NSObjectFlag -&gt; CoreBluetooth.CBPeripheralManagerDelegate" Usage="new CoreBluetooth.CBPeripheralManagerDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CBPeripheralManagerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreBluetooth.CBPeripheralManagerDelegate : nativeint -&gt; CoreBluetooth.CBPeripheralManagerDelegate" Usage="new CoreBluetooth.CBPeripheralManagerDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvertisingStarted">
      <MemberSignature Language="C#" Value="public virtual void AdvertisingStarted (CoreBluetooth.CBPeripheralManager peripheral, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvertisingStarted(class CoreBluetooth.CBPeripheralManager peripheral, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.AdvertisingStarted(CoreBluetooth.CBPeripheralManager,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member AdvertisingStarted : CoreBluetooth.CBPeripheralManager * Foundation.NSError -&gt; unit&#xA;override this.AdvertisingStarted : CoreBluetooth.CBPeripheralManager * Foundation.NSError -&gt; unit" Usage="cBPeripheralManagerDelegate.AdvertisingStarted (peripheral, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManagerDidStartAdvertising:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacteristicSubscribed">
      <MemberSignature Language="C#" Value="public virtual void CharacteristicSubscribed (CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBCentral central, CoreBluetooth.CBCharacteristic characteristic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CharacteristicSubscribed(class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBCentral central, class CoreBluetooth.CBCharacteristic characteristic) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.CharacteristicSubscribed(CoreBluetooth.CBPeripheralManager,CoreBluetooth.CBCentral,CoreBluetooth.CBCharacteristic)" />
      <MemberSignature Language="F#" Value="abstract member CharacteristicSubscribed : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBCentral * CoreBluetooth.CBCharacteristic -&gt; unit&#xA;override this.CharacteristicSubscribed : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBCentral * CoreBluetooth.CBCharacteristic -&gt; unit" Usage="cBPeripheralManagerDelegate.CharacteristicSubscribed (peripheral, central, characteristic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:central:didSubscribeToCharacteristic:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="central" Type="CoreBluetooth.CBCentral" />
        <Parameter Name="characteristic" Type="CoreBluetooth.CBCharacteristic" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="central">To be added.</param>
        <param name="characteristic">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacteristicUnsubscribed">
      <MemberSignature Language="C#" Value="public virtual void CharacteristicUnsubscribed (CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBCentral central, CoreBluetooth.CBCharacteristic characteristic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CharacteristicUnsubscribed(class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBCentral central, class CoreBluetooth.CBCharacteristic characteristic) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.CharacteristicUnsubscribed(CoreBluetooth.CBPeripheralManager,CoreBluetooth.CBCentral,CoreBluetooth.CBCharacteristic)" />
      <MemberSignature Language="F#" Value="abstract member CharacteristicUnsubscribed : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBCentral * CoreBluetooth.CBCharacteristic -&gt; unit&#xA;override this.CharacteristicUnsubscribed : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBCentral * CoreBluetooth.CBCharacteristic -&gt; unit" Usage="cBPeripheralManagerDelegate.CharacteristicUnsubscribed (peripheral, central, characteristic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:central:didUnsubscribeFromCharacteristic:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="central" Type="CoreBluetooth.CBCentral" />
        <Parameter Name="characteristic" Type="CoreBluetooth.CBCharacteristic" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="central">To be added.</param>
        <param name="characteristic">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidOpenL2CapChannel">
      <MemberSignature Language="C#" Value="public virtual void DidOpenL2CapChannel (CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBL2CapChannel channel, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidOpenL2CapChannel(class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBL2CapChannel channel, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.DidOpenL2CapChannel(CoreBluetooth.CBPeripheralManager,CoreBluetooth.CBL2CapChannel,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidOpenL2CapChannel : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBL2CapChannel * Foundation.NSError -&gt; unit&#xA;override this.DidOpenL2CapChannel : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBL2CapChannel * Foundation.NSError -&gt; unit" Usage="cBPeripheralManagerDelegate.DidOpenL2CapChannel (peripheral, channel, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:didOpenL2CAPChannel:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="channel" Type="CoreBluetooth.CBL2CapChannel" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="channel">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidPublishL2CapChannel">
      <MemberSignature Language="C#" Value="public virtual void DidPublishL2CapChannel (CoreBluetooth.CBPeripheralManager peripheral, ushort psm, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidPublishL2CapChannel(class CoreBluetooth.CBPeripheralManager peripheral, unsigned int16 psm, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.DidPublishL2CapChannel(CoreBluetooth.CBPeripheralManager,System.UInt16,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidPublishL2CapChannel : CoreBluetooth.CBPeripheralManager * uint16 * Foundation.NSError -&gt; unit&#xA;override this.DidPublishL2CapChannel : CoreBluetooth.CBPeripheralManager * uint16 * Foundation.NSError -&gt; unit" Usage="cBPeripheralManagerDelegate.DidPublishL2CapChannel (peripheral, psm, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:didPublishL2CAPChannel:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="psm" Type="System.UInt16" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="psm">To be added.</param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUnpublishL2CapChannel">
      <MemberSignature Language="C#" Value="public virtual void DidUnpublishL2CapChannel (CoreBluetooth.CBPeripheralManager peripheral, ushort psm, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUnpublishL2CapChannel(class CoreBluetooth.CBPeripheralManager peripheral, unsigned int16 psm, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.DidUnpublishL2CapChannel(CoreBluetooth.CBPeripheralManager,System.UInt16,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidUnpublishL2CapChannel : CoreBluetooth.CBPeripheralManager * uint16 * Foundation.NSError -&gt; unit&#xA;override this.DidUnpublishL2CapChannel : CoreBluetooth.CBPeripheralManager * uint16 * Foundation.NSError -&gt; unit" Usage="cBPeripheralManagerDelegate.DidUnpublishL2CapChannel (peripheral, psm, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:didUnpublishL2CAPChannel:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="psm" Type="System.UInt16" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="psm">To be added.</param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadRequestReceived">
      <MemberSignature Language="C#" Value="public virtual void ReadRequestReceived (CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBATTRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadRequestReceived(class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBATTRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.ReadRequestReceived(CoreBluetooth.CBPeripheralManager,CoreBluetooth.CBATTRequest)" />
      <MemberSignature Language="F#" Value="abstract member ReadRequestReceived : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBATTRequest -&gt; unit&#xA;override this.ReadRequestReceived : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBATTRequest -&gt; unit" Usage="cBPeripheralManagerDelegate.ReadRequestReceived (peripheral, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:didReceiveReadRequest:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="request" Type="CoreBluetooth.CBATTRequest" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadyToUpdateSubscribers">
      <MemberSignature Language="C#" Value="public virtual void ReadyToUpdateSubscribers (CoreBluetooth.CBPeripheralManager peripheral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadyToUpdateSubscribers(class CoreBluetooth.CBPeripheralManager peripheral) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.ReadyToUpdateSubscribers(CoreBluetooth.CBPeripheralManager)" />
      <MemberSignature Language="F#" Value="abstract member ReadyToUpdateSubscribers : CoreBluetooth.CBPeripheralManager -&gt; unit&#xA;override this.ReadyToUpdateSubscribers : CoreBluetooth.CBPeripheralManager -&gt; unit" Usage="cBPeripheralManagerDelegate.ReadyToUpdateSubscribers peripheral" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManagerIsReadyToUpdateSubscribers:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceAdded">
      <MemberSignature Language="C#" Value="public virtual void ServiceAdded (CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBService service, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ServiceAdded(class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBService service, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.ServiceAdded(CoreBluetooth.CBPeripheralManager,CoreBluetooth.CBService,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member ServiceAdded : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBService * Foundation.NSError -&gt; unit&#xA;override this.ServiceAdded : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBService * Foundation.NSError -&gt; unit" Usage="cBPeripheralManagerDelegate.ServiceAdded (peripheral, service, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:didAddService:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="service" Type="CoreBluetooth.CBService" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="service">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateUpdated">
      <MemberSignature Language="C#" Value="public abstract void StateUpdated (CoreBluetooth.CBPeripheralManager peripheral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StateUpdated(class CoreBluetooth.CBPeripheralManager peripheral) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.StateUpdated(CoreBluetooth.CBPeripheralManager)" />
      <MemberSignature Language="F#" Value="abstract member StateUpdated : CoreBluetooth.CBPeripheralManager -&gt; unit" Usage="cBPeripheralManagerDelegate.StateUpdated peripheral" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CoreBluetooth.ICBPeripheralManagerDelegate.StateUpdated(CoreBluetooth.CBPeripheralManager)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManagerDidUpdateState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillRestoreState">
      <MemberSignature Language="C#" Value="public virtual void WillRestoreState (CoreBluetooth.CBPeripheralManager peripheral, Foundation.NSDictionary dict);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillRestoreState(class CoreBluetooth.CBPeripheralManager peripheral, class Foundation.NSDictionary dict) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.WillRestoreState(CoreBluetooth.CBPeripheralManager,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member WillRestoreState : CoreBluetooth.CBPeripheralManager * Foundation.NSDictionary -&gt; unit&#xA;override this.WillRestoreState : CoreBluetooth.CBPeripheralManager * Foundation.NSDictionary -&gt; unit" Usage="cBPeripheralManagerDelegate.WillRestoreState (peripheral, dict)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:willRestoreState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="dict" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="dict">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRequestsReceived">
      <MemberSignature Language="C#" Value="public virtual void WriteRequestsReceived (CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBATTRequest[] requests);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRequestsReceived(class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBATTRequest[] requests) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralManagerDelegate.WriteRequestsReceived(CoreBluetooth.CBPeripheralManager,CoreBluetooth.CBATTRequest[])" />
      <MemberSignature Language="F#" Value="abstract member WriteRequestsReceived : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBATTRequest[] -&gt; unit&#xA;override this.WriteRequestsReceived : CoreBluetooth.CBPeripheralManager * CoreBluetooth.CBATTRequest[] -&gt; unit" Usage="cBPeripheralManagerDelegate.WriteRequestsReceived (peripheral, requests)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralManager:didReceiveWriteRequests:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheralManager" />
        <Parameter Name="requests" Type="CoreBluetooth.CBATTRequest[]" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="requests">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
