<Type Name="CBUUID" FullName="CoreBluetooth.CBUUID">
  <TypeSignature Language="C#" Value="public class CBUUID : Foundation.NSObject, Foundation.INSCopying, IDisposable, IEquatable&lt;CoreBluetooth.CBUUID&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CBUUID extends Foundation.NSObject implements class Foundation.INSCopying, class ObjCRuntime.INativeObject, class System.IDisposable, class System.IEquatable`1&lt;class CoreBluetooth.CBUUID&gt;" />
  <TypeSignature Language="DocId" Value="T:CoreBluetooth.CBUUID" />
  <TypeSignature Language="F#" Value="type CBUUID = class&#xA;    inherit NSObject&#xA;    interface IEquatable&lt;CBUUID&gt;&#xA;    interface INSCopying&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;CoreBluetooth.CBUUID&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("CBUUID", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Universal Unique Identifiers for the Bluetooth stack.</summary>
    <remarks>
    </remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/CoreBluetooth/Reference/CBUUID_Class/index.html">Apple documentation for <c>CBUUID</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CBUUID (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreBluetooth.CBUUID : Foundation.NSObjectFlag -&gt; CoreBluetooth.CBUUID" Usage="new CoreBluetooth.CBUUID t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CBUUID (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreBluetooth.CBUUID : nativeint -&gt; CoreBluetooth.CBUUID" Usage="new CoreBluetooth.CBUUID handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppearanceString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString AppearanceString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString AppearanceString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.AppearanceString" />
      <MemberSignature Language="F#" Value="member this.AppearanceString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.AppearanceString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDAppearanceString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. </summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacteristicAggregateFormatString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString CharacteristicAggregateFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString CharacteristicAggregateFormatString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.CharacteristicAggregateFormatString" />
      <MemberSignature Language="F#" Value="member this.CharacteristicAggregateFormatString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.CharacteristicAggregateFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDCharacteristicAggregateFormatString", "CoreBluetooth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDCharacteristicAggregateFormatString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacteristicExtendedPropertiesString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString CharacteristicExtendedPropertiesString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString CharacteristicExtendedPropertiesString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.CharacteristicExtendedPropertiesString" />
      <MemberSignature Language="F#" Value="member this.CharacteristicExtendedPropertiesString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.CharacteristicExtendedPropertiesString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDCharacteristicExtendedPropertiesString", "CoreBluetooth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDCharacteristicExtendedPropertiesString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacteristicFormatString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString CharacteristicFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString CharacteristicFormatString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.CharacteristicFormatString" />
      <MemberSignature Language="F#" Value="member this.CharacteristicFormatString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.CharacteristicFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDCharacteristicFormatString", "CoreBluetooth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDCharacteristicFormatString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacteristicUserDescriptionString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString CharacteristicUserDescriptionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString CharacteristicUserDescriptionString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.CharacteristicUserDescriptionString" />
      <MemberSignature Language="F#" Value="member this.CharacteristicUserDescriptionString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.CharacteristicUserDescriptionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDCharacteristicUserDescriptionString", "CoreBluetooth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDCharacteristicUserDescriptionString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacteristicValidRangeString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString CharacteristicValidRangeString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString CharacteristicValidRangeString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.CharacteristicValidRangeString" />
      <MemberSignature Language="F#" Value="member this.CharacteristicValidRangeString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.CharacteristicValidRangeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDCharacteristicValidRangeString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDCharacteristicValidRangeString</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="CoreBluetooth.CBUUID.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCharacteristicConfigurationString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ClientCharacteristicConfigurationString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ClientCharacteristicConfigurationString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.ClientCharacteristicConfigurationString" />
      <MemberSignature Language="F#" Value="member this.ClientCharacteristicConfigurationString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.ClientCharacteristicConfigurationString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDClientCharacteristicConfigurationString", "CoreBluetooth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDClientCharacteristicConfigurationString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="cBUUID.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">Zone to use to allocate this object, or null to use the default zone.</param>
        <summary>Performs a copy of the underlying Objective-C object.</summary>
        <returns>This method performs a copy of the underlying Objective-C object state and returns a new instance of it.  It does not actually try to replicate any managed state.</returns>
        <remarks>Implementation of the INSCopyable interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData Data" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.Data" />
      <MemberSignature Language="F#" Value="member this.Data : Foundation.NSData" Usage="CoreBluetooth.CBUUID.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceNameString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString DeviceNameString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString DeviceNameString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.DeviceNameString" />
      <MemberSignature Language="F#" Value="member this.DeviceNameString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.DeviceNameString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDDeviceNameString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDDeviceNameString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (CoreBluetooth.CBUUID obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class CoreBluetooth.CBUUID obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.Equals(CoreBluetooth.CBUUID)" />
      <MemberSignature Language="F#" Value="override this.Equals : CoreBluetooth.CBUUID -&gt; bool" Usage="cBUUID.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="CoreBluetooth.CBUUID" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.Equals(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cBUUID.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBytes">
      <MemberSignature Language="C#" Value="public static CoreBluetooth.CBUUID FromBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreBluetooth.CBUUID FromBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.FromBytes(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member FromBytes : byte[] -&gt; CoreBluetooth.CBUUID" Usage="CoreBluetooth.CBUUID.FromBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreBluetooth.CBUUID</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">Array of 2, 4 or 16 bytes containing the universal unique identifier.</param>
        <summary>Creates a new CBUIID from the specified array of bytes.</summary>
        <returns>New instance;   Throws an exception if the bytes array is null or is not 2, 4 or 16 bytes.</returns>
        <remarks>
	  Creates a CBUUID from the specified array of bytes.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCFUUID">
      <MemberSignature Language="C#" Value="public static CoreBluetooth.CBUUID FromCFUUID (IntPtr theUUID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreBluetooth.CBUUID FromCFUUID(native int theUUID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.FromCFUUID(System.IntPtr)" />
      <MemberSignature Language="F#" Value="static member FromCFUUID : nativeint -&gt; CoreBluetooth.CBUUID" Usage="CoreBluetooth.CBUUID.FromCFUUID theUUID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("UUIDWithCFUUID:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreBluetooth.CBUUID</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theUUID" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="theUUID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static CoreBluetooth.CBUUID FromData (Foundation.NSData theData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreBluetooth.CBUUID FromData(class Foundation.NSData theData) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.FromData(Foundation.NSData)" />
      <MemberSignature Language="F#" Value="static member FromData : Foundation.NSData -&gt; CoreBluetooth.CBUUID" Usage="CoreBluetooth.CBUUID.FromData theData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("UUIDWithData:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreBluetooth.CBUUID</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="theData">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromNSUuid">
      <MemberSignature Language="C#" Value="public static CoreBluetooth.CBUUID FromNSUuid (Foundation.NSUuid theUUID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreBluetooth.CBUUID FromNSUuid(class Foundation.NSUuid theUUID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.FromNSUuid(Foundation.NSUuid)" />
      <MemberSignature Language="F#" Value="static member FromNSUuid : Foundation.NSUuid -&gt; CoreBluetooth.CBUUID" Usage="CoreBluetooth.CBUUID.FromNSUuid theUUID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("UUIDWithNSUUID:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreBluetooth.CBUUID</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theUUID" Type="Foundation.NSUuid" />
      </Parameters>
      <Docs>
        <param name="theUUID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPartial">
      <MemberSignature Language="C#" Value="public static CoreBluetooth.CBUUID FromPartial (ushort servicePart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreBluetooth.CBUUID FromPartial(unsigned int16 servicePart) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.FromPartial(System.UInt16)" />
      <MemberSignature Language="F#" Value="static member FromPartial : uint16 -&gt; CoreBluetooth.CBUUID" Usage="CoreBluetooth.CBUUID.FromPartial servicePart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreBluetooth.CBUUID</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicePart" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="servicePart">16-bit service part.</param>
        <summary>Creates a new CBUUID for a commonly used CoreBluetooth service.</summary>
        <returns>
        </returns>
        <remarks>
          <para>
	    While CBUUID objects are 128-bit long, many common services are created just by specifying using 16 bits.
	  </para>
          <para>
	    For example, if the service part is (ushort)1234, then the CBUUID becomes: (CBUUID)00001234-0000-1000-8000-00805f9b34fb.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static CoreBluetooth.CBUUID FromString (string theString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreBluetooth.CBUUID FromString(string theString) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.FromString(System.String)" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; CoreBluetooth.CBUUID" Usage="CoreBluetooth.CBUUID.FromString theString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("UUIDWithString:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreBluetooth.CBUUID</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="theString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericAccessProfileString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString GenericAccessProfileString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString GenericAccessProfileString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.GenericAccessProfileString" />
      <MemberSignature Language="F#" Value="member this.GenericAccessProfileString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.GenericAccessProfileString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDGenericAccessProfileString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDGenericAccessProfileString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericAttributeProfileString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString GenericAttributeProfileString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString GenericAttributeProfileString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.GenericAttributeProfileString" />
      <MemberSignature Language="F#" Value="member this.GenericAttributeProfileString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.GenericAttributeProfileString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDGenericAttributeProfileString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDGenericAttributeProfileString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.GetHashCode" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cBUUID.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a hash code for the current instance.</summary>
        <returns>A int containing the hash code for this instance.</returns>
        <remarks>The algorithm used to generate the hash code is unspecified.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L2CapPsmCharacteristicString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString L2CapPsmCharacteristicString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString L2CapPsmCharacteristicString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.L2CapPsmCharacteristicString" />
      <MemberSignature Language="F#" Value="member this.L2CapPsmCharacteristicString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.L2CapPsmCharacteristicString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDL2CAPPSMCharacteristicString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (CoreBluetooth.CBUUID a, CoreBluetooth.CBUUID b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class CoreBluetooth.CBUUID a, class CoreBluetooth.CBUUID b) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.op_Equality(CoreBluetooth.CBUUID,CoreBluetooth.CBUUID)" />
      <MemberSignature Language="F#" Value="static member ( = ) : CoreBluetooth.CBUUID * CoreBluetooth.CBUUID -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CoreBluetooth.CBUUID" />
        <Parameter Name="b" Type="CoreBluetooth.CBUUID" />
      </Parameters>
      <Docs>
        <param name="a">First CBUUID to compare.</param>
        <param name="b">Second CBUUID to compare.</param>
        <summary>Determines if two CBUUID are equal.</summary>
        <returns>
        </returns>
        <remarks>True if they are equal (either because they are the same object, or because they represent the same UUID value).</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (CoreBluetooth.CBUUID a, CoreBluetooth.CBUUID b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class CoreBluetooth.CBUUID a, class CoreBluetooth.CBUUID b) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.op_Inequality(CoreBluetooth.CBUUID,CoreBluetooth.CBUUID)" />
      <MemberSignature Language="F#" Value="static member op_Inequality : CoreBluetooth.CBUUID * CoreBluetooth.CBUUID -&gt; bool" Usage="CoreBluetooth.CBUUID.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CoreBluetooth.CBUUID" />
        <Parameter Name="b" Type="CoreBluetooth.CBUUID" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeripheralPreferredConnectionParametersString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString PeripheralPreferredConnectionParametersString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString PeripheralPreferredConnectionParametersString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.PeripheralPreferredConnectionParametersString" />
      <MemberSignature Language="F#" Value="member this.PeripheralPreferredConnectionParametersString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.PeripheralPreferredConnectionParametersString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDPeripheralPreferredConnectionParametersString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDPeripheralPreferredConnectionParametersString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeripheralPrivacyFlagString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString PeripheralPrivacyFlagString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString PeripheralPrivacyFlagString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.PeripheralPrivacyFlagString" />
      <MemberSignature Language="F#" Value="member this.PeripheralPrivacyFlagString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.PeripheralPrivacyFlagString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDPeripheralPrivacyFlagString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDPeripheralPrivacyFlagString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReconnectionAddressString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ReconnectionAddressString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ReconnectionAddressString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.ReconnectionAddressString" />
      <MemberSignature Language="F#" Value="member this.ReconnectionAddressString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.ReconnectionAddressString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDReconnectionAddressString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDReconnectionAddressString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerCharacteristicConfigurationString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ServerCharacteristicConfigurationString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ServerCharacteristicConfigurationString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.ServerCharacteristicConfigurationString" />
      <MemberSignature Language="F#" Value="member this.ServerCharacteristicConfigurationString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.ServerCharacteristicConfigurationString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDServerCharacteristicConfigurationString", "CoreBluetooth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDServerCharacteristicConfigurationString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceChangedString">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ServiceChangedString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ServiceChangedString" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.ServiceChangedString" />
      <MemberSignature Language="F#" Value="member this.ServiceChangedString : Foundation.NSString" Usage="CoreBluetooth.CBUUID.ServiceChangedString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("CBUUIDServiceChangedString", "CoreBluetooth")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant CBUUIDServiceChangedString</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cBUUID.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of the value of the current instance.</summary>
        <returns>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool fullUuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool fullUuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBUUID.ToString(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="cBUUID.ToString fullUuid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullUuid" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fullUuid">If true, this renders 16-bit UUIS as a 128-bit constant, otherwise they are rendered as a 16-bit one.   128-bit UUIDS are always rendered as 128-bit values.</param>
        <summary>Returns a string representation of the value of the current instance.</summary>
        <returns>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uuid">
      <MemberSignature Language="C#" Value="public virtual string Uuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uuid" />
      <MemberSignature Language="DocId" Value="P:CoreBluetooth.CBUUID.Uuid" />
      <MemberSignature Language="F#" Value="member this.Uuid : string" Usage="CoreBluetooth.CBUUID.Uuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("UUIDString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
