<Type Name="CBPeripheralDelegate" FullName="CoreBluetooth.CBPeripheralDelegate">
  <TypeSignature Language="C#" Value="public class CBPeripheralDelegate : Foundation.NSObject, CoreBluetooth.ICBPeripheralDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CBPeripheralDelegate extends Foundation.NSObject implements class CoreBluetooth.ICBPeripheralDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreBluetooth.CBPeripheralDelegate" />
  <TypeSignature Language="F#" Value="type CBPeripheralDelegate = class&#xA;    inherit NSObject&#xA;    interface ICBPeripheralDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CoreBluetooth.ICBPeripheralDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("CBPeripheralDelegate", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate object for <see cref="T:CoreBluetooth.CBPeripheral" />. Provides methods called on events relating to discovery, exploration, and interaction with a remote peripheral.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/CoreBluetooth/Reference/CBPeripheralDelegate_Protocol/index.html">Apple documentation for <c>CBPeripheralDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CBPeripheralDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CBPeripheralDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreBluetooth.CBPeripheralDelegate : Foundation.NSObjectFlag -&gt; CoreBluetooth.CBPeripheralDelegate" Usage="new CoreBluetooth.CBPeripheralDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CBPeripheralDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreBluetooth.CBPeripheralDelegate : nativeint -&gt; CoreBluetooth.CBPeripheralDelegate" Usage="new CoreBluetooth.CBPeripheralDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidOpenL2CapChannel">
      <MemberSignature Language="C#" Value="public virtual void DidOpenL2CapChannel (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBL2CapChannel channel, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidOpenL2CapChannel(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBL2CapChannel channel, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.DidOpenL2CapChannel(CoreBluetooth.CBPeripheral,CoreBluetooth.CBL2CapChannel,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidOpenL2CapChannel : CoreBluetooth.CBPeripheral * CoreBluetooth.CBL2CapChannel * Foundation.NSError -&gt; unit&#xA;override this.DidOpenL2CapChannel : CoreBluetooth.CBPeripheral * CoreBluetooth.CBL2CapChannel * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.DidOpenL2CapChannel (peripheral, channel, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didOpenL2CAPChannel:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="channel" Type="CoreBluetooth.CBL2CapChannel" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="channel">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoveredCharacteristic">
      <MemberSignature Language="C#" Value="public virtual void DiscoveredCharacteristic (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBService service, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoveredCharacteristic(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBService service, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.DiscoveredCharacteristic(CoreBluetooth.CBPeripheral,CoreBluetooth.CBService,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DiscoveredCharacteristic : CoreBluetooth.CBPeripheral * CoreBluetooth.CBService * Foundation.NSError -&gt; unit&#xA;override this.DiscoveredCharacteristic : CoreBluetooth.CBPeripheral * CoreBluetooth.CBService * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.DiscoveredCharacteristic (peripheral, service, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didDiscoverCharacteristicsForService:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="service" Type="CoreBluetooth.CBService" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="service">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoveredDescriptor">
      <MemberSignature Language="C#" Value="public virtual void DiscoveredDescriptor (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBCharacteristic characteristic, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoveredDescriptor(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBCharacteristic characteristic, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.DiscoveredDescriptor(CoreBluetooth.CBPeripheral,CoreBluetooth.CBCharacteristic,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DiscoveredDescriptor : CoreBluetooth.CBPeripheral * CoreBluetooth.CBCharacteristic * Foundation.NSError -&gt; unit&#xA;override this.DiscoveredDescriptor : CoreBluetooth.CBPeripheral * CoreBluetooth.CBCharacteristic * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.DiscoveredDescriptor (peripheral, characteristic, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didDiscoverDescriptorsForCharacteristic:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="characteristic" Type="CoreBluetooth.CBCharacteristic" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="characteristic">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoveredIncludedService">
      <MemberSignature Language="C#" Value="public virtual void DiscoveredIncludedService (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBService service, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoveredIncludedService(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBService service, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.DiscoveredIncludedService(CoreBluetooth.CBPeripheral,CoreBluetooth.CBService,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DiscoveredIncludedService : CoreBluetooth.CBPeripheral * CoreBluetooth.CBService * Foundation.NSError -&gt; unit&#xA;override this.DiscoveredIncludedService : CoreBluetooth.CBPeripheral * CoreBluetooth.CBService * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.DiscoveredIncludedService (peripheral, service, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didDiscoverIncludedServicesForService:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="service" Type="CoreBluetooth.CBService" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="service">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoveredService">
      <MemberSignature Language="C#" Value="public virtual void DiscoveredService (CoreBluetooth.CBPeripheral peripheral, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoveredService(class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.DiscoveredService(CoreBluetooth.CBPeripheral,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DiscoveredService : CoreBluetooth.CBPeripheral * Foundation.NSError -&gt; unit&#xA;override this.DiscoveredService : CoreBluetooth.CBPeripheral * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.DiscoveredService (peripheral, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didDiscoverServices:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidatedService">
      <MemberSignature Language="C#" Value="public virtual void InvalidatedService (CoreBluetooth.CBPeripheral peripheral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidatedService(class CoreBluetooth.CBPeripheral peripheral) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.InvalidatedService(CoreBluetooth.CBPeripheral)" />
      <MemberSignature Language="F#" Value="abstract member InvalidatedService : CoreBluetooth.CBPeripheral -&gt; unit&#xA;override this.InvalidatedService : CoreBluetooth.CBPeripheral -&gt; unit" Usage="cBPeripheralDelegate.InvalidatedService peripheral" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralDidInvalidateServices:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 8, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <summary>Developers should not use this deprecated method. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadyToSendWriteWithoutResponse">
      <MemberSignature Language="C#" Value="public virtual void IsReadyToSendWriteWithoutResponse (CoreBluetooth.CBPeripheral peripheral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsReadyToSendWriteWithoutResponse(class CoreBluetooth.CBPeripheral peripheral) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.IsReadyToSendWriteWithoutResponse(CoreBluetooth.CBPeripheral)" />
      <MemberSignature Language="F#" Value="abstract member IsReadyToSendWriteWithoutResponse : CoreBluetooth.CBPeripheral -&gt; unit&#xA;override this.IsReadyToSendWriteWithoutResponse : CoreBluetooth.CBPeripheral -&gt; unit" Usage="cBPeripheralDelegate.IsReadyToSendWriteWithoutResponse peripheral" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralIsReadyToSendWriteWithoutResponse:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedServices">
      <MemberSignature Language="C#" Value="public virtual void ModifiedServices (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBService[] services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifiedServices(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBService[] services) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.ModifiedServices(CoreBluetooth.CBPeripheral,CoreBluetooth.CBService[])" />
      <MemberSignature Language="F#" Value="abstract member ModifiedServices : CoreBluetooth.CBPeripheral * CoreBluetooth.CBService[] -&gt; unit&#xA;override this.ModifiedServices : CoreBluetooth.CBPeripheral * CoreBluetooth.CBService[] -&gt; unit" Usage="cBPeripheralDelegate.ModifiedServices (peripheral, services)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didModifyServices:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="services" Type="CoreBluetooth.CBService[]" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="services">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RssiRead">
      <MemberSignature Language="C#" Value="public virtual void RssiRead (CoreBluetooth.CBPeripheral peripheral, Foundation.NSNumber rssi, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RssiRead(class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSNumber rssi, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.RssiRead(CoreBluetooth.CBPeripheral,Foundation.NSNumber,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member RssiRead : CoreBluetooth.CBPeripheral * Foundation.NSNumber * Foundation.NSError -&gt; unit&#xA;override this.RssiRead : CoreBluetooth.CBPeripheral * Foundation.NSNumber * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.RssiRead (peripheral, rssi, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didReadRSSI:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="rssi" Type="Foundation.NSNumber" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="rssi">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RssiUpdated">
      <MemberSignature Language="C#" Value="public virtual void RssiUpdated (CoreBluetooth.CBPeripheral peripheral, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RssiUpdated(class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.RssiUpdated(CoreBluetooth.CBPeripheral,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member RssiUpdated : CoreBluetooth.CBPeripheral * Foundation.NSError -&gt; unit&#xA;override this.RssiUpdated : CoreBluetooth.CBPeripheral * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.RssiUpdated (peripheral, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralDidUpdateRSSI:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'RssiRead' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedCharacterteristicValue">
      <MemberSignature Language="C#" Value="public virtual void UpdatedCharacterteristicValue (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBCharacteristic characteristic, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedCharacterteristicValue(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBCharacteristic characteristic, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.UpdatedCharacterteristicValue(CoreBluetooth.CBPeripheral,CoreBluetooth.CBCharacteristic,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member UpdatedCharacterteristicValue : CoreBluetooth.CBPeripheral * CoreBluetooth.CBCharacteristic * Foundation.NSError -&gt; unit&#xA;override this.UpdatedCharacterteristicValue : CoreBluetooth.CBPeripheral * CoreBluetooth.CBCharacteristic * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.UpdatedCharacterteristicValue (peripheral, characteristic, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didUpdateValueForCharacteristic:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="characteristic" Type="CoreBluetooth.CBCharacteristic" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="characteristic">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedName">
      <MemberSignature Language="C#" Value="public virtual void UpdatedName (CoreBluetooth.CBPeripheral peripheral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedName(class CoreBluetooth.CBPeripheral peripheral) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.UpdatedName(CoreBluetooth.CBPeripheral)" />
      <MemberSignature Language="F#" Value="abstract member UpdatedName : CoreBluetooth.CBPeripheral -&gt; unit&#xA;override this.UpdatedName : CoreBluetooth.CBPeripheral -&gt; unit" Usage="cBPeripheralDelegate.UpdatedName peripheral" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheralDidUpdateName:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedNotificationState">
      <MemberSignature Language="C#" Value="public virtual void UpdatedNotificationState (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBCharacteristic characteristic, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedNotificationState(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBCharacteristic characteristic, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.UpdatedNotificationState(CoreBluetooth.CBPeripheral,CoreBluetooth.CBCharacteristic,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member UpdatedNotificationState : CoreBluetooth.CBPeripheral * CoreBluetooth.CBCharacteristic * Foundation.NSError -&gt; unit&#xA;override this.UpdatedNotificationState : CoreBluetooth.CBPeripheral * CoreBluetooth.CBCharacteristic * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.UpdatedNotificationState (peripheral, characteristic, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didUpdateNotificationStateForCharacteristic:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="characteristic" Type="CoreBluetooth.CBCharacteristic" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="characteristic">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedValue">
      <MemberSignature Language="C#" Value="public virtual void UpdatedValue (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBDescriptor descriptor, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedValue(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBDescriptor descriptor, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.UpdatedValue(CoreBluetooth.CBPeripheral,CoreBluetooth.CBDescriptor,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member UpdatedValue : CoreBluetooth.CBPeripheral * CoreBluetooth.CBDescriptor * Foundation.NSError -&gt; unit&#xA;override this.UpdatedValue : CoreBluetooth.CBPeripheral * CoreBluetooth.CBDescriptor * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.UpdatedValue (peripheral, descriptor, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didUpdateValueForDescriptor:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="descriptor" Type="CoreBluetooth.CBDescriptor" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="descriptor">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteCharacteristicValue">
      <MemberSignature Language="C#" Value="public virtual void WroteCharacteristicValue (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBCharacteristic characteristic, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WroteCharacteristicValue(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBCharacteristic characteristic, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.WroteCharacteristicValue(CoreBluetooth.CBPeripheral,CoreBluetooth.CBCharacteristic,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member WroteCharacteristicValue : CoreBluetooth.CBPeripheral * CoreBluetooth.CBCharacteristic * Foundation.NSError -&gt; unit&#xA;override this.WroteCharacteristicValue : CoreBluetooth.CBPeripheral * CoreBluetooth.CBCharacteristic * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.WroteCharacteristicValue (peripheral, characteristic, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didWriteValueForCharacteristic:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="characteristic" Type="CoreBluetooth.CBCharacteristic" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="characteristic">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteDescriptorValue">
      <MemberSignature Language="C#" Value="public virtual void WroteDescriptorValue (CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBDescriptor descriptor, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WroteDescriptorValue(class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBDescriptor descriptor, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBPeripheralDelegate.WroteDescriptorValue(CoreBluetooth.CBPeripheral,CoreBluetooth.CBDescriptor,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member WroteDescriptorValue : CoreBluetooth.CBPeripheral * CoreBluetooth.CBDescriptor * Foundation.NSError -&gt; unit&#xA;override this.WroteDescriptorValue : CoreBluetooth.CBPeripheral * CoreBluetooth.CBDescriptor * Foundation.NSError -&gt; unit" Usage="cBPeripheralDelegate.WroteDescriptorValue (peripheral, descriptor, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peripheral:didWriteValueForDescriptor:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="descriptor" Type="CoreBluetooth.CBDescriptor" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="peripheral">To be added.</param>
        <param name="descriptor">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
