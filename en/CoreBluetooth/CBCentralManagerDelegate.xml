<Type Name="CBCentralManagerDelegate" FullName="CoreBluetooth.CBCentralManagerDelegate">
  <TypeSignature Language="C#" Value="public abstract class CBCentralManagerDelegate : Foundation.NSObject, CoreBluetooth.ICBCentralManagerDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CBCentralManagerDelegate extends Foundation.NSObject implements class CoreBluetooth.ICBCentralManagerDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreBluetooth.CBCentralManagerDelegate" />
  <TypeSignature Language="F#" Value="type CBCentralManagerDelegate = class&#xA;    inherit NSObject&#xA;    interface ICBCentralManagerDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CoreBluetooth.ICBCentralManagerDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("CBCentralManagerDelegate", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate objects for <see cref="T:CoreBluetooth.CBCentralManager" /> objects.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/CoreBluetooth/Reference/CBCentralManagerDelegate_Protocol/index.html">Apple documentation for <c>CBCentralManagerDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CBCentralManagerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CBCentralManagerDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CoreBluetooth.CBCentralManagerDelegate : Foundation.NSObjectFlag -&gt; CoreBluetooth.CBCentralManagerDelegate" Usage="new CoreBluetooth.CBCentralManagerDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CBCentralManagerDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreBluetooth.CBCentralManagerDelegate : nativeint -&gt; CoreBluetooth.CBCentralManagerDelegate" Usage="new CoreBluetooth.CBCentralManagerDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectedPeripheral">
      <MemberSignature Language="C#" Value="public virtual void ConnectedPeripheral (CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral peripheral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectedPeripheral(class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral peripheral) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.ConnectedPeripheral(CoreBluetooth.CBCentralManager,CoreBluetooth.CBPeripheral)" />
      <MemberSignature Language="F#" Value="abstract member ConnectedPeripheral : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral -&gt; unit&#xA;override this.ConnectedPeripheral : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral -&gt; unit" Usage="cBCentralManagerDelegate.ConnectedPeripheral (central, peripheral)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("centralManager:didConnectPeripheral:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="central" Type="CoreBluetooth.CBCentralManager" />
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
      </Parameters>
      <Docs>
        <param name="central">To be added.</param>
        <param name="peripheral">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedPeripheral">
      <MemberSignature Language="C#" Value="public virtual void DisconnectedPeripheral (CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral peripheral, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectedPeripheral(class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.DisconnectedPeripheral(CoreBluetooth.CBCentralManager,CoreBluetooth.CBPeripheral,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectedPeripheral : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral * Foundation.NSError -&gt; unit&#xA;override this.DisconnectedPeripheral : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral * Foundation.NSError -&gt; unit" Usage="cBCentralManagerDelegate.DisconnectedPeripheral (central, peripheral, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("centralManager:didDisconnectPeripheral:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="central" Type="CoreBluetooth.CBCentralManager" />
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="central">To be added.</param>
        <param name="peripheral">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoveredPeripheral">
      <MemberSignature Language="C#" Value="public virtual void DiscoveredPeripheral (CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral peripheral, Foundation.NSDictionary advertisementData, Foundation.NSNumber RSSI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoveredPeripheral(class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSDictionary advertisementData, class Foundation.NSNumber RSSI) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.DiscoveredPeripheral(CoreBluetooth.CBCentralManager,CoreBluetooth.CBPeripheral,Foundation.NSDictionary,Foundation.NSNumber)" />
      <MemberSignature Language="F#" Value="abstract member DiscoveredPeripheral : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral * Foundation.NSDictionary * Foundation.NSNumber -&gt; unit&#xA;override this.DiscoveredPeripheral : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral * Foundation.NSDictionary * Foundation.NSNumber -&gt; unit" Usage="cBCentralManagerDelegate.DiscoveredPeripheral (central, peripheral, advertisementData, RSSI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("centralManager:didDiscoverPeripheral:advertisementData:RSSI:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="central" Type="CoreBluetooth.CBCentralManager" />
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="advertisementData" Type="Foundation.NSDictionary" />
        <Parameter Name="RSSI" Type="Foundation.NSNumber" />
      </Parameters>
      <Docs>
        <param name="central">To be added.</param>
        <param name="peripheral">To be added.</param>
        <param name="advertisementData">To be added.</param>
        <param name="RSSI">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedToConnectPeripheral">
      <MemberSignature Language="C#" Value="public virtual void FailedToConnectPeripheral (CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral peripheral, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FailedToConnectPeripheral(class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.FailedToConnectPeripheral(CoreBluetooth.CBCentralManager,CoreBluetooth.CBPeripheral,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member FailedToConnectPeripheral : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral * Foundation.NSError -&gt; unit&#xA;override this.FailedToConnectPeripheral : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral * Foundation.NSError -&gt; unit" Usage="cBCentralManagerDelegate.FailedToConnectPeripheral (central, peripheral, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("centralManager:didFailToConnectPeripheral:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="central" Type="CoreBluetooth.CBCentralManager" />
        <Parameter Name="peripheral" Type="CoreBluetooth.CBPeripheral" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="central">To be added.</param>
        <param name="peripheral">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedConnectedPeripherals">
      <MemberSignature Language="C#" Value="public virtual void RetrievedConnectedPeripherals (CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral[] peripherals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RetrievedConnectedPeripherals(class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral[] peripherals) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.RetrievedConnectedPeripherals(CoreBluetooth.CBCentralManager,CoreBluetooth.CBPeripheral[])" />
      <MemberSignature Language="F#" Value="abstract member RetrievedConnectedPeripherals : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral[] -&gt; unit&#xA;override this.RetrievedConnectedPeripherals : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral[] -&gt; unit" Usage="cBCentralManagerDelegate.RetrievedConnectedPeripherals (central, peripherals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("centralManager:didRetrieveConnectedPeripherals:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 8, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="central" Type="CoreBluetooth.CBCentralManager" />
        <Parameter Name="peripherals" Type="CoreBluetooth.CBPeripheral[]" />
      </Parameters>
      <Docs>
        <param name="central">To be added.</param>
        <param name="peripherals">To be added.</param>
        <summary>Developers should not use this deprecated method. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedPeripherals">
      <MemberSignature Language="C#" Value="public virtual void RetrievedPeripherals (CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral[] peripherals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RetrievedPeripherals(class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral[] peripherals) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.RetrievedPeripherals(CoreBluetooth.CBCentralManager,CoreBluetooth.CBPeripheral[])" />
      <MemberSignature Language="F#" Value="abstract member RetrievedPeripherals : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral[] -&gt; unit&#xA;override this.RetrievedPeripherals : CoreBluetooth.CBCentralManager * CoreBluetooth.CBPeripheral[] -&gt; unit" Usage="cBCentralManagerDelegate.RetrievedPeripherals (central, peripherals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("centralManager:didRetrievePeripherals:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Obsoleted(ObjCRuntime.PlatformName.iOS, 8, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="central" Type="CoreBluetooth.CBCentralManager" />
        <Parameter Name="peripherals" Type="CoreBluetooth.CBPeripheral[]" />
      </Parameters>
      <Docs>
        <param name="central">To be added.</param>
        <param name="peripherals">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedState">
      <MemberSignature Language="C#" Value="public abstract void UpdatedState (CoreBluetooth.CBCentralManager central);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedState(class CoreBluetooth.CBCentralManager central) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.UpdatedState(CoreBluetooth.CBCentralManager)" />
      <MemberSignature Language="F#" Value="abstract member UpdatedState : CoreBluetooth.CBCentralManager -&gt; unit" Usage="cBCentralManagerDelegate.UpdatedState central" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CoreBluetooth.ICBCentralManagerDelegate.UpdatedState(CoreBluetooth.CBCentralManager)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("centralManagerDidUpdateState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="central" Type="CoreBluetooth.CBCentralManager" />
      </Parameters>
      <Docs>
        <param name="central">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillRestoreState">
      <MemberSignature Language="C#" Value="public virtual void WillRestoreState (CoreBluetooth.CBCentralManager central, Foundation.NSDictionary dict);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillRestoreState(class CoreBluetooth.CBCentralManager central, class Foundation.NSDictionary dict) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreBluetooth.CBCentralManagerDelegate.WillRestoreState(CoreBluetooth.CBCentralManager,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member WillRestoreState : CoreBluetooth.CBCentralManager * Foundation.NSDictionary -&gt; unit&#xA;override this.WillRestoreState : CoreBluetooth.CBCentralManager * Foundation.NSDictionary -&gt; unit" Usage="cBCentralManagerDelegate.WillRestoreState (central, dict)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("centralManager:willRestoreState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="central" Type="CoreBluetooth.CBCentralManager" />
        <Parameter Name="dict" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="central">To be added.</param>
        <param name="dict">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
