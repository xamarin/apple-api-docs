<Type Name="Half" FullName="OpenTK.Half">
  <TypeSignature Language="C#" Value="public struct Half : IComparable&lt;OpenTK.Half&gt;, IEquatable&lt;OpenTK.Half&gt;, IFormattable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Half extends System.ValueType implements class System.IComparable`1&lt;valuetype OpenTK.Half&gt;, class System.IEquatable`1&lt;valuetype OpenTK.Half&gt;, class System.IFormattable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:OpenTK.Half" />
  <TypeSignature Language="F#" Value="type Half = struct&#xA;    interface ISerializable&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;OpenTK.Half&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;OpenTK.Half&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The name Half is derived from half-precision floating-point number.
            It occupies only 16 Bits, which are split into 1 Sign bit, 5 Exponent bits and 10 Mantissa bits.
            </summary>
    <remarks>
            Quote from ARB_half_float_pixel specification:
            Any representable 16-bit floating-point value is legal as input to a GL command that accepts 16-bit floating-point data.  The
            result of providing a value that is not a floating-point number (such as infinity or NaN) to such a command is unspecified,
            but must not lead to GL interruption or termination. Providing a denormalized number or negative zero to GL must yield
            predictable results.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Half (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.#ctor(System.Double)" />
      <MemberSignature Language="F#" Value="new OpenTK.Half : double -&gt; OpenTK.Half" Usage="new OpenTK.Half d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">64-Bit Double precision floating point number.</param>
        <summary>
            The new Half instance will convert the parameter into 16-Bit Half precision floating point.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Half (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.#ctor(System.Single)" />
      <MemberSignature Language="F#" Value="new OpenTK.Half : single -&gt; OpenTK.Half" Usage="new OpenTK.Half f" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">32-Bit Single precision floating point number.</param>
        <summary>
            The new Half instance will convert the parameter into 16-Bit Half precision floating point.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Half (double d, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 d, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.#ctor(System.Double,System.Boolean)" />
      <MemberSignature Language="F#" Value="new OpenTK.Half : double * bool -&gt; OpenTK.Half" Usage="new OpenTK.Half (d, throwOnError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="d">64-Bit Double precision floating point number.</param>
        <param name="throwOnError">Enable checks that will throw if the conversion result is not meaningful.</param>
        <summary>
            The new Half instance will convert the parameter into 16-Bit Half precision floating point.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Half (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="F#" Value="new OpenTK.Half : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; OpenTK.Half" Usage="new OpenTK.Half (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info" />
        <param name="context" />
        <summary>Constructor used by ISerializable to deserialize the object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Half (float f, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 f, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.#ctor(System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="new OpenTK.Half : single * bool -&gt; OpenTK.Half" Usage="new OpenTK.Half (f, throwOnError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="f">32-Bit Single precision floating point number.</param>
        <param name="throwOnError">Enable checks that will throw if the conversion result is not meaningful.</param>
        <summary>
            The new Half instance will convert the parameter into 16-Bit Half precision floating point.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (OpenTK.Half other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype OpenTK.Half other) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.CompareTo(OpenTK.Half)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : OpenTK.Half -&gt; int&#xA;override this.CompareTo : OpenTK.Half -&gt; int" Usage="half.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="OpenTK.Half" />
      </Parameters>
      <Docs>
        <param name="other">A half-precision floating-point number to compare.</param>
        <summary>
            Compares this instance to a specified half-precision floating-point number
            and returns an integer that indicates whether the value of this instance
            is less than, equal to, or greater than the value of the specified half-precision
            floating-point number.
            </summary>
        <returns>
            A signed number indicating the relative values of this instance and value. If the number is:
            <para>Less than zero, then this instance is less than other, or this instance is not a number
            (OpenTK.Half.NaN) and other is a number.</para><para>Zero: this instance is equal to value, or both this instance and other
            are not a number (OpenTK.Half.NaN), OpenTK.Half.PositiveInfinity, or
            OpenTK.Half.NegativeInfinity.</para><para>Greater than zero: this instance is greater than othrs, or this instance is a number
            and other is not a number (OpenTK.Half.NaN).</para></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public static readonly float Epsilon;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float32 Epsilon" />
      <MemberSignature Language="DocId" Value="F:OpenTK.Half.Epsilon" />
      <MemberSignature Language="F#" Value=" staticval mutable Epsilon : single" Usage="OpenTK.Half.Epsilon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Smallest positive e for which half (1.0 + e) != half (1.0)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (OpenTK.Half other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype OpenTK.Half other) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.Equals(OpenTK.Half)" />
      <MemberSignature Language="F#" Value="override this.Equals : OpenTK.Half -&gt; bool" Usage="half.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="OpenTK.Half" />
      </Parameters>
      <Docs>
        <param name="other">OpenTK.Half object to compare to this instance..</param>
        <summary>
            Returns a value indicating whether this instance is equal to a specified OpenTK.Half value.
            </summary>
        <returns>True, if other is equal to this instance; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBinaryStream">
      <MemberSignature Language="C#" Value="public void FromBinaryStream (System.IO.BinaryReader bin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromBinaryStream(class System.IO.BinaryReader bin) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.FromBinaryStream(System.IO.BinaryReader)" />
      <MemberSignature Language="F#" Value="member this.FromBinaryStream : System.IO.BinaryReader -&gt; unit" Usage="half.FromBinaryStream bin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bin" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="bin">A BinaryReader instance associated with an open Stream.</param>
        <summary>Updates the Half by reading from a Stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBytes">
      <MemberSignature Language="C#" Value="public static OpenTK.Half FromBytes (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.Half FromBytes(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.FromBytes(System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromBytes : byte[] * int -&gt; OpenTK.Half" Usage="OpenTK.Half.FromBytes (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Half</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (OpenTK.Half h);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(valuetype OpenTK.Half h) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.GetBytes(OpenTK.Half)" />
      <MemberSignature Language="F#" Value="static member GetBytes : OpenTK.Half -&gt; byte[]" Usage="OpenTK.Half.GetBytes h" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="h" Type="OpenTK.Half" />
      </Parameters>
      <Docs>
        <param name="h">The Half to convert.</param>
        <summary>Returns the Half as an array of bytes.</summary>
        <returns>The input as byte array.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="half.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info" />
        <param name="context" />
        <summary>Used by ISerialize to serialize the object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public bool IsNaN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNaN" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Half.IsNaN" />
      <MemberSignature Language="F#" Value="member this.IsNaN : bool" Usage="OpenTK.Half.IsNaN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the Half represents Not A Number (NaN)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public bool IsNegativeInfinity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNegativeInfinity" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Half.IsNegativeInfinity" />
      <MemberSignature Language="F#" Value="member this.IsNegativeInfinity : bool" Usage="OpenTK.Half.IsNegativeInfinity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the Half represents negative infinity.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public bool IsPositiveInfinity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPositiveInfinity" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Half.IsPositiveInfinity" />
      <MemberSignature Language="F#" Value="member this.IsPositiveInfinity : bool" Usage="OpenTK.Half.IsPositiveInfinity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the Half represents positive infinity.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Half.IsZero" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="OpenTK.Half.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the Half is zero.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly float MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float32 MaxValue" />
      <MemberSignature Language="DocId" Value="F:OpenTK.Half.MaxValue" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : single" Usage="OpenTK.Half.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Largest positive half</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNormalizedValue">
      <MemberSignature Language="C#" Value="public static readonly float MinNormalizedValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float32 MinNormalizedValue" />
      <MemberSignature Language="DocId" Value="F:OpenTK.Half.MinNormalizedValue" />
      <MemberSignature Language="F#" Value=" staticval mutable MinNormalizedValue : single" Usage="OpenTK.Half.MinNormalizedValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Smallest positive normalized half</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly float MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float32 MinValue" />
      <MemberSignature Language="DocId" Value="F:OpenTK.Half.MinValue" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : single" Usage="OpenTK.Half.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Smallest positive half</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator OpenTK.Half (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype OpenTK.Half op_Explicit(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.op_Explicit(System.Double)~OpenTK.Half" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; OpenTK.Half" Usage="OpenTK.Half.op_Explicit d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Half</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator OpenTK.Half (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype OpenTK.Half op_Explicit(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.op_Explicit(System.Single)~OpenTK.Half" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; OpenTK.Half" Usage="OpenTK.Half.op_Explicit f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Half</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator double (OpenTK.Half h);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Implicit(valuetype OpenTK.Half h) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.op_Implicit(OpenTK.Half)~System.Double" />
      <MemberSignature Language="F#" Value="static member op_Implicit : OpenTK.Half -&gt; double" Usage="OpenTK.Half.op_Implicit h" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="h" Type="OpenTK.Half" />
      </Parameters>
      <Docs>
        <param name="h">The value to convert.
            A <see cref="T:OpenTK.Half" /></param>
        <summary>
            Converts a OpenTK.Half to a System.Double.
            </summary>
        <returns>The result of the conversion.
            A <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Double&amp;scope=Xamarin" title="T:System.Double">T:System.Double</a></format></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator float (OpenTK.Half h);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Implicit(valuetype OpenTK.Half h) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.op_Implicit(OpenTK.Half)~System.Single" />
      <MemberSignature Language="F#" Value="static member op_Implicit : OpenTK.Half -&gt; single" Usage="OpenTK.Half.op_Implicit h" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="h" Type="OpenTK.Half" />
      </Parameters>
      <Docs>
        <param name="h">The value to convert.
            A <see cref="T:OpenTK.Half" /></param>
        <summary>
            Converts a OpenTK.Half to a System.Single.
            </summary>
        <returns>The result of the conversion.
            A <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Single&amp;scope=Xamarin" title="T:System.Single">T:System.Single</a></format></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static OpenTK.Half Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.Half Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.Parse(System.String)" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; OpenTK.Half" Usage="OpenTK.Half.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Half</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static OpenTK.Half Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.Half Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; OpenTK.Half" Usage="OpenTK.Half.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Half</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeInBytes">
      <MemberSignature Language="C#" Value="public static readonly int SizeInBytes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SizeInBytes" />
      <MemberSignature Language="DocId" Value="F:OpenTK.Half.SizeInBytes" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeInBytes : int" Usage="OpenTK.Half.SizeInBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The size in bytes for an instance of the Half struct.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBinaryStream">
      <MemberSignature Language="C#" Value="public void ToBinaryStream (System.IO.BinaryWriter bin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToBinaryStream(class System.IO.BinaryWriter bin) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.ToBinaryStream(System.IO.BinaryWriter)" />
      <MemberSignature Language="F#" Value="member this.ToBinaryStream : System.IO.BinaryWriter -&gt; unit" Usage="half.ToBinaryStream bin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bin" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="bin">A BinaryWriter instance associated with an open Stream.</param>
        <summary>Writes the Half into a Stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public float ToSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 ToSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.ToSingle" />
      <MemberSignature Language="F#" Value="member this.ToSingle : unit -&gt; single" Usage="half.ToSingle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the 16-Bit half to 32-Bit floating point.</summary>
        <returns>A Single precision floating point Number.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="half.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this Half into a human-legible string representation.</summary>
        <returns>The string representation of this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="half.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">formatting for the output string.</param>
        <param name="formatProvider">Culture-specific formatting information.</param>
        <summary>Converts this Half into a human-legible string representation.</summary>
        <returns>The string representation of this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out OpenTK.Half result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype OpenTK.Half&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.TryParse(System.String,OpenTK.Half@)" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="OpenTK.Half.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="OpenTK.Half" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">string representation of the number to convert.</param>
        <param name="result">The Half instance to write to.</param>
        <summary>Converts the string representation of a number to a Half precision floating point equivalent. Returns success.</summary>
        <returns>Success.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out OpenTK.Half result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype OpenTK.Half&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Half.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,OpenTK.Half@)" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="OpenTK.Half.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="OpenTK.Half" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">string representation of the number to convert.</param>
        <param name="style">specifies the format of s.</param>
        <param name="provider">Culture-specific formatting information.</param>
        <param name="result">The Half instance to write to.</param>
        <summary>Converts the string representation of a number to a Half precision floating point equivalent. Returns success.</summary>
        <returns>Success.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
