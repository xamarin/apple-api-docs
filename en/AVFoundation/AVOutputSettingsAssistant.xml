<Type Name="AVOutputSettingsAssistant" FullName="AVFoundation.AVOutputSettingsAssistant">
  <TypeSignature Language="C#" Value="public class AVOutputSettingsAssistant : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVOutputSettingsAssistant extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVOutputSettingsAssistant" />
  <TypeSignature Language="F#" Value="type AVOutputSettingsAssistant = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("AVOutputSettingsAssistant", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides pre-configured video and audio settings for use with AVFoundation.</summary>
    <remarks>
      <para>
	This class provides preconfigured AVAudioSettings,
	AVVideoSettingsCompressed and AVVideoSettingsUncompressed that
	can be used by other classes in AVFoundation.

      </para>
      <para>
	Use any of the static Preset properties in this class to
	access the defaults, and then one of the instance properties
	to get the audio and video settings.

      </para>
      <example>
        <code lang="C#"><![CDATA[
//
// Get the 640x480 audio settings
//
var audioSettings = AVOutputSettingsAssistant.Preset640x80.AudioSettings;
]]></code>
      </example>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVOutputSettingsAssistant_Class/index.html">Apple documentation for <c>AVOutputSettingsAssistant</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVOutputSettingsAssistant (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVOutputSettingsAssistant.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVOutputSettingsAssistant : Foundation.NSObjectFlag -&gt; AVFoundation.AVOutputSettingsAssistant" Usage="new AVFoundation.AVOutputSettingsAssistant t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVOutputSettingsAssistant (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVOutputSettingsAssistant.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVOutputSettingsAssistant : nativeint -&gt; AVFoundation.AVOutputSettingsAssistant" Usage="new AVFoundation.AVOutputSettingsAssistant handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioSettings">
      <MemberSignature Language="C#" Value="public AVFoundation.AudioSettings AudioSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AudioSettings AudioSettings" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.AudioSettings" />
      <MemberSignature Language="F#" Value="member this.AudioSettings : AVFoundation.AudioSettings" Usage="AVFoundation.AVOutputSettingsAssistant.AudioSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AudioSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the dictionary of values for creating <see cref="T:AVFoundation.AVAssetWriterInput" /> instances.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableOutputSettingsPresets">
      <MemberSignature Language="C#" Value="public static string[] AvailableOutputSettingsPresets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string[] AvailableOutputSettingsPresets" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.AvailableOutputSettingsPresets" />
      <MemberSignature Language="F#" Value="member this.AvailableOutputSettingsPresets : string[]" Usage="AVFoundation.AVOutputSettingsAssistant.AvailableOutputSettingsPresets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("availableOutputSettingsPresets")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array that contains the presets that should be used to create an <see cref="T:AVFoundation.AVOutputSettingsAssistant" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVOutputSettingsAssistant.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedVideoSettings">
      <MemberSignature Language="C#" Value="public AVFoundation.AVVideoSettingsCompressed CompressedVideoSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVVideoSettingsCompressed CompressedVideoSettings" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.CompressedVideoSettings" />
      <MemberSignature Language="F#" Value="member this.CompressedVideoSettings : AVFoundation.AVVideoSettingsCompressed" Usage="AVFoundation.AVOutputSettingsAssistant.CompressedVideoSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVVideoSettingsCompressed</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the compressed video settings to use when creating a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:onoTouch.AVFoundation.AVAssetWriterInput&amp;scope=Xamarin" title="T:onoTouch.AVFoundation.AVAssetWriterInput">T:onoTouch.AVFoundation.AVAssetWriterInput</a></format> object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPreset">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVOutputSettingsAssistant FromPreset (string presetIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVOutputSettingsAssistant FromPreset(string presetIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVOutputSettingsAssistant.FromPreset(System.String)" />
      <MemberSignature Language="F#" Value="static member FromPreset : string -&gt; AVFoundation.AVOutputSettingsAssistant" Usage="AVFoundation.AVOutputSettingsAssistant.FromPreset presetIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("outputSettingsAssistantWithPreset:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVOutputSettingsAssistant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presetIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="presetIdentifier">To be added.</param>
        <summary>Creates a new <see cref="T:AVFoundation.AVOutputSettingsAssistant" /> with the presets that are identified by <paramref name="presetIdentifier" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFileType">
      <MemberSignature Language="C#" Value="public virtual string OutputFileType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputFileType" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.OutputFileType" />
      <MemberSignature Language="F#" Value="member this.OutputFileType : string" Usage="AVFoundation.AVOutputSettingsAssistant.OutputFileType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("outputFileType", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Uniform Type Identifier for the type of the output file.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Preset1280x720">
      <MemberSignature Language="C#" Value="public AVFoundation.AVOutputSettingsAssistant Preset1280x720 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVOutputSettingsAssistant Preset1280x720" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.Preset1280x720" />
      <MemberSignature Language="F#" Value="member this.Preset1280x720 : AVFoundation.AVOutputSettingsAssistant" Usage="AVFoundation.AVOutputSettingsAssistant.Preset1280x720" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVOutputSettingsAssistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Preset for 1280x720 output.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preset1920x1080">
      <MemberSignature Language="C#" Value="public AVFoundation.AVOutputSettingsAssistant Preset1920x1080 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVOutputSettingsAssistant Preset1920x1080" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.Preset1920x1080" />
      <MemberSignature Language="F#" Value="member this.Preset1920x1080 : AVFoundation.AVOutputSettingsAssistant" Usage="AVFoundation.AVOutputSettingsAssistant.Preset1920x1080" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVOutputSettingsAssistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Preset for 1920x1080 output.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preset3840x2160">
      <MemberSignature Language="C#" Value="public AVFoundation.AVOutputSettingsAssistant Preset3840x2160 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVOutputSettingsAssistant Preset3840x2160" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.Preset3840x2160" />
      <MemberSignature Language="F#" Value="member this.Preset3840x2160 : AVFoundation.AVOutputSettingsAssistant" Usage="AVFoundation.AVOutputSettingsAssistant.Preset3840x2160" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVOutputSettingsAssistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Preset for 3840x2160 output.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Preset640x480">
      <MemberSignature Language="C#" Value="public AVFoundation.AVOutputSettingsAssistant Preset640x480 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVOutputSettingsAssistant Preset640x480" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.Preset640x480" />
      <MemberSignature Language="F#" Value="member this.Preset640x480 : AVFoundation.AVOutputSettingsAssistant" Usage="AVFoundation.AVOutputSettingsAssistant.Preset640x480" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVOutputSettingsAssistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Preset for 640x480 output.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preset960x540">
      <MemberSignature Language="C#" Value="public AVFoundation.AVOutputSettingsAssistant Preset960x540 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVOutputSettingsAssistant Preset960x540" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.Preset960x540" />
      <MemberSignature Language="F#" Value="member this.Preset960x540 : AVFoundation.AVOutputSettingsAssistant" Usage="AVFoundation.AVOutputSettingsAssistant.Preset960x540" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVOutputSettingsAssistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Preset for 960x540 output.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetHevc1920x1080">
      <MemberSignature Language="C#" Value="public AVFoundation.AVOutputSettingsAssistant PresetHevc1920x1080 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVOutputSettingsAssistant PresetHevc1920x1080" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.PresetHevc1920x1080" />
      <MemberSignature Language="F#" Value="member this.PresetHevc1920x1080 : AVFoundation.AVOutputSettingsAssistant" Usage="AVFoundation.AVOutputSettingsAssistant.PresetHevc1920x1080" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVOutputSettingsAssistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Preset for HVEC 1920x1080 output.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetHevc3840x2160">
      <MemberSignature Language="C#" Value="public AVFoundation.AVOutputSettingsAssistant PresetHevc3840x2160 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVOutputSettingsAssistant PresetHevc3840x2160" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.PresetHevc3840x2160" />
      <MemberSignature Language="F#" Value="member this.PresetHevc3840x2160 : AVFoundation.AVOutputSettingsAssistant" Usage="AVFoundation.AVOutputSettingsAssistant.PresetHevc3840x2160" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVOutputSettingsAssistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Preset for HVEC 3840x2160 output</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceAudioFormat">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMAudioFormatDescription SourceAudioFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreMedia.CMAudioFormatDescription SourceAudioFormat" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.SourceAudioFormat" />
      <MemberSignature Language="F#" Value="member this.SourceAudioFormat : CoreMedia.CMAudioFormatDescription with get, set" Usage="AVFoundation.AVOutputSettingsAssistant.SourceAudioFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sourceAudioFormat", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSourceAudioFormat:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMAudioFormatDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the format of the source audio data.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVideoAverageFrameDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime SourceVideoAverageFrameDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime SourceVideoAverageFrameDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.SourceVideoAverageFrameDuration" />
      <MemberSignature Language="F#" Value="member this.SourceVideoAverageFrameDuration : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVOutputSettingsAssistant.SourceVideoAverageFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sourceVideoAverageFrameDuration", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSourceVideoAverageFrameDuration:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the average frame duration.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVideoFormat">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMVideoFormatDescription SourceVideoFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreMedia.CMVideoFormatDescription SourceVideoFormat" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.SourceVideoFormat" />
      <MemberSignature Language="F#" Value="member this.SourceVideoFormat : CoreMedia.CMVideoFormatDescription with get, set" Usage="AVFoundation.AVOutputSettingsAssistant.SourceVideoFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sourceVideoFormat", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSourceVideoFormat:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMVideoFormatDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:CoreMedia.CMVideoFormatDescription" /> that describes the source video format.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVideoMinFrameDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime SourceVideoMinFrameDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime SourceVideoMinFrameDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.SourceVideoMinFrameDuration" />
      <MemberSignature Language="F#" Value="member this.SourceVideoMinFrameDuration : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVOutputSettingsAssistant.SourceVideoMinFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sourceVideoMinFrameDuration", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSourceVideoMinFrameDuration:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum frame duration.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnCompressedVideoSettings">
      <MemberSignature Language="C#" Value="public AVFoundation.AVVideoSettingsUncompressed UnCompressedVideoSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVVideoSettingsUncompressed UnCompressedVideoSettings" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.UnCompressedVideoSettings" />
      <MemberSignature Language="F#" Value="member this.UnCompressedVideoSettings : AVFoundation.AVVideoSettingsUncompressed" Usage="AVFoundation.AVOutputSettingsAssistant.UnCompressedVideoSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVVideoSettingsUncompressed</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the uncompressed video settings to use when creating a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:onoTouch.AVFoundation.AVAssetWriterInput&amp;scope=Xamarin" title="T:onoTouch.AVFoundation.AVAssetWriterInput">T:onoTouch.AVFoundation.AVAssetWriterInput</a></format> object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakAudioSettings">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary WeakAudioSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary WeakAudioSettings" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.WeakAudioSettings" />
      <MemberSignature Language="F#" Value="member this.WeakAudioSettings : Foundation.NSDictionary" Usage="AVFoundation.AVOutputSettingsAssistant.WeakAudioSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("audioSettings", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a weak reference to the audio settings.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakVideoSettings">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary WeakVideoSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary WeakVideoSettings" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVOutputSettingsAssistant.WeakVideoSettings" />
      <MemberSignature Language="F#" Value="member this.WeakVideoSettings : Foundation.NSDictionary" Usage="AVFoundation.AVOutputSettingsAssistant.WeakVideoSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoSettings", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a weak reference to the video settings.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
