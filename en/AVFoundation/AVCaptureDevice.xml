<Type Name="AVCaptureDevice" FullName="AVFoundation.AVCaptureDevice">
  <TypeSignature Language="C#" Value="public class AVCaptureDevice : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVCaptureDevice extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVCaptureDevice" />
  <TypeSignature Language="F#" Value="type AVCaptureDevice = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("AVCaptureDevice", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Support for accessing the audio and video capture hardware for AVCaptureSession.</summary>
    <remarks>
      <para>Once a capture session has begun, application developers must bracket configuration changes with calls to <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" /> and <see cref="M:AVFoundation.AVCaptureDevice.UnlockForConfiguration" />.</para>
    </remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/AVCaptureFrames/">avcaptureframes</related>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVCaptureDevice_Class/index.html">Apple documentation for <c>AVCaptureDevice</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVCaptureDevice (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureDevice : Foundation.NSObjectFlag -&gt; AVFoundation.AVCaptureDevice" Usage="new AVFoundation.AVCaptureDevice t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVCaptureDevice (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureDevice : nativeint -&gt; AVFoundation.AVCaptureDevice" Usage="new AVFoundation.AVCaptureDevice handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveColorSpace">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureColorSpace ActiveColorSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureColorSpace ActiveColorSpace" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ActiveColorSpace" />
      <MemberSignature Language="F#" Value="member this.ActiveColorSpace : AVFoundation.AVCaptureColorSpace with get, set" Usage="AVFoundation.AVCaptureDevice.ActiveColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("activeColorSpace", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setActiveColorSpace:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color space used for capture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDepthDataFormat">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureDeviceFormat ActiveDepthDataFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCaptureDeviceFormat ActiveDepthDataFormat" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ActiveDepthDataFormat" />
      <MemberSignature Language="F#" Value="member this.ActiveDepthDataFormat : AVFoundation.AVCaptureDeviceFormat with get, set" Usage="AVFoundation.AVCaptureDevice.ActiveDepthDataFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("activeDepthDataFormat", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setActiveDepthDataFormat:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDeviceFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDepthDataMinFrameDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime ActiveDepthDataMinFrameDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime ActiveDepthDataMinFrameDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ActiveDepthDataMinFrameDuration" />
      <MemberSignature Language="F#" Value="member this.ActiveDepthDataMinFrameDuration : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVCaptureDevice.ActiveDepthDataMinFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("activeDepthDataMinFrameDuration", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setActiveDepthDataMinFrameDuration:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveFormat">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureDeviceFormat ActiveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCaptureDeviceFormat ActiveFormat" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ActiveFormat" />
      <MemberSignature Language="F#" Value="member this.ActiveFormat : AVFoundation.AVCaptureDeviceFormat with get, set" Usage="AVFoundation.AVCaptureDevice.ActiveFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("activeFormat", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setActiveFormat:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDeviceFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The currently active format of the <see cref="T:AVFoundation.AVCaptureDevice" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Application developers should generally use <see cref="P:AVFoundation.AVCaptureSession.SessionPreset" /> and the <c>Preferred*</c> methods of <see cref="M:AVFoundation.AVAudioSession.SharedInstance" /> to set capture format. However, devices may have formats beyond the presets, in which case this property may be set.</para>
          <para>Attempting to set an unavailable format will throw an <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Foundation%20NSInvalid%20Argument%20Exception&amp;scope=Xamarin" title="T:Foundation.NSInvalidArgumentException">T:Foundation.NSInvalidArgumentException</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMaxExposureDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime ActiveMaxExposureDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime ActiveMaxExposureDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ActiveMaxExposureDuration" />
      <MemberSignature Language="F#" Value="member this.ActiveMaxExposureDuration : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVCaptureDevice.ActiveMaxExposureDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("activeMaxExposureDuration", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setActiveMaxExposureDuration:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveVideoMaxFrameDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime ActiveVideoMaxFrameDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime ActiveVideoMaxFrameDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ActiveVideoMaxFrameDuration" />
      <MemberSignature Language="F#" Value="member this.ActiveVideoMaxFrameDuration : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVCaptureDevice.ActiveVideoMaxFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("activeVideoMaxFrameDuration", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setActiveVideoMaxFrameDuration:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum frame duration.</summary>
        <value>The default value varies based on the configuration.</value>
        <remarks>
          <para>This value can be reset to its default for the current configuration by setting it to <see cref="F:CoreMedia.CMTime.Invalid" />. This value will be overwritten by a change to the <see cref="P:AVFoundation.AVCaptureSession.SessionPreset" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveVideoMinFrameDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime ActiveVideoMinFrameDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime ActiveVideoMinFrameDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ActiveVideoMinFrameDuration" />
      <MemberSignature Language="F#" Value="member this.ActiveVideoMinFrameDuration : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVCaptureDevice.ActiveVideoMinFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("activeVideoMinFrameDuration", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setActiveVideoMinFrameDuration:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum frame duration.</summary>
        <value>The default value varies by configuration.</value>
        <remarks>
          <para>This value can be reset to its default for the current configuration by setting it to <see cref="F:CoreMedia.CMTime.Invalid" />. This value will be overwritten by a change to the <see cref="P:AVFoundation.AVCaptureSession.SessionPreset" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustingExposure">
      <MemberSignature Language="C#" Value="public virtual bool AdjustingExposure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustingExposure" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.AdjustingExposure" />
      <MemberSignature Language="F#" Value="member this.AdjustingExposure : bool" Usage="AVFoundation.AVCaptureDevice.AdjustingExposure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAdjustingExposure")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the device is currently adjusting its exposure setting.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustingFocus">
      <MemberSignature Language="C#" Value="public virtual bool AdjustingFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustingFocus" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.AdjustingFocus" />
      <MemberSignature Language="F#" Value="member this.AdjustingFocus : bool" Usage="AVFoundation.AVCaptureDevice.AdjustingFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAdjustingFocus")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the device is currently adjusting its focus.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustingWhiteBalance">
      <MemberSignature Language="C#" Value="public virtual bool AdjustingWhiteBalance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustingWhiteBalance" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.AdjustingWhiteBalance" />
      <MemberSignature Language="F#" Value="member this.AdjustingWhiteBalance : bool" Usage="AVFoundation.AVCaptureDevice.AdjustingWhiteBalance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAdjustingWhiteBalance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the device is currently adjusting its white balance.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFocusRangeRestriction">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureAutoFocusRangeRestriction AutoFocusRangeRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureAutoFocusRangeRestriction AutoFocusRangeRestriction" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.AutoFocusRangeRestriction" />
      <MemberSignature Language="F#" Value="member this.AutoFocusRangeRestriction : AVFoundation.AVCaptureAutoFocusRangeRestriction with get, set" Usage="AVFoundation.AVCaptureDevice.AutoFocusRangeRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("autoFocusRangeRestriction")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutoFocusRangeRestriction:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureAutoFocusRangeRestriction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Limits the range over which autofocus will be attempted.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Application developers can adjust this to decrease energy consumption and to help avoid incorrect autofocus decisions.</para>
        </remarks>
        <altmember cref="P:AVFoundation.AVCaptureDevice.AutoFocusRangeRestrictionSupported" />
      </Docs>
    </Member>
    <Member MemberName="AutoFocusRangeRestrictionSupported">
      <MemberSignature Language="C#" Value="public virtual bool AutoFocusRangeRestrictionSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFocusRangeRestrictionSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.AutoFocusRangeRestrictionSupported" />
      <MemberSignature Language="F#" Value="member this.AutoFocusRangeRestrictionSupported : bool" Usage="AVFoundation.AVCaptureDevice.AutoFocusRangeRestrictionSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutoFocusRangeRestrictionSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the device's autofocus can be restricted to specified ranges.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:AVFoundation.AutoFocusRangeRestriction" />
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAdjustsVideoHdrEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticallyAdjustsVideoHdrEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAdjustsVideoHdrEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.AutomaticallyAdjustsVideoHdrEnabled" />
      <MemberSignature Language="F#" Value="member this.AutomaticallyAdjustsVideoHdrEnabled : bool with get, set" Usage="AVFoundation.AVCaptureDevice.AutomaticallyAdjustsVideoHdrEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("automaticallyAdjustsVideoHDREnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticallyAdjustsVideoHDREnabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines if HDR can be turned on and off for the video stream, if set, you can enable <see cref="P:AVFoundation.AVCaptureDevice.VideoHdrEnabled" /></summary>
        <value>The default value for this property is <see langword="true" />.   </value>
        <remarks>
          <para>Setting this property requires the caller to call <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" /> first.</para>
          <para />
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyEnablesLowLightBoostWhenAvailable">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticallyEnablesLowLightBoostWhenAvailable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyEnablesLowLightBoostWhenAvailable" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.AutomaticallyEnablesLowLightBoostWhenAvailable" />
      <MemberSignature Language="F#" Value="member this.AutomaticallyEnablesLowLightBoostWhenAvailable : bool with get, set" Usage="AVFoundation.AVCaptureDevice.AutomaticallyEnablesLowLightBoostWhenAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("automaticallyEnablesLowLightBoostWhenAvailable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutomaticallyEnablesLowLightBoostWhenAvailable:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the system should automatically enable "boost mode" (ISO 3200) in low light.</summary>
        <value>The default value is <see langword="false" />.</value>
        <remarks>
          <para>The default ISO equivalence for the iPhone 5 is 800. The "boost mode" increases sensitivity to ISO 3200, at the cost of increased sensor noise.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelVideoZoomRamp">
      <MemberSignature Language="C#" Value="public virtual void CancelVideoZoomRamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelVideoZoomRamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.CancelVideoZoomRamp" />
      <MemberSignature Language="F#" Value="abstract member CancelVideoZoomRamp : unit -&gt; unit&#xA;override this.CancelVideoZoomRamp : unit -&gt; unit" Usage="aVCaptureDevice.CancelVideoZoomRamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("cancelVideoZoomRamp")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Smoothly cancels an in-progress video zoom.</summary>
        <remarks>
          <para>This method is equivalent to calling <see cref="M:AVFoundation.AVCaptureDevice.RampToVideoZoom(System.nfloat,System.Single)" /> with a <c>rate</c> of 0. The zoom does not end immediately, but stops smoothly.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVCaptureDevice.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public virtual bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.Connected" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="AVFoundation.AVCaptureDevice.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isConnected")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the <see cref="T:AVFoundation.AVCaptureDevice" /> is available for use.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Although this value may change from <see langword="true" /> to <see langword="false" /> when a device is disconnected, it will not change from <see langword="false" /> to <see langword="true" /> when the device is reconnected. In that situation, the physical device will be represented by a different instance of <see cref="T:AVFoundation.AVCaptureDevice" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDeviceWithMediaType">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureDevice DefaultDeviceWithMediaType (string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCaptureDevice DefaultDeviceWithMediaType(string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.DefaultDeviceWithMediaType(System.String)" />
      <MemberSignature Language="F#" Value="static member DefaultDeviceWithMediaType : string -&gt; AVFoundation.AVCaptureDevice" Usage="AVFoundation.AVCaptureDevice.DefaultDeviceWithMediaType mediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use 'GetDefaultDevice (AVMediaTypes)'.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDevice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <summary>The default device for the <paramref name="mediaType" />, which should be a value from <see cref="T:AVFoundation.AVMediaType" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Devices">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureDevice[] Devices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class AVFoundation.AVCaptureDevice[] Devices" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.Devices" />
      <MemberSignature Language="F#" Value="member this.Devices : AVFoundation.AVCaptureDevice[]" Usage="AVFoundation.AVCaptureDevice.Devices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'AVCaptureDeviceDiscoverySession' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("devices")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'AVCaptureDeviceDiscoverySession' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDevice[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Developers should use 'AVCaptureDeviceDiscoverySession' instead.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DevicesWithMediaType">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureDevice[] DevicesWithMediaType (string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCaptureDevice[] DevicesWithMediaType(string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.DevicesWithMediaType(System.String)" />
      <MemberSignature Language="F#" Value="static member DevicesWithMediaType : string -&gt; AVFoundation.AVCaptureDevice[]" Usage="AVFoundation.AVCaptureDevice.DevicesWithMediaType mediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("devicesWithMediaType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'AVCaptureDeviceDiscoverySession' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDevice[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <summary>An array of available <see cref="T:AVFoundation.AVCaptureDevice" />s that can capture <paramref name="mediaType" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceType">
      <MemberSignature Language="C#" Value="public AVFoundation.AVCaptureDeviceType DeviceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureDeviceType DeviceType" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.DeviceType" />
      <MemberSignature Language="F#" Value="member this.DeviceType : AVFoundation.AVCaptureDeviceType" Usage="AVFoundation.AVCaptureDevice.DeviceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDeviceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:AVFoundation.AVCaptureDeviceType" /> of the capturing device.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceWhiteBalanceGains">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureWhiteBalanceGains DeviceWhiteBalanceGains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureWhiteBalanceGains DeviceWhiteBalanceGains" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.DeviceWhiteBalanceGains" />
      <MemberSignature Language="F#" Value="member this.DeviceWhiteBalanceGains : AVFoundation.AVCaptureWhiteBalanceGains" Usage="AVFoundation.AVCaptureDevice.DeviceWhiteBalanceGains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("deviceWhiteBalanceGains")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureWhiteBalanceGains</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the device-specific white balance RGB gains.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceWithUniqueID">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureDevice DeviceWithUniqueID (string deviceUniqueID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCaptureDevice DeviceWithUniqueID(string deviceUniqueID) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.DeviceWithUniqueID(System.String)" />
      <MemberSignature Language="F#" Value="static member DeviceWithUniqueID : string -&gt; AVFoundation.AVCaptureDevice" Usage="AVFoundation.AVCaptureDevice.DeviceWithUniqueID deviceUniqueID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("deviceWithUniqueID:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDevice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceUniqueID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="deviceUniqueID">To be added.</param>
        <summary>The device whose <see cref="P:AVFoundation.AVCaptureDevice.UniqueID" /> matches <paramref name="deviceUniqueID" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DualCameraSwitchOverVideoZoomFactor">
      <MemberSignature Language="C#" Value="public virtual nfloat DualCameraSwitchOverVideoZoomFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat DualCameraSwitchOverVideoZoomFactor" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.DualCameraSwitchOverVideoZoomFactor" />
      <MemberSignature Language="F#" Value="member this.DualCameraSwitchOverVideoZoomFactor : nfloat" Usage="AVFoundation.AVCaptureDevice.DualCameraSwitchOverVideoZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("dualCameraSwitchOverVideoZoomFactor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposureDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime ExposureDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime ExposureDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ExposureDuration" />
      <MemberSignature Language="F#" Value="member this.ExposureDuration : CoreMedia.CMTime" Usage="AVFoundation.AVCaptureDevice.ExposureDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exposureDuration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the exposure length, as a <see cref="T:CoreMedia.CMTime" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposureDurationCurrent">
      <MemberSignature Language="C#" Value="public static CoreMedia.CMTime ExposureDurationCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype CoreMedia.CMTime ExposureDurationCurrent" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ExposureDurationCurrent" />
      <MemberSignature Language="F#" Value="member this.ExposureDurationCurrent : CoreMedia.CMTime" Usage="AVFoundation.AVCaptureDevice.ExposureDurationCurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureExposureDurationCurrent", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant AVCaptureExposureDurationCurrent</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposureMode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureExposureMode ExposureMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureExposureMode ExposureMode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ExposureMode" />
      <MemberSignature Language="F#" Value="member this.ExposureMode : AVFoundation.AVCaptureExposureMode with get, set" Usage="AVFoundation.AVCaptureDevice.ExposureMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exposureMode", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setExposureMode:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureExposureMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current exposure mode of the <see cref="T:AVFoundation.AVCaptureDevice" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Setting this property has the following effects:</para>
          <list type="bullet">
            <item>
              <term>If set to AutoExpose or AutoExposeLocked: <see cref="P:AVFoundation.AVCaptureDevice.ExposureTargetBias" /> affects both the <see cref="P:AVFoundation.AVCaptureDevice.ExposureTargetOffset" />, <see cref="P:AVFoundation.AVCaptureDevice.ExposureDuration" /> and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:AVFoundation.AVCaptureDevice.ISO.&amp;scope=Xamarin" title="T:AVFoundation.AVCaptureDevice.ISO.">T:AVFoundation.AVCaptureDevice.ISO.</a></format></term>
            </item>
            <item>
              <term>If set to Custom: <see cref="P:AVFoundation.AVCaptureDevice.ExposureTargetBias" /> it only affects <see cref="P:AVFoundation.AVCaptureDevice.ExposureTargetOffset" />.</term>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposurePointOfInterest">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint ExposurePointOfInterest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint ExposurePointOfInterest" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ExposurePointOfInterest" />
      <MemberSignature Language="F#" Value="member this.ExposurePointOfInterest : CoreGraphics.CGPoint with get, set" Usage="AVFoundation.AVCaptureDevice.ExposurePointOfInterest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exposurePointOfInterest")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setExposurePointOfInterest:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The point within the field-of-view that is the "point of interest" for exposure.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:AVFoundation.AVCaptureDevice.FocusPointOfInterest" />
      </Docs>
    </Member>
    <Member MemberName="ExposurePointOfInterestSupported">
      <MemberSignature Language="C#" Value="public virtual bool ExposurePointOfInterestSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExposurePointOfInterestSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ExposurePointOfInterestSupported" />
      <MemberSignature Language="F#" Value="member this.ExposurePointOfInterestSupported : bool" Usage="AVFoundation.AVCaptureDevice.ExposurePointOfInterestSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isExposurePointOfInterestSupported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the device supports the <see cref="P:AVFoundation.AVCaptureDevice.ExposurePointOfInterest" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposureTargetBias">
      <MemberSignature Language="C#" Value="public virtual float ExposureTargetBias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ExposureTargetBias" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ExposureTargetBias" />
      <MemberSignature Language="F#" Value="member this.ExposureTargetBias : single" Usage="AVFoundation.AVCaptureDevice.ExposureTargetBias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exposureTargetBias")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the current Exposure Target Bias (measured in Exposure Value units).</summary>
        <value>The current exposure target bias.</value>
        <remarks>To set this, call the <see cref="M:AVFoundation.AVCaptureDevice.SetExposureTargetBias(System.Single,System.Action{CoreMedia.CMTime})" /> or <see cref="M:AVFoundation.AVCaptureDevice.SetExposureTargetBiasAsync(System.Single)" /> methods.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposureTargetBiasCurrent">
      <MemberSignature Language="C#" Value="public static float ExposureTargetBiasCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 ExposureTargetBiasCurrent" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ExposureTargetBiasCurrent" />
      <MemberSignature Language="F#" Value="member this.ExposureTargetBiasCurrent : single" Usage="AVFoundation.AVCaptureDevice.ExposureTargetBiasCurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureExposureTargetBiasCurrent", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant AVCaptureExposureTargetBiasCurrent</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposureTargetOffset">
      <MemberSignature Language="C#" Value="public virtual float ExposureTargetOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ExposureTargetOffset" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ExposureTargetOffset" />
      <MemberSignature Language="F#" Value="member this.ExposureTargetOffset : single" Usage="AVFoundation.AVCaptureDevice.ExposureTargetOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("exposureTargetOffset")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the difference, in EV units, between the metered and target exposure values.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashActive">
      <MemberSignature Language="C#" Value="public virtual bool FlashActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashActive" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.FlashActive" />
      <MemberSignature Language="F#" Value="member this.FlashActive : bool" Usage="AVFoundation.AVCaptureDevice.FlashActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCapturePhotoOutput.IsFlashScene' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFlashActive")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCapturePhotoOutput.IsFlashScene' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the flash will go off when a still is captured.</summary>
        <value>
        </value>
        <remarks>When the flash is active, it will be turned on when a still picture is taken.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashAvailable">
      <MemberSignature Language="C#" Value="public virtual bool FlashAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashAvailable" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.FlashAvailable" />
      <MemberSignature Language="F#" Value="member this.FlashAvailable : bool" Usage="AVFoundation.AVCaptureDevice.FlashAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFlashAvailable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the flash is available for use.</summary>
        <value>
        </value>
        <remarks>True if the device has a flash.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashMode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureFlashMode FlashMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureFlashMode FlashMode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.FlashMode" />
      <MemberSignature Language="F#" Value="member this.FlashMode : AVFoundation.AVCaptureFlashMode with get, set" Usage="AVFoundation.AVCaptureDevice.FlashMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCapturePhotoSettings.FlashMode' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("flashMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCapturePhotoSettings.FlashMode' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFlashMode:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCapturePhotoSettings.FlashMode' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureFlashMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current <see cref="T:AVFoundation.AVCaptureFlashMode" />.</summary>
        <value>
        </value>
        <remarks>
    Use this property to control whether the flash should be
 	  always on, always off, or turned on by the hardware if the
 	  heuristics of the device determine that a flash would improve the image.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusMode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureFocusMode FocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureFocusMode FocusMode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.FocusMode" />
      <MemberSignature Language="F#" Value="member this.FocusMode : AVFoundation.AVCaptureFocusMode with get, set" Usage="AVFoundation.AVCaptureDevice.FocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("focusMode", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFocusMode:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current <see cref="T:AVFoundation.AVCaptureFocusMode" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusModeLensPositionCurrent">
      <MemberSignature Language="C#" Value="public static float FocusModeLensPositionCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 FocusModeLensPositionCurrent" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.FocusModeLensPositionCurrent" />
      <MemberSignature Language="F#" Value="member this.FocusModeLensPositionCurrent : single" Usage="AVFoundation.AVCaptureDevice.FocusModeLensPositionCurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureLensPositionCurrent", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant AVCaptureLensPositionCurrent</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusPointOfInterest">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint FocusPointOfInterest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint FocusPointOfInterest" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.FocusPointOfInterest" />
      <MemberSignature Language="F#" Value="member this.FocusPointOfInterest : CoreGraphics.CGPoint with get, set" Usage="AVFoundation.AVCaptureDevice.FocusPointOfInterest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("focusPointOfInterest", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setFocusPointOfInterest:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The point in the field-of-view that is the "point of interest" for autofocus.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:AVFoundation.AVCaptureDevice.ExposurePointOfInterest" />
      </Docs>
    </Member>
    <Member MemberName="FocusPointOfInterestSupported">
      <MemberSignature Language="C#" Value="public virtual bool FocusPointOfInterestSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FocusPointOfInterestSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.FocusPointOfInterestSupported" />
      <MemberSignature Language="F#" Value="member this.FocusPointOfInterestSupported : bool" Usage="AVFoundation.AVCaptureDevice.FocusPointOfInterestSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFocusPointOfInterestSupported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether <see cref="P:AVFoundation.AVCaptureDevice.FocusPointOfInterest" /> is available.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formats">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureDeviceFormat[] Formats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCaptureDeviceFormat[] Formats" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.Formats" />
      <MemberSignature Language="F#" Value="member this.Formats : AVFoundation.AVCaptureDeviceFormat[]" Usage="AVFoundation.AVCaptureDevice.Formats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("formats")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDeviceFormat[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:AVFoundation.AVCaptureDeviceFormat" />s supported by the device.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationStatus">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVAuthorizationStatus GetAuthorizationStatus (AVFoundation.AVAuthorizationMediaType mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AVFoundation.AVAuthorizationStatus GetAuthorizationStatus(valuetype AVFoundation.AVAuthorizationMediaType mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetAuthorizationStatus(AVFoundation.AVAuthorizationMediaType)" />
      <MemberSignature Language="F#" Value="static member GetAuthorizationStatus : AVFoundation.AVAuthorizationMediaType -&gt; AVFoundation.AVAuthorizationStatus" Usage="AVFoundation.AVCaptureDevice.GetAuthorizationStatus mediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAuthorizationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="AVFoundation.AVAuthorizationMediaType" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationStatus">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVAuthorizationStatus GetAuthorizationStatus (Foundation.NSString avMediaTypeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AVFoundation.AVAuthorizationStatus GetAuthorizationStatus(class Foundation.NSString avMediaTypeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetAuthorizationStatus(Foundation.NSString)" />
      <MemberSignature Language="F#" Value="static member GetAuthorizationStatus : Foundation.NSString -&gt; AVFoundation.AVAuthorizationStatus" Usage="AVFoundation.AVCaptureDevice.GetAuthorizationStatus avMediaTypeToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("authorizationStatusForMediaType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAuthorizationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="avMediaTypeToken" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="avMediaTypeToken">Should be one of the constants defined in <see cref="T:AVFoundation.AVMediaType" />.</param>
        <summary>Whether the app is permitted to capture the <paramref name="avMediaTypeToken" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChromaticityValues">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureWhiteBalanceChromaticityValues GetChromaticityValues (AVFoundation.AVCaptureWhiteBalanceGains whiteBalanceGains);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AVFoundation.AVCaptureWhiteBalanceChromaticityValues GetChromaticityValues(valuetype AVFoundation.AVCaptureWhiteBalanceGains whiteBalanceGains) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetChromaticityValues(AVFoundation.AVCaptureWhiteBalanceGains)" />
      <MemberSignature Language="F#" Value="abstract member GetChromaticityValues : AVFoundation.AVCaptureWhiteBalanceGains -&gt; AVFoundation.AVCaptureWhiteBalanceChromaticityValues&#xA;override this.GetChromaticityValues : AVFoundation.AVCaptureWhiteBalanceGains -&gt; AVFoundation.AVCaptureWhiteBalanceChromaticityValues" Usage="aVCaptureDevice.GetChromaticityValues whiteBalanceGains" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("chromaticityValuesForDeviceWhiteBalanceGains:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureWhiteBalanceChromaticityValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whiteBalanceGains" Type="AVFoundation.AVCaptureWhiteBalanceGains" />
      </Parameters>
      <Docs>
        <param name="whiteBalanceGains">To be added.</param>
        <summary>Gets the device-independent chromaticity values for the device-specific white balance RGB gains..</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDevice">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureDevice GetDefaultDevice (AVFoundation.AVMediaTypes mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCaptureDevice GetDefaultDevice(valuetype AVFoundation.AVMediaTypes mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetDefaultDevice(AVFoundation.AVMediaTypes)" />
      <MemberSignature Language="F#" Value="static member GetDefaultDevice : AVFoundation.AVMediaTypes -&gt; AVFoundation.AVCaptureDevice" Usage="AVFoundation.AVCaptureDevice.GetDefaultDevice mediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDevice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="AVFoundation.AVMediaTypes" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type for which to get the default device.</param>
        <summary>Returns the default device for the provided media type.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDevice">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureDevice GetDefaultDevice (Foundation.NSString mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCaptureDevice GetDefaultDevice(class Foundation.NSString mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetDefaultDevice(Foundation.NSString)" />
      <MemberSignature Language="F#" Value="static member GetDefaultDevice : Foundation.NSString -&gt; AVFoundation.AVCaptureDevice" Usage="AVFoundation.AVCaptureDevice.GetDefaultDevice mediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("defaultDeviceWithMediaType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDevice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type for which to get the default device.</param>
        <summary>Returns the default device for the provided media type.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDevice">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureDevice GetDefaultDevice (AVFoundation.AVCaptureDeviceType deviceType, string mediaType, AVFoundation.AVCaptureDevicePosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCaptureDevice GetDefaultDevice(valuetype AVFoundation.AVCaptureDeviceType deviceType, string mediaType, valuetype AVFoundation.AVCaptureDevicePosition position) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetDefaultDevice(AVFoundation.AVCaptureDeviceType,System.String,AVFoundation.AVCaptureDevicePosition)" />
      <MemberSignature Language="F#" Value="static member GetDefaultDevice : AVFoundation.AVCaptureDeviceType * string * AVFoundation.AVCaptureDevicePosition -&gt; AVFoundation.AVCaptureDevice" Usage="AVFoundation.AVCaptureDevice.GetDefaultDevice (deviceType, mediaType, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDevice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceType" Type="AVFoundation.AVCaptureDeviceType" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="position" Type="AVFoundation.AVCaptureDevicePosition" />
      </Parameters>
      <Docs>
        <param name="deviceType">The device type to use for capture.</param>
        <param name="mediaType">The media type for which to get the default device.</param>
        <param name="position">Whether the device is front facing, back facing, or unspecified.</param>
        <summary>Returns the default device for the provided device and media types and front or back facing position.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceWhiteBalanceGains">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureWhiteBalanceGains GetDeviceWhiteBalanceGains (AVFoundation.AVCaptureWhiteBalanceChromaticityValues chromaticityValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AVFoundation.AVCaptureWhiteBalanceGains GetDeviceWhiteBalanceGains(valuetype AVFoundation.AVCaptureWhiteBalanceChromaticityValues chromaticityValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetDeviceWhiteBalanceGains(AVFoundation.AVCaptureWhiteBalanceChromaticityValues)" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceWhiteBalanceGains : AVFoundation.AVCaptureWhiteBalanceChromaticityValues -&gt; AVFoundation.AVCaptureWhiteBalanceGains&#xA;override this.GetDeviceWhiteBalanceGains : AVFoundation.AVCaptureWhiteBalanceChromaticityValues -&gt; AVFoundation.AVCaptureWhiteBalanceGains" Usage="aVCaptureDevice.GetDeviceWhiteBalanceGains chromaticityValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("deviceWhiteBalanceGainsForChromaticityValues:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureWhiteBalanceGains</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chromaticityValues" Type="AVFoundation.AVCaptureWhiteBalanceChromaticityValues" />
      </Parameters>
      <Docs>
        <param name="chromaticityValues">To be added.</param>
        <summary>Returns the device-specific RGB white balance gains for the provided chromaticities.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceWhiteBalanceGains">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureWhiteBalanceGains GetDeviceWhiteBalanceGains (AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues tempAndTintValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AVFoundation.AVCaptureWhiteBalanceGains GetDeviceWhiteBalanceGains(valuetype AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues tempAndTintValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetDeviceWhiteBalanceGains(AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues)" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceWhiteBalanceGains : AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues -&gt; AVFoundation.AVCaptureWhiteBalanceGains&#xA;override this.GetDeviceWhiteBalanceGains : AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues -&gt; AVFoundation.AVCaptureWhiteBalanceGains" Usage="aVCaptureDevice.GetDeviceWhiteBalanceGains tempAndTintValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("deviceWhiteBalanceGainsForTemperatureAndTintValues:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureWhiteBalanceGains</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tempAndTintValues" Type="AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues" />
      </Parameters>
      <Docs>
        <param name="tempAndTintValues">To be added.</param>
        <summary>Returns the device-specific RGB white balance gains for the provided temperature and tint values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemperatureAndTintValues">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues GetTemperatureAndTintValues (AVFoundation.AVCaptureWhiteBalanceGains whiteBalanceGains);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues GetTemperatureAndTintValues(valuetype AVFoundation.AVCaptureWhiteBalanceGains whiteBalanceGains) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.GetTemperatureAndTintValues(AVFoundation.AVCaptureWhiteBalanceGains)" />
      <MemberSignature Language="F#" Value="abstract member GetTemperatureAndTintValues : AVFoundation.AVCaptureWhiteBalanceGains -&gt; AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues&#xA;override this.GetTemperatureAndTintValues : AVFoundation.AVCaptureWhiteBalanceGains -&gt; AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues" Usage="aVCaptureDevice.GetTemperatureAndTintValues whiteBalanceGains" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("temperatureAndTintValuesForDeviceWhiteBalanceGains:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureWhiteBalanceTemperatureAndTintValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whiteBalanceGains" Type="AVFoundation.AVCaptureWhiteBalanceGains" />
      </Parameters>
      <Docs>
        <param name="whiteBalanceGains">To be added.</param>
        <summary>Returns the temperature and tint values for the provided white balance gains.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrayWorldDeviceWhiteBalanceGains">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureWhiteBalanceGains GrayWorldDeviceWhiteBalanceGains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureWhiteBalanceGains GrayWorldDeviceWhiteBalanceGains" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.GrayWorldDeviceWhiteBalanceGains" />
      <MemberSignature Language="F#" Value="member this.GrayWorldDeviceWhiteBalanceGains : AVFoundation.AVCaptureWhiteBalanceGains" Usage="AVFoundation.AVCaptureDevice.GrayWorldDeviceWhiteBalanceGains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("grayWorldDeviceWhiteBalanceGains")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureWhiteBalanceGains</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current gray world RGB white-balance gain values.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFlash">
      <MemberSignature Language="C#" Value="public virtual bool HasFlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFlash" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.HasFlash" />
      <MemberSignature Language="F#" Value="member this.HasFlash : bool" Usage="AVFoundation.AVCaptureDevice.HasFlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("hasFlash")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether the device has a flash.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMediaType">
      <MemberSignature Language="C#" Value="public bool HasMediaType (AVFoundation.AVMediaTypes mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMediaType(valuetype AVFoundation.AVMediaTypes mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.HasMediaType(AVFoundation.AVMediaTypes)" />
      <MemberSignature Language="F#" Value="member this.HasMediaType : AVFoundation.AVMediaTypes -&gt; bool" Usage="aVCaptureDevice.HasMediaType mediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="AVFoundation.AVMediaTypes" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type to check.</param>
        <summary>Whether the device can provide the <paramref name="mediaType" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMediaType">
      <MemberSignature Language="C#" Value="public virtual bool HasMediaType (string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasMediaType(string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.HasMediaType(System.String)" />
      <MemberSignature Language="F#" Value="abstract member HasMediaType : string -&gt; bool&#xA;override this.HasMediaType : string -&gt; bool" Usage="aVCaptureDevice.HasMediaType mediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("hasMediaType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type to check.</param>
        <summary>Whether the device can provide the <paramref name="mediaType" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTorch">
      <MemberSignature Language="C#" Value="public virtual bool HasTorch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTorch" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.HasTorch" />
      <MemberSignature Language="F#" Value="member this.HasTorch : bool" Usage="AVFoundation.AVCaptureDevice.HasTorch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("hasTorch")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the device can be used as a flashlight.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExposureModeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsExposureModeSupported (AVFoundation.AVCaptureExposureMode exposureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsExposureModeSupported(valuetype AVFoundation.AVCaptureExposureMode exposureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.IsExposureModeSupported(AVFoundation.AVCaptureExposureMode)" />
      <MemberSignature Language="F#" Value="abstract member IsExposureModeSupported : AVFoundation.AVCaptureExposureMode -&gt; bool&#xA;override this.IsExposureModeSupported : AVFoundation.AVCaptureExposureMode -&gt; bool" Usage="aVCaptureDevice.IsExposureModeSupported exposureMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isExposureModeSupported:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exposureMode" Type="AVFoundation.AVCaptureExposureMode" />
      </Parameters>
      <Docs>
        <param name="exposureMode">To be added.</param>
        <summary>Whether the <paramref name="exposureMode" /> is supported.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlashModeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsFlashModeSupported (AVFoundation.AVCaptureFlashMode flashMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFlashModeSupported(valuetype AVFoundation.AVCaptureFlashMode flashMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.IsFlashModeSupported(AVFoundation.AVCaptureFlashMode)" />
      <MemberSignature Language="F#" Value="abstract member IsFlashModeSupported : AVFoundation.AVCaptureFlashMode -&gt; bool&#xA;override this.IsFlashModeSupported : AVFoundation.AVCaptureFlashMode -&gt; bool" Usage="aVCaptureDevice.IsFlashModeSupported flashMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isFlashModeSupported:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCapturePhotoOutput.SupportedFlashModes' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flashMode" Type="AVFoundation.AVCaptureFlashMode" />
      </Parameters>
      <Docs>
        <param name="flashMode">The flash mode to probe.</param>
        <summary>Determines if a specific flash mode is supported by the hardware.</summary>
        <returns>true if the specific flash mode is supported.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusModeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsFocusModeSupported (AVFoundation.AVCaptureFocusMode focusMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFocusModeSupported(valuetype AVFoundation.AVCaptureFocusMode focusMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.IsFocusModeSupported(AVFoundation.AVCaptureFocusMode)" />
      <MemberSignature Language="F#" Value="abstract member IsFocusModeSupported : AVFoundation.AVCaptureFocusMode -&gt; bool&#xA;override this.IsFocusModeSupported : AVFoundation.AVCaptureFocusMode -&gt; bool" Usage="aVCaptureDevice.IsFocusModeSupported focusMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isFocusModeSupported:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusMode" Type="AVFoundation.AVCaptureFocusMode" />
      </Parameters>
      <Docs>
        <param name="focusMode">To be added.</param>
        <summary>Whether the <paramref name="focusMode" /> is supported.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ISO">
      <MemberSignature Language="C#" Value="public virtual float ISO { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ISO" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ISO" />
      <MemberSignature Language="F#" Value="member this.ISO : single" Usage="AVFoundation.AVCaptureDevice.ISO" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("ISO")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current ISO.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrent">
      <MemberSignature Language="C#" Value="public static float ISOCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 ISOCurrent" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ISOCurrent" />
      <MemberSignature Language="F#" Value="member this.ISOCurrent : single" Usage="AVFoundation.AVCaptureDevice.ISOCurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureISOCurrent", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant AVCaptureISOCurrent</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTorchModeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsTorchModeSupported (AVFoundation.AVCaptureTorchMode torchMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTorchModeSupported(valuetype AVFoundation.AVCaptureTorchMode torchMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.IsTorchModeSupported(AVFoundation.AVCaptureTorchMode)" />
      <MemberSignature Language="F#" Value="abstract member IsTorchModeSupported : AVFoundation.AVCaptureTorchMode -&gt; bool&#xA;override this.IsTorchModeSupported : AVFoundation.AVCaptureTorchMode -&gt; bool" Usage="aVCaptureDevice.IsTorchModeSupported torchMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isTorchModeSupported:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="torchMode" Type="AVFoundation.AVCaptureTorchMode" />
      </Parameters>
      <Docs>
        <param name="torchMode">The mode to probe for.</param>
        <summary>Determines whether the specific torch mode is supported by the device.</summary>
        <returns>True if the specific torch mode is supported.</returns>
        <remarks>
          <para>
 	    Torch mode is a mode in which the flash light can be used continuously in low-intensity mode (typically to illuminate video captures).
 	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhiteBalanceModeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsWhiteBalanceModeSupported (AVFoundation.AVCaptureWhiteBalanceMode whiteBalanceMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsWhiteBalanceModeSupported(valuetype AVFoundation.AVCaptureWhiteBalanceMode whiteBalanceMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.IsWhiteBalanceModeSupported(AVFoundation.AVCaptureWhiteBalanceMode)" />
      <MemberSignature Language="F#" Value="abstract member IsWhiteBalanceModeSupported : AVFoundation.AVCaptureWhiteBalanceMode -&gt; bool&#xA;override this.IsWhiteBalanceModeSupported : AVFoundation.AVCaptureWhiteBalanceMode -&gt; bool" Usage="aVCaptureDevice.IsWhiteBalanceModeSupported whiteBalanceMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isWhiteBalanceModeSupported:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whiteBalanceMode" Type="AVFoundation.AVCaptureWhiteBalanceMode" />
      </Parameters>
      <Docs>
        <param name="whiteBalanceMode">To be added.</param>
        <summary>Whether the <paramref name="whiteBalanceMode" /> is supported.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LensAperture">
      <MemberSignature Language="C#" Value="public virtual float LensAperture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LensAperture" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.LensAperture" />
      <MemberSignature Language="F#" Value="member this.LensAperture : single" Usage="AVFoundation.AVCaptureDevice.LensAperture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("lensAperture")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The size, in mm, of the lens opening.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LensPosition">
      <MemberSignature Language="C#" Value="public virtual float LensPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LensPosition" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.LensPosition" />
      <MemberSignature Language="F#" Value="member this.LensPosition : single" Usage="AVFoundation.AVCaptureDevice.LensPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("lensPosition")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The focus position of the lens.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LensPositionCurrent">
      <MemberSignature Language="C#" Value="public static float LensPositionCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 LensPositionCurrent" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.LensPositionCurrent" />
      <MemberSignature Language="F#" Value="member this.LensPositionCurrent : single" Usage="AVFoundation.AVCaptureDevice.LensPositionCurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureLensPositionCurrent", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant AVCaptureLensPositionCurrent</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedName">
      <MemberSignature Language="C#" Value="public virtual string LocalizedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedName" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.LocalizedName" />
      <MemberSignature Language="F#" Value="member this.LocalizedName : string" Usage="AVFoundation.AVCaptureDevice.LocalizedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("localizedName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A localized, human-readable name (e.g., "Back Camera") for the <see cref="T:AVFoundation.AVCaptureDevice" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockExposure">
      <MemberSignature Language="C#" Value="public virtual void LockExposure (CoreMedia.CMTime duration, float ISO, Action&lt;CoreMedia.CMTime&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockExposure(valuetype CoreMedia.CMTime duration, float32 ISO, class System.Action`1&lt;valuetype CoreMedia.CMTime&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.LockExposure(CoreMedia.CMTime,System.Single,System.Action{CoreMedia.CMTime})" />
      <MemberSignature Language="F#" Value="abstract member LockExposure : CoreMedia.CMTime * single * Action&lt;CoreMedia.CMTime&gt; -&gt; unit&#xA;override this.LockExposure : CoreMedia.CMTime * single * Action&lt;CoreMedia.CMTime&gt; -&gt; unit" Usage="aVCaptureDevice.LockExposure (duration, ISO, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setExposureModeCustomWithDuration:ISO:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="CoreMedia.CMTime" />
        <Parameter Name="ISO" Type="System.Single" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CoreMedia.CMTime&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="duration">To be added.</param>
        <param name="ISO">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Locks the exposure for the provided duration and ISO, and runs a completion handler when it is finished.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockExposureAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt; LockExposureAsync (CoreMedia.CMTime duration, float ISO);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype CoreMedia.CMTime&gt; LockExposureAsync(valuetype CoreMedia.CMTime duration, float32 ISO) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.LockExposureAsync(CoreMedia.CMTime,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member LockExposureAsync : CoreMedia.CMTime * single -&gt; System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;&#xA;override this.LockExposureAsync : CoreMedia.CMTime * single -&gt; System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;" Usage="aVCaptureDevice.LockExposureAsync (duration, ISO)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="CoreMedia.CMTime" />
        <Parameter Name="ISO" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="duration">To be added.</param>
        <param name="ISO">To be added.</param>
        <summary>Locks the exposure for the provided duration and ISO, and runs a completion handler when it is finished.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous LockExposure operation.  The value of the TResult parameter is of type System.Action&lt;CoreMedia.CMTime&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockForConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool LockForConfiguration (out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LockForConfiguration([out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member LockForConfiguration :  -&gt; bool&#xA;override this.LockForConfiguration :  -&gt; bool" Usage="aVCaptureDevice.LockForConfiguration error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("lockForConfiguration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>Gains exclusive access to the device configuration.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Modifying the configuration of the device after the session starts requires bracketing the configuration calls with this and <see cref="M:AVFoundation.AVCaptureDevice.UnlockForConfiguration" />. If these methods are not properly called and matched, attempts to change the configuration will result in exceptions.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockingFocusWithCustomLensPositionSupported">
      <MemberSignature Language="C#" Value="public virtual bool LockingFocusWithCustomLensPositionSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockingFocusWithCustomLensPositionSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.LockingFocusWithCustomLensPositionSupported" />
      <MemberSignature Language="F#" Value="member this.LockingFocusWithCustomLensPositionSupported : bool" Usage="AVFoundation.AVCaptureDevice.LockingFocusWithCustomLensPositionSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLockingFocusWithCustomLensPositionSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether the device can lock the focus to a specific position.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockingWhiteBalanceWithCustomDeviceGainsSupported">
      <MemberSignature Language="C#" Value="public virtual bool LockingWhiteBalanceWithCustomDeviceGainsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockingWhiteBalanceWithCustomDeviceGainsSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.LockingWhiteBalanceWithCustomDeviceGainsSupported" />
      <MemberSignature Language="F#" Value="member this.LockingWhiteBalanceWithCustomDeviceGainsSupported : bool" Usage="AVFoundation.AVCaptureDevice.LockingWhiteBalanceWithCustomDeviceGainsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLockingWhiteBalanceWithCustomDeviceGainsSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether the device can lock the white balance with custom device-specific gains.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LowLightBoostEnabled">
      <MemberSignature Language="C#" Value="public virtual bool LowLightBoostEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowLightBoostEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.LowLightBoostEnabled" />
      <MemberSignature Language="F#" Value="member this.LowLightBoostEnabled : bool" Usage="AVFoundation.AVCaptureDevice.LowLightBoostEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLowLightBoostEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the low-light "boost mode" (ISO 3200) is enabled.</summary>
        <value>The default is <see langword="false" />.</value>
        <remarks>
          <para>The default sensitivity of the iPhone 5 is equivalent to ISO 800. The "boost mode" increases sensitivity to ISO 3200, at the cost of increased sensor noise.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowLightBoostSupported">
      <MemberSignature Language="C#" Value="public virtual bool LowLightBoostSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowLightBoostSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.LowLightBoostSupported" />
      <MemberSignature Language="F#" Value="member this.LowLightBoostSupported : bool" Usage="AVFoundation.AVCaptureDevice.LowLightBoostSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLowLightBoostSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the device supports ISO 3200 "low-light boost mode".</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAvailableTorchLevel">
      <MemberSignature Language="C#" Value="public static float MaxAvailableTorchLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 MaxAvailableTorchLevel" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.MaxAvailableTorchLevel" />
      <MemberSignature Language="F#" Value="member this.MaxAvailableTorchLevel : single" Usage="AVFoundation.AVCaptureDevice.MaxAvailableTorchLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureMaxAvailableTorchLevel", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant AVCaptureMaxAvailableTorchLevel</summary>
        <value>
        </value>
        <remarks>
          <para>
 	    Torch mode is a mode in which the flash light can be used continuously in low-intensity mode (typically to illuminate videos).
 	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAvailableVideoZoomFactor">
      <MemberSignature Language="C#" Value="public virtual nfloat MaxAvailableVideoZoomFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat MaxAvailableVideoZoomFactor" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.MaxAvailableVideoZoomFactor" />
      <MemberSignature Language="F#" Value="member this.MaxAvailableVideoZoomFactor : nfloat" Usage="AVFoundation.AVCaptureDevice.MaxAvailableVideoZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maxAvailableVideoZoomFactor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxExposureTargetBias">
      <MemberSignature Language="C#" Value="public virtual float MaxExposureTargetBias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxExposureTargetBias" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.MaxExposureTargetBias" />
      <MemberSignature Language="F#" Value="member this.MaxExposureTargetBias : single" Usage="AVFoundation.AVCaptureDevice.MaxExposureTargetBias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maxExposureTargetBias")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum allowed exposure bias, in EV units.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWhiteBalanceGain">
      <MemberSignature Language="C#" Value="public virtual float MaxWhiteBalanceGain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxWhiteBalanceGain" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.MaxWhiteBalanceGain" />
      <MemberSignature Language="F#" Value="member this.MaxWhiteBalanceGain : single" Usage="AVFoundation.AVCaptureDevice.MaxWhiteBalanceGain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maxWhiteBalanceGain")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum value to which gain in a white balance channel may be set.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAvailableVideoZoomFactor">
      <MemberSignature Language="C#" Value="public virtual nfloat MinAvailableVideoZoomFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat MinAvailableVideoZoomFactor" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.MinAvailableVideoZoomFactor" />
      <MemberSignature Language="F#" Value="member this.MinAvailableVideoZoomFactor : nfloat" Usage="AVFoundation.AVCaptureDevice.MinAvailableVideoZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minAvailableVideoZoomFactor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinExposureTargetBias">
      <MemberSignature Language="C#" Value="public virtual float MinExposureTargetBias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinExposureTargetBias" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.MinExposureTargetBias" />
      <MemberSignature Language="F#" Value="member this.MinExposureTargetBias : single" Usage="AVFoundation.AVCaptureDevice.MinExposureTargetBias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minExposureTargetBias")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum allowed exposure bias, in EV units.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelID">
      <MemberSignature Language="C#" Value="public virtual string ModelID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelID" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.ModelID" />
      <MemberSignature Language="F#" Value="member this.ModelID : string" Usage="AVFoundation.AVCaptureDevice.ModelID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("modelID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the model of the <see cref="T:AVFoundation.AVCaptureDevice" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This value will remain constant across iOS devices and device models. For instance, the camera model in an iPhone and an iPad may be the same model of <see cref="T:AVFoundation.AVCaptureDevice" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureDevicePosition Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureDevicePosition Position" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.Position" />
      <MemberSignature Language="F#" Value="member this.Position : AVFoundation.AVCaptureDevicePosition" Usage="AVFoundation.AVCaptureDevice.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("position")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDevicePosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The physical position of the device.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RampingVideoZoom">
      <MemberSignature Language="C#" Value="public virtual bool RampingVideoZoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RampingVideoZoom" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.RampingVideoZoom" />
      <MemberSignature Language="F#" Value="member this.RampingVideoZoom : bool" Usage="AVFoundation.AVCaptureDevice.RampingVideoZoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isRampingVideoZoom")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether a zoom transition is in progress.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RampToVideoZoom">
      <MemberSignature Language="C#" Value="public virtual void RampToVideoZoom (nfloat factor, float rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RampToVideoZoom(valuetype System.nfloat factor, float32 rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.RampToVideoZoom(System.nfloat,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RampToVideoZoom : nfloat * single -&gt; unit&#xA;override this.RampToVideoZoom : nfloat * single -&gt; unit" Usage="aVCaptureDevice.RampToVideoZoom (factor, rate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("rampToVideoZoomFactor:withRate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.nfloat" />
        <Parameter Name="rate" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <param name="rate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAccessForMediaType">
      <MemberSignature Language="C#" Value="public static void RequestAccessForMediaType (AVFoundation.AVAuthorizationMediaType mediaType, AVFoundation.AVRequestAccessStatus completion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestAccessForMediaType(valuetype AVFoundation.AVAuthorizationMediaType mediaType, class AVFoundation.AVRequestAccessStatus completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.RequestAccessForMediaType(AVFoundation.AVAuthorizationMediaType,AVFoundation.AVRequestAccessStatus)" />
      <MemberSignature Language="F#" Value="static member RequestAccessForMediaType : AVFoundation.AVAuthorizationMediaType * AVFoundation.AVRequestAccessStatus -&gt; unit" Usage="AVFoundation.AVCaptureDevice.RequestAccessForMediaType (mediaType, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="AVFoundation.AVAuthorizationMediaType" />
        <Parameter Name="completion" Type="AVFoundation.AVRequestAccessStatus">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAVRequestAccessStatus))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <param name="completion">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAccessForMediaType">
      <MemberSignature Language="C#" Value="public static void RequestAccessForMediaType (Foundation.NSString avMediaTypeToken, AVFoundation.AVRequestAccessStatus completion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestAccessForMediaType(class Foundation.NSString avMediaTypeToken, class AVFoundation.AVRequestAccessStatus completion) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.RequestAccessForMediaType(Foundation.NSString,AVFoundation.AVRequestAccessStatus)" />
      <MemberSignature Language="F#" Value="static member RequestAccessForMediaType : Foundation.NSString * AVFoundation.AVRequestAccessStatus -&gt; unit" Usage="AVFoundation.AVCaptureDevice.RequestAccessForMediaType (avMediaTypeToken, completion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("requestAccessForMediaType:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="avMediaTypeToken" Type="Foundation.NSString" />
        <Parameter Name="completion" Type="AVFoundation.AVRequestAccessStatus">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAVRequestAccessStatus))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="avMediaTypeToken">The type of media for which access is being requested. Should be a value defined in <see cref="T:AVFoundation.AVMediaType" />.</param>
        <param name="completion">Completion handler called after the user interacts with the permissions dialog.</param>
        <summary>Requests the application user's permission, if necessary, to capture the <paramref name="avMediaTypeToken" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAccessForMediaTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RequestAccessForMediaTypeAsync (AVFoundation.AVAuthorizationMediaType mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RequestAccessForMediaTypeAsync(valuetype AVFoundation.AVAuthorizationMediaType mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.RequestAccessForMediaTypeAsync(AVFoundation.AVAuthorizationMediaType)" />
      <MemberSignature Language="F#" Value="static member RequestAccessForMediaTypeAsync : AVFoundation.AVAuthorizationMediaType -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="AVFoundation.AVCaptureDevice.RequestAccessForMediaTypeAsync mediaType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="AVFoundation.AVAuthorizationMediaType" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAccessForMediaTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RequestAccessForMediaTypeAsync (Foundation.NSString avMediaTypeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RequestAccessForMediaTypeAsync(class Foundation.NSString avMediaTypeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.RequestAccessForMediaTypeAsync(Foundation.NSString)" />
      <MemberSignature Language="F#" Value="static member RequestAccessForMediaTypeAsync : Foundation.NSString -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="AVFoundation.AVCaptureDevice.RequestAccessForMediaTypeAsync avMediaTypeToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="avMediaTypeToken" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="avMediaTypeToken">The type of media for which access is being requested. Should be a value defined in .</param>
        <summary>Requests the application user's permission, if necessary, to capture the <paramref name="avMediaTypeToken" />.</summary>
        <returns>
          <para>A task that represents the asynchronous RequestAccessForMediaType operation.   The value of the TResult parameter is a AVFoundation.AVRequestAccessStatus.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExposureTargetBias">
      <MemberSignature Language="C#" Value="public virtual void SetExposureTargetBias (float bias, Action&lt;CoreMedia.CMTime&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExposureTargetBias(float32 bias, class System.Action`1&lt;valuetype CoreMedia.CMTime&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.SetExposureTargetBias(System.Single,System.Action{CoreMedia.CMTime})" />
      <MemberSignature Language="F#" Value="abstract member SetExposureTargetBias : single * Action&lt;CoreMedia.CMTime&gt; -&gt; unit&#xA;override this.SetExposureTargetBias : single * Action&lt;CoreMedia.CMTime&gt; -&gt; unit" Usage="aVCaptureDevice.SetExposureTargetBias (bias, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setExposureTargetBias:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bias" Type="System.Single" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CoreMedia.CMTime&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="bias">Bias to apply to the exposure target.  You can pass <see cref="P:AVFoundation.AVCaptureDevice.ExposureTargetBiasCurrent" /> if you do not want to specify a value, and instead want to use the current value.</param>
        <param name="completionHandler">
          <para>This method is invoked when the bias has been set.   </para>
          <para>The method receives a <see cref="T:CoreMedia.CMTime" /> parameter with the device clock timestamp of the first sample buffer that received the new bias setting.  </para>
          <para>If you must compare the time stamp with the buffers delivered by <see cref="T:AVFoundation.AVCaptureVideoDataOutput" /> you must convert the time to the master clock.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Sets the exposure target bias (measured in Exposure Value units).</summary>
        <remarks>You must invoke the <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" /> method before invoking this method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExposureTargetBiasAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt; SetExposureTargetBiasAsync (float bias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype CoreMedia.CMTime&gt; SetExposureTargetBiasAsync(float32 bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.SetExposureTargetBiasAsync(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetExposureTargetBiasAsync : single -&gt; System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;&#xA;override this.SetExposureTargetBiasAsync : single -&gt; System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;" Usage="aVCaptureDevice.SetExposureTargetBiasAsync bias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bias" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="bias">Bias to apply to the exposure target.  You can pass  if you do not want to specify a value, and instead want to use the current value.</param>
        <summary>Sets the exposure target bias (measured in Exposure Value units).</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous SetExposureTargetBias operation.  The value of the TResult parameter is of type System.Action&lt;CoreMedia.CMTime&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusModeLocked">
      <MemberSignature Language="C#" Value="public virtual void SetFocusModeLocked (float lensPosition, Action&lt;CoreMedia.CMTime&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFocusModeLocked(float32 lensPosition, class System.Action`1&lt;valuetype CoreMedia.CMTime&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.SetFocusModeLocked(System.Single,System.Action{CoreMedia.CMTime})" />
      <MemberSignature Language="F#" Value="abstract member SetFocusModeLocked : single * Action&lt;CoreMedia.CMTime&gt; -&gt; unit&#xA;override this.SetFocusModeLocked : single * Action&lt;CoreMedia.CMTime&gt; -&gt; unit" Usage="aVCaptureDevice.SetFocusModeLocked (lensPosition, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setFocusModeLockedWithLensPosition:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lensPosition" Type="System.Single" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CoreMedia.CMTime&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lensPosition">
          <para>Sets the lens position, must be a value between 0.0
	  and 1.0.  The zero value representing the shortest position
	  that the camera can focus and one representing the furthest
	  position that it can focus.</para>
          <para> If you do not want to set the lens position, pass the
	  <see cref="P:AVFoundation.AVCaptureDevice.LensPositionCurrent" />
	  value.</para>
        </param>
        <param name="completionHandler">
          <para>Method to invoke when the camera has been changed to the specified lens position, the parameter of the callback is the time at which the change took place.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Locks the lens position at the specified position.</summary>
        <remarks>You must invoke the <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" /> method before invoking this method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusModeLockedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt; SetFocusModeLockedAsync (float lensPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype CoreMedia.CMTime&gt; SetFocusModeLockedAsync(float32 lensPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.SetFocusModeLockedAsync(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetFocusModeLockedAsync : single -&gt; System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;&#xA;override this.SetFocusModeLockedAsync : single -&gt; System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;" Usage="aVCaptureDevice.SetFocusModeLockedAsync lensPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lensPosition" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="lensPosition">Sets the lens position, must be a value between 0.0
	  and 1.0.  The zero value representing the shortest position
	  that the camera can focus and one representing the furthest
	  position that it can focus. If you do not want to set the lens position, pass the
	  
	  value.</param>
        <summary>Locks the lens position at the specified position.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous SetFocusModeLocked operation.  The value of the TResult parameter is of type System.Action&lt;CoreMedia.CMTime&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTorchModeLevel">
      <MemberSignature Language="C#" Value="public virtual bool SetTorchModeLevel (float torchLevel, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTorchModeLevel(float32 torchLevel, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.SetTorchModeLevel(System.Single,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member SetTorchModeLevel : single *  -&gt; bool&#xA;override this.SetTorchModeLevel : single *  -&gt; bool" Usage="aVCaptureDevice.SetTorchModeLevel (torchLevel, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setTorchModeOnWithLevel:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="torchLevel" Type="System.Single" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="torchLevel">A value between 0 (off) and 1.0 (maximum brightness).</param>
        <param name="outError">To be added.</param>
        <summary>Specifies the torch / flashlight level.</summary>
        <returns>
        </returns>
        <remarks>
          <para>
 	    Torch mode is a mode in which the flash light can be used continuously in low-intensity mode (typically to illuminate videos).
 	  </para>
          <para>You must invoke the <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" /> method before invoking this method.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains">
      <MemberSignature Language="C#" Value="public virtual void SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains (AVFoundation.AVCaptureWhiteBalanceGains whiteBalanceGains, Action&lt;CoreMedia.CMTime&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains(valuetype AVFoundation.AVCaptureWhiteBalanceGains whiteBalanceGains, class System.Action`1&lt;valuetype CoreMedia.CMTime&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains(AVFoundation.AVCaptureWhiteBalanceGains,System.Action{CoreMedia.CMTime})" />
      <MemberSignature Language="F#" Value="abstract member SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains : AVFoundation.AVCaptureWhiteBalanceGains * Action&lt;CoreMedia.CMTime&gt; -&gt; unit&#xA;override this.SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains : AVFoundation.AVCaptureWhiteBalanceGains * Action&lt;CoreMedia.CMTime&gt; -&gt; unit" Usage="aVCaptureDevice.SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains (whiteBalanceGains, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whiteBalanceGains" Type="AVFoundation.AVCaptureWhiteBalanceGains" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CoreMedia.CMTime&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="whiteBalanceGains">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Locks the device's white balance to the provided device-specific gains.</summary>
        <remarks>You must invoke the <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" /> method before invoking this method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGainsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt; SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGainsAsync (AVFoundation.AVCaptureWhiteBalanceGains whiteBalanceGains);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype CoreMedia.CMTime&gt; SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGainsAsync(valuetype AVFoundation.AVCaptureWhiteBalanceGains whiteBalanceGains) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGainsAsync(AVFoundation.AVCaptureWhiteBalanceGains)" />
      <MemberSignature Language="F#" Value="abstract member SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGainsAsync : AVFoundation.AVCaptureWhiteBalanceGains -&gt; System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;&#xA;override this.SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGainsAsync : AVFoundation.AVCaptureWhiteBalanceGains -&gt; System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;" Usage="aVCaptureDevice.SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGainsAsync whiteBalanceGains" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CoreMedia.CMTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whiteBalanceGains" Type="AVFoundation.AVCaptureWhiteBalanceGains" />
      </Parameters>
      <Docs>
        <param name="whiteBalanceGains">To be added.</param>
        <summary>Locks the device's white balance to the provided device-specific gains.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains operation.  The value of the TResult parameter is of type System.Action&lt;CoreMedia.CMTime&gt;.</para>
        </returns>
        <remarks>
          <para copied="true">The SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGainsAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" copied="true" />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmoothAutoFocusEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SmoothAutoFocusEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmoothAutoFocusEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.SmoothAutoFocusEnabled" />
      <MemberSignature Language="F#" Value="member this.SmoothAutoFocusEnabled : bool with get, set" Usage="AVFoundation.AVCaptureDevice.SmoothAutoFocusEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isSmoothAutoFocusEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSmoothAutoFocusEnabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether autofocus should be slowed down,for instance, for video capture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmoothAutoFocusSupported">
      <MemberSignature Language="C#" Value="public virtual bool SmoothAutoFocusSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmoothAutoFocusSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.SmoothAutoFocusSupported" />
      <MemberSignature Language="F#" Value="member this.SmoothAutoFocusSupported : bool" Usage="AVFoundation.AVCaptureDevice.SmoothAutoFocusSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isSmoothAutoFocusSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether autofocus can be slowed down.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectAreaChangeMonitoringEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SubjectAreaChangeMonitoringEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubjectAreaChangeMonitoringEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.SubjectAreaChangeMonitoringEnabled" />
      <MemberSignature Language="F#" Value="member this.SubjectAreaChangeMonitoringEnabled : bool with get, set" Usage="AVFoundation.AVCaptureDevice.SubjectAreaChangeMonitoringEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isSubjectAreaChangeMonitoringEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSubjectAreaChangeMonitoringEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether the receiver should watch the video for lighting, movement, or etc.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectAreaDidChangeNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SubjectAreaDidChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SubjectAreaDidChangeNotification" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.SubjectAreaDidChangeNotification" />
      <MemberSignature Language="F#" Value="member this.SubjectAreaDidChangeNotification : Foundation.NSString" Usage="AVFoundation.AVCaptureDevice.SubjectAreaDidChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use AVCaptureDevice.Notifications.ObserveSubjectAreaDidChange helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureDeviceSubjectAreaDidChangeNotification", "AVFoundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for SubjectAreaDidChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <para id="tool-remark">If you want to subscribe to this notification, you can use the convenience <see cref="T:AVFoundation.AVCaptureDevice.Notifications" />.<see cref="M:AVFoundation.AVCaptureDevice.Notifications.ObserveSubjectAreaDidChange*" /> method which offers strongly typed access to the parameters of the notification.</para>
          <para>The following example shows how to use the strongly typed Notifications class, to take the guesswork out of the available properties in the notification:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// Lambda style
//

// listening
notification = AVCaptureDevice.Notifications.ObserveSubjectAreaDidChange ((sender, args) => {
    /* Access strongly typed args */
    Console.WriteLine ("Notification: {0}", args.Notification);
});

// To stop listening:
notification.Dispose ();

//
// Method style
//
NSObject notification;
void Callback (object sender, Foundation.NSNotificationEventArgs args)
{
    // Access strongly typed args
    Console.WriteLine ("Notification: {0}", args.Notification);
}

void Setup ()
{
    notification = AVCaptureDevice.Notifications.ObserveSubjectAreaDidChange (Callback);
}

void Teardown ()
{
    notification.Dispose ();
}]]></code>
          </example>
          <para>The following example shows how to use the notification with the DefaultCenter API:</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        AVCaptureDevice.SubjectAreaDidChangeNotification, (notification) => {Console.WriteLine ("Received the notification AVCaptureDevice", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification AVCaptureDevice", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (AVCaptureDevice.SubjectAreaDidChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAVCaptureSessionPreset">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAVCaptureSessionPreset (string preset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsAVCaptureSessionPreset(string preset) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.SupportsAVCaptureSessionPreset(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SupportsAVCaptureSessionPreset : string -&gt; bool&#xA;override this.SupportsAVCaptureSessionPreset : string -&gt; bool" Usage="aVCaptureDevice.SupportsAVCaptureSessionPreset preset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("supportsAVCaptureSessionPreset:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="preset">To be added.</param>
        <summary>Whether the <see cref="T:AVFoundation.AVCaptureDevice" /> supports the <paramref name="preset" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemPressureState">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureSystemPressureState SystemPressureState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCaptureSystemPressureState SystemPressureState" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.SystemPressureState" />
      <MemberSignature Language="F#" Value="member this.SystemPressureState : AVFoundation.AVCaptureSystemPressureState" Usage="AVFoundation.AVCaptureDevice.SystemPressureState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("systemPressureState")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureSystemPressureState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TorchActive">
      <MemberSignature Language="C#" Value="public virtual bool TorchActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TorchActive" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.TorchActive" />
      <MemberSignature Language="F#" Value="member this.TorchActive : bool" Usage="AVFoundation.AVCaptureDevice.TorchActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isTorchActive")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the torch / flashlight is active.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TorchAvailable">
      <MemberSignature Language="C#" Value="public virtual bool TorchAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TorchAvailable" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.TorchAvailable" />
      <MemberSignature Language="F#" Value="member this.TorchAvailable : bool" Usage="AVFoundation.AVCaptureDevice.TorchAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isTorchAvailable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the <see cref="T:AVFoundation.AVCaptureDevice" /> has a torch / flashlight.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TorchLevel">
      <MemberSignature Language="C#" Value="public virtual float TorchLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TorchLevel" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.TorchLevel" />
      <MemberSignature Language="F#" Value="member this.TorchLevel : single" Usage="AVFoundation.AVCaptureDevice.TorchLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("torchLevel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current level, from 0 for off to 1 for maximum brightness, of the torch / flashlight.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TorchMode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureTorchMode TorchMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureTorchMode TorchMode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.TorchMode" />
      <MemberSignature Language="F#" Value="member this.TorchMode : AVFoundation.AVCaptureTorchMode with get, set" Usage="AVFoundation.AVCaptureDevice.TorchMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("torchMode", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setTorchMode:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureTorchMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current <see cref="T:AVFoundation.AVCaptureTorchMode" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public virtual string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.UniqueID" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="AVFoundation.AVCaptureDevice.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("uniqueID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A unique identifier for this <see cref="T:AVFoundation.AVCaptureDevice" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:AVFoundation.AVCaptureDevice.LocalizedName" />
        <altmember cref="P:AVFoundation.AVCaptureDevice.ModelID" />
      </Docs>
    </Member>
    <Member MemberName="UnlockForConfiguration">
      <MemberSignature Language="C#" Value="public virtual void UnlockForConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockForConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDevice.UnlockForConfiguration" />
      <MemberSignature Language="F#" Value="abstract member UnlockForConfiguration : unit -&gt; unit&#xA;override this.UnlockForConfiguration : unit -&gt; unit" Usage="aVCaptureDevice.UnlockForConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("unlockForConfiguration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>With <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" />, commits the requested configuration changes.</summary>
        <remarks>
          <para>After the <see cref="T:AVFoundation.AVCaptureSession" /> has started, all changes to the <see cref="T:AVFoundation.AVCaptureDevice" /> configuration must be bracketed with calls to <see cref="M:AVFoundation.AVCaptureDevice.LockForConfiguration(Foundation.NSError@)" /> and <see cref="M:AVFoundation.AVCaptureDevice.UnlockForConfiguration" />. Configuration changes that are performed outside of such calls will throw exceptions.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoHdrEnabled">
      <MemberSignature Language="C#" Value="public virtual bool VideoHdrEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VideoHdrEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.VideoHdrEnabled" />
      <MemberSignature Language="F#" Value="member this.VideoHdrEnabled : bool with get, set" Usage="AVFoundation.AVCaptureDevice.VideoHdrEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isVideoHDREnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setVideoHDREnabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the device is currently streaming HDR video.</summary>
        <value>
          <para />
        </value>
        <remarks>
          <para>Setting this property requires the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=P:AVFoundation.AVCaptureDevice.ActiveFormat’s&amp;scope=Xamarin" title="P:AVFoundation.AVCaptureDevice.ActiveFormat’s">P:AVFoundation.AVCaptureDevice.ActiveFormat’s</a></format> IsVideoHdrSupported to be <see langword="true" />, otherwise you will get an exception.</para>
          <para />
          <para>Setting the <see cref="P:AVFoundation.AVCaptureDevice.ActiveFormat" /> property will change this to <see langword="false" />.  </para>
          <para />
          <para>This property can only be set if you first set <see cref="P:AVFoundation.AVCaptureDevice.AutomaticallyAdjustsVideoHdrEnabled" /> to <see langword="false" />.</para>
          <para />
          <para>In constrat, setting the <see cref="P:AVFoundation.AVCaptureSession.SessionPreset" /> will set this property to <see langword="true" /> if the session preset is a good match for HDR video.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoZoomFactor">
      <MemberSignature Language="C#" Value="public virtual nfloat VideoZoomFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat VideoZoomFactor" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.VideoZoomFactor" />
      <MemberSignature Language="F#" Value="member this.VideoZoomFactor : nfloat with get, set" Usage="AVFoundation.AVCaptureDevice.VideoZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoZoomFactor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setVideoZoomFactor:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current zoom of the video capture.</summary>
        <value>A value of 1.0 is full-frame (fully zoomed out).</value>
        <remarks>
          <para>This value is a reciprocal of the amount of zoom. For instance, a value of 2.0 indicates a zoom that includes half the field of view.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WasConnectedNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString WasConnectedNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString WasConnectedNotification" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.WasConnectedNotification" />
      <MemberSignature Language="F#" Value="member this.WasConnectedNotification : Foundation.NSString" Usage="AVFoundation.AVCaptureDevice.WasConnectedNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use AVCaptureDevice.Notifications.ObserveWasConnected helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureDeviceWasConnectedNotification", "AVFoundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for WasConnected</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <para id="tool-remark">If you want to subscribe to this notification, you can use the convenience <see cref="T:AVFoundation.AVCaptureDevice.Notifications" />.<see cref="M:AVFoundation.AVCaptureDevice.Notifications.ObserveWasConnected*" /> method which offers strongly typed access to the parameters of the notification.</para>
          <para>The following example shows how to use the strongly typed Notifications class, to take the guesswork out of the available properties in the notification:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// Lambda style
//

// listening
notification = AVCaptureDevice.Notifications.ObserveWasConnected ((sender, args) => {
    /* Access strongly typed args */
    Console.WriteLine ("Notification: {0}", args.Notification);
});

// To stop listening:
notification.Dispose ();

//
// Method style
//
NSObject notification;
void Callback (object sender, Foundation.NSNotificationEventArgs args)
{
    // Access strongly typed args
    Console.WriteLine ("Notification: {0}", args.Notification);
}

void Setup ()
{
    notification = AVCaptureDevice.Notifications.ObserveWasConnected (Callback);
}

void Teardown ()
{
    notification.Dispose ();
}]]></code>
          </example>
          <para>The following example shows how to use the notification with the DefaultCenter API:</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        AVCaptureDevice.WasConnectedNotification, (notification) => {Console.WriteLine ("Received the notification AVCaptureDevice", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification AVCaptureDevice", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (AVCaptureDevice.WasConnectedNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WasDisconnectedNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString WasDisconnectedNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString WasDisconnectedNotification" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.WasDisconnectedNotification" />
      <MemberSignature Language="F#" Value="member this.WasDisconnectedNotification : Foundation.NSString" Usage="AVFoundation.AVCaptureDevice.WasDisconnectedNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use AVCaptureDevice.Notifications.ObserveWasDisconnected helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureDeviceWasDisconnectedNotification", "AVFoundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for WasDisconnected</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <para id="tool-remark">If you want to subscribe to this notification, you can use the convenience <see cref="T:AVFoundation.AVCaptureDevice.Notifications" />.<see cref="M:AVFoundation.AVCaptureDevice.Notifications.ObserveWasDisconnected*" /> method which offers strongly typed access to the parameters of the notification.</para>
          <para>The following example shows how to use the strongly typed Notifications class, to take the guesswork out of the available properties in the notification:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// Lambda style
//

// listening
notification = AVCaptureDevice.Notifications.ObserveWasDisconnected ((sender, args) => {
    /* Access strongly typed args */
    Console.WriteLine ("Notification: {0}", args.Notification);
});

// To stop listening:
notification.Dispose ();

//
// Method style
//
NSObject notification;
void Callback (object sender, Foundation.NSNotificationEventArgs args)
{
    // Access strongly typed args
    Console.WriteLine ("Notification: {0}", args.Notification);
}

void Setup ()
{
    notification = AVCaptureDevice.Notifications.ObserveWasDisconnected (Callback);
}

void Teardown ()
{
    notification.Dispose ();
}]]></code>
          </example>
          <para>The following example shows how to use the notification with the DefaultCenter API:</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        AVCaptureDevice.WasDisconnectedNotification, (notification) => {Console.WriteLine ("Received the notification AVCaptureDevice", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification AVCaptureDevice", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (AVCaptureDevice.WasDisconnectedNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhiteBalanceGainsCurrent">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureWhiteBalanceGains WhiteBalanceGainsCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype AVFoundation.AVCaptureWhiteBalanceGains WhiteBalanceGainsCurrent" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.WhiteBalanceGainsCurrent" />
      <MemberSignature Language="F#" Value="member this.WhiteBalanceGainsCurrent : AVFoundation.AVCaptureWhiteBalanceGains" Usage="AVFoundation.AVCaptureDevice.WhiteBalanceGainsCurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("AVCaptureWhiteBalanceGainsCurrent", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureWhiteBalanceGains</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the value associated with the constant AVCaptureWhiteBalanceGainsCurrent</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WhiteBalanceMode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureWhiteBalanceMode WhiteBalanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureWhiteBalanceMode WhiteBalanceMode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDevice.WhiteBalanceMode" />
      <MemberSignature Language="F#" Value="member this.WhiteBalanceMode : AVFoundation.AVCaptureWhiteBalanceMode with get, set" Usage="AVFoundation.AVCaptureDevice.WhiteBalanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("whiteBalanceMode", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setWhiteBalanceMode:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureWhiteBalanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The active <see cref="T:AVFoundation.AVCaptureWhiteBalanceMode" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
