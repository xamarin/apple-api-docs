<Type Name="AVCaptureFileOutput" FullName="AVFoundation.AVCaptureFileOutput">
  <TypeSignature Language="C#" Value="public class AVCaptureFileOutput : AVFoundation.AVCaptureOutput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVCaptureFileOutput extends AVFoundation.AVCaptureOutput" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVCaptureFileOutput" />
  <TypeSignature Language="F#" Value="type AVCaptureFileOutput = class&#xA;    inherit AVCaptureOutput" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AVFoundation.AVCaptureOutput</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("AVCaptureFileOutput", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A class that represents a file-based <see cref="T:AVFoundation.AVCaptureOutput" />. Application developers should use concrete subtypes <see cref="T:AVFoundation.AVCaptureMovieFileOutput" /> or <see cref="T:AVFoundation.AVCaptureAudioDataOutput" />.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVCaptureFileOutput_Class/index.html">Apple documentation for <c>AVCaptureFileOutput</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVCaptureFileOutput (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureFileOutput.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureFileOutput : Foundation.NSObjectFlag -&gt; AVFoundation.AVCaptureFileOutput" Usage="new AVFoundation.AVCaptureFileOutput t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVCaptureFileOutput (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureFileOutput.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureFileOutput : nativeint -&gt; AVFoundation.AVCaptureFileOutput" Usage="new AVFoundation.AVCaptureFileOutput handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureFileOutput.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVCaptureFileOutput.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRecordedDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime MaxRecordedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime MaxRecordedDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureFileOutput.MaxRecordedDuration" />
      <MemberSignature Language="F#" Value="member this.MaxRecordedDuration : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVCaptureFileOutput.MaxRecordedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("maxRecordedDuration")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMaxRecordedDuration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If not <see cref="F:CoreMedia.CMTime.Invalid" />, the maximum duration that will be recorded.</summary>
        <value>The default value is <see cref="F:CoreMedia.CMTime.Invalid" />, indicating no constraint on recording duration.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRecordedFileSize">
      <MemberSignature Language="C#" Value="public virtual long MaxRecordedFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxRecordedFileSize" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureFileOutput.MaxRecordedFileSize" />
      <MemberSignature Language="F#" Value="member this.MaxRecordedFileSize : int64 with get, set" Usage="AVFoundation.AVCaptureFileOutput.MaxRecordedFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("maxRecordedFileSize")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMaxRecordedFileSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum size of a recorded file, or 0, indicating no constraint.</summary>
        <value>The default value is 0, indicating no constraint on file size.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFreeDiskSpaceLimit">
      <MemberSignature Language="C#" Value="public virtual long MinFreeDiskSpaceLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MinFreeDiskSpaceLimit" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureFileOutput.MinFreeDiskSpaceLimit" />
      <MemberSignature Language="F#" Value="member this.MinFreeDiskSpaceLimit : int64 with get, set" Usage="AVFoundation.AVCaptureFileOutput.MinFreeDiskSpaceLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("minFreeDiskSpaceLimit")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMinFreeDiskSpaceLimit:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum number of bytes that must be available for recording to continue with the current settings.</summary>
        <value>To be added.</value>
        <remarks>
          <para>When disk space falls below this value, <see cref="M:AVFoundation.AVCaptureFileOutputRecordingDelegate.FinishedRecording" /> will be called with an error parameter.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFileURL">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl OutputFileURL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl OutputFileURL" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureFileOutput.OutputFileURL" />
      <MemberSignature Language="F#" Value="member this.OutputFileURL : Foundation.NSUrl" Usage="AVFoundation.AVCaptureFileOutput.OutputFileURL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("outputFileURL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The URL to which the captured data is being written.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordedDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime RecordedDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime RecordedDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureFileOutput.RecordedDuration" />
      <MemberSignature Language="F#" Value="member this.RecordedDuration : CoreMedia.CMTime" Usage="AVFoundation.AVCaptureFileOutput.RecordedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("recordedDuration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The duration, in seconds, of the media that has been written to the capture file.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordedFileSize">
      <MemberSignature Language="C#" Value="public virtual long RecordedFileSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RecordedFileSize" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureFileOutput.RecordedFileSize" />
      <MemberSignature Language="F#" Value="member this.RecordedFileSize : int64" Usage="AVFoundation.AVCaptureFileOutput.RecordedFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("recordedFileSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current size, in bytes, of the capture file.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recording">
      <MemberSignature Language="C#" Value="public virtual bool Recording { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recording" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureFileOutput.Recording" />
      <MemberSignature Language="F#" Value="member this.Recording : bool" Usage="AVFoundation.AVCaptureFileOutput.Recording" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isRecording")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the system is currently recording captured data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecordingToOutputFile">
      <MemberSignature Language="C#" Value="public virtual void StartRecordingToOutputFile (Foundation.NSUrl outputFileUrl, AVFoundation.IAVCaptureFileOutputRecordingDelegate recordingDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartRecordingToOutputFile(class Foundation.NSUrl outputFileUrl, class AVFoundation.IAVCaptureFileOutputRecordingDelegate recordingDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureFileOutput.StartRecordingToOutputFile(Foundation.NSUrl,AVFoundation.IAVCaptureFileOutputRecordingDelegate)" />
      <MemberSignature Language="F#" Value="abstract member StartRecordingToOutputFile : Foundation.NSUrl * AVFoundation.IAVCaptureFileOutputRecordingDelegate -&gt; unit&#xA;override this.StartRecordingToOutputFile : Foundation.NSUrl * AVFoundation.IAVCaptureFileOutputRecordingDelegate -&gt; unit" Usage="aVCaptureFileOutput.StartRecordingToOutputFile (outputFileUrl, recordingDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("startRecordingToOutputFileURL:recordingDelegate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileUrl" Type="Foundation.NSUrl" />
        <Parameter Name="recordingDelegate" Type="AVFoundation.IAVCaptureFileOutputRecordingDelegate" />
      </Parameters>
      <Docs>
        <param name="outputFileUrl">To be added.</param>
        <param name="recordingDelegate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecordingToOutputFile">
      <MemberSignature Language="C#" Value="public void StartRecordingToOutputFile (Foundation.NSUrl outputFileUrl, Action&lt;Foundation.NSObject[]&gt; startRecordingFromConnections, Action&lt;Foundation.NSObject[],Foundation.NSError&gt; finishedRecording);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartRecordingToOutputFile(class Foundation.NSUrl outputFileUrl, class System.Action`1&lt;class Foundation.NSObject[]&gt; startRecordingFromConnections, class System.Action`2&lt;class Foundation.NSObject[], class Foundation.NSError&gt; finishedRecording) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureFileOutput.StartRecordingToOutputFile(Foundation.NSUrl,System.Action{Foundation.NSObject[]},System.Action{Foundation.NSObject[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="member this.StartRecordingToOutputFile : Foundation.NSUrl * Action&lt;Foundation.NSObject[]&gt; * Action&lt;Foundation.NSObject[], Foundation.NSError&gt; -&gt; unit" Usage="aVCaptureFileOutput.StartRecordingToOutputFile (outputFileUrl, startRecordingFromConnections, finishedRecording)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileUrl" Type="Foundation.NSUrl" />
        <Parameter Name="startRecordingFromConnections" Type="System.Action&lt;Foundation.NSObject[]&gt;" />
        <Parameter Name="finishedRecording" Type="System.Action&lt;Foundation.NSObject[],Foundation.NSError&gt;" />
      </Parameters>
      <Docs>
        <param name="outputFileUrl">To be added.</param>
        <param name="startRecordingFromConnections">To be added.</param>
        <param name="finishedRecording">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRecording">
      <MemberSignature Language="C#" Value="public virtual void StopRecording ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopRecording() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureFileOutput.StopRecording" />
      <MemberSignature Language="F#" Value="abstract member StopRecording : unit -&gt; unit&#xA;override this.StopRecording : unit -&gt; unit" Usage="aVCaptureFileOutput.StopRecording " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("stopRecording")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronously stops recording.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
