<Type Name="AVCaptureDeviceFormat" FullName="AVFoundation.AVCaptureDeviceFormat">
  <TypeSignature Language="C#" Value="public class AVCaptureDeviceFormat : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVCaptureDeviceFormat extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVCaptureDeviceFormat" />
  <TypeSignature Language="F#" Value="type AVCaptureDeviceFormat = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("AVCaptureDeviceFormat", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Describes media data, especially video data. (Wraps <see cref="T:CoreMedia.CMFormatDescription" />.)</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVCaptureDeviceFormat_Class/index.html">Apple documentation for <c>AVCaptureDeviceFormat</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVCaptureDeviceFormat (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDeviceFormat.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureDeviceFormat : Foundation.NSObjectFlag -&gt; AVFoundation.AVCaptureDeviceFormat" Usage="new AVFoundation.AVCaptureDeviceFormat t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVCaptureDeviceFormat (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDeviceFormat.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureDeviceFormat : nativeint -&gt; AVFoundation.AVCaptureDeviceFormat" Usage="new AVFoundation.AVCaptureDeviceFormat handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFocusSystem">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureAutoFocusSystem AutoFocusSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureAutoFocusSystem AutoFocusSystem" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.AutoFocusSystem" />
      <MemberSignature Language="F#" Value="member this.AutoFocusSystem : AVFoundation.AVCaptureAutoFocusSystem" Usage="AVFoundation.AVCaptureDeviceFormat.AutoFocusSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("autoFocusSystem")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureAutoFocusSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The device's <see cref="T:AVFoundation.AVCaptureAutoFocusSystem" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVCaptureDeviceFormat.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDescription">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMFormatDescription FormatDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreMedia.CMFormatDescription FormatDescription" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.FormatDescription" />
      <MemberSignature Language="F#" Value="member this.FormatDescription : CoreMedia.CMFormatDescription" Usage="AVFoundation.AVCaptureDeviceFormat.FormatDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("formatDescription", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMFormatDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:CoreMedia.CMFormatDescription" /> describing the capture format.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighResolutionStillImageDimensions">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMVideoDimensions HighResolutionStillImageDimensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMVideoDimensions HighResolutionStillImageDimensions" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.HighResolutionStillImageDimensions" />
      <MemberSignature Language="F#" Value="member this.HighResolutionStillImageDimensions : CoreMedia.CMVideoDimensions" Usage="AVFoundation.AVCaptureDeviceFormat.HighResolutionStillImageDimensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("highResolutionStillImageDimensions")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMVideoDimensions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVideoStabilizationModeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsVideoStabilizationModeSupported (AVFoundation.AVCaptureVideoStabilizationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsVideoStabilizationModeSupported(valuetype AVFoundation.AVCaptureVideoStabilizationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureDeviceFormat.IsVideoStabilizationModeSupported(AVFoundation.AVCaptureVideoStabilizationMode)" />
      <MemberSignature Language="F#" Value="abstract member IsVideoStabilizationModeSupported : AVFoundation.AVCaptureVideoStabilizationMode -&gt; bool&#xA;override this.IsVideoStabilizationModeSupported : AVFoundation.AVCaptureVideoStabilizationMode -&gt; bool" Usage="aVCaptureDeviceFormat.IsVideoStabilizationModeSupported mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("isVideoStabilizationModeSupported:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="AVFoundation.AVCaptureVideoStabilizationMode" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxExposureDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime MaxExposureDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime MaxExposureDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.MaxExposureDuration" />
      <MemberSignature Language="F#" Value="member this.MaxExposureDuration : CoreMedia.CMTime" Usage="AVFoundation.AVCaptureDeviceFormat.MaxExposureDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maxExposureDuration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum length of an exposure.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxISO">
      <MemberSignature Language="C#" Value="public virtual float MaxISO { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxISO" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.MaxISO" />
      <MemberSignature Language="F#" Value="member this.MaxISO : single" Usage="AVFoundation.AVCaptureDeviceFormat.MaxISO" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maxISO")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum ISO of the capture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSString MediaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString MediaType" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.MediaType" />
      <MemberSignature Language="F#" Value="member this.MediaType : Foundation.NSString" Usage="AVFoundation.AVCaptureDeviceFormat.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("mediaType", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The UTI of the capture format.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinExposureDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime MinExposureDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime MinExposureDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.MinExposureDuration" />
      <MemberSignature Language="F#" Value="member this.MinExposureDuration : CoreMedia.CMTime" Usage="AVFoundation.AVCaptureDeviceFormat.MinExposureDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minExposureDuration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The quickest exposure supported.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinISO">
      <MemberSignature Language="C#" Value="public virtual float MinISO { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinISO" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.MinISO" />
      <MemberSignature Language="F#" Value="member this.MinISO : single" Usage="AVFoundation.AVCaptureDeviceFormat.MinISO" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minISO")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum ISO that the capture supports.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PortraitEffectsMatteStillImageDeliverySupported">
      <MemberSignature Language="C#" Value="public virtual bool PortraitEffectsMatteStillImageDeliverySupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PortraitEffectsMatteStillImageDeliverySupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.PortraitEffectsMatteStillImageDeliverySupported" />
      <MemberSignature Language="F#" Value="member this.PortraitEffectsMatteStillImageDeliverySupported : bool" Usage="AVFoundation.AVCaptureDeviceFormat.PortraitEffectsMatteStillImageDeliverySupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isPortraitEffectsMatteStillImageDeliverySupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedColorSpaces">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] SupportedColorSpaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] SupportedColorSpaces" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.SupportedColorSpaces" />
      <MemberSignature Language="F#" Value="member this.SupportedColorSpaces : Foundation.NSNumber[]" Usage="AVFoundation.AVCaptureDeviceFormat.SupportedColorSpaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("supportedColorSpaces")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The supported color spaces, as an array whose values are members of the <see cref="T:AVFoundation.AVCaptureColorSpace" /> enumeration.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedDepthDataFormats">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureDeviceFormat[] SupportedDepthDataFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCaptureDeviceFormat[] SupportedDepthDataFormats" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.SupportedDepthDataFormats" />
      <MemberSignature Language="F#" Value="member this.SupportedDepthDataFormats : AVFoundation.AVCaptureDeviceFormat[]" Usage="AVFoundation.AVCaptureDeviceFormat.SupportedDepthDataFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("supportedDepthDataFormats")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureDeviceFormat[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsupportedCaptureOutputClasses">
      <MemberSignature Language="C#" Value="public virtual ObjCRuntime.Class[] UnsupportedCaptureOutputClasses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ObjCRuntime.Class[] UnsupportedCaptureOutputClasses" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.UnsupportedCaptureOutputClasses" />
      <MemberSignature Language="F#" Value="member this.UnsupportedCaptureOutputClasses : ObjCRuntime.Class[]" Usage="AVFoundation.AVCaptureDeviceFormat.UnsupportedCaptureOutputClasses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("unsupportedCaptureOutputClasses")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ObjCRuntime.Class[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoBinned">
      <MemberSignature Language="C#" Value="public virtual bool VideoBinned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VideoBinned" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.VideoBinned" />
      <MemberSignature Language="F#" Value="member this.VideoBinned : bool" Usage="AVFoundation.AVCaptureDeviceFormat.VideoBinned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isVideoBinned")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get whether video data is in binned format.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoFieldOfView">
      <MemberSignature Language="C#" Value="public virtual float VideoFieldOfView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 VideoFieldOfView" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.VideoFieldOfView" />
      <MemberSignature Language="F#" Value="member this.VideoFieldOfView : single" Usage="AVFoundation.AVCaptureDeviceFormat.VideoFieldOfView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoFieldOfView")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The horizontal field of view, in degrees.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="videoHDRSupportedVideoHDREnabled">
      <MemberSignature Language="C#" Value="public virtual bool videoHDRSupportedVideoHDREnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool videoHDRSupportedVideoHDREnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.videoHDRSupportedVideoHDREnabled" />
      <MemberSignature Language="F#" Value="member this.videoHDRSupportedVideoHDREnabled : bool" Usage="AVFoundation.AVCaptureDeviceFormat.videoHDRSupportedVideoHDREnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isVideoHDRSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether high dynamic range video is supported and enabled.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoMaxZoomFactor">
      <MemberSignature Language="C#" Value="public virtual nfloat VideoMaxZoomFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat VideoMaxZoomFactor" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.VideoMaxZoomFactor" />
      <MemberSignature Language="F#" Value="member this.VideoMaxZoomFactor : nfloat" Usage="AVFoundation.AVCaptureDeviceFormat.VideoMaxZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoMaxZoomFactor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum zoom multiplier allowed by the format.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoMaxZoomFactorForDepthDataDelivery">
      <MemberSignature Language="C#" Value="public virtual nfloat VideoMaxZoomFactorForDepthDataDelivery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat VideoMaxZoomFactorForDepthDataDelivery" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.VideoMaxZoomFactorForDepthDataDelivery" />
      <MemberSignature Language="F#" Value="member this.VideoMaxZoomFactorForDepthDataDelivery : nfloat" Usage="AVFoundation.AVCaptureDeviceFormat.VideoMaxZoomFactorForDepthDataDelivery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoMaxZoomFactorForDepthDataDelivery")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoMinZoomFactorForDepthDataDelivery">
      <MemberSignature Language="C#" Value="public virtual nfloat VideoMinZoomFactorForDepthDataDelivery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat VideoMinZoomFactorForDepthDataDelivery" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.VideoMinZoomFactorForDepthDataDelivery" />
      <MemberSignature Language="F#" Value="member this.VideoMinZoomFactorForDepthDataDelivery : nfloat" Usage="AVFoundation.AVCaptureDeviceFormat.VideoMinZoomFactorForDepthDataDelivery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoMinZoomFactorForDepthDataDelivery")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoStabilizationSupported">
      <MemberSignature Language="C#" Value="public virtual bool VideoStabilizationSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VideoStabilizationSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.VideoStabilizationSupported" />
      <MemberSignature Language="F#" Value="member this.VideoStabilizationSupported : bool" Usage="AVFoundation.AVCaptureDeviceFormat.VideoStabilizationSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'IsVideoStabilizationModeSupported (AVCaptureVideoStabilizationMode)' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isVideoStabilizationSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'IsVideoStabilizationModeSupported (AVCaptureVideoStabilizationMode)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Developers should use 'IsVideoStabilizationModeSupported (AVCaptureVideoStabilizationMode)' instead.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoSupportedFrameRateRanges">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVFrameRateRange[] VideoSupportedFrameRateRanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVFrameRateRange[] VideoSupportedFrameRateRanges" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.VideoSupportedFrameRateRanges" />
      <MemberSignature Language="F#" Value="member this.VideoSupportedFrameRateRanges : AVFoundation.AVFrameRateRange[]" Usage="AVFoundation.AVCaptureDeviceFormat.VideoSupportedFrameRateRanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoSupportedFrameRateRanges", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVFrameRateRange[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the array of supported frame rates for the device.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoZoomFactorUpscaleThreshold">
      <MemberSignature Language="C#" Value="public virtual nfloat VideoZoomFactorUpscaleThreshold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat VideoZoomFactorUpscaleThreshold" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureDeviceFormat.VideoZoomFactorUpscaleThreshold" />
      <MemberSignature Language="F#" Value="member this.VideoZoomFactorUpscaleThreshold : nfloat" Usage="AVFoundation.AVCaptureDeviceFormat.VideoZoomFactorUpscaleThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoZoomFactorUpscaleThreshold")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the zoom multiplier at which pixels begin being upscaled.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
