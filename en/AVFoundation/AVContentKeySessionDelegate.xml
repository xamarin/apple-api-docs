<Type Name="AVContentKeySessionDelegate" FullName="AVFoundation.AVContentKeySessionDelegate">
  <TypeSignature Language="C#" Value="public abstract class AVContentKeySessionDelegate : Foundation.NSObject, AVFoundation.IAVContentKeySessionDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AVContentKeySessionDelegate extends Foundation.NSObject implements class AVFoundation.IAVContentKeySessionDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVContentKeySessionDelegate" />
  <TypeSignature Language="F#" Value="type AVContentKeySessionDelegate = class&#xA;    inherit NSObject&#xA;    interface IAVContentKeySessionDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AVFoundation.IAVContentKeySessionDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.Register("AVContentKeySessionDelegate", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Protocol that developers implement to handle requests for content keys.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVContentKeySessionDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVContentKeySessionDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVContentKeySessionDelegate : Foundation.NSObjectFlag -&gt; AVFoundation.AVContentKeySessionDelegate" Usage="new AVFoundation.AVContentKeySessionDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVContentKeySessionDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVContentKeySessionDelegate : nativeint -&gt; AVFoundation.AVContentKeySessionDelegate" Usage="new AVFoundation.AVContentKeySessionDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChange">
      <MemberSignature Language="C#" Value="public virtual void DidChange (AVFoundation.AVContentKeySession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChange(class AVFoundation.AVContentKeySession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.DidChange(AVFoundation.AVContentKeySession)" />
      <MemberSignature Language="F#" Value="override this.DidChange : AVFoundation.AVContentKeySession -&gt; unit" Usage="aVContentKeySessionDelegate.DidChange session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySessionContentProtectionSessionIdentifierDidChange:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFail">
      <MemberSignature Language="C#" Value="public virtual void DidFail (AVFoundation.AVContentKeySession session, AVFoundation.AVContentKeyRequest keyRequest, Foundation.NSError err);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFail(class AVFoundation.AVContentKeySession session, class AVFoundation.AVContentKeyRequest keyRequest, class Foundation.NSError err) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.DidFail(AVFoundation.AVContentKeySession,AVFoundation.AVContentKeyRequest,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFail : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest * Foundation.NSError -&gt; unit&#xA;override this.DidFail : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest * Foundation.NSError -&gt; unit" Usage="aVContentKeySessionDelegate.DidFail (session, keyRequest, err)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySession:contentKeyRequest:didFailWithError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
        <Parameter Name="keyRequest" Type="AVFoundation.AVContentKeyRequest" />
        <Parameter Name="err" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="keyRequest">To be added.</param>
        <param name="err">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidGenerateExpiredSessionReport">
      <MemberSignature Language="C#" Value="public virtual void DidGenerateExpiredSessionReport (AVFoundation.AVContentKeySession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidGenerateExpiredSessionReport(class AVFoundation.AVContentKeySession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.DidGenerateExpiredSessionReport(AVFoundation.AVContentKeySession)" />
      <MemberSignature Language="F#" Value="abstract member DidGenerateExpiredSessionReport : AVFoundation.AVContentKeySession -&gt; unit&#xA;override this.DidGenerateExpiredSessionReport : AVFoundation.AVContentKeySession -&gt; unit" Usage="aVContentKeySessionDelegate.DidGenerateExpiredSessionReport session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySessionDidGenerateExpiredSessionReport:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidProvideContentKeyRequest">
      <MemberSignature Language="C#" Value="public abstract void DidProvideContentKeyRequest (AVFoundation.AVContentKeySession session, AVFoundation.AVContentKeyRequest keyRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidProvideContentKeyRequest(class AVFoundation.AVContentKeySession session, class AVFoundation.AVContentKeyRequest keyRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.DidProvideContentKeyRequest(AVFoundation.AVContentKeySession,AVFoundation.AVContentKeyRequest)" />
      <MemberSignature Language="F#" Value="abstract member DidProvideContentKeyRequest : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest -&gt; unit" Usage="aVContentKeySessionDelegate.DidProvideContentKeyRequest (session, keyRequest)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AVFoundation.IAVContentKeySessionDelegate.DidProvideContentKeyRequest(AVFoundation.AVContentKeySession,AVFoundation.AVContentKeyRequest)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySession:didProvideContentKeyRequest:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
        <Parameter Name="keyRequest" Type="AVFoundation.AVContentKeyRequest" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="keyRequest">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidProvidePersistableContentKeyRequest">
      <MemberSignature Language="C#" Value="public virtual void DidProvidePersistableContentKeyRequest (AVFoundation.AVContentKeySession session, AVFoundation.AVPersistableContentKeyRequest keyRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidProvidePersistableContentKeyRequest(class AVFoundation.AVContentKeySession session, class AVFoundation.AVPersistableContentKeyRequest keyRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.DidProvidePersistableContentKeyRequest(AVFoundation.AVContentKeySession,AVFoundation.AVPersistableContentKeyRequest)" />
      <MemberSignature Language="F#" Value="abstract member DidProvidePersistableContentKeyRequest : AVFoundation.AVContentKeySession * AVFoundation.AVPersistableContentKeyRequest -&gt; unit&#xA;override this.DidProvidePersistableContentKeyRequest : AVFoundation.AVContentKeySession * AVFoundation.AVPersistableContentKeyRequest -&gt; unit" Usage="aVContentKeySessionDelegate.DidProvidePersistableContentKeyRequest (session, keyRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySession:didProvidePersistableContentKeyRequest:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
        <Parameter Name="keyRequest" Type="AVFoundation.AVPersistableContentKeyRequest" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="keyRequest">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidProvideRenewingContentKeyRequest">
      <MemberSignature Language="C#" Value="public virtual void DidProvideRenewingContentKeyRequest (AVFoundation.AVContentKeySession session, AVFoundation.AVContentKeyRequest keyRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidProvideRenewingContentKeyRequest(class AVFoundation.AVContentKeySession session, class AVFoundation.AVContentKeyRequest keyRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.DidProvideRenewingContentKeyRequest(AVFoundation.AVContentKeySession,AVFoundation.AVContentKeyRequest)" />
      <MemberSignature Language="F#" Value="abstract member DidProvideRenewingContentKeyRequest : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest -&gt; unit&#xA;override this.DidProvideRenewingContentKeyRequest : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest -&gt; unit" Usage="aVContentKeySessionDelegate.DidProvideRenewingContentKeyRequest (session, keyRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySession:didProvideRenewingContentKeyRequest:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
        <Parameter Name="keyRequest" Type="AVFoundation.AVContentKeyRequest" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="keyRequest">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSucceed">
      <MemberSignature Language="C#" Value="public virtual void DidSucceed (AVFoundation.AVContentKeySession session, AVFoundation.AVContentKeyRequest keyRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSucceed(class AVFoundation.AVContentKeySession session, class AVFoundation.AVContentKeyRequest keyRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.DidSucceed(AVFoundation.AVContentKeySession,AVFoundation.AVContentKeyRequest)" />
      <MemberSignature Language="F#" Value="abstract member DidSucceed : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest -&gt; unit&#xA;override this.DidSucceed : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest -&gt; unit" Usage="aVContentKeySessionDelegate.DidSucceed (session, keyRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySession:contentKeyRequestDidSucceed:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
        <Parameter Name="keyRequest" Type="AVFoundation.AVContentKeyRequest" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="keyRequest">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdate">
      <MemberSignature Language="C#" Value="public virtual void DidUpdate (AVFoundation.AVContentKeySession session, Foundation.NSData persistableContentKey, Foundation.NSObject keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdate(class AVFoundation.AVContentKeySession session, class Foundation.NSData persistableContentKey, class Foundation.NSObject keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.DidUpdate(AVFoundation.AVContentKeySession,Foundation.NSData,Foundation.NSObject)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdate : AVFoundation.AVContentKeySession * Foundation.NSData * Foundation.NSObject -&gt; unit&#xA;override this.DidUpdate : AVFoundation.AVContentKeySession * Foundation.NSData * Foundation.NSObject -&gt; unit" Usage="aVContentKeySessionDelegate.DidUpdate (session, persistableContentKey, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
        <Parameter Name="persistableContentKey" Type="Foundation.NSData" />
        <Parameter Name="keyIdentifier" Type="Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="session">The session that is supplying the information for the event.</param>
        <param name="persistableContentKey">The updated key.</param>
        <param name="keyIdentifier">The identifier for the updated key.</param>
        <summary>Developers may override this method to handle a request  for a an updated <paramref name="persistableContentKey" /> that was made with the specified <paramref name="keyIdentifier" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldRetryContentKeyRequest">
      <MemberSignature Language="C#" Value="public virtual bool ShouldRetryContentKeyRequest (AVFoundation.AVContentKeySession session, AVFoundation.AVContentKeyRequest keyRequest, string retryReason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldRetryContentKeyRequest(class AVFoundation.AVContentKeySession session, class AVFoundation.AVContentKeyRequest keyRequest, string retryReason) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVContentKeySessionDelegate.ShouldRetryContentKeyRequest(AVFoundation.AVContentKeySession,AVFoundation.AVContentKeyRequest,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ShouldRetryContentKeyRequest : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest * string -&gt; bool&#xA;override this.ShouldRetryContentKeyRequest : AVFoundation.AVContentKeySession * AVFoundation.AVContentKeyRequest * string -&gt; bool" Usage="aVContentKeySessionDelegate.ShouldRetryContentKeyRequest (session, keyRequest, retryReason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("contentKeySession:shouldRetryContentKeyRequest:reason:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVContentKeySession" />
        <Parameter Name="keyRequest" Type="AVFoundation.AVContentKeyRequest" />
        <Parameter Name="retryReason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="keyRequest">To be added.</param>
        <param name="retryReason">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
