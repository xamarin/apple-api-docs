<Type Name="AVAudioPlayer" FullName="AVFoundation.AVAudioPlayer">
  <TypeSignature Language="C#" Value="public class AVAudioPlayer : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVAudioPlayer extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVAudioPlayer" />
  <TypeSignature Language="F#" Value="type AVAudioPlayer = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("AVAudioPlayer", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An audio player that can play audio from memory or the local file system.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/AVTouchSample/">avTouch</related>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVAudioPlayerClassReference/index.html">Apple documentation for <c>AVAudioPlayer</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVAudioPlayer (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAudioPlayer : Foundation.NSObjectFlag -&gt; AVFoundation.AVAudioPlayer" Usage="new AVFoundation.AVAudioPlayer t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVAudioPlayer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAudioPlayer : nativeint -&gt; AVFoundation.AVAudioPlayer" Usage="new AVFoundation.AVAudioPlayer handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVAudioPlayer (Foundation.NSData data, string fileTypeHint, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSData data, string fileTypeHint, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.#ctor(Foundation.NSData,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAudioPlayer : Foundation.NSData * string *  -&gt; AVFoundation.AVAudioPlayer" Usage="new AVFoundation.AVAudioPlayer (data, fileTypeHint, outError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithData:fileTypeHint:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="fileTypeHint" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="fileTypeHint">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVAudioPlayer (Foundation.NSUrl url, string fileTypeHint, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSUrl url, string fileTypeHint, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.#ctor(Foundation.NSUrl,System.String,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAudioPlayer : Foundation.NSUrl * string *  -&gt; AVFoundation.AVAudioPlayer" Usage="new AVFoundation.AVAudioPlayer (url, fileTypeHint, outError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithContentsOfURL:fileTypeHint:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="fileTypeHint" Type="System.String" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="fileTypeHint">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AveragePower">
      <MemberSignature Language="C#" Value="public virtual float AveragePower (nuint channelNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 AveragePower(valuetype System.nuint channelNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.AveragePower(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member AveragePower : nuint -&gt; single&#xA;override this.AveragePower : nuint -&gt; single" Usage="aVAudioPlayer.AveragePower channelNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("averagePowerForChannel:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelNumber" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="channelNumber">To be added.</param>
        <summary>The average power for the <paramref name="channelNumber" /> channel, in decibels, of the sound being played.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Application developers must call <see cref="M:AVFoundation.AVAudioPlayer.UpdateMeters" /> prior to reading this value.</para>
        </remarks>
        <altmember cref="P:AVFoundation.AVAudioPlayer.PeakPower" />
      </Docs>
    </Member>
    <Member MemberName="BeginInterruption">
      <MemberSignature Language="C#" Value="public event EventHandler BeginInterruption;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BeginInterruption" />
      <MemberSignature Language="DocId" Value="E:AVFoundation.AVAudioPlayer.BeginInterruption" />
      <MemberSignature Language="F#" Value="member this.BeginInterruption : EventHandler " Usage="member this.BeginInterruption : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised when an interruption begins.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelAssignments">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioSessionChannelDescription[] ChannelAssignments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAudioSessionChannelDescription[] ChannelAssignments" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.ChannelAssignments" />
      <MemberSignature Language="F#" Value="member this.ChannelAssignments : AVFoundation.AVAudioSessionChannelDescription[] with get, set" Usage="AVFoundation.AVAudioPlayer.ChannelAssignments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("channelAssignments")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setChannelAssignments:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("channelAssignments", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setChannelAssignments:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioSessionChannelDescription[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The channel descriptions for the audio player.</summary>
        <value>The default value of this property is <see langword="null" />.<para tool="nullallowed">This value can be <see langword="null" />.</para></value>
        <remarks>
          <para>If assigned, the <see cref="T:AVFoundation.AVAudioSessionChannelDescription" /> array must be the same size as the <see cref="P:AVFoundation.AVAudioPlayer.NumberOfChannels" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVAudioPlayer.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTime">
      <MemberSignature Language="C#" Value="public virtual double CurrentTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CurrentTime" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.CurrentTime" />
      <MemberSignature Language="F#" Value="member this.CurrentTime : double with get, set" Usage="AVFoundation.AVAudioPlayer.CurrentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("currentTime")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setCurrentTime:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current location, in seconds, of the playback head.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSData Data" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Data" />
      <MemberSignature Language="F#" Value="member this.Data : Foundation.NSData" Usage="AVFoundation.AVAudioPlayer.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The data defining the sound of the audio player.</summary>
        <value>This value may be <see langword="null" />.<para tool="nullallowed">This value can be <see langword="null" />.</para></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:AVFoundation.AVAudioPlayer.Url" />
      </Docs>
    </Member>
    <Member MemberName="DecoderError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AVFoundation.AVErrorEventArgs&gt; DecoderError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AVFoundation.AVErrorEventArgs&gt; DecoderError" />
      <MemberSignature Language="DocId" Value="E:AVFoundation.AVAudioPlayer.DecoderError" />
      <MemberSignature Language="F#" Value="member this.DecoderError : EventHandler&lt;AVFoundation.AVErrorEventArgs&gt; " Usage="member this.DecoderError : System.EventHandler&lt;AVFoundation.AVErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AVFoundation.AVErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event indicating that there has been a decoding error.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public AVFoundation.IAVAudioPlayerDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.IAVAudioPlayerDelegate Delegate" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Delegate" />
      <MemberSignature Language="F#" Value="member this.Delegate : AVFoundation.IAVAudioPlayerDelegate with get, set" Usage="AVFoundation.AVAudioPlayer.Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.IAVAudioPlayerDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An instance of the AVFoundation.IAVAudioPlayerDelegate model class which acts as the class delegate.</summary>
        <value>The instance of the AVFoundation.IAVAudioPlayerDelegate model class</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>This is the strongly typed version of the object, developers should use the WeakDelegate property instead if they want to merely assign a class derived from NSObject that has been decorated with [Export] attributes.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceCurrentTime">
      <MemberSignature Language="C#" Value="public virtual double DeviceCurrentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DeviceCurrentTime" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.DeviceCurrentTime" />
      <MemberSignature Language="F#" Value="member this.DeviceCurrentTime : double" Usage="AVFoundation.AVAudioPlayer.DeviceCurrentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("deviceCurrentTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A value that increases while the <see cref="T:AVFoundation.AVAudioPlayer" /> is playing or paused. Used for synchronizing multiple audio players.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="aVAudioPlayer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the AVAudioPlayer object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the AVAudioPlayer class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the AVAudioPlayer ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual double Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Duration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : double" Usage="AVFoundation.AVAudioPlayer.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("duration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The total time, in seconds, of the sound associated with the <see cref="T:AVFoundation.AVAudioPlayer" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRate">
      <MemberSignature Language="C#" Value="public virtual bool EnableRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRate" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.EnableRate" />
      <MemberSignature Language="F#" Value="member this.EnableRate : bool with get, set" Usage="AVFoundation.AVAudioPlayer.EnableRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("enableRate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setEnableRate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the <see cref="T:AVFoundation.AVAudioPlayer" /> can have its playback rate adjusted.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInterruption">
      <MemberSignature Language="C#" Value="public event EventHandler EndInterruption;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EndInterruption" />
      <MemberSignature Language="DocId" Value="E:AVFoundation.AVAudioPlayer.EndInterruption" />
      <MemberSignature Language="F#" Value="member this.EndInterruption : EventHandler " Usage="member this.EndInterruption : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event indicating that an interruption has ended.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishedPlaying">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;AVFoundation.AVStatusEventArgs&gt; FinishedPlaying;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class AVFoundation.AVStatusEventArgs&gt; FinishedPlaying" />
      <MemberSignature Language="DocId" Value="E:AVFoundation.AVAudioPlayer.FinishedPlaying" />
      <MemberSignature Language="F#" Value="member this.FinishedPlaying : EventHandler&lt;AVFoundation.AVStatusEventArgs&gt; " Usage="member this.FinishedPlaying : System.EventHandler&lt;AVFoundation.AVStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;AVFoundation.AVStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event indicating that playback has completed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAudioFormat Format" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Format" />
      <MemberSignature Language="F#" Value="member this.Format : AVFoundation.AVAudioFormat" Usage="AVFoundation.AVAudioPlayer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("format")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVAudioPlayer FromData (Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVAudioPlayer FromData(class Foundation.NSData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.FromData(Foundation.NSData)" />
      <MemberSignature Language="F#" Value="static member FromData : Foundation.NSData -&gt; AVFoundation.AVAudioPlayer" Usage="AVFoundation.AVAudioPlayer.FromData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="data">Audio data, in a format supported by the native operating system.</param>
        <summary>Creates an audio player that plays music from an NSData source.</summary>
        <returns>null on error, or an instance of the AVAudioPlayer on success.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVAudioPlayer FromData (Foundation.NSData data, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVAudioPlayer FromData(class Foundation.NSData data, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.FromData(Foundation.NSData,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member FromData : Foundation.NSData *  -&gt; AVFoundation.AVAudioPlayer" Usage="AVFoundation.AVAudioPlayer.FromData (data, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">Audio data, in a format supported by the native operating system.</param>
        <param name="error">Used to return error codes</param>
        <summary>Creates an audio player that plays music from an NSData source.</summary>
        <returns>null on error, or an instance of the AVAudioPlayer on success.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVAudioPlayer FromUrl (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVAudioPlayer FromUrl(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.FromUrl(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="static member FromUrl : Foundation.NSUrl -&gt; AVFoundation.AVAudioPlayer" Usage="AVFoundation.AVAudioPlayer.FromUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">Points to the file location to play</param>
        <summary>Creates a new instance of the AVAudioPlayer.</summary>
        <returns>Null on error, with or an instance of the player on success.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUrl">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVAudioPlayer FromUrl (Foundation.NSUrl url, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVAudioPlayer FromUrl(class Foundation.NSUrl url, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.FromUrl(Foundation.NSUrl,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="static member FromUrl : Foundation.NSUrl *  -&gt; AVFoundation.AVAudioPlayer" Usage="AVFoundation.AVAudioPlayer.FromUrl (url, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">Points to the file location to play</param>
        <param name="error">Return value for error.</param>
        <summary>Creates a new instance of the AVAudioPlayer.</summary>
        <returns>Null on error with the details stored on the error parameter, or an instance of the player on success.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeteringEnabled">
      <MemberSignature Language="C#" Value="public virtual bool MeteringEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MeteringEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.MeteringEnabled" />
      <MemberSignature Language="F#" Value="member this.MeteringEnabled : bool with get, set" Usage="AVFoundation.AVAudioPlayer.MeteringEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isMeteringEnabled")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMeteringEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether audio-level metering can be used with the <see cref="T:AVFoundation.AVAudioPlayer" />.</summary>
        <value>The default value is <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfChannels">
      <MemberSignature Language="C#" Value="public virtual nuint NumberOfChannels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint NumberOfChannels" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.NumberOfChannels" />
      <MemberSignature Language="F#" Value="member this.NumberOfChannels : nuint" Usage="AVFoundation.AVAudioPlayer.NumberOfChannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("numberOfChannels")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of audio channels in the sound associated with the <see cref="T:AVFoundation.AVAudioPlayer" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfLoops">
      <MemberSignature Language="C#" Value="public virtual nint NumberOfLoops { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint NumberOfLoops" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.NumberOfLoops" />
      <MemberSignature Language="F#" Value="member this.NumberOfLoops : nint with get, set" Usage="AVFoundation.AVAudioPlayer.NumberOfLoops" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("numberOfLoops")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setNumberOfLoops:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of times the sound should repeat.</summary>
        <value>The default value is 0.</value>
        <remarks>
          <para>This zero-based value specifies the number of times the sound is repeated after its initial playing. In other words, a value of 1 will result in the sound being played 2 times.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pan">
      <MemberSignature Language="C#" Value="public virtual float Pan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Pan" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Pan" />
      <MemberSignature Language="F#" Value="member this.Pan : single with get, set" Usage="AVFoundation.AVAudioPlayer.Pan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("pan")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setPan:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current stereo pan (left-right) position.</summary>
        <value>This value ranges from -1.0 (full left) to 1.0 (full right)</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.Pause" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="aVAudioPlayer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("pause")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops playback, but does not reset the playback position.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeakPower">
      <MemberSignature Language="C#" Value="public virtual float PeakPower (nuint channelNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 PeakPower(valuetype System.nuint channelNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.PeakPower(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member PeakPower : nuint -&gt; single&#xA;override this.PeakPower : nuint -&gt; single" Usage="aVAudioPlayer.PeakPower channelNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("peakPowerForChannel:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelNumber" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="channelNumber">To be added.</param>
        <summary>The peak power, in decibels, of the specified channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Application developers must call <see cref="M:AVFoundation.AVAudioPlayer.UpdateMeters" /> prior to reading this value.</para>
        </remarks>
        <altmember cref="M:AVFoundation.AVAudioPlayer.AveragePower" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public virtual bool Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.Play" />
      <MemberSignature Language="F#" Value="abstract member Play : unit -&gt; bool&#xA;override this.Play : unit -&gt; bool" Usage="aVAudioPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("play")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Plays a sound.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Application developers should note that this method is asynchronous. Actual playback will occur some time after this method returns.</para>
          <para>This method will call <see cref="M:AVFoundation.AVAudioPlayer.PrepareToPlay" /> if necessary.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAtTime">
      <MemberSignature Language="C#" Value="public virtual bool PlayAtTime (double time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PlayAtTime(float64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.PlayAtTime(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member PlayAtTime : double -&gt; bool&#xA;override this.PlayAtTime : double -&gt; bool" Usage="aVAudioPlayer.PlayAtTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("playAtTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="time">To be added.</param>
        <summary>Begins playback at a certain delay, relative to the current playback time.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The value of <paramref name="time" /> must be greater than or equal to the <see cref="P:AVFoundation.AVAudioPlayer.DeviceCurrentTime" /> property (use <see cref="P:AVFoundation.AVAudioPlayer.CurrentTime" /> to move the playhead back in time, if necessary). </para>
          <para>Multiple <see cref="T:AVFoundation.AVAudioPlayer" />s can be synchronized using this method:</para>
          <example>
            <code lang="C#"><![CDATA[
var shortStartDelay = 0.01;
var now = player.DeviceCurrentTime;
player.PlayAtTime(now + shortStartDelay);
player2.PlayAtTime(now + shortStartDelay);
          ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Playing">
      <MemberSignature Language="C#" Value="public virtual bool Playing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Playing" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Playing" />
      <MemberSignature Language="F#" Value="member this.Playing : bool" Usage="AVFoundation.AVAudioPlayer.Playing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isPlaying")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the <see cref="T:AVFoundation.AVAudioPlayer" /> is playing sound.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareToPlay">
      <MemberSignature Language="C#" Value="public virtual bool PrepareToPlay ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrepareToPlay() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.PrepareToPlay" />
      <MemberSignature Language="F#" Value="abstract member PrepareToPlay : unit -&gt; bool&#xA;override this.PrepareToPlay : unit -&gt; bool" Usage="aVAudioPlayer.PrepareToPlay " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("prepareToPlay")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Preloads the playback buffers.</summary>
        <returns>
          <see langword="true" /> if successful.</returns>
        <remarks>
          <para>The <see cref="M:AVFoundation.AVAudioPlayer.Play" /> function will call this method if necessary, but application developers may choose to explicitly call it in order to minimize startup lag.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public virtual float Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rate" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Rate" />
      <MemberSignature Language="F#" Value="member this.Rate : single with get, set" Usage="AVFoundation.AVAudioPlayer.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("rate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setRate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The playback rate relative to the source sound.</summary>
        <value>The default value is 1.0. A value of 0.5 is half-speed, a value of 2.0 is double-speed.</value>
        <remarks>
          <para>Application developers must additionally set <see cref="P:AVFoundation.AVAudioPlayer.EnableRate" /> to <see langword="true" /> to manipulate this property.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVolume">
      <MemberSignature Language="C#" Value="public virtual void SetVolume (float volume, double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVolume(float32 volume, float64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.SetVolume(System.Single,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetVolume : single * double -&gt; unit&#xA;override this.SetVolume : single * double -&gt; unit" Usage="aVAudioPlayer.SetVolume (volume, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setVolume:fadeDuration:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="volume" Type="System.Single" />
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="volume">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundSetting">
      <MemberSignature Language="C#" Value="public AVFoundation.AudioSettings SoundSetting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AudioSettings SoundSetting" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.SoundSetting" />
      <MemberSignature Language="F#" Value="member this.SoundSetting : AVFoundation.AudioSettings" Usage="AVFoundation.AVAudioPlayer.SoundSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AudioSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Information about the sound associated with the <see cref="T:AVFoundation.AVAudioPlayer" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="aVAudioPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("stop")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops sound playback asynchronously.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMeters">
      <MemberSignature Language="C#" Value="public virtual void UpdateMeters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateMeters() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioPlayer.UpdateMeters" />
      <MemberSignature Language="F#" Value="abstract member UpdateMeters : unit -&gt; unit&#xA;override this.UpdateMeters : unit -&gt; unit" Usage="aVAudioPlayer.UpdateMeters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("updateMeters")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines the average and peak power for the channels in the <see cref="T:AVFoundation.AVAudioPlayer" />.</summary>
        <remarks>
          <para>This method must be called prior to accessing <see cref="M:AVFoundation.AVAudioPlayer.AveragePower(System.nuint)" /> or <see cref="M:AVFoundation.AVAudioPlayer.PeakPower(System.nuint)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSUrl Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSUrl Url" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Url" />
      <MemberSignature Language="F#" Value="member this.Url : Foundation.NSUrl" Usage="AVFoundation.AVAudioPlayer.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("url")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The source URL for the sound associated with the <see cref="T:AVFoundation.AVAudioPlayer" /></summary>
        <value>This value may be <see langword="null" />.<para tool="nullallowed">This value can be <see langword="null" />.</para></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:AVFoundation.AVAudioPlayer.Data" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public virtual float Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Volume" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.Volume" />
      <MemberSignature Language="F#" Value="member this.Volume : single with get, set" Usage="AVFoundation.AVAudioPlayer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("volume")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVolume:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The playback volume of the <see cref="T:AVFoundation.AVAudioPlayer" />.</summary>
        <value>The value ranges from 0.0 to 1.0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject WeakDelegate" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.WeakDelegate" />
      <MemberSignature Language="F#" Value="member this.WeakDelegate : Foundation.NSObject with get, set" Usage="AVFoundation.AVAudioPlayer.WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("delegate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setDelegate:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("delegate", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setDelegate:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An object that can respond to the delegate protocol for this type</summary>
        <value>The instance that will respond to events and data requests.</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>   Methods must be decorated with the [Export ("selectorName")] attribute to respond to each method from the protocol.   Alternatively use the Delegate method which is strongly typed and does not require the [Export] attributes on methods.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakSettings">
      <MemberSignature Language="C#" Value="protected virtual Foundation.NSDictionary WeakSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary WeakSettings" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioPlayer.WeakSettings" />
      <MemberSignature Language="F#" Value="member this.WeakSettings : Foundation.NSDictionary" Usage="AVFoundation.AVAudioPlayer.WeakSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("settings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
