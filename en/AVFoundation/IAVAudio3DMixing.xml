<Type Name="IAVAudio3DMixing" FullName="AVFoundation.IAVAudio3DMixing">
  <TypeSignature Language="C#" Value="public interface IAVAudio3DMixing : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAVAudio3DMixing implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.IAVAudio3DMixing" />
  <TypeSignature Language="F#" Value="type IAVAudio3DMixing = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="AVAudio3DMixing", WrapperType=typeof(AVFoundation.AVAudio3DMixingWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="renderingAlgorithm", IsProperty=true, IsRequired=true, IsStatic=false, Name="RenderingAlgorithm", PropertyType=typeof(AVFoundation.AVAudio3DMixingRenderingAlgorithm), Selector="renderingAlgorithm", SetterSelector="setRenderingAlgorithm:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="rate", IsProperty=true, IsRequired=true, IsStatic=false, Name="Rate", PropertyType=typeof(System.Single), Selector="rate", SetterSelector="setRate:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="reverbBlend", IsProperty=true, IsRequired=true, IsStatic=false, Name="ReverbBlend", PropertyType=typeof(System.Single), Selector="reverbBlend", SetterSelector="setReverbBlend:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="obstruction", IsProperty=true, IsRequired=true, IsStatic=false, Name="Obstruction", PropertyType=typeof(System.Single), Selector="obstruction", SetterSelector="setObstruction:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="occlusion", IsProperty=true, IsRequired=true, IsStatic=false, Name="Occlusion", PropertyType=typeof(System.Single), Selector="occlusion", SetterSelector="setOcclusion:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="position", IsProperty=true, IsRequired=true, IsStatic=false, Name="Position", PropertyType=typeof(OpenTK.Vector3), Selector="position", SetterSelector="setPosition:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:AVFoundation.AVAudio3DMixing" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:AVFoundation.AVAudio3DMixing" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:AVFoundation.AVAudio3DMixing" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:AVFoundation.AVAudioMixing_Extensions" /> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Obstruction">
      <MemberSignature Language="C#" Value="public float Obstruction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Obstruction" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.IAVAudio3DMixing.Obstruction" />
      <MemberSignature Language="F#" Value="member this.Obstruction : single with get, set" Usage="AVFoundation.IAVAudio3DMixing.Obstruction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("obstruction")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setObstruction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Occlusion">
      <MemberSignature Language="C#" Value="public float Occlusion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Occlusion" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.IAVAudio3DMixing.Occlusion" />
      <MemberSignature Language="F#" Value="member this.Occlusion : single with get, set" Usage="AVFoundation.IAVAudio3DMixing.Occlusion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("occlusion")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setOcclusion:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public OpenTK.Vector3 Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Vector3 Position" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.IAVAudio3DMixing.Position" />
      <MemberSignature Language="F#" Value="member this.Position : OpenTK.Vector3 with get, set" Usage="AVFoundation.IAVAudio3DMixing.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("position")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setPosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public float Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rate" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.IAVAudio3DMixing.Rate" />
      <MemberSignature Language="F#" Value="member this.Rate : single with get, set" Usage="AVFoundation.IAVAudio3DMixing.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("rate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingAlgorithm">
      <MemberSignature Language="C#" Value="public AVFoundation.AVAudio3DMixingRenderingAlgorithm RenderingAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVAudio3DMixingRenderingAlgorithm RenderingAlgorithm" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.IAVAudio3DMixing.RenderingAlgorithm" />
      <MemberSignature Language="F#" Value="member this.RenderingAlgorithm : AVFoundation.AVAudio3DMixingRenderingAlgorithm with get, set" Usage="AVFoundation.IAVAudio3DMixing.RenderingAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("renderingAlgorithm")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRenderingAlgorithm:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudio3DMixingRenderingAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverbBlend">
      <MemberSignature Language="C#" Value="public float ReverbBlend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ReverbBlend" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.IAVAudio3DMixing.ReverbBlend" />
      <MemberSignature Language="F#" Value="member this.ReverbBlend : single with get, set" Usage="AVFoundation.IAVAudio3DMixing.ReverbBlend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("reverbBlend")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setReverbBlend:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
