<Type Name="AVMutableCompositionTrack" FullName="AVFoundation.AVMutableCompositionTrack">
  <TypeSignature Language="C#" Value="public class AVMutableCompositionTrack : AVFoundation.AVCompositionTrack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVMutableCompositionTrack extends AVFoundation.AVCompositionTrack" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVMutableCompositionTrack" />
  <TypeSignature Language="F#" Value="type AVMutableCompositionTrack = class&#xA;    inherit AVCompositionTrack" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AVFoundation.AVCompositionTrack</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("AVMutableCompositionTrack", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A mutable subtype of <see cref="T:AVFoundation.AVCompositionTrack" />.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVMutableCompositionTrack_Class/index.html">Apple documentation for <c>AVMutableCompositionTrack</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVMutableCompositionTrack (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVMutableCompositionTrack : Foundation.NSObjectFlag -&gt; AVFoundation.AVMutableCompositionTrack" Usage="new AVFoundation.AVMutableCompositionTrack t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVMutableCompositionTrack (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVMutableCompositionTrack : nativeint -&gt; AVFoundation.AVMutableCompositionTrack" Usage="new AVFoundation.AVMutableCompositionTrack handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrackAssociation">
      <MemberSignature Language="C#" Value="public virtual void AddTrackAssociation (AVFoundation.AVCompositionTrack compositionTrack, string trackAssociationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTrackAssociation(class AVFoundation.AVCompositionTrack compositionTrack, string trackAssociationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.AddTrackAssociation(AVFoundation.AVCompositionTrack,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AddTrackAssociation : AVFoundation.AVCompositionTrack * string -&gt; unit&#xA;override this.AddTrackAssociation : AVFoundation.AVCompositionTrack * string -&gt; unit" Usage="aVMutableCompositionTrack.AddTrackAssociation (compositionTrack, trackAssociationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addTrackAssociationToTrack:type:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionTrack" Type="AVFoundation.AVCompositionTrack" />
        <Parameter Name="trackAssociationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compositionTrack">To be added.</param>
        <param name="trackAssociationType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVMutableCompositionTrack.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVMutableCompositionTrack.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedLanguageTag">
      <MemberSignature Language="C#" Value="public virtual string ExtendedLanguageTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExtendedLanguageTag" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVMutableCompositionTrack.ExtendedLanguageTag" />
      <MemberSignature Language="F#" Value="member this.ExtendedLanguageTag : string with get, set" Usage="AVFoundation.AVMutableCompositionTrack.ExtendedLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("extendedLanguageTag")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setExtendedLanguageTag:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("extendedLanguageTag", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setExtendedLanguageTag:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a version of the language tag that conforms to RFC 4646.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyTimeRange">
      <MemberSignature Language="C#" Value="public virtual void InsertEmptyTimeRange (CoreMedia.CMTimeRange timeRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertEmptyTimeRange(valuetype CoreMedia.CMTimeRange timeRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.InsertEmptyTimeRange(CoreMedia.CMTimeRange)" />
      <MemberSignature Language="F#" Value="abstract member InsertEmptyTimeRange : CoreMedia.CMTimeRange -&gt; unit&#xA;override this.InsertEmptyTimeRange : CoreMedia.CMTimeRange -&gt; unit" Usage="aVMutableCompositionTrack.InsertEmptyTimeRange timeRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("insertEmptyTimeRange:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeRange" Type="CoreMedia.CMTimeRange" />
      </Parameters>
      <Docs>
        <param name="timeRange">To be added.</param>
        <summary>Inserts empty content into the track at the specified <paramref name="timeRange" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertTimeRange">
      <MemberSignature Language="C#" Value="public virtual bool InsertTimeRange (CoreMedia.CMTimeRange timeRange, AVFoundation.AVAssetTrack ofTrack, CoreMedia.CMTime atTime, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InsertTimeRange(valuetype CoreMedia.CMTimeRange timeRange, class AVFoundation.AVAssetTrack ofTrack, valuetype CoreMedia.CMTime atTime, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.InsertTimeRange(CoreMedia.CMTimeRange,AVFoundation.AVAssetTrack,CoreMedia.CMTime,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member InsertTimeRange : CoreMedia.CMTimeRange * AVFoundation.AVAssetTrack * CoreMedia.CMTime *  -&gt; bool&#xA;override this.InsertTimeRange : CoreMedia.CMTimeRange * AVFoundation.AVAssetTrack * CoreMedia.CMTime *  -&gt; bool" Usage="aVMutableCompositionTrack.InsertTimeRange (timeRange, ofTrack, atTime, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("insertTimeRange:ofTrack:atTime:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeRange" Type="CoreMedia.CMTimeRange" />
        <Parameter Name="ofTrack" Type="AVFoundation.AVAssetTrack" />
        <Parameter Name="atTime" Type="CoreMedia.CMTime" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeRange">To be added.</param>
        <param name="ofTrack">To be added.</param>
        <param name="atTime">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Inserts content, from the specified of <paramref name="ofTrack" /> into the the current track beginning at the specified <paramref name="atTime" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertTimeRanges">
      <MemberSignature Language="C#" Value="public virtual bool InsertTimeRanges (Foundation.NSValue cmTimeRanges, AVFoundation.AVAssetTrack[] tracks, CoreMedia.CMTime startTime, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InsertTimeRanges(class Foundation.NSValue cmTimeRanges, class AVFoundation.AVAssetTrack[] tracks, valuetype CoreMedia.CMTime startTime, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.InsertTimeRanges(Foundation.NSValue,AVFoundation.AVAssetTrack[],CoreMedia.CMTime,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member InsertTimeRanges : Foundation.NSValue * AVFoundation.AVAssetTrack[] * CoreMedia.CMTime *  -&gt; bool&#xA;override this.InsertTimeRanges : Foundation.NSValue * AVFoundation.AVAssetTrack[] * CoreMedia.CMTime *  -&gt; bool" Usage="aVMutableCompositionTrack.InsertTimeRanges (cmTimeRanges, tracks, startTime, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("Use 'InsertTimeRanges' overload accepting an 'NSValue' array.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmTimeRanges" Type="Foundation.NSValue" />
        <Parameter Name="tracks" Type="AVFoundation.AVAssetTrack[]" />
        <Parameter Name="startTime" Type="CoreMedia.CMTime" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cmTimeRanges">To be added.</param>
        <param name="tracks">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Inserts content from the specified <paramref name="cmTimeRanges" /> in the specified <paramref name="tracks" />, into the the current track, beginning at the specified <paramref name="startTime" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertTimeRanges">
      <MemberSignature Language="C#" Value="public virtual bool InsertTimeRanges (Foundation.NSValue[] cmTimeRanges, AVFoundation.AVAssetTrack[] tracks, CoreMedia.CMTime startTime, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InsertTimeRanges(class Foundation.NSValue[] cmTimeRanges, class AVFoundation.AVAssetTrack[] tracks, valuetype CoreMedia.CMTime startTime, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.InsertTimeRanges(Foundation.NSValue[],AVFoundation.AVAssetTrack[],CoreMedia.CMTime,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member InsertTimeRanges : Foundation.NSValue[] * AVFoundation.AVAssetTrack[] * CoreMedia.CMTime *  -&gt; bool&#xA;override this.InsertTimeRanges : Foundation.NSValue[] * AVFoundation.AVAssetTrack[] * CoreMedia.CMTime *  -&gt; bool" Usage="aVMutableCompositionTrack.InsertTimeRanges (cmTimeRanges, tracks, startTime, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("insertTimeRanges:ofTracks:atTime:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmTimeRanges" Type="Foundation.NSValue[]" />
        <Parameter Name="tracks" Type="AVFoundation.AVAssetTrack[]" />
        <Parameter Name="startTime" Type="CoreMedia.CMTime" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cmTimeRanges">To be added.</param>
        <param name="tracks">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Inserts content from the specified <paramref name="cmTimeRanges" /> in the specified <paramref name="tracks" />, into the the current track, beginning at the specified <paramref name="startTime" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageCode">
      <MemberSignature Language="C#" Value="public virtual string LanguageCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LanguageCode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVMutableCompositionTrack.LanguageCode" />
      <MemberSignature Language="F#" Value="member this.LanguageCode : string with get, set" Usage="AVFoundation.AVMutableCompositionTrack.LanguageCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("languageCode")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setLanguageCode:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("languageCode", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setLanguageCode:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ISO 639-2/T language code for the track.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalTimeScale">
      <MemberSignature Language="C#" Value="public virtual int NaturalTimeScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalTimeScale" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVMutableCompositionTrack.NaturalTimeScale" />
      <MemberSignature Language="F#" Value="member this.NaturalTimeScale : int with get, set" Usage="AVFoundation.AVMutableCompositionTrack.NaturalTimeScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("naturalTimeScale")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setNaturalTimeScale:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the timescale for which no time conversion is required for edit operations.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredTransform">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGAffineTransform PreferredTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGAffineTransform PreferredTransform" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVMutableCompositionTrack.PreferredTransform" />
      <MemberSignature Language="F#" Value="member this.PreferredTransform : CoreGraphics.CGAffineTransform with get, set" Usage="AVFoundation.AVMutableCompositionTrack.PreferredTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("preferredTransform")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setPreferredTransform:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGAffineTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the preferred display transformation for visual media in the track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredVolume">
      <MemberSignature Language="C#" Value="public virtual float PreferredVolume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PreferredVolume" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVMutableCompositionTrack.PreferredVolume" />
      <MemberSignature Language="F#" Value="member this.PreferredVolume : single with get, set" Usage="AVFoundation.AVMutableCompositionTrack.PreferredVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("preferredVolume")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setPreferredVolume:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the preferred audio volume for the track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTimeRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveTimeRange (CoreMedia.CMTimeRange timeRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTimeRange(valuetype CoreMedia.CMTimeRange timeRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.RemoveTimeRange(CoreMedia.CMTimeRange)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTimeRange : CoreMedia.CMTimeRange -&gt; unit&#xA;override this.RemoveTimeRange : CoreMedia.CMTimeRange -&gt; unit" Usage="aVMutableCompositionTrack.RemoveTimeRange timeRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeTimeRange:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeRange" Type="CoreMedia.CMTimeRange" />
      </Parameters>
      <Docs>
        <param name="timeRange">To be added.</param>
        <summary>Removes the specified <paramref name="timeRange" /> from the track.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTrackAssociation">
      <MemberSignature Language="C#" Value="public virtual void RemoveTrackAssociation (AVFoundation.AVCompositionTrack compositionTrack, string trackAssociationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTrackAssociation(class AVFoundation.AVCompositionTrack compositionTrack, string trackAssociationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.RemoveTrackAssociation(AVFoundation.AVCompositionTrack,System.String)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTrackAssociation : AVFoundation.AVCompositionTrack * string -&gt; unit&#xA;override this.RemoveTrackAssociation : AVFoundation.AVCompositionTrack * string -&gt; unit" Usage="aVMutableCompositionTrack.RemoveTrackAssociation (compositionTrack, trackAssociationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("removeTrackAssociationToTrack:type:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionTrack" Type="AVFoundation.AVCompositionTrack" />
        <Parameter Name="trackAssociationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compositionTrack">To be added.</param>
        <param name="trackAssociationType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTimeRange">
      <MemberSignature Language="C#" Value="public virtual void ScaleTimeRange (CoreMedia.CMTimeRange timeRange, CoreMedia.CMTime duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleTimeRange(valuetype CoreMedia.CMTimeRange timeRange, valuetype CoreMedia.CMTime duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.ScaleTimeRange(CoreMedia.CMTimeRange,CoreMedia.CMTime)" />
      <MemberSignature Language="F#" Value="abstract member ScaleTimeRange : CoreMedia.CMTimeRange * CoreMedia.CMTime -&gt; unit&#xA;override this.ScaleTimeRange : CoreMedia.CMTimeRange * CoreMedia.CMTime -&gt; unit" Usage="aVMutableCompositionTrack.ScaleTimeRange (timeRange, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("scaleTimeRange:toDuration:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeRange" Type="CoreMedia.CMTimeRange" />
        <Parameter Name="duration" Type="CoreMedia.CMTime" />
      </Parameters>
      <Docs>
        <param name="timeRange">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>Stretches or shrinks the specified <paramref name="timeRange" /> to match the specified <paramref name="duration" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Segments">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCompositionTrackSegment[] Segments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCompositionTrackSegment[] Segments" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVMutableCompositionTrack.Segments" />
      <MemberSignature Language="F#" Value="member this.Segments : AVFoundation.AVCompositionTrackSegment[] with get, set" Usage="AVFoundation.AVMutableCompositionTrack.Segments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("segments")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setSegments:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("segments", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setSegments:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCompositionTrackSegment[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the track segments in the track.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTrackSegments">
      <MemberSignature Language="C#" Value="public virtual bool ValidateTrackSegments (AVFoundation.AVCompositionTrackSegment[] trackSegments, out Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateTrackSegments(class AVFoundation.AVCompositionTrackSegment[] trackSegments, [out] class Foundation.NSError&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVMutableCompositionTrack.ValidateTrackSegments(AVFoundation.AVCompositionTrackSegment[],Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member ValidateTrackSegments : AVFoundation.AVCompositionTrackSegment[] *  -&gt; bool&#xA;override this.ValidateTrackSegments : AVFoundation.AVCompositionTrackSegment[] *  -&gt; bool" Usage="aVMutableCompositionTrack.ValidateTrackSegments (trackSegments, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("validateTrackSegments:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackSegments" Type="AVFoundation.AVCompositionTrackSegment[]" />
        <Parameter Name="error" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="trackSegments">To be added.</param>
        <param name="error">To be added.</param>
        <summary>Returns <see langword="true" /> if <paramref name="trackSegments" /> all conform to the track's timing rules.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
