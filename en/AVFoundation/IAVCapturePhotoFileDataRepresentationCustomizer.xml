<Type Name="IAVCapturePhotoFileDataRepresentationCustomizer" FullName="AVFoundation.IAVCapturePhotoFileDataRepresentationCustomizer">
  <TypeSignature Language="C#" Value="public interface IAVCapturePhotoFileDataRepresentationCustomizer : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAVCapturePhotoFileDataRepresentationCustomizer implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.IAVCapturePhotoFileDataRepresentationCustomizer" />
  <TypeSignature Language="F#" Value="type IAVCapturePhotoFileDataRepresentationCustomizer = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="AVCapturePhotoFileDataRepresentationCustomizer", WrapperType=typeof(AVFoundation.AVCapturePhotoFileDataRepresentationCustomizerWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReplacementMetadata", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(Foundation.NSDictionary`2&lt;Foundation.NSString,Foundation.NSObject&gt;), Selector="replacementMetadataForPhoto:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReplacementEmbeddedThumbnail", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(CoreVideo.CVPixelBuffer), Selector="replacementEmbeddedThumbnailPixelBufferWithPhotoFormat:forPhoto:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReplacementDepthData", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(AVFoundation.AVDepthData), Selector="replacementDepthDataForPhoto:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReplacementPortraitEffectsMatte", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(AVFoundation.AVPortraitEffectsMatte), Selector="replacementPortraitEffectsMatteForPhoto:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReplacementMetadata", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AVFoundation.AVCapturePhoto) }, ReturnType=typeof(Foundation.NSDictionary`2&lt;Foundation.NSString,Foundation.NSObject&gt;), Selector="replacementMetadataForPhoto:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReplacementEmbeddedThumbnail", ParameterByRef=new System.Boolean[] { true, false }, ParameterType=new System.Type[] { typeof(Foundation.NSDictionary`2&lt;Foundation.NSString,Foundation.NSObject&gt;), typeof(AVFoundation.AVCapturePhoto) }, ReturnType=typeof(CoreVideo.CVPixelBuffer), Selector="replacementEmbeddedThumbnailPixelBufferWithPhotoFormat:forPhoto:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReplacementDepthData", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AVFoundation.AVCapturePhoto) }, ReturnType=typeof(AVFoundation.AVDepthData), Selector="replacementDepthDataForPhoto:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="GetReplacementPortraitEffectsMatte", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(AVFoundation.AVCapturePhoto) }, ReturnType=typeof(AVFoundation.AVPortraitEffectsMatte), Selector="replacementPortraitEffectsMatteForPhoto:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
