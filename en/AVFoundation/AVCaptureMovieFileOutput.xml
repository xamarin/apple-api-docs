<Type Name="AVCaptureMovieFileOutput" FullName="AVFoundation.AVCaptureMovieFileOutput">
  <TypeSignature Language="C#" Value="public class AVCaptureMovieFileOutput : AVFoundation.AVCaptureFileOutput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVCaptureMovieFileOutput extends AVFoundation.AVCaptureFileOutput" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVCaptureMovieFileOutput" />
  <TypeSignature Language="F#" Value="type AVCaptureMovieFileOutput = class&#xA;    inherit AVCaptureFileOutput" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AVFoundation.AVCaptureFileOutput</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("AVCaptureMovieFileOutput", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A type of <see cref="T:AVFoundation.AVCaptureFileOutput" /> that captures data to a QuickTime movie.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVCaptureMovieFileOutput_Class/index.html">Apple documentation for <c>AVCaptureMovieFileOutput</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVCaptureMovieFileOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureMovieFileOutput.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVCaptureMovieFileOutput (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureMovieFileOutput.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureMovieFileOutput : Foundation.NSObjectFlag -&gt; AVFoundation.AVCaptureMovieFileOutput" Usage="new AVFoundation.AVCaptureMovieFileOutput t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVCaptureMovieFileOutput (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureMovieFileOutput.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureMovieFileOutput : nativeint -&gt; AVFoundation.AVCaptureMovieFileOutput" Usage="new AVFoundation.AVCaptureMovieFileOutput handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableVideoCodecTypes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSString[] AvailableVideoCodecTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString[] AvailableVideoCodecTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureMovieFileOutput.AvailableVideoCodecTypes" />
      <MemberSignature Language="F#" Value="member this.AvailableVideoCodecTypes : Foundation.NSString[]" Usage="AVFoundation.AVCaptureMovieFileOutput.AvailableVideoCodecTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("availableVideoCodecTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array that contains the available video codec types.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureMovieFileOutput.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVCaptureMovieFileOutput.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSettings">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary GetOutputSettings (AVFoundation.AVCaptureConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSDictionary GetOutputSettings(class AVFoundation.AVCaptureConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureMovieFileOutput.GetOutputSettings(AVFoundation.AVCaptureConnection)" />
      <MemberSignature Language="F#" Value="abstract member GetOutputSettings : AVFoundation.AVCaptureConnection -&gt; Foundation.NSDictionary&#xA;override this.GetOutputSettings : AVFoundation.AVCaptureConnection -&gt; Foundation.NSDictionary" Usage="aVCaptureMovieFileOutput.GetOutputSettings connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("outputSettingsForConnection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="AVFoundation.AVCaptureConnection" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>Returns the output settings for the specified <paramref name="connection" />. These settings are used to re-encode data from the connection as it is recorded.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedOutputSettingsKeys">
      <MemberSignature Language="C#" Value="public virtual string[] GetSupportedOutputSettingsKeys (AVFoundation.AVCaptureConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetSupportedOutputSettingsKeys(class AVFoundation.AVCaptureConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureMovieFileOutput.GetSupportedOutputSettingsKeys(AVFoundation.AVCaptureConnection)" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedOutputSettingsKeys : AVFoundation.AVCaptureConnection -&gt; string[]&#xA;override this.GetSupportedOutputSettingsKeys : AVFoundation.AVCaptureConnection -&gt; string[]" Usage="aVCaptureMovieFileOutput.GetSupportedOutputSettingsKeys connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("supportedOutputSettingsKeysForConnection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="AVFoundation.AVCaptureConnection" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVMetadataItem[] Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVMetadataItem[] Metadata" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureMovieFileOutput.Metadata" />
      <MemberSignature Language="F#" Value="member this.Metadata : AVFoundation.AVMetadataItem[] with get, set" Usage="AVFoundation.AVCaptureMovieFileOutput.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("metadata", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMetadata:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVMetadataItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Metadata of the output file.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MovieFragmentInterval">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime MovieFragmentInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime MovieFragmentInterval" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureMovieFileOutput.MovieFragmentInterval" />
      <MemberSignature Language="F#" Value="member this.MovieFragmentInterval : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVCaptureMovieFileOutput.MovieFragmentInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("movieFragmentInterval")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMovieFragmentInterval:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of seconds per segment written.</summary>
        <value>The default value is 10 seconds.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsVideoOrientationAndMirroringChangesAsMetadataTrack">
      <MemberSignature Language="C#" Value="public virtual bool RecordsVideoOrientationAndMirroringChangesAsMetadataTrack (AVFoundation.AVCaptureConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RecordsVideoOrientationAndMirroringChangesAsMetadataTrack(class AVFoundation.AVCaptureConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureMovieFileOutput.RecordsVideoOrientationAndMirroringChangesAsMetadataTrack(AVFoundation.AVCaptureConnection)" />
      <MemberSignature Language="F#" Value="abstract member RecordsVideoOrientationAndMirroringChangesAsMetadataTrack : AVFoundation.AVCaptureConnection -&gt; bool&#xA;override this.RecordsVideoOrientationAndMirroringChangesAsMetadataTrack : AVFoundation.AVCaptureConnection -&gt; bool" Usage="aVCaptureMovieFileOutput.RecordsVideoOrientationAndMirroringChangesAsMetadataTrack connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("recordsVideoOrientationAndMirroringChangesAsMetadataTrackForConnection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="AVFoundation.AVCaptureConnection" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputSettings">
      <MemberSignature Language="C#" Value="public virtual void SetOutputSettings (Foundation.NSDictionary outputSettings, AVFoundation.AVCaptureConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputSettings(class Foundation.NSDictionary outputSettings, class AVFoundation.AVCaptureConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureMovieFileOutput.SetOutputSettings(Foundation.NSDictionary,AVFoundation.AVCaptureConnection)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputSettings : Foundation.NSDictionary * AVFoundation.AVCaptureConnection -&gt; unit&#xA;override this.SetOutputSettings : Foundation.NSDictionary * AVFoundation.AVCaptureConnection -&gt; unit" Usage="aVCaptureMovieFileOutput.SetOutputSettings (outputSettings, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setOutputSettings:forConnection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputSettings" Type="Foundation.NSDictionary" />
        <Parameter Name="connection" Type="AVFoundation.AVCaptureConnection" />
      </Parameters>
      <Docs>
        <param name="outputSettings">To be added.</param>
        <param name="connection">To be added.</param>
        <summary>Sets the output settings for the specified <paramref name="connection" />. These settings are used to re-encode data from the connection as it is recorded.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRecordsVideoOrientationAndMirroringChanges">
      <MemberSignature Language="C#" Value="public virtual void SetRecordsVideoOrientationAndMirroringChanges (bool doRecordChanges, AVFoundation.AVCaptureConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRecordsVideoOrientationAndMirroringChanges(bool doRecordChanges, class AVFoundation.AVCaptureConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureMovieFileOutput.SetRecordsVideoOrientationAndMirroringChanges(System.Boolean,AVFoundation.AVCaptureConnection)" />
      <MemberSignature Language="F#" Value="abstract member SetRecordsVideoOrientationAndMirroringChanges : bool * AVFoundation.AVCaptureConnection -&gt; unit&#xA;override this.SetRecordsVideoOrientationAndMirroringChanges : bool * AVFoundation.AVCaptureConnection -&gt; unit" Usage="aVCaptureMovieFileOutput.SetRecordsVideoOrientationAndMirroringChanges (doRecordChanges, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setRecordsVideoOrientationAndMirroringChanges:asMetadataTrackForConnection:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doRecordChanges" Type="System.Boolean" />
        <Parameter Name="connection" Type="AVFoundation.AVCaptureConnection" />
      </Parameters>
      <Docs>
        <param name="doRecordChanges">To be added.</param>
        <param name="connection">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
