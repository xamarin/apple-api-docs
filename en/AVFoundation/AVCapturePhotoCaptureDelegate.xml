<Type Name="AVCapturePhotoCaptureDelegate" FullName="AVFoundation.AVCapturePhotoCaptureDelegate">
  <TypeSignature Language="C#" Value="public class AVCapturePhotoCaptureDelegate : Foundation.NSObject, AVFoundation.IAVCapturePhotoCaptureDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVCapturePhotoCaptureDelegate extends Foundation.NSObject implements class AVFoundation.IAVCapturePhotoCaptureDelegate, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVCapturePhotoCaptureDelegate" />
  <TypeSignature Language="F#" Value="type AVCapturePhotoCaptureDelegate = class&#xA;    inherit NSObject&#xA;    interface IAVCapturePhotoCaptureDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AVFoundation.IAVCapturePhotoCaptureDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("AVCapturePhotoCaptureDelegate", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate object that receives notifications when capturing photos with the <see cref="T:AVFoundation.AVCapturePhotoOutput" /> class.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/reference/AVFoundation/AVCapturePhotoCaptureDelegate">Apple documentation for <c>AVCapturePhotoCaptureDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVCapturePhotoCaptureDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVCapturePhotoCaptureDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCapturePhotoCaptureDelegate : Foundation.NSObjectFlag -&gt; AVFoundation.AVCapturePhotoCaptureDelegate" Usage="new AVFoundation.AVCapturePhotoCaptureDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVCapturePhotoCaptureDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCapturePhotoCaptureDelegate : nativeint -&gt; AVFoundation.AVCapturePhotoCaptureDelegate" Usage="new AVFoundation.AVCapturePhotoCaptureDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidCapturePhoto">
      <MemberSignature Language="C#" Value="public virtual void DidCapturePhoto (AVFoundation.AVCapturePhotoOutput captureOutput, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidCapturePhoto(class AVFoundation.AVCapturePhotoOutput captureOutput, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.DidCapturePhoto(AVFoundation.AVCapturePhotoOutput,AVFoundation.AVCaptureResolvedPhotoSettings)" />
      <MemberSignature Language="F#" Value="abstract member DidCapturePhoto : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCaptureResolvedPhotoSettings -&gt; unit&#xA;override this.DidCapturePhoto : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCaptureResolvedPhotoSettings -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.DidCapturePhoto (captureOutput, resolvedSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:didCapturePhotoForResolvedSettings:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureOutput" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="resolvedSettings" Type="AVFoundation.AVCaptureResolvedPhotoSettings" />
      </Parameters>
      <Docs>
        <param name="captureOutput">To be added.</param>
        <param name="resolvedSettings">To be added.</param>
        <summary>Method that is called after the photo is taken.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishCapture">
      <MemberSignature Language="C#" Value="public virtual void DidFinishCapture (AVFoundation.AVCapturePhotoOutput captureOutput, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishCapture(class AVFoundation.AVCapturePhotoOutput captureOutput, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.DidFinishCapture(AVFoundation.AVCapturePhotoOutput,AVFoundation.AVCaptureResolvedPhotoSettings,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFinishCapture : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCaptureResolvedPhotoSettings * Foundation.NSError -&gt; unit&#xA;override this.DidFinishCapture : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCaptureResolvedPhotoSettings * Foundation.NSError -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.DidFinishCapture (captureOutput, resolvedSettings, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:didFinishCaptureForResolvedSettings:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureOutput" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="resolvedSettings" Type="AVFoundation.AVCaptureResolvedPhotoSettings" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="captureOutput">To be added.</param>
        <param name="resolvedSettings">To be added.</param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Method that is called after the photo is captured.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishProcessingLivePhotoMovie">
      <MemberSignature Language="C#" Value="public virtual void DidFinishProcessingLivePhotoMovie (AVFoundation.AVCapturePhotoOutput captureOutput, Foundation.NSUrl outputFileUrl, CoreMedia.CMTime duration, CoreMedia.CMTime photoDisplayTime, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishProcessingLivePhotoMovie(class AVFoundation.AVCapturePhotoOutput captureOutput, class Foundation.NSUrl outputFileUrl, valuetype CoreMedia.CMTime duration, valuetype CoreMedia.CMTime photoDisplayTime, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.DidFinishProcessingLivePhotoMovie(AVFoundation.AVCapturePhotoOutput,Foundation.NSUrl,CoreMedia.CMTime,CoreMedia.CMTime,AVFoundation.AVCaptureResolvedPhotoSettings,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFinishProcessingLivePhotoMovie : AVFoundation.AVCapturePhotoOutput * Foundation.NSUrl * CoreMedia.CMTime * CoreMedia.CMTime * AVFoundation.AVCaptureResolvedPhotoSettings * Foundation.NSError -&gt; unit&#xA;override this.DidFinishProcessingLivePhotoMovie : AVFoundation.AVCapturePhotoOutput * Foundation.NSUrl * CoreMedia.CMTime * CoreMedia.CMTime * AVFoundation.AVCaptureResolvedPhotoSettings * Foundation.NSError -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.DidFinishProcessingLivePhotoMovie (captureOutput, outputFileUrl, duration, photoDisplayTime, resolvedSettings, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:didFinishProcessingLivePhotoToMovieFileAtURL:duration:photoDisplayTime:resolvedSettings:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureOutput" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="outputFileUrl" Type="Foundation.NSUrl" />
        <Parameter Name="duration" Type="CoreMedia.CMTime" />
        <Parameter Name="photoDisplayTime" Type="CoreMedia.CMTime" />
        <Parameter Name="resolvedSettings" Type="AVFoundation.AVCaptureResolvedPhotoSettings" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="captureOutput">To be added.</param>
        <param name="outputFileUrl">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="photoDisplayTime">To be added.</param>
        <param name="resolvedSettings">To be added.</param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Method that is called after a live photo movie is processed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishProcessingPhoto">
      <MemberSignature Language="C#" Value="public virtual void DidFinishProcessingPhoto (AVFoundation.AVCapturePhotoOutput output, AVFoundation.AVCapturePhoto photo, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishProcessingPhoto(class AVFoundation.AVCapturePhotoOutput output, class AVFoundation.AVCapturePhoto photo, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.DidFinishProcessingPhoto(AVFoundation.AVCapturePhotoOutput,AVFoundation.AVCapturePhoto,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFinishProcessingPhoto : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCapturePhoto * Foundation.NSError -&gt; unit&#xA;override this.DidFinishProcessingPhoto : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCapturePhoto * Foundation.NSError -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.DidFinishProcessingPhoto (output, photo, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:didFinishProcessingPhoto:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="photo" Type="AVFoundation.AVCapturePhoto" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="output">To be added.</param>
        <param name="photo">To be added.</param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishProcessingPhoto">
      <MemberSignature Language="C#" Value="public virtual void DidFinishProcessingPhoto (AVFoundation.AVCapturePhotoOutput captureOutput, CoreMedia.CMSampleBuffer photoSampleBuffer, CoreMedia.CMSampleBuffer previewPhotoSampleBuffer, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, AVFoundation.AVCaptureBracketedStillImageSettings bracketSettings, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishProcessingPhoto(class AVFoundation.AVCapturePhotoOutput captureOutput, class CoreMedia.CMSampleBuffer photoSampleBuffer, class CoreMedia.CMSampleBuffer previewPhotoSampleBuffer, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, class AVFoundation.AVCaptureBracketedStillImageSettings bracketSettings, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.DidFinishProcessingPhoto(AVFoundation.AVCapturePhotoOutput,CoreMedia.CMSampleBuffer,CoreMedia.CMSampleBuffer,AVFoundation.AVCaptureResolvedPhotoSettings,AVFoundation.AVCaptureBracketedStillImageSettings,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFinishProcessingPhoto : AVFoundation.AVCapturePhotoOutput * CoreMedia.CMSampleBuffer * CoreMedia.CMSampleBuffer * AVFoundation.AVCaptureResolvedPhotoSettings * AVFoundation.AVCaptureBracketedStillImageSettings * Foundation.NSError -&gt; unit&#xA;override this.DidFinishProcessingPhoto : AVFoundation.AVCapturePhotoOutput * CoreMedia.CMSampleBuffer * CoreMedia.CMSampleBuffer * AVFoundation.AVCaptureResolvedPhotoSettings * AVFoundation.AVCaptureBracketedStillImageSettings * Foundation.NSError -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.DidFinishProcessingPhoto (captureOutput, photoSampleBuffer, previewPhotoSampleBuffer, resolvedSettings, bracketSettings, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:didFinishProcessingPhotoSampleBuffer:previewPhotoSampleBuffer:resolvedSettings:bracketSettings:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use the 'DidFinishProcessingPhoto' overload accepting a 'AVCapturePhoto' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureOutput" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="photoSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="previewPhotoSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="resolvedSettings" Type="AVFoundation.AVCaptureResolvedPhotoSettings" />
        <Parameter Name="bracketSettings" Type="AVFoundation.AVCaptureBracketedStillImageSettings" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="captureOutput">To be added.</param>
        <param name="photoSampleBuffer">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="previewPhotoSampleBuffer">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="resolvedSettings">To be added.</param>
        <param name="bracketSettings">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Developers should not use this deprecated method. Developers should use the 'DidFinishProcessingPhoto' overload accepting a 'AVCapturePhoto' instead.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishProcessingRawPhoto">
      <MemberSignature Language="C#" Value="public virtual void DidFinishProcessingRawPhoto (AVFoundation.AVCapturePhotoOutput captureOutput, CoreMedia.CMSampleBuffer rawSampleBuffer, CoreMedia.CMSampleBuffer previewPhotoSampleBuffer, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, AVFoundation.AVCaptureBracketedStillImageSettings bracketSettings, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishProcessingRawPhoto(class AVFoundation.AVCapturePhotoOutput captureOutput, class CoreMedia.CMSampleBuffer rawSampleBuffer, class CoreMedia.CMSampleBuffer previewPhotoSampleBuffer, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, class AVFoundation.AVCaptureBracketedStillImageSettings bracketSettings, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.DidFinishProcessingRawPhoto(AVFoundation.AVCapturePhotoOutput,CoreMedia.CMSampleBuffer,CoreMedia.CMSampleBuffer,AVFoundation.AVCaptureResolvedPhotoSettings,AVFoundation.AVCaptureBracketedStillImageSettings,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFinishProcessingRawPhoto : AVFoundation.AVCapturePhotoOutput * CoreMedia.CMSampleBuffer * CoreMedia.CMSampleBuffer * AVFoundation.AVCaptureResolvedPhotoSettings * AVFoundation.AVCaptureBracketedStillImageSettings * Foundation.NSError -&gt; unit&#xA;override this.DidFinishProcessingRawPhoto : AVFoundation.AVCapturePhotoOutput * CoreMedia.CMSampleBuffer * CoreMedia.CMSampleBuffer * AVFoundation.AVCaptureResolvedPhotoSettings * AVFoundation.AVCaptureBracketedStillImageSettings * Foundation.NSError -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.DidFinishProcessingRawPhoto (captureOutput, rawSampleBuffer, previewPhotoSampleBuffer, resolvedSettings, bracketSettings, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:didFinishProcessingRawPhotoSampleBuffer:previewPhotoSampleBuffer:resolvedSettings:bracketSettings:error:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use the 'DidFinishProcessingPhoto' overload accepting a 'AVCapturePhoto' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureOutput" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="rawSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="previewPhotoSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="resolvedSettings" Type="AVFoundation.AVCaptureResolvedPhotoSettings" />
        <Parameter Name="bracketSettings" Type="AVFoundation.AVCaptureBracketedStillImageSettings" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="captureOutput">To be added.</param>
        <param name="rawSampleBuffer">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="previewPhotoSampleBuffer">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="resolvedSettings">To be added.</param>
        <param name="bracketSettings">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Method that is called after a RAW photo is processed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishRecordingLivePhotoMovie">
      <MemberSignature Language="C#" Value="public virtual void DidFinishRecordingLivePhotoMovie (AVFoundation.AVCapturePhotoOutput captureOutput, Foundation.NSUrl outputFileUrl, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFinishRecordingLivePhotoMovie(class AVFoundation.AVCapturePhotoOutput captureOutput, class Foundation.NSUrl outputFileUrl, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.DidFinishRecordingLivePhotoMovie(AVFoundation.AVCapturePhotoOutput,Foundation.NSUrl,AVFoundation.AVCaptureResolvedPhotoSettings)" />
      <MemberSignature Language="F#" Value="abstract member DidFinishRecordingLivePhotoMovie : AVFoundation.AVCapturePhotoOutput * Foundation.NSUrl * AVFoundation.AVCaptureResolvedPhotoSettings -&gt; unit&#xA;override this.DidFinishRecordingLivePhotoMovie : AVFoundation.AVCapturePhotoOutput * Foundation.NSUrl * AVFoundation.AVCaptureResolvedPhotoSettings -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.DidFinishRecordingLivePhotoMovie (captureOutput, outputFileUrl, resolvedSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:didFinishRecordingLivePhotoMovieForEventualFileAtURL:resolvedSettings:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureOutput" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="outputFileUrl" Type="Foundation.NSUrl" />
        <Parameter Name="resolvedSettings" Type="AVFoundation.AVCaptureResolvedPhotoSettings" />
      </Parameters>
      <Docs>
        <param name="captureOutput">To be added.</param>
        <param name="outputFileUrl">To be added.</param>
        <param name="resolvedSettings">To be added.</param>
        <summary>Method that is called after a live photo movie is finished recording.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillBeginCapture">
      <MemberSignature Language="C#" Value="public virtual void WillBeginCapture (AVFoundation.AVCapturePhotoOutput captureOutput, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillBeginCapture(class AVFoundation.AVCapturePhotoOutput captureOutput, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.WillBeginCapture(AVFoundation.AVCapturePhotoOutput,AVFoundation.AVCaptureResolvedPhotoSettings)" />
      <MemberSignature Language="F#" Value="abstract member WillBeginCapture : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCaptureResolvedPhotoSettings -&gt; unit&#xA;override this.WillBeginCapture : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCaptureResolvedPhotoSettings -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.WillBeginCapture (captureOutput, resolvedSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:willBeginCaptureForResolvedSettings:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureOutput" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="resolvedSettings" Type="AVFoundation.AVCaptureResolvedPhotoSettings" />
      </Parameters>
      <Docs>
        <param name="captureOutput">To be added.</param>
        <param name="resolvedSettings">To be added.</param>
        <summary>Method that is called when capturing is about to begin.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillCapturePhoto">
      <MemberSignature Language="C#" Value="public virtual void WillCapturePhoto (AVFoundation.AVCapturePhotoOutput captureOutput, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillCapturePhoto(class AVFoundation.AVCapturePhotoOutput captureOutput, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoCaptureDelegate.WillCapturePhoto(AVFoundation.AVCapturePhotoOutput,AVFoundation.AVCaptureResolvedPhotoSettings)" />
      <MemberSignature Language="F#" Value="abstract member WillCapturePhoto : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCaptureResolvedPhotoSettings -&gt; unit&#xA;override this.WillCapturePhoto : AVFoundation.AVCapturePhotoOutput * AVFoundation.AVCaptureResolvedPhotoSettings -&gt; unit" Usage="aVCapturePhotoCaptureDelegate.WillCapturePhoto (captureOutput, resolvedSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureOutput:willCapturePhotoForResolvedSettings:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureOutput" Type="AVFoundation.AVCapturePhotoOutput" />
        <Parameter Name="resolvedSettings" Type="AVFoundation.AVCaptureResolvedPhotoSettings" />
      </Parameters>
      <Docs>
        <param name="captureOutput">To be added.</param>
        <param name="resolvedSettings">To be added.</param>
        <summary>Method that is called when capturing is about to finish.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
