<Type Name="AVAssetDownloadUrlSession" FullName="MonoTouch.AVFoundation.AVAssetDownloadUrlSession">
  <TypeSignature Language="C#" Value="public class AVAssetDownloadUrlSession : MonoTouch.Foundation.NSUrlSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVAssetDownloadUrlSession extends MonoTouch.Foundation.NSUrlSession" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSUrlSession</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("AVAssetDownloadURLSession", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.WatchOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A URL session object that developers use to create <see cref="T:AVFoundation.AVAssetDownloadTask" /> objects.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/reference/AVFoundation/AVAssetDownloadURLSession">Apple documentation for <c>AVAssetDownloadURLSession</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVAssetDownloadUrlSession (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVAssetDownloadUrlSession (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoTouch class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDataTask CreateDataTask (MonoTouch.Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDataTask CreateDataTask(class MonoTouch.Foundation.NSUrl url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDataTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> for the specified URL.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDataTask CreateDataTask (MonoTouch.Foundation.NSUrlRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDataTask CreateDataTask(class MonoTouch.Foundation.NSUrlRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDataTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> with the specified request.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDataTask CreateDataTask (MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSUrlSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDataTask CreateDataTask(class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSUrlSessionResponse completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDataTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="MonoTouch.Foundation.NSUrlSessionResponse" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> for the specified URL, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDataTask CreateDataTask (MonoTouch.Foundation.NSUrlRequest request, MonoTouch.Foundation.NSUrlSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDataTask CreateDataTask(class MonoTouch.Foundation.NSUrlRequest request, class MonoTouch.Foundation.NSUrlSessionResponse completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDataTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
        <Parameter Name="completionHandler" Type="MonoTouch.Foundation.NSUrlSessionResponse" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>reates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> for the specified request, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask (MonoTouch.Foundation.NSData resumeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class MonoTouch.Foundation.NSData resumeData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resumeData" Type="MonoTouch.Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="resumeData">To be added.</param>
        <summary>reates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> that resumes downloading <paramref name="resumeData" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask (MonoTouch.Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class MonoTouch.Foundation.NSUrl url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> for the specified URL.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask (MonoTouch.Foundation.NSUrlRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class MonoTouch.Foundation.NSUrlRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> for the specified request.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask (MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSUrlDownloadSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSUrlDownloadSessionResponse completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="MonoTouch.Foundation.NSUrlDownloadSessionResponse" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> for the specified url, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask (MonoTouch.Foundation.NSUrlRequest request, MonoTouch.Foundation.NSUrlDownloadSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class MonoTouch.Foundation.NSUrlRequest request, class MonoTouch.Foundation.NSUrlDownloadSessionResponse completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
        <Parameter Name="completionHandler" Type="MonoTouch.Foundation.NSUrlDownloadSessionResponse" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> for the specified request, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTaskFromResumeData">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTaskFromResumeData (MonoTouch.Foundation.NSData resumeData, MonoTouch.Foundation.NSUrlDownloadSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionDownloadTask CreateDownloadTaskFromResumeData(class MonoTouch.Foundation.NSData resumeData, class MonoTouch.Foundation.NSUrlDownloadSessionResponse completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resumeData" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="completionHandler" Type="MonoTouch.Foundation.NSUrlDownloadSessionResponse" />
      </Parameters>
      <Docs>
        <param name="resumeData">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> that resumes downloading the <paramref name="resumeData" />, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVAssetDownloadUrlSession CreateSession (MonoTouch.Foundation.NSUrlSessionConfiguration configuration, MonoTouch.AVFoundation.IAVAssetDownloadDelegate delegate, MonoTouch.Foundation.NSOperationQueue delegateQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVAssetDownloadUrlSession CreateSession(class MonoTouch.Foundation.NSUrlSessionConfiguration configuration, class MonoTouch.AVFoundation.IAVAssetDownloadDelegate delegate, class MonoTouch.Foundation.NSOperationQueue delegateQueue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("sessionWithConfiguration:assetDownloadDelegate:delegateQueue:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AVFoundation.AVAssetDownloadUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="MonoTouch.Foundation.NSUrlSessionConfiguration" />
        <Parameter Name="delegate" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
        <Parameter Name="delegateQueue" Type="MonoTouch.Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <param name="delegate">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="delegateQueue">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates a new <see cref="T:Foundation.AVAssetDownloadUrlSession" /> with the specified values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask (MonoTouch.Foundation.NSUrlRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask(class MonoTouch.Foundation.NSUrlRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified request.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask (MonoTouch.Foundation.NSUrlRequest request, MonoTouch.Foundation.NSData bodyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask(class MonoTouch.Foundation.NSUrlRequest request, class MonoTouch.Foundation.NSData bodyData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
        <Parameter Name="bodyData" Type="MonoTouch.Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="bodyData">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified <paramref name="request" /> and <paramref name="bodyData" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask (MonoTouch.Foundation.NSUrlRequest request, MonoTouch.Foundation.NSUrl fileURL);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask(class MonoTouch.Foundation.NSUrlRequest request, class MonoTouch.Foundation.NSUrl fileURL) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
        <Parameter Name="fileURL" Type="MonoTouch.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="fileURL">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified <paramref name="request" /> and <paramref name="fileURL" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask (MonoTouch.Foundation.NSUrlRequest request, MonoTouch.Foundation.NSData bodyData, MonoTouch.Foundation.NSUrlSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask(class MonoTouch.Foundation.NSUrlRequest request, class MonoTouch.Foundation.NSData bodyData, class MonoTouch.Foundation.NSUrlSessionResponse completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
        <Parameter Name="bodyData" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="completionHandler" Type="MonoTouch.Foundation.NSUrlSessionResponse" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="bodyData">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified <paramref name="request" /> and <paramref name="bodyData" />, and runs <paramref name="completeionHandler" /> when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask (MonoTouch.Foundation.NSUrlRequest request, MonoTouch.Foundation.NSUrl fileURL, MonoTouch.Foundation.NSUrlSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.Foundation.NSUrlSessionUploadTask CreateUploadTask(class MonoTouch.Foundation.NSUrlRequest request, class MonoTouch.Foundation.NSUrl fileURL, class MonoTouch.Foundation.NSUrlSessionResponse completionHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
        <Parameter Name="fileURL" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="MonoTouch.Foundation.NSUrlSessionResponse" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="fileURL">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified <paramref name="request" /> and <paramref name="fileURL" />, and runs <paramref name="completeionHandler" /> when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromConfiguration">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSUrlSession FromConfiguration (MonoTouch.Foundation.NSUrlSessionConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSUrlSession FromConfiguration(class MonoTouch.Foundation.NSUrlSessionConfiguration configuration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="MonoTouch.Foundation.NSUrlSessionConfiguration" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSession" /> from the specified <paramref name="configuration" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromConfiguration">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSUrlSession FromConfiguration (MonoTouch.Foundation.NSUrlSessionConfiguration configuration, MonoTouch.Foundation.INSUrlSessionDelegate sessionDelegate, MonoTouch.Foundation.NSOperationQueue delegateQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSUrlSession FromConfiguration(class MonoTouch.Foundation.NSUrlSessionConfiguration configuration, class MonoTouch.Foundation.INSUrlSessionDelegate sessionDelegate, class MonoTouch.Foundation.NSOperationQueue delegateQueue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="MonoTouch.Foundation.NSUrlSessionConfiguration" />
        <Parameter Name="sessionDelegate" Type="MonoTouch.Foundation.INSUrlSessionDelegate" />
        <Parameter Name="delegateQueue" Type="MonoTouch.Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <param name="sessionDelegate">To be added.</param>
        <param name="delegateQueue">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSession" /> by using the specified configuration, delegate, and delegate cue.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromConfiguration">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSUrlSession FromConfiguration (MonoTouch.Foundation.NSUrlSessionConfiguration configuration, MonoTouch.Foundation.NSUrlSessionDelegate sessionDelegate, MonoTouch.Foundation.NSOperationQueue delegateQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSUrlSession FromConfiguration(class MonoTouch.Foundation.NSUrlSessionConfiguration configuration, class MonoTouch.Foundation.NSUrlSessionDelegate sessionDelegate, class MonoTouch.Foundation.NSOperationQueue delegateQueue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the overload with a 'INSUrlSessionDelegate' parameter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="MonoTouch.Foundation.NSUrlSessionConfiguration" />
        <Parameter Name="sessionDelegate" Type="MonoTouch.Foundation.NSUrlSessionDelegate" />
        <Parameter Name="delegateQueue" Type="MonoTouch.Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <param name="sessionDelegate">To be added.</param>
        <param name="delegateQueue">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSession" /> from the specified <paramref name="configuration" /> and session delegate and delegate queue.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromWeakConfiguration">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSUrlSession FromWeakConfiguration (MonoTouch.Foundation.NSUrlSessionConfiguration configuration, MonoTouch.Foundation.NSObject weakDelegate, MonoTouch.Foundation.NSOperationQueue delegateQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSUrlSession FromWeakConfiguration(class MonoTouch.Foundation.NSUrlSessionConfiguration configuration, class MonoTouch.Foundation.NSObject weakDelegate, class MonoTouch.Foundation.NSOperationQueue delegateQueue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="MonoTouch.Foundation.NSUrlSessionConfiguration" />
        <Parameter Name="weakDelegate" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="delegateQueue" Type="MonoTouch.Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <param name="weakDelegate">To be added.</param>
        <param name="delegateQueue">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSession" /> from the specified <paramref name="configuration" />, weakly-referenced session delegate, and delegate queue.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public MonoTouch.AVFoundation.AVAssetDownloadTask GetAssetDownloadTask (MonoTouch.AVFoundation.AVUrlAsset urlAsset, MonoTouch.Foundation.NSUrl destinationUrl, MonoTouch.AVFoundation.AVAssetDownloadOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.AVFoundation.AVAssetDownloadTask GetAssetDownloadTask(class MonoTouch.AVFoundation.AVUrlAsset urlAsset, class MonoTouch.Foundation.NSUrl destinationUrl, class MonoTouch.AVFoundation.AVAssetDownloadOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AVFoundation.AVAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlAsset" Type="MonoTouch.AVFoundation.AVUrlAsset" />
        <Parameter Name="destinationUrl" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="options" Type="MonoTouch.AVFoundation.AVAssetDownloadOptions" />
      </Parameters>
      <Docs>
        <param name="urlAsset">To be added.</param>
        <param name="destinationUrl">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Gets a <see cref="T:AVFoundation.AVAssetDownloadTask " /> for the specified asset, destination, and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AVFoundation.AVAssetDownloadTask GetAssetDownloadTask (MonoTouch.AVFoundation.AVUrlAsset urlAsset, MonoTouch.Foundation.NSUrl destinationUrl, MonoTouch.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.AVFoundation.AVAssetDownloadTask GetAssetDownloadTask(class MonoTouch.AVFoundation.AVUrlAsset urlAsset, class MonoTouch.Foundation.NSUrl destinationUrl, class MonoTouch.Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("assetDownloadTaskWithURLAsset:destinationURL:options:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Please use 'GetAssetDownloadTask (AVUrlAsset, string, NSData, NSDictionary&lt;NSString, NSObject&gt;)'.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Please use 'GetAssetDownloadTask (AVUrlAsset, string, NSData, NSDictionary&lt;NSString, NSObject&gt;)'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AVFoundation.AVAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlAsset" Type="MonoTouch.AVFoundation.AVUrlAsset" />
        <Parameter Name="destinationUrl" Type="MonoTouch.Foundation.NSUrl" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="urlAsset">To be added.</param>
        <param name="destinationUrl">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Gets a <see cref="T:AVFoundation.AVAssetDownloadTask " /> for the specified asset, destination, and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public MonoTouch.AVFoundation.AVAssetDownloadTask GetAssetDownloadTask (MonoTouch.AVFoundation.AVUrlAsset urlAsset, string title, MonoTouch.Foundation.NSData artworkData, MonoTouch.AVFoundation.AVAssetDownloadOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.AVFoundation.AVAssetDownloadTask GetAssetDownloadTask(class MonoTouch.AVFoundation.AVUrlAsset urlAsset, string title, class MonoTouch.Foundation.NSData artworkData, class MonoTouch.AVFoundation.AVAssetDownloadOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AVFoundation.AVAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlAsset" Type="MonoTouch.AVFoundation.AVUrlAsset" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="artworkData" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="options" Type="MonoTouch.AVFoundation.AVAssetDownloadOptions" />
      </Parameters>
      <Docs>
        <param name="urlAsset">To be added.</param>
        <param name="title">To be added.</param>
        <param name="artworkData">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Gets a <see cref="T:AVFoundation.AVAssetDownloadTask " /> for the specified asset, title, artwork, and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AVFoundation.AVAssetDownloadTask GetAssetDownloadTask (MonoTouch.AVFoundation.AVUrlAsset urlAsset, string title, MonoTouch.Foundation.NSData artworkData, MonoTouch.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.AVFoundation.AVAssetDownloadTask GetAssetDownloadTask(class MonoTouch.AVFoundation.AVUrlAsset urlAsset, string title, class MonoTouch.Foundation.NSData artworkData, class MonoTouch.Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("assetDownloadTaskWithURLAsset:assetTitle:assetArtworkData:options:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AVFoundation.AVAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlAsset" Type="MonoTouch.AVFoundation.AVUrlAsset" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="artworkData" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="urlAsset">To be added.</param>
        <param name="title">To be added.</param>
        <param name="artworkData">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Gets a <see cref="T:AVFoundation.AVAssetDownloadTask " /> for the specified asset, title, artwork, and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.AVFoundation.AVAggregateAssetDownloadTask GetAssetDownloadTask (MonoTouch.AVFoundation.AVUrlAsset URLAsset, MonoTouch.AVFoundation.AVMediaSelection[] mediaSelections, string title, MonoTouch.Foundation.NSData artworkData, MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.AVFoundation.AVAggregateAssetDownloadTask GetAssetDownloadTask(class MonoTouch.AVFoundation.AVUrlAsset URLAsset, class MonoTouch.AVFoundation.AVMediaSelection[] mediaSelections, string title, class MonoTouch.Foundation.NSData artworkData, class MonoTouch.Foundation.NSDictionary`2&lt;class MonoTouch.Foundation.NSString, class MonoTouch.Foundation.NSObject&gt; options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 11, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.MacOSX, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.TvOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Unavailable(MonoTouch.ObjCRuntime.PlatformName.WatchOS, MonoTouch.ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.AVFoundation.AVAggregateAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="URLAsset" Type="MonoTouch.AVFoundation.AVUrlAsset" />
        <Parameter Name="mediaSelections" Type="MonoTouch.AVFoundation.AVMediaSelection[]" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="artworkData" Type="MonoTouch.Foundation.NSData" />
        <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
      </Parameters>
      <Docs>
        <param name="URLAsset">To be added.</param>
        <param name="mediaSelections">To be added.</param>
        <param name="title">To be added.</param>
        <param name="artworkData">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedSession">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSUrlSession SharedSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoTouch.Foundation.NSUrlSession SharedSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the shared session data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>