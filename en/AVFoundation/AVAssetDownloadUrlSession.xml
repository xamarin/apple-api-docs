<Type Name="AVAssetDownloadUrlSession" FullName="AVFoundation.AVAssetDownloadUrlSession">
  <TypeSignature Language="C#" Value="public class AVAssetDownloadUrlSession : Foundation.NSUrlSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVAssetDownloadUrlSession extends Foundation.NSUrlSession" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVAssetDownloadUrlSession" />
  <TypeSignature Language="F#" Value="type AVAssetDownloadUrlSession = class&#xA;    inherit NSUrlSession" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSUrlSession</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("AVAssetDownloadURLSession", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A URL session object that developers use to create <see cref="T:AVFoundation.AVAssetDownloadTask" /> objects.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/reference/AVFoundation/AVAssetDownloadURLSession">Apple documentation for <c>AVAssetDownloadURLSession</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVAssetDownloadUrlSession (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAssetDownloadUrlSession : Foundation.NSObjectFlag -&gt; AVFoundation.AVAssetDownloadUrlSession" Usage="new AVFoundation.AVAssetDownloadUrlSession t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVAssetDownloadUrlSession (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAssetDownloadUrlSession : nativeint -&gt; AVFoundation.AVAssetDownloadUrlSession" Usage="new AVFoundation.AVAssetDownloadUrlSession handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetDownloadUrlSession.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVAssetDownloadUrlSession.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDataTask CreateDataTask (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDataTask CreateDataTask(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDataTask(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="override this.CreateDataTask : Foundation.NSUrl -&gt; Foundation.NSUrlSessionDataTask" Usage="aVAssetDownloadUrlSession.CreateDataTask url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDataTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> for the specified URL.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDataTask CreateDataTask (Foundation.NSUrlRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDataTask CreateDataTask(class Foundation.NSUrlRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDataTask(Foundation.NSUrlRequest)" />
      <MemberSignature Language="F#" Value="override this.CreateDataTask : Foundation.NSUrlRequest -&gt; Foundation.NSUrlSessionDataTask" Usage="aVAssetDownloadUrlSession.CreateDataTask request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDataTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> with the specified request.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDataTask CreateDataTask (Foundation.NSUrl url, Foundation.NSUrlSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDataTask CreateDataTask(class Foundation.NSUrl url, class Foundation.NSUrlSessionResponse completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDataTask(Foundation.NSUrl,Foundation.NSUrlSessionResponse)" />
      <MemberSignature Language="F#" Value="override this.CreateDataTask : Foundation.NSUrl * Foundation.NSUrlSessionResponse -&gt; Foundation.NSUrlSessionDataTask" Usage="aVAssetDownloadUrlSession.CreateDataTask (url, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDataTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="Foundation.NSUrlSessionResponse" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> for the specified URL, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDataTask CreateDataTask (Foundation.NSUrlRequest request, Foundation.NSUrlSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDataTask CreateDataTask(class Foundation.NSUrlRequest request, class Foundation.NSUrlSessionResponse completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDataTask(Foundation.NSUrlRequest,Foundation.NSUrlSessionResponse)" />
      <MemberSignature Language="F#" Value="override this.CreateDataTask : Foundation.NSUrlRequest * Foundation.NSUrlSessionResponse -&gt; Foundation.NSUrlSessionDataTask" Usage="aVAssetDownloadUrlSession.CreateDataTask (request, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDataTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
        <Parameter Name="completionHandler" Type="Foundation.NSUrlSessionResponse" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>reates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> for the specified request, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDownloadTask CreateDownloadTask (Foundation.NSData resumeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class Foundation.NSData resumeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDownloadTask(Foundation.NSData)" />
      <MemberSignature Language="F#" Value="override this.CreateDownloadTask : Foundation.NSData -&gt; Foundation.NSUrlSessionDownloadTask" Usage="aVAssetDownloadUrlSession.CreateDownloadTask resumeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resumeData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="resumeData">To be added.</param>
        <summary>reates a new <see cref="T:Foundation.NSUrlSessionDataTask" /> that resumes downloading <paramref name="resumeData" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDownloadTask CreateDownloadTask (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDownloadTask(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="override this.CreateDownloadTask : Foundation.NSUrl -&gt; Foundation.NSUrlSessionDownloadTask" Usage="aVAssetDownloadUrlSession.CreateDownloadTask url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> for the specified URL.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDownloadTask CreateDownloadTask (Foundation.NSUrlRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class Foundation.NSUrlRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDownloadTask(Foundation.NSUrlRequest)" />
      <MemberSignature Language="F#" Value="override this.CreateDownloadTask : Foundation.NSUrlRequest -&gt; Foundation.NSUrlSessionDownloadTask" Usage="aVAssetDownloadUrlSession.CreateDownloadTask request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> for the specified request.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDownloadTask CreateDownloadTask (Foundation.NSUrl url, Foundation.NSUrlDownloadSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class Foundation.NSUrl url, class Foundation.NSUrlDownloadSessionResponse completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDownloadTask(Foundation.NSUrl,Foundation.NSUrlDownloadSessionResponse)" />
      <MemberSignature Language="F#" Value="override this.CreateDownloadTask : Foundation.NSUrl * Foundation.NSUrlDownloadSessionResponse -&gt; Foundation.NSUrlSessionDownloadTask" Usage="aVAssetDownloadUrlSession.CreateDownloadTask (url, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="Foundation.NSUrlDownloadSessionResponse" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> for the specified url, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDownloadTask CreateDownloadTask (Foundation.NSUrlRequest request, Foundation.NSUrlDownloadSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDownloadTask CreateDownloadTask(class Foundation.NSUrlRequest request, class Foundation.NSUrlDownloadSessionResponse completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDownloadTask(Foundation.NSUrlRequest,Foundation.NSUrlDownloadSessionResponse)" />
      <MemberSignature Language="F#" Value="override this.CreateDownloadTask : Foundation.NSUrlRequest * Foundation.NSUrlDownloadSessionResponse -&gt; Foundation.NSUrlSessionDownloadTask" Usage="aVAssetDownloadUrlSession.CreateDownloadTask (request, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
        <Parameter Name="completionHandler" Type="Foundation.NSUrlDownloadSessionResponse" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> for the specified request, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDownloadTaskFromResumeData">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionDownloadTask CreateDownloadTaskFromResumeData (Foundation.NSData resumeData, Foundation.NSUrlDownloadSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionDownloadTask CreateDownloadTaskFromResumeData(class Foundation.NSData resumeData, class Foundation.NSUrlDownloadSessionResponse completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateDownloadTaskFromResumeData(Foundation.NSData,Foundation.NSUrlDownloadSessionResponse)" />
      <MemberSignature Language="F#" Value="override this.CreateDownloadTaskFromResumeData : Foundation.NSData * Foundation.NSUrlDownloadSessionResponse -&gt; Foundation.NSUrlSessionDownloadTask" Usage="aVAssetDownloadUrlSession.CreateDownloadTaskFromResumeData (resumeData, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resumeData" Type="Foundation.NSData" />
        <Parameter Name="completionHandler" Type="Foundation.NSUrlDownloadSessionResponse" />
      </Parameters>
      <Docs>
        <param name="resumeData">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionDownloadTask" /> that resumes downloading the <paramref name="resumeData" />, and runs a completion handler when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVAssetDownloadUrlSession CreateSession (Foundation.NSUrlSessionConfiguration configuration, AVFoundation.IAVAssetDownloadDelegate delegate, Foundation.NSOperationQueue delegateQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVAssetDownloadUrlSession CreateSession(class Foundation.NSUrlSessionConfiguration configuration, class AVFoundation.IAVAssetDownloadDelegate delegate, class Foundation.NSOperationQueue delegateQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateSession(Foundation.NSUrlSessionConfiguration,AVFoundation.IAVAssetDownloadDelegate,Foundation.NSOperationQueue)" />
      <MemberSignature Language="F#" Value="static member CreateSession : Foundation.NSUrlSessionConfiguration * AVFoundation.IAVAssetDownloadDelegate * Foundation.NSOperationQueue -&gt; AVFoundation.AVAssetDownloadUrlSession" Usage="AVFoundation.AVAssetDownloadUrlSession.CreateSession (configuration, delegate, delegateQueue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("sessionWithConfiguration:assetDownloadDelegate:delegateQueue:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAssetDownloadUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Foundation.NSUrlSessionConfiguration" />
        <Parameter Name="delegate" Type="AVFoundation.IAVAssetDownloadDelegate" />
        <Parameter Name="delegateQueue" Type="Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <param name="delegate">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="delegateQueue">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Creates a new <see cref="T:AVFoundation.AVAssetDownloadUrlSession" /> with the specified values.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionUploadTask CreateUploadTask (Foundation.NSUrlRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionUploadTask CreateUploadTask(class Foundation.NSUrlRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateUploadTask(Foundation.NSUrlRequest)" />
      <MemberSignature Language="F#" Value="override this.CreateUploadTask : Foundation.NSUrlRequest -&gt; Foundation.NSUrlSessionUploadTask" Usage="aVAssetDownloadUrlSession.CreateUploadTask request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified request.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionUploadTask CreateUploadTask (Foundation.NSUrlRequest request, Foundation.NSData bodyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionUploadTask CreateUploadTask(class Foundation.NSUrlRequest request, class Foundation.NSData bodyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateUploadTask(Foundation.NSUrlRequest,Foundation.NSData)" />
      <MemberSignature Language="F#" Value="override this.CreateUploadTask : Foundation.NSUrlRequest * Foundation.NSData -&gt; Foundation.NSUrlSessionUploadTask" Usage="aVAssetDownloadUrlSession.CreateUploadTask (request, bodyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
        <Parameter Name="bodyData" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="bodyData">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified <paramref name="request" /> and <paramref name="bodyData" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionUploadTask CreateUploadTask (Foundation.NSUrlRequest request, Foundation.NSUrl fileURL);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionUploadTask CreateUploadTask(class Foundation.NSUrlRequest request, class Foundation.NSUrl fileURL) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateUploadTask(Foundation.NSUrlRequest,Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="override this.CreateUploadTask : Foundation.NSUrlRequest * Foundation.NSUrl -&gt; Foundation.NSUrlSessionUploadTask" Usage="aVAssetDownloadUrlSession.CreateUploadTask (request, fileURL)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
        <Parameter Name="fileURL" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="fileURL">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified <paramref name="request" /> and <paramref name="fileURL" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionUploadTask CreateUploadTask (Foundation.NSUrlRequest request, Foundation.NSData bodyData, Foundation.NSUrlSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionUploadTask CreateUploadTask(class Foundation.NSUrlRequest request, class Foundation.NSData bodyData, class Foundation.NSUrlSessionResponse completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateUploadTask(Foundation.NSUrlRequest,Foundation.NSData,Foundation.NSUrlSessionResponse)" />
      <MemberSignature Language="F#" Value="override this.CreateUploadTask : Foundation.NSUrlRequest * Foundation.NSData * Foundation.NSUrlSessionResponse -&gt; Foundation.NSUrlSessionUploadTask" Usage="aVAssetDownloadUrlSession.CreateUploadTask (request, bodyData, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
        <Parameter Name="bodyData" Type="Foundation.NSData" />
        <Parameter Name="completionHandler" Type="Foundation.NSUrlSessionResponse" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="bodyData">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified <paramref name="request" /> and <paramref name="bodyData" />, and runs <paramref name="completeionHandler" /> when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUploadTask">
      <MemberSignature Language="C#" Value="public override Foundation.NSUrlSessionUploadTask CreateUploadTask (Foundation.NSUrlRequest request, Foundation.NSUrl fileURL, Foundation.NSUrlSessionResponse completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Foundation.NSUrlSessionUploadTask CreateUploadTask(class Foundation.NSUrlRequest request, class Foundation.NSUrl fileURL, class Foundation.NSUrlSessionResponse completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.CreateUploadTask(Foundation.NSUrlRequest,Foundation.NSUrl,Foundation.NSUrlSessionResponse)" />
      <MemberSignature Language="F#" Value="override this.CreateUploadTask : Foundation.NSUrlRequest * Foundation.NSUrl * Foundation.NSUrlSessionResponse -&gt; Foundation.NSUrlSessionUploadTask" Usage="aVAssetDownloadUrlSession.CreateUploadTask (request, fileURL, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSessionUploadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Foundation.NSUrlRequest" />
        <Parameter Name="fileURL" Type="Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="Foundation.NSUrlSessionResponse" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="fileURL">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSessionUploadTask" /> for the specified <paramref name="request" /> and <paramref name="fileURL" />, and runs <paramref name="completeionHandler" /> when it is finished.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromConfiguration">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrlSession FromConfiguration (Foundation.NSUrlSessionConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrlSession FromConfiguration(class Foundation.NSUrlSessionConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.FromConfiguration(Foundation.NSUrlSessionConfiguration)" />
      <MemberSignature Language="F#" Value="static member FromConfiguration : Foundation.NSUrlSessionConfiguration -&gt; Foundation.NSUrlSession" Usage="AVFoundation.AVAssetDownloadUrlSession.FromConfiguration configuration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Foundation.NSUrlSessionConfiguration" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSession" /> from the specified <paramref name="configuration" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromConfiguration">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrlSession FromConfiguration (Foundation.NSUrlSessionConfiguration configuration, Foundation.INSUrlSessionDelegate sessionDelegate, Foundation.NSOperationQueue delegateQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrlSession FromConfiguration(class Foundation.NSUrlSessionConfiguration configuration, class Foundation.INSUrlSessionDelegate sessionDelegate, class Foundation.NSOperationQueue delegateQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.FromConfiguration(Foundation.NSUrlSessionConfiguration,Foundation.INSUrlSessionDelegate,Foundation.NSOperationQueue)" />
      <MemberSignature Language="F#" Value="static member FromConfiguration : Foundation.NSUrlSessionConfiguration * Foundation.INSUrlSessionDelegate * Foundation.NSOperationQueue -&gt; Foundation.NSUrlSession" Usage="AVFoundation.AVAssetDownloadUrlSession.FromConfiguration (configuration, sessionDelegate, delegateQueue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Foundation.NSUrlSessionConfiguration" />
        <Parameter Name="sessionDelegate" Type="Foundation.INSUrlSessionDelegate" />
        <Parameter Name="delegateQueue" Type="Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="configuration">The session configuration to use.</param>
        <param name="sessionDelegate">The session delegate to use.</param>
        <param name="delegateQueue">The operation cue to use.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSession" /> by using the specified configuration, delegate, and delegate cue.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromConfiguration">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrlSession FromConfiguration (Foundation.NSUrlSessionConfiguration configuration, Foundation.NSUrlSessionDelegate sessionDelegate, Foundation.NSOperationQueue delegateQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrlSession FromConfiguration(class Foundation.NSUrlSessionConfiguration configuration, class Foundation.NSUrlSessionDelegate sessionDelegate, class Foundation.NSOperationQueue delegateQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.FromConfiguration(Foundation.NSUrlSessionConfiguration,Foundation.NSUrlSessionDelegate,Foundation.NSOperationQueue)" />
      <MemberSignature Language="F#" Value="static member FromConfiguration : Foundation.NSUrlSessionConfiguration * Foundation.NSUrlSessionDelegate * Foundation.NSOperationQueue -&gt; Foundation.NSUrlSession" Usage="AVFoundation.AVAssetDownloadUrlSession.FromConfiguration (configuration, sessionDelegate, delegateQueue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("Use the overload with a 'INSUrlSessionDelegate' parameter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Foundation.NSUrlSessionConfiguration" />
        <Parameter Name="sessionDelegate" Type="Foundation.NSUrlSessionDelegate" />
        <Parameter Name="delegateQueue" Type="Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <param name="sessionDelegate">To be added.</param>
        <param name="delegateQueue">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSession" /> from the specified <paramref name="configuration" /> and session delegate and delegate queue.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromWeakConfiguration">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrlSession FromWeakConfiguration (Foundation.NSUrlSessionConfiguration configuration, Foundation.NSObject weakDelegate, Foundation.NSOperationQueue delegateQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrlSession FromWeakConfiguration(class Foundation.NSUrlSessionConfiguration configuration, class Foundation.NSObject weakDelegate, class Foundation.NSOperationQueue delegateQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.FromWeakConfiguration(Foundation.NSUrlSessionConfiguration,Foundation.NSObject,Foundation.NSOperationQueue)" />
      <MemberSignature Language="F#" Value="static member FromWeakConfiguration : Foundation.NSUrlSessionConfiguration * Foundation.NSObject * Foundation.NSOperationQueue -&gt; Foundation.NSUrlSession" Usage="AVFoundation.AVAssetDownloadUrlSession.FromWeakConfiguration (configuration, weakDelegate, delegateQueue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Foundation.NSUrlSessionConfiguration" />
        <Parameter Name="weakDelegate" Type="Foundation.NSObject" />
        <Parameter Name="delegateQueue" Type="Foundation.NSOperationQueue" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <param name="weakDelegate">To be added.</param>
        <param name="delegateQueue">To be added.</param>
        <summary>Creates a new <see cref="T:Foundation.NSUrlSession" /> from the specified <paramref name="configuration" />, weakly-referenced session delegate, and delegate queue.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public AVFoundation.AVAssetDownloadTask GetAssetDownloadTask (AVFoundation.AVUrlAsset urlAsset, Foundation.NSUrl destinationUrl, AVFoundation.AVAssetDownloadOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AVFoundation.AVAssetDownloadTask GetAssetDownloadTask(class AVFoundation.AVUrlAsset urlAsset, class Foundation.NSUrl destinationUrl, class AVFoundation.AVAssetDownloadOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.GetAssetDownloadTask(AVFoundation.AVUrlAsset,Foundation.NSUrl,AVFoundation.AVAssetDownloadOptions)" />
      <MemberSignature Language="F#" Value="member this.GetAssetDownloadTask : AVFoundation.AVUrlAsset * Foundation.NSUrl * AVFoundation.AVAssetDownloadOptions -&gt; AVFoundation.AVAssetDownloadTask" Usage="aVAssetDownloadUrlSession.GetAssetDownloadTask (urlAsset, destinationUrl, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlAsset" Type="AVFoundation.AVUrlAsset" />
        <Parameter Name="destinationUrl" Type="Foundation.NSUrl" />
        <Parameter Name="options" Type="AVFoundation.AVAssetDownloadOptions" />
      </Parameters>
      <Docs>
        <param name="urlAsset">To be added.</param>
        <param name="destinationUrl">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Gets a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:AVFoundation.AVAssetDownloadTask &amp;scope=Xamarin" title="T:AVFoundation.AVAssetDownloadTask ">T:AVFoundation.AVAssetDownloadTask </a></format> for the specified asset, destination, and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAssetDownloadTask GetAssetDownloadTask (AVFoundation.AVUrlAsset urlAsset, Foundation.NSUrl destinationUrl, Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVAssetDownloadTask GetAssetDownloadTask(class AVFoundation.AVUrlAsset urlAsset, class Foundation.NSUrl destinationUrl, class Foundation.NSDictionary options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.GetAssetDownloadTask(AVFoundation.AVUrlAsset,Foundation.NSUrl,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member GetAssetDownloadTask : AVFoundation.AVUrlAsset * Foundation.NSUrl * Foundation.NSDictionary -&gt; AVFoundation.AVAssetDownloadTask&#xA;override this.GetAssetDownloadTask : AVFoundation.AVUrlAsset * Foundation.NSUrl * Foundation.NSDictionary -&gt; AVFoundation.AVAssetDownloadTask" Usage="aVAssetDownloadUrlSession.GetAssetDownloadTask (urlAsset, destinationUrl, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("assetDownloadTaskWithURLAsset:destinationURL:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, "Please use 'GetAssetDownloadTask (AVUrlAsset, string, NSData, NSDictionary&lt;NSString, NSObject&gt;)'.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, "Please use 'GetAssetDownloadTask (AVUrlAsset, string, NSData, NSDictionary&lt;NSString, NSObject&gt;)'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlAsset" Type="AVFoundation.AVUrlAsset" />
        <Parameter Name="destinationUrl" Type="Foundation.NSUrl" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="urlAsset">To be added.</param>
        <param name="destinationUrl">To be added.</param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Developers should not use this deprecated method. Please use 'GetAssetDownloadTask (AVUrlAsset, string, NSData, NSDictionary&lt;NSString, NSObject&gt;)'.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public AVFoundation.AVAssetDownloadTask GetAssetDownloadTask (AVFoundation.AVUrlAsset urlAsset, string title, Foundation.NSData artworkData, AVFoundation.AVAssetDownloadOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AVFoundation.AVAssetDownloadTask GetAssetDownloadTask(class AVFoundation.AVUrlAsset urlAsset, string title, class Foundation.NSData artworkData, class AVFoundation.AVAssetDownloadOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.GetAssetDownloadTask(AVFoundation.AVUrlAsset,System.String,Foundation.NSData,AVFoundation.AVAssetDownloadOptions)" />
      <MemberSignature Language="F#" Value="member this.GetAssetDownloadTask : AVFoundation.AVUrlAsset * string * Foundation.NSData * AVFoundation.AVAssetDownloadOptions -&gt; AVFoundation.AVAssetDownloadTask" Usage="aVAssetDownloadUrlSession.GetAssetDownloadTask (urlAsset, title, artworkData, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlAsset" Type="AVFoundation.AVUrlAsset" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="artworkData" Type="Foundation.NSData" />
        <Parameter Name="options" Type="AVFoundation.AVAssetDownloadOptions" />
      </Parameters>
      <Docs>
        <param name="urlAsset">To be added.</param>
        <param name="title">To be added.</param>
        <param name="artworkData">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Gets a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:AVFoundation.AVAssetDownloadTask &amp;scope=Xamarin" title="T:AVFoundation.AVAssetDownloadTask ">T:AVFoundation.AVAssetDownloadTask </a></format> for the specified asset, title, artwork, and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAssetDownloadTask GetAssetDownloadTask (AVFoundation.AVUrlAsset urlAsset, string title, Foundation.NSData artworkData, Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVAssetDownloadTask GetAssetDownloadTask(class AVFoundation.AVUrlAsset urlAsset, string title, class Foundation.NSData artworkData, class Foundation.NSDictionary options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.GetAssetDownloadTask(AVFoundation.AVUrlAsset,System.String,Foundation.NSData,Foundation.NSDictionary)" />
      <MemberSignature Language="F#" Value="abstract member GetAssetDownloadTask : AVFoundation.AVUrlAsset * string * Foundation.NSData * Foundation.NSDictionary -&gt; AVFoundation.AVAssetDownloadTask&#xA;override this.GetAssetDownloadTask : AVFoundation.AVUrlAsset * string * Foundation.NSData * Foundation.NSDictionary -&gt; AVFoundation.AVAssetDownloadTask" Usage="aVAssetDownloadUrlSession.GetAssetDownloadTask (urlAsset, title, artworkData, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("assetDownloadTaskWithURLAsset:assetTitle:assetArtworkData:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlAsset" Type="AVFoundation.AVUrlAsset" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="artworkData" Type="Foundation.NSData" />
        <Parameter Name="options" Type="Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="urlAsset">To be added.</param>
        <param name="title">To be added.</param>
        <param name="artworkData">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Gets a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:AVFoundation.AVAssetDownloadTask &amp;scope=Xamarin" title="T:AVFoundation.AVAssetDownloadTask ">T:AVFoundation.AVAssetDownloadTask </a></format> for the specified asset, title, artwork, and options.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetDownloadTask">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAggregateAssetDownloadTask GetAssetDownloadTask (AVFoundation.AVUrlAsset URLAsset, AVFoundation.AVMediaSelection[] mediaSelections, string title, Foundation.NSData artworkData, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVAggregateAssetDownloadTask GetAssetDownloadTask(class AVFoundation.AVUrlAsset URLAsset, class AVFoundation.AVMediaSelection[] mediaSelections, string title, class Foundation.NSData artworkData, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetDownloadUrlSession.GetAssetDownloadTask(AVFoundation.AVUrlAsset,AVFoundation.AVMediaSelection[],System.String,Foundation.NSData,Foundation.NSDictionary{Foundation.NSString,Foundation.NSObject})" />
      <MemberSignature Language="F#" Value="abstract member GetAssetDownloadTask : AVFoundation.AVUrlAsset * AVFoundation.AVMediaSelection[] * string * Foundation.NSData * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; -&gt; AVFoundation.AVAggregateAssetDownloadTask&#xA;override this.GetAssetDownloadTask : AVFoundation.AVUrlAsset * AVFoundation.AVMediaSelection[] * string * Foundation.NSData * Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSObject&gt; -&gt; AVFoundation.AVAggregateAssetDownloadTask" Usage="aVAssetDownloadUrlSession.GetAssetDownloadTask (URLAsset, mediaSelections, title, artworkData, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAggregateAssetDownloadTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="URLAsset" Type="AVFoundation.AVUrlAsset" />
        <Parameter Name="mediaSelections" Type="AVFoundation.AVMediaSelection[]" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="artworkData" Type="Foundation.NSData" />
        <Parameter Name="options" Type="Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt;" />
      </Parameters>
      <Docs>
        <param name="URLAsset">To be added.</param>
        <param name="mediaSelections">To be added.</param>
        <param name="title">To be added.</param>
        <param name="artworkData">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="options">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedSession">
      <MemberSignature Language="C#" Value="public static Foundation.NSUrlSession SharedSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSUrlSession SharedSession" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetDownloadUrlSession.SharedSession" />
      <MemberSignature Language="F#" Value="member this.SharedSession : Foundation.NSUrlSession" Usage="AVFoundation.AVAssetDownloadUrlSession.SharedSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSUrlSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the shared session data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
