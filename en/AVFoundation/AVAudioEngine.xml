<Type Name="AVAudioEngine" FullName="AVFoundation.AVAudioEngine">
  <TypeSignature Language="C#" Value="public class AVAudioEngine : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVAudioEngine extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVAudioEngine" />
  <TypeSignature Language="F#" Value="type AVAudioEngine = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("AVAudioEngine", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A group of connected <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:AVFounding.AVAudioNode&amp;scope=Xamarin" title="T:AVFounding.AVAudioNode">T:AVFounding.AVAudioNode</a></format> objects, each of which performs a processing or IO task.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVAudioEngine_Class/index.html">Apple documentation for <c>AVAudioEngine</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVAudioEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVAudioEngine (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAudioEngine : Foundation.NSObjectFlag -&gt; AVFoundation.AVAudioEngine" Usage="new AVFoundation.AVAudioEngine t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVAudioEngine (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAudioEngine : nativeint -&gt; AVFoundation.AVAudioEngine" Usage="new AVFoundation.AVAudioEngine handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachNode">
      <MemberSignature Language="C#" Value="public virtual void AttachNode (AVFoundation.AVAudioNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachNode(class AVFoundation.AVAudioNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.AttachNode(AVFoundation.AVAudioNode)" />
      <MemberSignature Language="F#" Value="abstract member AttachNode : AVFoundation.AVAudioNode -&gt; unit&#xA;override this.AttachNode : AVFoundation.AVAudioNode -&gt; unit" Usage="aVAudioEngine.AttachNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("attachNode:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>Attaches <paramref name="node" /> to the audio engine.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShutdownEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutoShutdownEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoShutdownEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.AutoShutdownEnabled" />
      <MemberSignature Language="F#" Value="member this.AutoShutdownEnabled : bool with get, set" Usage="AVFoundation.AVAudioEngine.AutoShutdownEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutoShutdownEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAutoShutdownEnabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVAudioEngine.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationChangeNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ConfigurationChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ConfigurationChangeNotification" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.ConfigurationChangeNotification" />
      <MemberSignature Language="F#" Value="member this.ConfigurationChangeNotification : Foundation.NSString" Usage="AVFoundation.AVAudioEngine.ConfigurationChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use AVAudioEngine.Notifications.ObserveConfigurationChange helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("AVAudioEngineConfigurationChangeNotification", "AVFoundation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for ConfigurationChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <para id="tool-remark">If you want to subscribe to this notification, you can use the convenience <see cref="T:AVFoundation.AVAudioEngine.Notifications" />.<see cref="M:AVFoundation.AVAudioEngine.Notifications.ObserveConfigurationChange*" /> method which offers strongly typed access to the parameters of the notification.</para>
          <para>The following example shows how to use the strongly typed Notifications class, to take the guesswork out of the available properties in the notification:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// Lambda style
//

// listening
notification = AVAudioEngine.Notifications.ObserveConfigurationChange ((sender, args) => {
    /* Access strongly typed args */
    Console.WriteLine ("Notification: {0}", args.Notification);
});

// To stop listening:
notification.Dispose ();

//
// Method style
//
NSObject notification;
void Callback (object sender, Foundation.NSNotificationEventArgs args)
{
    // Access strongly typed args
    Console.WriteLine ("Notification: {0}", args.Notification);
}

void Setup ()
{
    notification = AVAudioEngine.Notifications.ObserveConfigurationChange (Callback);
}

void Teardown ()
{
    notification.Dispose ();
}]]></code>
          </example>
          <para>The following example shows how to use the notification with the DefaultCenter API:</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        AVAudioEngine.ConfigurationChangeNotification, (notification) => {Console.WriteLine ("Received the notification AVAudioEngine", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification AVAudioEngine", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (AVAudioEngine.ConfigurationChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (AVFoundation.AVAudioNode sourceNode, AVFoundation.AVAudioNode targetNode, AVFoundation.AVAudioFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class AVFoundation.AVAudioNode sourceNode, class AVFoundation.AVAudioNode targetNode, class AVFoundation.AVAudioFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.Connect(AVFoundation.AVAudioNode,AVFoundation.AVAudioNode,AVFoundation.AVAudioFormat)" />
      <MemberSignature Language="F#" Value="abstract member Connect : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode * AVFoundation.AVAudioFormat -&gt; unit&#xA;override this.Connect : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode * AVFoundation.AVAudioFormat -&gt; unit" Usage="aVAudioEngine.Connect (sourceNode, targetNode, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("connect:to:format:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="targetNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="format" Type="AVFoundation.AVAudioFormat" />
      </Parameters>
      <Docs>
        <param name="sourceNode">To be added.</param>
        <param name="targetNode">To be added.</param>
        <param name="format">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Connects <paramref name="sourceNode" /> to <paramref name="targetNode" /> with the specified <paramref name="format" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (AVFoundation.AVAudioNode sourceNode, AVFoundation.AVAudioConnectionPoint[] destNodes, nuint sourceBus, AVFoundation.AVAudioFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class AVFoundation.AVAudioNode sourceNode, class AVFoundation.AVAudioConnectionPoint[] destNodes, valuetype System.nuint sourceBus, class AVFoundation.AVAudioFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.Connect(AVFoundation.AVAudioNode,AVFoundation.AVAudioConnectionPoint[],System.nuint,AVFoundation.AVAudioFormat)" />
      <MemberSignature Language="F#" Value="abstract member Connect : AVFoundation.AVAudioNode * AVFoundation.AVAudioConnectionPoint[] * nuint * AVFoundation.AVAudioFormat -&gt; unit&#xA;override this.Connect : AVFoundation.AVAudioNode * AVFoundation.AVAudioConnectionPoint[] * nuint * AVFoundation.AVAudioFormat -&gt; unit" Usage="aVAudioEngine.Connect (sourceNode, destNodes, sourceBus, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("connect:toConnectionPoints:fromBus:format:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="destNodes" Type="AVFoundation.AVAudioConnectionPoint[]" />
        <Parameter Name="sourceBus" Type="System.nuint" />
        <Parameter Name="format" Type="AVFoundation.AVAudioFormat" />
      </Parameters>
      <Docs>
        <param name="sourceNode">To be added.</param>
        <param name="destNodes">To be added.</param>
        <param name="sourceBus">To be added.</param>
        <param name="format">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (AVFoundation.AVAudioNode sourceNode, AVFoundation.AVAudioNode targetNode, nuint sourceBus, nuint targetBus, AVFoundation.AVAudioFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class AVFoundation.AVAudioNode sourceNode, class AVFoundation.AVAudioNode targetNode, valuetype System.nuint sourceBus, valuetype System.nuint targetBus, class AVFoundation.AVAudioFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.Connect(AVFoundation.AVAudioNode,AVFoundation.AVAudioNode,System.nuint,System.nuint,AVFoundation.AVAudioFormat)" />
      <MemberSignature Language="F#" Value="abstract member Connect : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode * nuint * nuint * AVFoundation.AVAudioFormat -&gt; unit&#xA;override this.Connect : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode * nuint * nuint * AVFoundation.AVAudioFormat -&gt; unit" Usage="aVAudioEngine.Connect (sourceNode, targetNode, sourceBus, targetBus, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("connect:to:fromBus:toBus:format:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="targetNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="sourceBus" Type="System.nuint" />
        <Parameter Name="targetBus" Type="System.nuint" />
        <Parameter Name="format" Type="AVFoundation.AVAudioFormat" />
      </Parameters>
      <Docs>
        <param name="sourceNode">To be added.</param>
        <param name="targetNode">To be added.</param>
        <param name="sourceBus">To be added.</param>
        <param name="targetBus">To be added.</param>
        <param name="format">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectMidi">
      <MemberSignature Language="C#" Value="public virtual void ConnectMidi (AVFoundation.AVAudioNode sourceNode, AVFoundation.AVAudioNode destinationNode, AVFoundation.AVAudioFormat format, AudioUnit.AUMidiOutputEventBlock tapHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectMidi(class AVFoundation.AVAudioNode sourceNode, class AVFoundation.AVAudioNode destinationNode, class AVFoundation.AVAudioFormat format, class AudioUnit.AUMidiOutputEventBlock tapHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.ConnectMidi(AVFoundation.AVAudioNode,AVFoundation.AVAudioNode,AVFoundation.AVAudioFormat,AudioUnit.AUMidiOutputEventBlock)" />
      <MemberSignature Language="F#" Value="abstract member ConnectMidi : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode * AVFoundation.AVAudioFormat * AudioUnit.AUMidiOutputEventBlock -&gt; unit&#xA;override this.ConnectMidi : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode * AVFoundation.AVAudioFormat * AudioUnit.AUMidiOutputEventBlock -&gt; unit" Usage="aVAudioEngine.ConnectMidi (sourceNode, destinationNode, format, tapHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("connectMIDI:to:format:block:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="destinationNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="format" Type="AVFoundation.AVAudioFormat" />
        <Parameter Name="tapHandler" Type="AudioUnit.AUMidiOutputEventBlock">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAUMidiOutputEventBlock))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sourceNode">To be added.</param>
        <param name="destinationNode">To be added.</param>
        <param name="format">To be added.</param>
        <param name="tapHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectMidi">
      <MemberSignature Language="C#" Value="public virtual void ConnectMidi (AVFoundation.AVAudioNode sourceNode, AVFoundation.AVAudioNode[] destinationNodes, AVFoundation.AVAudioFormat format, AudioUnit.AUMidiOutputEventBlock tapHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectMidi(class AVFoundation.AVAudioNode sourceNode, class AVFoundation.AVAudioNode[] destinationNodes, class AVFoundation.AVAudioFormat format, class AudioUnit.AUMidiOutputEventBlock tapHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.ConnectMidi(AVFoundation.AVAudioNode,AVFoundation.AVAudioNode[],AVFoundation.AVAudioFormat,AudioUnit.AUMidiOutputEventBlock)" />
      <MemberSignature Language="F#" Value="abstract member ConnectMidi : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode[] * AVFoundation.AVAudioFormat * AudioUnit.AUMidiOutputEventBlock -&gt; unit&#xA;override this.ConnectMidi : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode[] * AVFoundation.AVAudioFormat * AudioUnit.AUMidiOutputEventBlock -&gt; unit" Usage="aVAudioEngine.ConnectMidi (sourceNode, destinationNodes, format, tapHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("connectMIDI:toNodes:format:block:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="destinationNodes" Type="AVFoundation.AVAudioNode[]" />
        <Parameter Name="format" Type="AVFoundation.AVAudioFormat" />
        <Parameter Name="tapHandler" Type="AudioUnit.AUMidiOutputEventBlock">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAUMidiOutputEventBlock))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sourceNode">To be added.</param>
        <param name="destinationNodes">To be added.</param>
        <param name="format">To be added.</param>
        <param name="tapHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachNode">
      <MemberSignature Language="C#" Value="public virtual void DetachNode (AVFoundation.AVAudioNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetachNode(class AVFoundation.AVAudioNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DetachNode(AVFoundation.AVAudioNode)" />
      <MemberSignature Language="F#" Value="abstract member DetachNode : AVFoundation.AVAudioNode -&gt; unit&#xA;override this.DetachNode : AVFoundation.AVAudioNode -&gt; unit" Usage="aVAudioEngine.DetachNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("detachNode:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>Detaches <paramref name="node" /> from the audio engine.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableManualRenderingMode">
      <MemberSignature Language="C#" Value="public virtual void DisableManualRenderingMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisableManualRenderingMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisableManualRenderingMode" />
      <MemberSignature Language="F#" Value="abstract member DisableManualRenderingMode : unit -&gt; unit&#xA;override this.DisableManualRenderingMode : unit -&gt; unit" Usage="aVAudioEngine.DisableManualRenderingMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disableManualRenderingMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectMidi">
      <MemberSignature Language="C#" Value="public virtual void DisconnectMidi (AVFoundation.AVAudioNode sourceNode, AVFoundation.AVAudioNode destinationNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectMidi(class AVFoundation.AVAudioNode sourceNode, class AVFoundation.AVAudioNode destinationNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisconnectMidi(AVFoundation.AVAudioNode,AVFoundation.AVAudioNode)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectMidi : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode -&gt; unit&#xA;override this.DisconnectMidi : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode -&gt; unit" Usage="aVAudioEngine.DisconnectMidi (sourceNode, destinationNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectMIDI:from:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="destinationNode" Type="AVFoundation.AVAudioNode" />
      </Parameters>
      <Docs>
        <param name="sourceNode">To be added.</param>
        <param name="destinationNode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectMidi">
      <MemberSignature Language="C#" Value="public virtual void DisconnectMidi (AVFoundation.AVAudioNode sourceNode, AVFoundation.AVAudioNode[] destinationNodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectMidi(class AVFoundation.AVAudioNode sourceNode, class AVFoundation.AVAudioNode[] destinationNodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisconnectMidi(AVFoundation.AVAudioNode,AVFoundation.AVAudioNode[])" />
      <MemberSignature Language="F#" Value="abstract member DisconnectMidi : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode[] -&gt; unit&#xA;override this.DisconnectMidi : AVFoundation.AVAudioNode * AVFoundation.AVAudioNode[] -&gt; unit" Usage="aVAudioEngine.DisconnectMidi (sourceNode, destinationNodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectMIDI:fromNodes:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceNode" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="destinationNodes" Type="AVFoundation.AVAudioNode[]" />
      </Parameters>
      <Docs>
        <param name="sourceNode">To be added.</param>
        <param name="destinationNodes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectMidiInput">
      <MemberSignature Language="C#" Value="public virtual void DisconnectMidiInput (AVFoundation.AVAudioNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectMidiInput(class AVFoundation.AVAudioNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisconnectMidiInput(AVFoundation.AVAudioNode)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectMidiInput : AVFoundation.AVAudioNode -&gt; unit&#xA;override this.DisconnectMidiInput : AVFoundation.AVAudioNode -&gt; unit" Usage="aVAudioEngine.DisconnectMidiInput node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectMIDIInput:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectMidiOutput">
      <MemberSignature Language="C#" Value="public virtual void DisconnectMidiOutput (AVFoundation.AVAudioNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectMidiOutput(class AVFoundation.AVAudioNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisconnectMidiOutput(AVFoundation.AVAudioNode)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectMidiOutput : AVFoundation.AVAudioNode -&gt; unit&#xA;override this.DisconnectMidiOutput : AVFoundation.AVAudioNode -&gt; unit" Usage="aVAudioEngine.DisconnectMidiOutput node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectMIDIOutput:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectNodeInput">
      <MemberSignature Language="C#" Value="public virtual void DisconnectNodeInput (AVFoundation.AVAudioNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectNodeInput(class AVFoundation.AVAudioNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisconnectNodeInput(AVFoundation.AVAudioNode)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectNodeInput : AVFoundation.AVAudioNode -&gt; unit&#xA;override this.DisconnectNodeInput : AVFoundation.AVAudioNode -&gt; unit" Usage="aVAudioEngine.DisconnectNodeInput node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectNodeInput:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>Disconnects all input connections from <paramref name="node" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectNodeInput">
      <MemberSignature Language="C#" Value="public virtual void DisconnectNodeInput (AVFoundation.AVAudioNode node, nuint bus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectNodeInput(class AVFoundation.AVAudioNode node, valuetype System.nuint bus) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisconnectNodeInput(AVFoundation.AVAudioNode,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectNodeInput : AVFoundation.AVAudioNode * nuint -&gt; unit&#xA;override this.DisconnectNodeInput : AVFoundation.AVAudioNode * nuint -&gt; unit" Usage="aVAudioEngine.DisconnectNodeInput (node, bus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectNodeInput:bus:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="bus" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="bus">To be added.</param>
        <summary>Disconnects all input connections on <paramref name="bus" /> from <paramref name="node" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectNodeOutput">
      <MemberSignature Language="C#" Value="public virtual void DisconnectNodeOutput (AVFoundation.AVAudioNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectNodeOutput(class AVFoundation.AVAudioNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisconnectNodeOutput(AVFoundation.AVAudioNode)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectNodeOutput : AVFoundation.AVAudioNode -&gt; unit&#xA;override this.DisconnectNodeOutput : AVFoundation.AVAudioNode -&gt; unit" Usage="aVAudioEngine.DisconnectNodeOutput node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectNodeOutput:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>Disconnects all output connections from <paramref name="node" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectNodeOutput">
      <MemberSignature Language="C#" Value="public virtual void DisconnectNodeOutput (AVFoundation.AVAudioNode node, nuint bus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectNodeOutput(class AVFoundation.AVAudioNode node, valuetype System.nuint bus) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.DisconnectNodeOutput(AVFoundation.AVAudioNode,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member DisconnectNodeOutput : AVFoundation.AVAudioNode * nuint -&gt; unit&#xA;override this.DisconnectNodeOutput : AVFoundation.AVAudioNode * nuint -&gt; unit" Usage="aVAudioEngine.DisconnectNodeOutput (node, bus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("disconnectNodeOutput:bus:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="bus" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="bus">To be added.</param>
        <summary>Disconnects all output connections on <paramref name="bus" /> from <paramref name="node" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableManualRenderingMode">
      <MemberSignature Language="C#" Value="public virtual bool EnableManualRenderingMode (AVFoundation.AVAudioEngineManualRenderingMode mode, AVFoundation.AVAudioFormat pcmFormat, uint maximumFrameCount, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EnableManualRenderingMode(valuetype AVFoundation.AVAudioEngineManualRenderingMode mode, class AVFoundation.AVAudioFormat pcmFormat, unsigned int32 maximumFrameCount, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.EnableManualRenderingMode(AVFoundation.AVAudioEngineManualRenderingMode,AVFoundation.AVAudioFormat,System.UInt32,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member EnableManualRenderingMode : AVFoundation.AVAudioEngineManualRenderingMode * AVFoundation.AVAudioFormat * uint32 *  -&gt; bool&#xA;override this.EnableManualRenderingMode : AVFoundation.AVAudioEngineManualRenderingMode * AVFoundation.AVAudioFormat * uint32 *  -&gt; bool" Usage="aVAudioEngine.EnableManualRenderingMode (mode, pcmFormat, maximumFrameCount, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("enableManualRenderingMode:format:maximumFrameCount:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="AVFoundation.AVAudioEngineManualRenderingMode" />
        <Parameter Name="pcmFormat" Type="AVFoundation.AVAudioFormat" />
        <Parameter Name="maximumFrameCount" Type="System.UInt32" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <param name="pcmFormat">To be added.</param>
        <param name="maximumFrameCount">To be added.</param>
        <param name="outError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InManualRenderingMode">
      <MemberSignature Language="C#" Value="public virtual bool InManualRenderingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InManualRenderingMode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.InManualRenderingMode" />
      <MemberSignature Language="F#" Value="member this.InManualRenderingMode : bool" Usage="AVFoundation.AVAudioEngine.InManualRenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isInManualRenderingMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputConnectionPoint">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioConnectionPoint InputConnectionPoint (AVFoundation.AVAudioNode node, nuint bus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVAudioConnectionPoint InputConnectionPoint(class AVFoundation.AVAudioNode node, valuetype System.nuint bus) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.InputConnectionPoint(AVFoundation.AVAudioNode,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member InputConnectionPoint : AVFoundation.AVAudioNode * nuint -&gt; AVFoundation.AVAudioConnectionPoint&#xA;override this.InputConnectionPoint : AVFoundation.AVAudioNode * nuint -&gt; AVFoundation.AVAudioConnectionPoint" Usage="aVAudioEngine.InputConnectionPoint (node, bus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("inputConnectionPointForNode:inputBus:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioConnectionPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="bus" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="bus">To be added.</param>
        <summary>Returns the audio connection input point for <paramref name="node" /> on <paramref name="bus" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputNode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioInputNode InputNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAudioInputNode InputNode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.InputNode" />
      <MemberSignature Language="F#" Value="member this.InputNode : AVFoundation.AVAudioInputNode" Usage="AVFoundation.AVAudioEngine.InputNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("inputNode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioInputNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An input node such as a built-in microphone.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>
          <para>Developers who access this node must have the <c>NSMicrophoneUsageDescription</c> key to their info.plist. If this key is not in info.plist, the application will immediately exit with no exception if the developer attempts to access the <see cref="P:AVFoundation.AVAudioEngine.InputNode" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainMixerNode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioMixerNode MainMixerNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAudioMixerNode MainMixerNode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.MainMixerNode" />
      <MemberSignature Language="F#" Value="member this.MainMixerNode : AVFoundation.AVAudioMixerNode" Usage="AVFoundation.AVAudioEngine.MainMixerNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("mainMixerNode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioMixerNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the optional main mixer mode singleton.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualRenderingBlock">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioEngineManualRenderingBlock ManualRenderingBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAudioEngineManualRenderingBlock ManualRenderingBlock" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.ManualRenderingBlock" />
      <MemberSignature Language="F#" Value="member this.ManualRenderingBlock : AVFoundation.AVAudioEngineManualRenderingBlock" Usage="AVFoundation.AVAudioEngine.ManualRenderingBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("manualRenderingBlock")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioEngineManualRenderingBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualRenderingFormat">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioFormat ManualRenderingFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAudioFormat ManualRenderingFormat" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.ManualRenderingFormat" />
      <MemberSignature Language="F#" Value="member this.ManualRenderingFormat : AVFoundation.AVAudioFormat" Usage="AVFoundation.AVAudioEngine.ManualRenderingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("manualRenderingFormat")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualRenderingMaximumFrameCount">
      <MemberSignature Language="C#" Value="public virtual uint ManualRenderingMaximumFrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 ManualRenderingMaximumFrameCount" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.ManualRenderingMaximumFrameCount" />
      <MemberSignature Language="F#" Value="member this.ManualRenderingMaximumFrameCount : uint32" Usage="AVFoundation.AVAudioEngine.ManualRenderingMaximumFrameCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("manualRenderingMaximumFrameCount")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualRenderingMode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioEngineManualRenderingMode ManualRenderingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVAudioEngineManualRenderingMode ManualRenderingMode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.ManualRenderingMode" />
      <MemberSignature Language="F#" Value="member this.ManualRenderingMode : AVFoundation.AVAudioEngineManualRenderingMode" Usage="AVFoundation.AVAudioEngine.ManualRenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("manualRenderingMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioEngineManualRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualRenderingSampleTime">
      <MemberSignature Language="C#" Value="public virtual long ManualRenderingSampleTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ManualRenderingSampleTime" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.ManualRenderingSampleTime" />
      <MemberSignature Language="F#" Value="member this.ManualRenderingSampleTime : int64" Usage="AVFoundation.AVAudioEngine.ManualRenderingSampleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("manualRenderingSampleTime")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MusicSequence">
      <MemberSignature Language="C#" Value="public virtual AudioToolbox.MusicSequence MusicSequence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AudioToolbox.MusicSequence MusicSequence" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.MusicSequence" />
      <MemberSignature Language="F#" Value="member this.MusicSequence : AudioToolbox.MusicSequence with get, set" Usage="AVFoundation.AVAudioEngine.MusicSequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("musicSequence")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMusicSequence:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AudioToolbox.MusicSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the music sequence that is attached to the audio engine.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioConnectionPoint[] OutputConnectionPoints (AVFoundation.AVAudioNode node, nuint bus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVAudioConnectionPoint[] OutputConnectionPoints(class AVFoundation.AVAudioNode node, valuetype System.nuint bus) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.OutputConnectionPoints(AVFoundation.AVAudioNode,System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member OutputConnectionPoints : AVFoundation.AVAudioNode * nuint -&gt; AVFoundation.AVAudioConnectionPoint[]&#xA;override this.OutputConnectionPoints : AVFoundation.AVAudioNode * nuint -&gt; AVFoundation.AVAudioConnectionPoint[]" Usage="aVAudioEngine.OutputConnectionPoints (node, bus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("outputConnectionPointsForNode:outputBus:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioConnectionPoint[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="AVFoundation.AVAudioNode" />
        <Parameter Name="bus" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="bus">To be added.</param>
        <summary>Gets an array that contains the output connection points of <paramref name="node" /> on <paramref name="bus" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputNode">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioOutputNode OutputNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAudioOutputNode OutputNode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.OutputNode" />
      <MemberSignature Language="F#" Value="member this.OutputNode : AVFoundation.AVAudioOutputNode" Usage="AVFoundation.AVAudioEngine.OutputNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("outputNode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioOutputNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the audio engine's output node singleton.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.Pause" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="aVAudioEngine.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("pause")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses the audio engine.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public virtual void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.Prepare" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit&#xA;override this.Prepare : unit -&gt; unit" Usage="aVAudioEngine.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("prepare")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepares the audio engine for playing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOffline">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAudioEngineManualRenderingStatus RenderOffline (uint numberOfFrames, AVFoundation.AVAudioPcmBuffer buffer, out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AVFoundation.AVAudioEngineManualRenderingStatus RenderOffline(unsigned int32 numberOfFrames, class AVFoundation.AVAudioPcmBuffer buffer, [out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.RenderOffline(System.UInt32,AVFoundation.AVAudioPcmBuffer,Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member RenderOffline : uint32 * AVFoundation.AVAudioPcmBuffer *  -&gt; AVFoundation.AVAudioEngineManualRenderingStatus&#xA;override this.RenderOffline : uint32 * AVFoundation.AVAudioPcmBuffer *  -&gt; AVFoundation.AVAudioEngineManualRenderingStatus" Usage="aVAudioEngine.RenderOffline (numberOfFrames, buffer, outError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("renderOffline:toBuffer:error:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAudioEngineManualRenderingStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfFrames" Type="System.UInt32" />
        <Parameter Name="buffer" Type="AVFoundation.AVAudioPcmBuffer" />
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="numberOfFrames">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="outError">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="aVAudioEngine.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("reset")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the audio engine.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="public virtual bool Running { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Running" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAudioEngine.Running" />
      <MemberSignature Language="F#" Value="member this.Running : bool" Usage="AVFoundation.AVAudioEngine.Running" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isRunning")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether the engine is running.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAndReturnError">
      <MemberSignature Language="C#" Value="public virtual bool StartAndReturnError (out Foundation.NSError outError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartAndReturnError([out] class Foundation.NSError&amp; outError) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.StartAndReturnError(Foundation.NSError@)" />
      <MemberSignature Language="F#" Value="abstract member StartAndReturnError :  -&gt; bool&#xA;override this.StartAndReturnError :  -&gt; bool" Usage="aVAudioEngine.StartAndReturnError outError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("startAndReturnError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outError" Type="Foundation.NSError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="outError">To be added.</param>
        <summary>Starts the engine an stores an error, if one occurs, in <paramref name="outError" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAudioEngine.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="aVAudioEngine.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("stop")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops the audio engine.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
