<Type Name="AVCaptureVideoPreviewLayer" FullName="AVFoundation.AVCaptureVideoPreviewLayer">
  <TypeSignature Language="C#" Value="public class AVCaptureVideoPreviewLayer : CoreAnimation.CALayer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVCaptureVideoPreviewLayer extends CoreAnimation.CALayer" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVCaptureVideoPreviewLayer" />
  <TypeSignature Language="F#" Value="type AVCaptureVideoPreviewLayer = class&#xA;    inherit CALayer" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreAnimation.CALayer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("AVCaptureVideoPreviewLayer", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <see cref="T:CoreAnimation.CALayer" /> subclass that renders the video as it is being captured.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVCaptureVideoPreviewLayer_Class/index.html">Apple documentation for <c>AVCaptureVideoPreviewLayer</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVCaptureVideoPreviewLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVCaptureVideoPreviewLayer (AVFoundation.AVCaptureSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AVFoundation.AVCaptureSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.#ctor(AVFoundation.AVCaptureSession)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureVideoPreviewLayer : AVFoundation.AVCaptureSession -&gt; AVFoundation.AVCaptureVideoPreviewLayer" Usage="new AVFoundation.AVCaptureVideoPreviewLayer session" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVCaptureSession" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>Creates a new preview layer with the supplied capture session.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVCaptureVideoPreviewLayer (Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSCoder coder) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.#ctor(Foundation.NSCoder)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureVideoPreviewLayer : Foundation.NSCoder -&gt; AVFoundation.AVCaptureVideoPreviewLayer" Usage="new AVFoundation.AVCaptureVideoPreviewLayer coder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:Foundation.NSCoding" />  protocol.</para>
          <para>If developers want to create a subclass of this object and continue to support deserialization from an archive, they should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVCaptureVideoPreviewLayer (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureVideoPreviewLayer : Foundation.NSObjectFlag -&gt; AVFoundation.AVCaptureVideoPreviewLayer" Usage="new AVFoundation.AVCaptureVideoPreviewLayer t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVCaptureVideoPreviewLayer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureVideoPreviewLayer : nativeint -&gt; AVFoundation.AVCaptureVideoPreviewLayer" Usage="new AVFoundation.AVCaptureVideoPreviewLayer handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVCaptureVideoPreviewLayer (AVFoundation.AVCaptureSession session, AVFoundation.AVCaptureVideoPreviewLayer.InitMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AVFoundation.AVCaptureSession session, valuetype AVFoundation.AVCaptureVideoPreviewLayer/InitMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.#ctor(AVFoundation.AVCaptureSession,AVFoundation.AVCaptureVideoPreviewLayer.InitMode)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureVideoPreviewLayer : AVFoundation.AVCaptureSession * AVFoundation.AVCaptureVideoPreviewLayer.InitMode -&gt; AVFoundation.AVCaptureVideoPreviewLayer" Usage="new AVFoundation.AVCaptureVideoPreviewLayer (session, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVCaptureSession" />
        <Parameter Name="mode" Type="AVFoundation.AVCaptureVideoPreviewLayer+InitMode" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Creates a new preview layer with the supplied capture session and initialization mode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAdjustsMirroring">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticallyAdjustsMirroring { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAdjustsMirroring" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.AutomaticallyAdjustsMirroring" />
      <MemberSignature Language="F#" Value="member this.AutomaticallyAdjustsMirroring : bool with get, set" Usage="AVFoundation.AVCaptureVideoPreviewLayer.AutomaticallyAdjustsMirroring" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.AutomaticallyAdjustsVideoMirroring' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("automaticallyAdjustsMirroring")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.AutomaticallyAdjustsVideoMirroring' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setAutomaticallyAdjustsMirroring:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.AutomaticallyAdjustsVideoMirroring' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Developers should use 'AVCaptureConnection.AutomaticallyAdjustsVideoMirroring' instead.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureDevicePointOfInterestForPoint">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint CaptureDevicePointOfInterestForPoint (CoreGraphics.CGPoint pointInLayer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGPoint CaptureDevicePointOfInterestForPoint(valuetype CoreGraphics.CGPoint pointInLayer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.CaptureDevicePointOfInterestForPoint(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member CaptureDevicePointOfInterestForPoint : CoreGraphics.CGPoint -&gt; CoreGraphics.CGPoint&#xA;override this.CaptureDevicePointOfInterestForPoint : CoreGraphics.CGPoint -&gt; CoreGraphics.CGPoint" Usage="aVCaptureVideoPreviewLayer.CaptureDevicePointOfInterestForPoint pointInLayer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("captureDevicePointOfInterestForPoint:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointInLayer" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="pointInLayer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVCaptureVideoPreviewLayer.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCaptureConnection Connection" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.Connection" />
      <MemberSignature Language="F#" Value="member this.Connection : AVFoundation.AVCaptureConnection" Usage="AVFoundation.AVCaptureVideoPreviewLayer.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("connection")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:AVFoundation.AVCaptureConnection" /> between this layer and the capture session.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithNoConnection">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureVideoPreviewLayer CreateWithNoConnection (AVFoundation.AVCaptureSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCaptureVideoPreviewLayer CreateWithNoConnection(class AVFoundation.AVCaptureSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.CreateWithNoConnection(AVFoundation.AVCaptureSession)" />
      <MemberSignature Language="F#" Value="static member CreateWithNoConnection : AVFoundation.AVCaptureSession -&gt; AVFoundation.AVCaptureVideoPreviewLayer" Usage="AVFoundation.AVCaptureVideoPreviewLayer.CreateWithNoConnection session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("layerWithSessionWithNoConnection:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureVideoPreviewLayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVCaptureSession" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>Creates and returns a new preview layer with the supplied capture session.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSession">
      <MemberSignature Language="C#" Value="public static AVFoundation.AVCaptureVideoPreviewLayer FromSession (AVFoundation.AVCaptureSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCaptureVideoPreviewLayer FromSession(class AVFoundation.AVCaptureSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.FromSession(AVFoundation.AVCaptureSession)" />
      <MemberSignature Language="F#" Value="static member FromSession : AVFoundation.AVCaptureSession -&gt; AVFoundation.AVCaptureVideoPreviewLayer" Usage="AVFoundation.AVCaptureVideoPreviewLayer.FromSession session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("layerWithSession:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureVideoPreviewLayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVCaptureSession" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>Creates and returns a new preview layer with the supplied capture session.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransformedMetadataObject">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVMetadataObject GetTransformedMetadataObject (AVFoundation.AVMetadataObject metadataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVMetadataObject GetTransformedMetadataObject(class AVFoundation.AVMetadataObject metadataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.GetTransformedMetadataObject(AVFoundation.AVMetadataObject)" />
      <MemberSignature Language="F#" Value="abstract member GetTransformedMetadataObject : AVFoundation.AVMetadataObject -&gt; AVFoundation.AVMetadataObject&#xA;override this.GetTransformedMetadataObject : AVFoundation.AVMetadataObject -&gt; AVFoundation.AVMetadataObject" Usage="aVCaptureVideoPreviewLayer.GetTransformedMetadataObject metadataObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("transformedMetadataObjectForMetadataObject:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVMetadataObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataObject" Type="AVFoundation.AVMetadataObject" />
      </Parameters>
      <Docs>
        <param name="metadataObject">To be added.</param>
        <summary>Converts the properties of <paramref name="metadataObject" /> to the layer coordinate system.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapToLayerCoordinates">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect MapToLayerCoordinates (CoreGraphics.CGRect rectInMetadataOutputCoordinates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect MapToLayerCoordinates(valuetype CoreGraphics.CGRect rectInMetadataOutputCoordinates) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.MapToLayerCoordinates(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member MapToLayerCoordinates : CoreGraphics.CGRect -&gt; CoreGraphics.CGRect&#xA;override this.MapToLayerCoordinates : CoreGraphics.CGRect -&gt; CoreGraphics.CGRect" Usage="aVCaptureVideoPreviewLayer.MapToLayerCoordinates rectInMetadataOutputCoordinates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("rectForMetadataOutputRectOfInterest:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectInMetadataOutputCoordinates" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rectInMetadataOutputCoordinates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapToMetadataOutputCoordinates">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGRect MapToMetadataOutputCoordinates (CoreGraphics.CGRect rectInLayerCoordinates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGRect MapToMetadataOutputCoordinates(valuetype CoreGraphics.CGRect rectInLayerCoordinates) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.MapToMetadataOutputCoordinates(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="abstract member MapToMetadataOutputCoordinates : CoreGraphics.CGRect -&gt; CoreGraphics.CGRect&#xA;override this.MapToMetadataOutputCoordinates : CoreGraphics.CGRect -&gt; CoreGraphics.CGRect" Usage="aVCaptureVideoPreviewLayer.MapToMetadataOutputCoordinates rectInLayerCoordinates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("metadataOutputRectOfInterestForRect:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectInLayerCoordinates" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rectInLayerCoordinates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mirrored">
      <MemberSignature Language="C#" Value="public virtual bool Mirrored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Mirrored" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.Mirrored" />
      <MemberSignature Language="F#" Value="member this.Mirrored : bool with get, set" Usage="AVFoundation.AVCaptureVideoPreviewLayer.Mirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.VideoMirrored' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isMirrored")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.VideoMirrored' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setMirrored:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.VideoMirrored' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MirroringSupported">
      <MemberSignature Language="C#" Value="public virtual bool MirroringSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MirroringSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.MirroringSupported" />
      <MemberSignature Language="F#" Value="member this.MirroringSupported : bool" Usage="AVFoundation.AVCaptureVideoPreviewLayer.MirroringSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.IsVideoMirroringSupported' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isMirroringSupported")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.IsVideoMirroringSupported' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureVideoOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVCaptureVideoOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.Orientation" />
      <MemberSignature Language="F#" Value="member this.Orientation : AVFoundation.AVCaptureVideoOrientation with get, set" Usage="AVFoundation.AVCaptureVideoPreviewLayer.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.VideoOrientation' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("orientation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.VideoOrientation' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setOrientation:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.VideoOrientation' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureVideoOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationSupported">
      <MemberSignature Language="C#" Value="public virtual bool OrientationSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OrientationSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.OrientationSupported" />
      <MemberSignature Language="F#" Value="member this.OrientationSupported : bool" Usage="AVFoundation.AVCaptureVideoPreviewLayer.OrientationSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.IsVideoOrientationSupported' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isOrientationSupported")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.IsVideoOrientationSupported' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointForCaptureDevicePointOfInterest">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGPoint PointForCaptureDevicePointOfInterest (CoreGraphics.CGPoint captureDevicePointOfInterest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreGraphics.CGPoint PointForCaptureDevicePointOfInterest(valuetype CoreGraphics.CGPoint captureDevicePointOfInterest) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.PointForCaptureDevicePointOfInterest(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="abstract member PointForCaptureDevicePointOfInterest : CoreGraphics.CGPoint -&gt; CoreGraphics.CGPoint&#xA;override this.PointForCaptureDevicePointOfInterest : CoreGraphics.CGPoint -&gt; CoreGraphics.CGPoint" Usage="aVCaptureVideoPreviewLayer.PointForCaptureDevicePointOfInterest captureDevicePointOfInterest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("pointForCaptureDevicePointOfInterest:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 6, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="captureDevicePointOfInterest" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="captureDevicePointOfInterest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCaptureSession Session { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCaptureSession Session" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.Session" />
      <MemberSignature Language="F#" Value="member this.Session : AVFoundation.AVCaptureSession with get, set" Usage="AVFoundation.AVCaptureVideoPreviewLayer.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("session")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setSession:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("session", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setSession:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCaptureSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSessionWithNoConnection">
      <MemberSignature Language="C#" Value="public virtual void SetSessionWithNoConnection (AVFoundation.AVCaptureSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionWithNoConnection(class AVFoundation.AVCaptureSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoPreviewLayer.SetSessionWithNoConnection(AVFoundation.AVCaptureSession)" />
      <MemberSignature Language="F#" Value="abstract member SetSessionWithNoConnection : AVFoundation.AVCaptureSession -&gt; unit&#xA;override this.SetSessionWithNoConnection : AVFoundation.AVCaptureSession -&gt; unit" Usage="aVCaptureVideoPreviewLayer.SetSessionWithNoConnection session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("setSessionWithNoConnection:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 7, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="AVFoundation.AVCaptureSession" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>Attaches this layer to the <paramref name="session" /> but without initializing the <see cref="P:AVFoundation.AVCaptureVideoPreviewLayer.Connection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoGravity">
      <MemberSignature Language="C#" Value="public AVFoundation.AVLayerVideoGravity VideoGravity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVLayerVideoGravity VideoGravity" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.VideoGravity" />
      <MemberSignature Language="F#" Value="member this.VideoGravity : AVFoundation.AVLayerVideoGravity with get, set" Usage="AVFoundation.AVCaptureVideoPreviewLayer.VideoGravity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AVFoundation.AVLayerVideoGravity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets how the video is displayed within the layer's <see cref="P:CoreAnimation.CALayer.Bounds" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakVideoGravity">
      <MemberSignature Language="C#" Value="protected virtual Foundation.NSString WeakVideoGravity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString WeakVideoGravity" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoPreviewLayer.WeakVideoGravity" />
      <MemberSignature Language="F#" Value="member this.WeakVideoGravity : Foundation.NSString with get, set" Usage="AVFoundation.AVCaptureVideoPreviewLayer.WeakVideoGravity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("videoGravity")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>set: Foundation.Export("setVideoGravity:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("videoGravity", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setVideoGravity:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
