<Type Name="AVAssetTrack" FullName="AVFoundation.AVAssetTrack">
  <TypeSignature Language="C#" Value="public class AVAssetTrack : Foundation.NSObject, Foundation.INSCopying, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVAssetTrack extends Foundation.NSObject implements class Foundation.INSCopying, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVAssetTrack" />
  <TypeSignature Language="F#" Value="type AVAssetTrack = class&#xA;    inherit NSObject&#xA;    interface INSCopying&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("AVAssetTrack", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides the track-level inspection interface for audiovisual assets.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVAssetTrack_Class/index.html">Apple documentation for <c>AVAssetTrack</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVAssetTrack (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAssetTrack : Foundation.NSObjectFlag -&gt; AVFoundation.AVAssetTrack" Usage="new AVFoundation.AVAssetTrack t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVAssetTrack (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVAssetTrack : nativeint -&gt; AVFoundation.AVAssetTrack" Usage="new AVFoundation.AVAssetTrack handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asset">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAsset Asset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAsset Asset" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.Asset" />
      <MemberSignature Language="F#" Value="member this.Asset : AVFoundation.AVAsset" Usage="AVFoundation.AVAssetTrack.Asset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("asset")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("asset", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAsset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:AVFoundation.AVAsset" /> of which the <see cref="T:AVFoundation.AVAssetTrack" /> is a component.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableMetadataFormats">
      <MemberSignature Language="C#" Value="public virtual string[] AvailableMetadataFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AvailableMetadataFormats" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.AvailableMetadataFormats" />
      <MemberSignature Language="F#" Value="member this.AvailableMetadataFormats : string[]" Usage="AVFoundation.AVAssetTrack.AvailableMetadataFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("availableMetadataFormats")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The available metadata formats for the track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableTrackAssociationTypes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSString[] AvailableTrackAssociationTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString[] AvailableTrackAssociationTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.AvailableTrackAssociationTypes" />
      <MemberSignature Language="F#" Value="member this.AvailableTrackAssociationTypes : Foundation.NSString[]" Usage="AVFoundation.AVAssetTrack.AvailableTrackAssociationTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("availableTrackAssociationTypes")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The available association types available for this track. Should be a constant defined in <see cref="T:AVFoundation.AVAssetTrackTrackAssociation" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVAssetTrack.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonMetadata">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVMetadataItem[] CommonMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVMetadataItem[] CommonMetadata" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.CommonMetadata" />
      <MemberSignature Language="F#" Value="member this.CommonMetadata : AVFoundation.AVMetadataItem[]" Usage="AVFoundation.AVAssetTrack.CommonMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("commonMetadata")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVMetadataItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The available common metadata items.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject Copy (Foundation.NSZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSObject Copy(class Foundation.NSZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.Copy(Foundation.NSZone)" />
      <MemberSignature Language="F#" Value="override this.Copy : Foundation.NSZone -&gt; Foundation.NSObject" Usage="aVAssetTrack.Copy zone" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Foundation.INSCopying.Copy(Foundation.NSZone)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("copyWithZone:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Foundation.NSZone" />
      </Parameters>
      <Docs>
        <param name="zone">Zone to use to allocate this object, or null to use the default zone.</param>
        <summary>Performs a copy of the underlying Objective-C object.</summary>
        <returns>This method performs a copy of the underlying Objective-C object state and returns a new instance of it.  It does not actually try to replicate any managed state.</returns>
        <remarks>Implementation of the INSCopyable interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decodable">
      <MemberSignature Language="C#" Value="public virtual bool Decodable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Decodable" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.Decodable" />
      <MemberSignature Language="F#" Value="member this.Decodable : bool" Usage="AVFoundation.AVAssetTrack.Decodable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isDecodable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="aVAssetTrack.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the AVAssetTrack object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the AVAssetTrack class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the AVAssetTrack ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.Enabled" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="AVFoundation.AVAssetTrack.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isEnabled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the track is enabled.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EstimatedDataRate">
      <MemberSignature Language="C#" Value="public virtual float EstimatedDataRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EstimatedDataRate" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.EstimatedDataRate" />
      <MemberSignature Language="F#" Value="member this.EstimatedDataRate : single" Usage="AVFoundation.AVAssetTrack.EstimatedDataRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("estimatedDataRate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An estimate of the data-rate of the track, in bits per second.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedLanguageTag">
      <MemberSignature Language="C#" Value="public virtual string ExtendedLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExtendedLanguageTag" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.ExtendedLanguageTag" />
      <MemberSignature Language="F#" Value="member this.ExtendedLanguageTag : string" Usage="AVFoundation.AVAssetTrack.ExtendedLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("extendedLanguageTag")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The BCP-47 language tag for the track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDescriptions">
      <MemberSignature Language="C#" Value="public CoreMedia.CMFormatDescription[] FormatDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreMedia.CMFormatDescription[] FormatDescriptions" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.FormatDescriptions" />
      <MemberSignature Language="F#" Value="member this.FormatDescriptions : CoreMedia.CMFormatDescription[]" Usage="AVFoundation.AVAssetTrack.FormatDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMFormatDescription[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An array of <see cref="T:CoreMedia.CMFormatDescription" />s that describe the formats of the samples in the <see cref="T:AVFoundation.AVAssetTrack" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDescriptionsAsObjects">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSObject[] FormatDescriptionsAsObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSObject[] FormatDescriptionsAsObjects" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.FormatDescriptionsAsObjects" />
      <MemberSignature Language="F#" Value="member this.FormatDescriptionsAsObjects : Foundation.NSObject[]" Usage="AVFoundation.AVAssetTrack.FormatDescriptionsAsObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("formatDescriptions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSObject[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the format descriptions as <see cref="T:Foundation.NSObject" />s.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:AVFoundation.AVAssetTrack.FormatDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociatedTracks">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAssetTrack[] GetAssociatedTracks (Foundation.NSString avAssetTrackTrackAssociationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVAssetTrack[] GetAssociatedTracks(class Foundation.NSString avAssetTrackTrackAssociationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.GetAssociatedTracks(Foundation.NSString)" />
      <MemberSignature Language="F#" Value="abstract member GetAssociatedTracks : Foundation.NSString -&gt; AVFoundation.AVAssetTrack[]&#xA;override this.GetAssociatedTracks : Foundation.NSString -&gt; AVFoundation.AVAssetTrack[]" Usage="aVAssetTrack.GetAssociatedTracks avAssetTrackTrackAssociationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("associatedTracksOfType:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 9, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAssetTrack[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="avAssetTrackTrackAssociationType" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="avAssetTrackTrackAssociationType">To be added.</param>
        <summary>Gets the tracks that are associated by the specified association type.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssociatedTracksOfType">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSString GetAssociatedTracksOfType (Foundation.NSString avAssetTrackTrackAssociationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSString GetAssociatedTracksOfType(class Foundation.NSString avAssetTrackTrackAssociationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.GetAssociatedTracksOfType(Foundation.NSString)" />
      <MemberSignature Language="F#" Value="abstract member GetAssociatedTracksOfType : Foundation.NSString -&gt; Foundation.NSString&#xA;override this.GetAssociatedTracksOfType : Foundation.NSString -&gt; Foundation.NSString" Usage="aVAssetTrack.GetAssociatedTracksOfType avAssetTrackTrackAssociationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.Obsolete("Use 'GetAssociatedTracks'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="avAssetTrackTrackAssociationType" Type="Foundation.NSString" />
      </Parameters>
      <Docs>
        <param name="avAssetTrackTrackAssociationType">Should be one of the constants defined by <see cref="T:AVFoundation.AVAssetTrackTrackAssociation" />.</param>
        <summary>Retrieves associated tracks whose relationship is the specified <paramref name="avAssetTrackTrackAssociationType" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMediaCharacteristic">
      <MemberSignature Language="C#" Value="public virtual bool HasMediaCharacteristic (string mediaCharacteristic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasMediaCharacteristic(string mediaCharacteristic) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.HasMediaCharacteristic(System.String)" />
      <MemberSignature Language="F#" Value="abstract member HasMediaCharacteristic : string -&gt; bool&#xA;override this.HasMediaCharacteristic : string -&gt; bool" Usage="aVAssetTrack.HasMediaCharacteristic mediaCharacteristic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("hasMediaCharacteristic:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCharacteristic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaCharacteristic">Should be one of the constants defined in <see cref="T:AVFoundation.AVMediaCharacteristic" />.</param>
        <summary>Whether the <see cref="T:AVFoundation.AVAssetTrack" /> has the specified <paramref name="mediaCharacteristic" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageCode">
      <MemberSignature Language="C#" Value="public virtual string LanguageCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LanguageCode" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.LanguageCode" />
      <MemberSignature Language="F#" Value="member this.LanguageCode : string" Usage="AVFoundation.AVAssetTrack.LanguageCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("languageCode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The ISO 639-2/T language code for the <see cref="T:AVFoundation.AVAssetTrack" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public virtual string MediaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.MediaType" />
      <MemberSignature Language="F#" Value="member this.MediaType : string" Usage="AVFoundation.AVAssetTrack.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("mediaType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The media type of the track. Will be one of the constants defined in <see cref="T:AVFoundation.AVMediaType" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVMetadataItem[] Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVMetadataItem[] Metadata" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.Metadata" />
      <MemberSignature Language="F#" Value="member this.Metadata : AVFoundation.AVMetadataItem[]" Usage="AVFoundation.AVAssetTrack.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("metadata")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVMetadataItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets all the metadata for which metadata specifiers are available.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataForFormat">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVMetadataItem[] MetadataForFormat (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVMetadataItem[] MetadataForFormat(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.MetadataForFormat(System.String)" />
      <MemberSignature Language="F#" Value="abstract member MetadataForFormat : string -&gt; AVFoundation.AVMetadataItem[]&#xA;override this.MetadataForFormat : string -&gt; AVFoundation.AVMetadataItem[]" Usage="aVAssetTrack.MetadataForFormat format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("metadataForFormat:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVMetadataItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <summary>The <see cref="T:AVFoundation.AVMetadataItem" />s that match the <paramref name="format" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFrameDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime MinFrameDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime MinFrameDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.MinFrameDuration" />
      <MemberSignature Language="F#" Value="member this.MinFrameDuration : CoreMedia.CMTime" Usage="AVFoundation.AVAssetTrack.MinFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("minFrameDuration")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum duration of a frame.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalSize">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGSize NaturalSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize NaturalSize" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.NaturalSize" />
      <MemberSignature Language="F#" Value="member this.NaturalSize : CoreGraphics.CGSize" Usage="AVFoundation.AVAssetTrack.NaturalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("naturalSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The natural dimensions of the <see cref="T:AVFoundation.AVAssetTrack" />'s media.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalTimeScale">
      <MemberSignature Language="C#" Value="public virtual int NaturalTimeScale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalTimeScale" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.NaturalTimeScale" />
      <MemberSignature Language="F#" Value="member this.NaturalTimeScale : int" Usage="AVFoundation.AVAssetTrack.NaturalTimeScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("naturalTimeScale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The timescale for the track that can be used without additional conversions.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NominalFrameRate">
      <MemberSignature Language="C#" Value="public virtual float NominalFrameRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 NominalFrameRate" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.NominalFrameRate" />
      <MemberSignature Language="F#" Value="member this.NominalFrameRate : single" Usage="AVFoundation.AVAssetTrack.NominalFrameRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("nominalFrameRate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The frame rate of the track, in frames-per-second.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Playable">
      <MemberSignature Language="C#" Value="public virtual bool Playable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Playable" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.Playable" />
      <MemberSignature Language="F#" Value="member this.Playable : bool" Usage="AVFoundation.AVAssetTrack.Playable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isPlayable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the track is currently playable in the current environment.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredTransform">
      <MemberSignature Language="C#" Value="public virtual CoreGraphics.CGAffineTransform PreferredTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGAffineTransform PreferredTransform" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.PreferredTransform" />
      <MemberSignature Language="F#" Value="member this.PreferredTransform : CoreGraphics.CGAffineTransform" Usage="AVFoundation.AVAssetTrack.PreferredTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("preferredTransform")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGAffineTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A transform stored in the <see cref="T:AVFoundation.AVAssetTrack" /> that is preferred for visual playback.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredVolume">
      <MemberSignature Language="C#" Value="public virtual float PreferredVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PreferredVolume" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.PreferredVolume" />
      <MemberSignature Language="F#" Value="member this.PreferredVolume : single" Usage="AVFoundation.AVAssetTrack.PreferredVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("preferredVolume")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A value between 0 and 1, stored in the container, indicating a preferred playback level.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresFrameReordering">
      <MemberSignature Language="C#" Value="public virtual bool RequiresFrameReordering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresFrameReordering" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.RequiresFrameReordering" />
      <MemberSignature Language="F#" Value="member this.RequiresFrameReordering : bool" Usage="AVFoundation.AVAssetTrack.RequiresFrameReordering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("requiresFrameReordering")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that tells whether tracks have samples have timestamps that differ for presentation and decoding.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SamplePresentationTimeForTrackTime">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime SamplePresentationTimeForTrackTime (CoreMedia.CMTime trackTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CoreMedia.CMTime SamplePresentationTimeForTrackTime(valuetype CoreMedia.CMTime trackTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.SamplePresentationTimeForTrackTime(CoreMedia.CMTime)" />
      <MemberSignature Language="F#" Value="abstract member SamplePresentationTimeForTrackTime : CoreMedia.CMTime -&gt; CoreMedia.CMTime&#xA;override this.SamplePresentationTimeForTrackTime : CoreMedia.CMTime -&gt; CoreMedia.CMTime" Usage="aVAssetTrack.SamplePresentationTimeForTrackTime trackTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("samplePresentationTimeForTrackTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackTime" Type="CoreMedia.CMTime" />
      </Parameters>
      <Docs>
        <param name="trackTime">To be added.</param>
        <summary>Returns the presentation time after the <paramref name="trackTime" /> is passed through the appropriate time mappings.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SegmentForTrackTime">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAssetTrackSegment SegmentForTrackTime (CoreMedia.CMTime trackTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AVFoundation.AVAssetTrackSegment SegmentForTrackTime(valuetype CoreMedia.CMTime trackTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVAssetTrack.SegmentForTrackTime(CoreMedia.CMTime)" />
      <MemberSignature Language="F#" Value="abstract member SegmentForTrackTime : CoreMedia.CMTime -&gt; AVFoundation.AVAssetTrackSegment&#xA;override this.SegmentForTrackTime : CoreMedia.CMTime -&gt; AVFoundation.AVAssetTrackSegment" Usage="aVAssetTrack.SegmentForTrackTime trackTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("segmentForTrackTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAssetTrackSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackTime" Type="CoreMedia.CMTime" />
      </Parameters>
      <Docs>
        <param name="trackTime">To be added.</param>
        <summary>The track segment containing the specified <paramref name="trackTime" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Segments">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVAssetTrackSegment[] Segments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVAssetTrackSegment[] Segments" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.Segments" />
      <MemberSignature Language="F#" Value="member this.Segments : AVFoundation.AVAssetTrackSegment[]" Usage="AVFoundation.AVAssetTrack.Segments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>get: Foundation.Export("segments")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("segments", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVAssetTrackSegment[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The time mappings from the track's media samples to the track's timeline.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SegmentsDidChangeNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString SegmentsDidChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString SegmentsDidChangeNotification" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.SegmentsDidChangeNotification" />
      <MemberSignature Language="F#" Value="member this.SegmentsDidChangeNotification : Foundation.NSString" Usage="AVFoundation.AVAssetTrack.SegmentsDidChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Advice("Use AVAssetTrack.Notifications.ObserveSegmentsDidChange helper method instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("AVAssetTrackSegmentsDidChangeNotification", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for SegmentsDidChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        AVAssetTrack.SegmentsDidChangeNotification, (notification) => {Console.WriteLine ("Received the notification AVAssetTrack", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification AVAssetTrack", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (AVAssetTrack.SegmentsDidChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelfContained">
      <MemberSignature Language="C#" Value="public virtual bool SelfContained { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelfContained" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.SelfContained" />
      <MemberSignature Language="F#" Value="member this.SelfContained : bool" Usage="AVFoundation.AVAssetTrack.SelfContained" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("isSelfContained")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether all sample data is contained internally, with no external data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeRange">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTimeRange TimeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTimeRange TimeRange" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.TimeRange" />
      <MemberSignature Language="F#" Value="member this.TimeRange : CoreMedia.CMTimeRange" Usage="AVFoundation.AVAssetTrack.TimeRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("timeRange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTimeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The range of the track within the overall timeline of the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=AVFoundation%20AVAsset%20Track%20AVAsset&amp;scope=Xamarin" title="P:AVFoundation.AVAssetTrack.AVAsset">P:AVFoundation.AVAssetTrack.AVAsset</a></format>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeRangeDidChangeNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString TimeRangeDidChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString TimeRangeDidChangeNotification" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.TimeRangeDidChangeNotification" />
      <MemberSignature Language="F#" Value="member this.TimeRangeDidChangeNotification : Foundation.NSString" Usage="AVFoundation.AVAssetTrack.TimeRangeDidChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Advice("Use AVAssetTrack.Notifications.ObserveTimeRangeDidChange helper method instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("AVAssetTrackTimeRangeDidChangeNotification", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for TimeRangeDidChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        AVAssetTrack.TimeRangeDidChangeNotification, (notification) => {Console.WriteLine ("Received the notification AVAssetTrack", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification AVAssetTrack", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (AVAssetTrack.TimeRangeDidChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalSampleDataLength">
      <MemberSignature Language="C#" Value="public virtual long TotalSampleDataLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalSampleDataLength" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.TotalSampleDataLength" />
      <MemberSignature Language="F#" Value="member this.TotalSampleDataLength : int64" Usage="AVFoundation.AVAssetTrack.TotalSampleDataLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("totalSampleDataLength")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The length of the sample data of the track, in bytes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackAssociationsDidChangeNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString TrackAssociationsDidChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString TrackAssociationsDidChangeNotification" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.TrackAssociationsDidChangeNotification" />
      <MemberSignature Language="F#" Value="member this.TrackAssociationsDidChangeNotification : Foundation.NSString" Usage="AVFoundation.AVAssetTrack.TrackAssociationsDidChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Advice("Use AVAssetTrack.Notifications.ObserveTrackAssociationsDidChange helper method instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("AVAssetTrackTrackAssociationsDidChangeNotification", "AVFoundation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for TrackAssociationsDidChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        AVAssetTrack.TrackAssociationsDidChangeNotification, (notification) => {Console.WriteLine ("Received the notification AVAssetTrack", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification AVAssetTrack", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (AVAssetTrack.TrackAssociationsDidChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackID">
      <MemberSignature Language="C#" Value="public virtual int TrackID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrackID" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVAssetTrack.TrackID" />
      <MemberSignature Language="F#" Value="member this.TrackID : int" Usage="AVFoundation.AVAssetTrack.TrackID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("trackID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An identifier for the track.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
