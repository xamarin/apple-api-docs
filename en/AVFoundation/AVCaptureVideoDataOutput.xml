<Type Name="AVCaptureVideoDataOutput" FullName="AVFoundation.AVCaptureVideoDataOutput">
  <TypeSignature Language="C#" Value="public class AVCaptureVideoDataOutput : AVFoundation.AVCaptureOutput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVCaptureVideoDataOutput extends AVFoundation.AVCaptureOutput" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVCaptureVideoDataOutput" />
  <TypeSignature Language="F#" Value="type AVCaptureVideoDataOutput = class&#xA;    inherit AVCaptureOutput" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AVFoundation.AVCaptureOutput</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("AVCaptureVideoDataOutput", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>AVCaptureOutput that captures frames from the video being recorded.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/AVCaptureFrames/">avcaptureframes</related>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVCaptureVideoDataOutput_Class/index.html">Apple documentation for <c>AVCaptureVideoDataOutput</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVCaptureVideoDataOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoDataOutput.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVCaptureVideoDataOutput (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoDataOutput.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureVideoDataOutput : Foundation.NSObjectFlag -&gt; AVFoundation.AVCaptureVideoDataOutput" Usage="new AVFoundation.AVCaptureVideoDataOutput t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVCaptureVideoDataOutput (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoDataOutput.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCaptureVideoDataOutput : nativeint -&gt; AVFoundation.AVCaptureVideoDataOutput" Usage="new AVFoundation.AVCaptureVideoDataOutput handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysDiscardsLateVideoFrames">
      <MemberSignature Language="C#" Value="public virtual bool AlwaysDiscardsLateVideoFrames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysDiscardsLateVideoFrames" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.AlwaysDiscardsLateVideoFrames" />
      <MemberSignature Language="F#" Value="member this.AlwaysDiscardsLateVideoFrames : bool with get, set" Usage="AVFoundation.AVCaptureVideoDataOutput.AlwaysDiscardsLateVideoFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("alwaysDiscardsLateVideoFrames")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setAlwaysDiscardsLateVideoFrames:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether to drop video frames if they arrive late.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableVideoCodecTypes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSString[] AvailableVideoCodecTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString[] AvailableVideoCodecTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.AvailableVideoCodecTypes" />
      <MemberSignature Language="F#" Value="member this.AvailableVideoCodecTypes : Foundation.NSString[]" Usage="AVFoundation.AVCaptureVideoDataOutput.AvailableVideoCodecTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("availableVideoCodecTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the array of acceptable values for <see cref="P:AVFoundation.AVCaptureVideoDataOutput.CompressedVideoSetting" /> or <see cref="P:AVFoundation.AVCaptureVideoDataOutput.UncompressedVideoSetting" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableVideoCVPixelFormatTypes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] AvailableVideoCVPixelFormatTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] AvailableVideoCVPixelFormatTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.AvailableVideoCVPixelFormatTypes" />
      <MemberSignature Language="F#" Value="member this.AvailableVideoCVPixelFormatTypes : Foundation.NSNumber[]" Usage="AVFoundation.AVCaptureVideoDataOutput.AvailableVideoCVPixelFormatTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("availableVideoCVPixelFormatTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An array whose values are elements of the <see cref="T:CoreVideo.CVPixelFormatType" /> enumeration.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVCaptureVideoDataOutput.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedVideoSetting">
      <MemberSignature Language="C#" Value="public AVFoundation.AVVideoSettingsCompressed CompressedVideoSetting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVVideoSettingsCompressed CompressedVideoSetting" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.CompressedVideoSetting" />
      <MemberSignature Language="F#" Value="member this.CompressedVideoSetting : AVFoundation.AVVideoSettingsCompressed with get, set" Usage="AVFoundation.AVCaptureVideoDataOutput.CompressedVideoSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVVideoSettingsCompressed</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableVideoCodecTypes">
      <MemberSignature Language="C#" Value="public virtual string[] GetAvailableVideoCodecTypes (string outputFileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAvailableVideoCodecTypes(string outputFileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoDataOutput.GetAvailableVideoCodecTypes(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableVideoCodecTypes : string -&gt; string[]&#xA;override this.GetAvailableVideoCodecTypes : string -&gt; string[]" Usage="aVCaptureVideoDataOutput.GetAvailableVideoCodecTypes outputFileType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("availableVideoCodecTypesForAssetWriterWithOutputFileType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileType">The output file type to check.</param>
        <summary>Returns an array of available codec types for the specified output type.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecommendedVideoSettings">
      <MemberSignature Language="C#" Value="public AVFoundation.AVPlayerItemVideoOutputSettings GetRecommendedVideoSettings (string videoCodecType, string outputFileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AVFoundation.AVPlayerItemVideoOutputSettings GetRecommendedVideoSettings(string videoCodecType, string outputFileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoDataOutput.GetRecommendedVideoSettings(System.String,System.String)" />
      <MemberSignature Language="F#" Value="member this.GetRecommendedVideoSettings : string * string -&gt; AVFoundation.AVPlayerItemVideoOutputSettings" Usage="aVCaptureVideoDataOutput.GetRecommendedVideoSettings (videoCodecType, outputFileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVPlayerItemVideoOutputSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoCodecType" Type="System.String" />
        <Parameter Name="outputFileType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="videoCodecType">The codec to check.</param>
        <param name="outputFileType">The output file type to check.</param>
        <summary>Returns the recommended settings for the specified codec type and output file type.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecommendedVideoSettingsForAssetWriter">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary GetRecommendedVideoSettingsForAssetWriter (string outputFileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSDictionary GetRecommendedVideoSettingsForAssetWriter(string outputFileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoDataOutput.GetRecommendedVideoSettingsForAssetWriter(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetRecommendedVideoSettingsForAssetWriter : string -&gt; Foundation.NSDictionary&#xA;override this.GetRecommendedVideoSettingsForAssetWriter : string -&gt; Foundation.NSDictionary" Usage="aVCaptureVideoDataOutput.GetRecommendedVideoSettingsForAssetWriter outputFileType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("recommendedVideoSettingsForAssetWriterWithOutputFileType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFrameDuration">
      <MemberSignature Language="C#" Value="public virtual CoreMedia.CMTime MinFrameDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreMedia.CMTime MinFrameDuration" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.MinFrameDuration" />
      <MemberSignature Language="F#" Value="member this.MinFrameDuration : CoreMedia.CMTime with get, set" Usage="AVFoundation.AVCaptureVideoDataOutput.MinFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 5, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.MinVideoFrameDuration' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("minFrameDuration")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 5, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.MinVideoFrameDuration' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setMinFrameDuration:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 5, 0, ObjCRuntime.PlatformArchitecture.All, "Use 'AVCaptureConnection.MinVideoFrameDuration' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreMedia.CMTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Developers should use 'AVCaptureConnection.MinVideoFrameDuration' instead.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleBufferCallbackQueue">
      <MemberSignature Language="C#" Value="public virtual CoreFoundation.DispatchQueue SampleBufferCallbackQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreFoundation.DispatchQueue SampleBufferCallbackQueue" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.SampleBufferCallbackQueue" />
      <MemberSignature Language="F#" Value="member this.SampleBufferCallbackQueue : CoreFoundation.DispatchQueue" Usage="AVFoundation.AVCaptureVideoDataOutput.SampleBufferCallbackQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sampleBufferCallbackQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreFoundation.DispatchQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the DispatchQueue used by the sampling buffer delegate.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleBufferDelegate">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate SampleBufferDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate SampleBufferDelegate" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.SampleBufferDelegate" />
      <MemberSignature Language="F#" Value="member this.SampleBufferDelegate : AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" Usage="AVFoundation.AVCaptureVideoDataOutput.SampleBufferDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sampleBufferDelegate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the sampling buffer delegate.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSampleBufferDelegate">
      <MemberSignature Language="C#" Value="public virtual void SetSampleBufferDelegate (AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate sampleBufferDelegate, CoreFoundation.DispatchQueue sampleBufferCallbackQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSampleBufferDelegate(class AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate sampleBufferDelegate, class CoreFoundation.DispatchQueue sampleBufferCallbackQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoDataOutput.SetSampleBufferDelegate(AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate,CoreFoundation.DispatchQueue)" />
      <MemberSignature Language="F#" Value="abstract member SetSampleBufferDelegate : AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate * CoreFoundation.DispatchQueue -&gt; unit&#xA;override this.SetSampleBufferDelegate : AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate * CoreFoundation.DispatchQueue -&gt; unit" Usage="aVCaptureVideoDataOutput.SetSampleBufferDelegate (sampleBufferDelegate, sampleBufferCallbackQueue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setSampleBufferDelegate:queue:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use overload accepting a 'IAVCaptureVideoDataOutputSampleBufferDelegate'.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleBufferDelegate" Type="AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate" />
        <Parameter Name="sampleBufferCallbackQueue" Type="CoreFoundation.DispatchQueue" />
      </Parameters>
      <Docs>
        <param name="sampleBufferDelegate">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="sampleBufferCallbackQueue">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Sets the delegate object and specifies the <see cref="T:CoreFoundation.DispatchQueue" /> on which the callbacks occur.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSampleBufferDelegateQueue">
      <MemberSignature Language="C#" Value="public void SetSampleBufferDelegateQueue (AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate sampleBufferDelegate, CoreFoundation.DispatchQueue sampleBufferCallbackQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSampleBufferDelegateQueue(class AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate sampleBufferDelegate, class CoreFoundation.DispatchQueue sampleBufferCallbackQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCaptureVideoDataOutput.SetSampleBufferDelegateQueue(AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate,CoreFoundation.DispatchQueue)" />
      <MemberSignature Language="F#" Value="member this.SetSampleBufferDelegateQueue : AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate * CoreFoundation.DispatchQueue -&gt; unit" Usage="aVCaptureVideoDataOutput.SetSampleBufferDelegateQueue (sampleBufferDelegate, sampleBufferCallbackQueue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleBufferDelegate" Type="AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" />
        <Parameter Name="sampleBufferCallbackQueue" Type="CoreFoundation.DispatchQueue" />
      </Parameters>
      <Docs>
        <param name="sampleBufferDelegate">To be added.</param>
        <param name="sampleBufferCallbackQueue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UncompressedVideoSetting">
      <MemberSignature Language="C#" Value="public AVFoundation.AVVideoSettingsUncompressed UncompressedVideoSetting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVVideoSettingsUncompressed UncompressedVideoSetting" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.UncompressedVideoSetting" />
      <MemberSignature Language="F#" Value="member this.UncompressedVideoSetting : AVFoundation.AVVideoSettingsUncompressed with get, set" Usage="AVFoundation.AVCaptureVideoDataOutput.UncompressedVideoSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVVideoSettingsUncompressed</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakVideoSettings">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary WeakVideoSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary WeakVideoSettings" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCaptureVideoDataOutput.WeakVideoSettings" />
      <MemberSignature Language="F#" Value="member this.WeakVideoSettings : Foundation.NSDictionary with get, set" Usage="AVFoundation.AVCaptureVideoDataOutput.WeakVideoSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("videoSettings", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setVideoSettings:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <para>(More documentation for this node is coming)</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
