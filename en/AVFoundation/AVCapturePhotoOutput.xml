<Type Name="AVCapturePhotoOutput" FullName="AVFoundation.AVCapturePhotoOutput">
  <TypeSignature Language="C#" Value="public class AVCapturePhotoOutput : AVFoundation.AVCaptureOutput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AVCapturePhotoOutput extends AVFoundation.AVCaptureOutput" />
  <TypeSignature Language="DocId" Value="T:AVFoundation.AVCapturePhotoOutput" />
  <TypeSignature Language="F#" Value="type AVCapturePhotoOutput = class&#xA;    inherit AVCaptureOutput" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AVFoundation.AVCaptureOutput</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("AVCapturePhotoOutput", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides an interface for capturing still images, Live Photos, RAW capture, wide-gamut color, and bracketed images.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/reference/AVFoundation/AVCapturePhotoOutput">Apple documentation for <c>AVCapturePhotoOutput</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AVCapturePhotoOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AVCapturePhotoOutput (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCapturePhotoOutput : Foundation.NSObjectFlag -&gt; AVFoundation.AVCapturePhotoOutput" Usage="new AVFoundation.AVCapturePhotoOutput t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AVCapturePhotoOutput (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new AVFoundation.AVCapturePhotoOutput : nativeint -&gt; AVFoundation.AVCapturePhotoOutput" Usage="new AVFoundation.AVCapturePhotoOutput handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRedEyeReductionSupported">
      <MemberSignature Language="C#" Value="public virtual bool AutoRedEyeReductionSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoRedEyeReductionSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.AutoRedEyeReductionSupported" />
      <MemberSignature Language="F#" Value="member this.AutoRedEyeReductionSupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.AutoRedEyeReductionSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAutoRedEyeReductionSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableLivePhotoVideoCodecTypes">
      <MemberSignature Language="C#" Value="public virtual string[] AvailableLivePhotoVideoCodecTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AvailableLivePhotoVideoCodecTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.AvailableLivePhotoVideoCodecTypes" />
      <MemberSignature Language="F#" Value="member this.AvailableLivePhotoVideoCodecTypes : string[]" Usage="AVFoundation.AVCapturePhotoOutput.AvailableLivePhotoVideoCodecTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("availableLivePhotoVideoCodecTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the available codecs for live photos.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailablePhotoCodecTypes">
      <MemberSignature Language="C#" Value="public virtual string[] AvailablePhotoCodecTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AvailablePhotoCodecTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.AvailablePhotoCodecTypes" />
      <MemberSignature Language="F#" Value="member this.AvailablePhotoCodecTypes : string[]" Usage="AVFoundation.AVCapturePhotoOutput.AvailablePhotoCodecTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("availablePhotoCodecTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of strings that identifies the currently supported codecs for capture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailablePhotoPixelFormatTypes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] AvailablePhotoPixelFormatTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] AvailablePhotoPixelFormatTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.AvailablePhotoPixelFormatTypes" />
      <MemberSignature Language="F#" Value="member this.AvailablePhotoPixelFormatTypes : Foundation.NSNumber[]" Usage="AVFoundation.AVCapturePhotoOutput.AvailablePhotoPixelFormatTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("availablePhotoPixelFormatTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of numbers that identifies the currently supported pixel formats for capture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableRawPhotoPixelFormatTypes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] AvailableRawPhotoPixelFormatTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] AvailableRawPhotoPixelFormatTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.AvailableRawPhotoPixelFormatTypes" />
      <MemberSignature Language="F#" Value="member this.AvailableRawPhotoPixelFormatTypes : Foundation.NSNumber[]" Usage="AVFoundation.AVCapturePhotoOutput.AvailableRawPhotoPixelFormatTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("availableRawPhotoPixelFormatTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of numbers that identifies the currently supported pixel formats for RAW capture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CameraCalibrationDataDeliverySupported">
      <MemberSignature Language="C#" Value="public virtual bool CameraCalibrationDataDeliverySupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CameraCalibrationDataDeliverySupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.CameraCalibrationDataDeliverySupported" />
      <MemberSignature Language="F#" Value="member this.CameraCalibrationDataDeliverySupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.CameraCalibrationDataDeliverySupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isCameraCalibrationDataDeliverySupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether the capture output can deliver calibration data.</summary>
        <value>
          <see langword="true" /> if delivery is supported. Otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapturePhoto">
      <MemberSignature Language="C#" Value="public virtual void CapturePhoto (AVFoundation.AVCapturePhotoSettings settings, AVFoundation.IAVCapturePhotoCaptureDelegate cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CapturePhoto(class AVFoundation.AVCapturePhotoSettings settings, class AVFoundation.IAVCapturePhotoCaptureDelegate cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.CapturePhoto(AVFoundation.AVCapturePhotoSettings,AVFoundation.IAVCapturePhotoCaptureDelegate)" />
      <MemberSignature Language="F#" Value="abstract member CapturePhoto : AVFoundation.AVCapturePhotoSettings * AVFoundation.IAVCapturePhotoCaptureDelegate -&gt; unit&#xA;override this.CapturePhoto : AVFoundation.AVCapturePhotoSettings * AVFoundation.IAVCapturePhotoCaptureDelegate -&gt; unit" Usage="aVCapturePhotoOutput.CapturePhoto (settings, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("capturePhotoWithSettings:delegate:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="AVFoundation.AVCapturePhotoSettings" />
        <Parameter Name="cb" Type="AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Parameters>
      <Docs>
        <param name="settings">To be added.</param>
        <param name="cb">To be added.</param>
        <summary>Captures a photo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="AVFoundation.AVCapturePhotoOutput.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthDataDeliveryEnabled">
      <MemberSignature Language="C#" Value="public virtual bool DepthDataDeliveryEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DepthDataDeliveryEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.DepthDataDeliveryEnabled" />
      <MemberSignature Language="F#" Value="member this.DepthDataDeliveryEnabled : bool with get, set" Usage="AVFoundation.AVCapturePhotoOutput.DepthDataDeliveryEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isDepthDataDeliveryEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDepthDataDeliveryEnabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthDataDeliverySupported">
      <MemberSignature Language="C#" Value="public virtual bool DepthDataDeliverySupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DepthDataDeliverySupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.DepthDataDeliverySupported" />
      <MemberSignature Language="F#" Value="member this.DepthDataDeliverySupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.DepthDataDeliverySupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isDepthDataDeliverySupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DualCameraDualPhotoDeliveryEnabled">
      <MemberSignature Language="C#" Value="public virtual bool DualCameraDualPhotoDeliveryEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DualCameraDualPhotoDeliveryEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.DualCameraDualPhotoDeliveryEnabled" />
      <MemberSignature Language="F#" Value="member this.DualCameraDualPhotoDeliveryEnabled : bool with get, set" Usage="AVFoundation.AVCapturePhotoOutput.DualCameraDualPhotoDeliveryEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isDualCameraDualPhotoDeliveryEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setDualCameraDualPhotoDeliveryEnabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that tells if delivery of two formats for each capture is enabled.</summary>
        <value>A Boolean value that tells if delivery of two formats for each capture is enabled.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DualCameraDualPhotoDeliverySupported">
      <MemberSignature Language="C#" Value="public virtual bool DualCameraDualPhotoDeliverySupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DualCameraDualPhotoDeliverySupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.DualCameraDualPhotoDeliverySupported" />
      <MemberSignature Language="F#" Value="member this.DualCameraDualPhotoDeliverySupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.DualCameraDualPhotoDeliverySupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isDualCameraDualPhotoDeliverySupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells if delivery of two formats for each capture is supported.</summary>
        <value>A Boolean value that tells if delivery of two formats for each capture is supported.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DualCameraFusionSupported">
      <MemberSignature Language="C#" Value="public virtual bool DualCameraFusionSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DualCameraFusionSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.DualCameraFusionSupported" />
      <MemberSignature Language="F#" Value="member this.DualCameraFusionSupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.DualCameraFusionSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isDualCameraFusionSupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 2, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that tells whether the device can fuse two camera images to produce 1 higher quality image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailablePhotoFileTypes">
      <MemberSignature Language="C#" Value="public AVFoundation.AVFileTypes[] GetAvailablePhotoFileTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVFileTypes[] GetAvailablePhotoFileTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.GetAvailablePhotoFileTypes" />
      <MemberSignature Language="F#" Value="member this.GetAvailablePhotoFileTypes : AVFoundation.AVFileTypes[]" Usage="AVFoundation.AVCapturePhotoOutput.GetAvailablePhotoFileTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVFileTypes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableRawPhotoFileTypes">
      <MemberSignature Language="C#" Value="public AVFoundation.AVFileTypes[] GetAvailableRawPhotoFileTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype AVFoundation.AVFileTypes[] GetAvailableRawPhotoFileTypes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.GetAvailableRawPhotoFileTypes" />
      <MemberSignature Language="F#" Value="member this.GetAvailableRawPhotoFileTypes : AVFoundation.AVFileTypes[]" Usage="AVFoundation.AVCapturePhotoOutput.GetAvailableRawPhotoFileTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVFileTypes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDngPhotoDataRepresentation">
      <MemberSignature Language="C#" Value="public static Foundation.NSData GetDngPhotoDataRepresentation (CoreMedia.CMSampleBuffer rawSampleBuffer, CoreMedia.CMSampleBuffer previewPhotoSampleBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetDngPhotoDataRepresentation(class CoreMedia.CMSampleBuffer rawSampleBuffer, class CoreMedia.CMSampleBuffer previewPhotoSampleBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.GetDngPhotoDataRepresentation(CoreMedia.CMSampleBuffer,CoreMedia.CMSampleBuffer)" />
      <MemberSignature Language="F#" Value="static member GetDngPhotoDataRepresentation : CoreMedia.CMSampleBuffer * CoreMedia.CMSampleBuffer -&gt; Foundation.NSData" Usage="AVFoundation.AVCapturePhotoOutput.GetDngPhotoDataRepresentation (rawSampleBuffer, previewPhotoSampleBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("DNGPhotoDataRepresentationForRawSampleBuffer:previewPhotoSampleBuffer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="previewPhotoSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
      </Parameters>
      <Docs>
        <param name="rawSampleBuffer">To be added.</param>
        <param name="previewPhotoSampleBuffer">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Returns DNG data for the captured RAW photo in <paramref name="rawSampleBuffer" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJpegPhotoDataRepresentation">
      <MemberSignature Language="C#" Value="public static Foundation.NSData GetJpegPhotoDataRepresentation (CoreMedia.CMSampleBuffer JPEGSampleBuffer, CoreMedia.CMSampleBuffer previewPhotoSampleBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetJpegPhotoDataRepresentation(class CoreMedia.CMSampleBuffer JPEGSampleBuffer, class CoreMedia.CMSampleBuffer previewPhotoSampleBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.GetJpegPhotoDataRepresentation(CoreMedia.CMSampleBuffer,CoreMedia.CMSampleBuffer)" />
      <MemberSignature Language="F#" Value="static member GetJpegPhotoDataRepresentation : CoreMedia.CMSampleBuffer * CoreMedia.CMSampleBuffer -&gt; Foundation.NSData" Usage="AVFoundation.AVCapturePhotoOutput.GetJpegPhotoDataRepresentation (JPEGSampleBuffer, previewPhotoSampleBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("JPEGPhotoDataRepresentationForJPEGSampleBuffer:previewPhotoSampleBuffer:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="JPEGSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
        <Parameter Name="previewPhotoSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
      </Parameters>
      <Docs>
        <param name="JPEGSampleBuffer">To be added.</param>
        <param name="previewPhotoSampleBuffer">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Returns a JPEG representation of the data in <paramref name="previewPhotoSampleBuffer" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPhotoCodecTypesForFileType">
      <MemberSignature Language="C#" Value="public AVFoundation.AVVideoCodecType[] GetSupportedPhotoCodecTypesForFileType (string fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AVFoundation.AVVideoCodecType[] GetSupportedPhotoCodecTypesForFileType(string fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.GetSupportedPhotoCodecTypesForFileType(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetSupportedPhotoCodecTypesForFileType : string -&gt; AVFoundation.AVVideoCodecType[]" Usage="aVCapturePhotoOutput.GetSupportedPhotoCodecTypesForFileType fileType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVVideoCodecType[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPhotoPixelFormatTypesForFileType">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] GetSupportedPhotoPixelFormatTypesForFileType (string fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSNumber[] GetSupportedPhotoPixelFormatTypesForFileType(string fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.GetSupportedPhotoPixelFormatTypesForFileType(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedPhotoPixelFormatTypesForFileType : string -&gt; Foundation.NSNumber[]&#xA;override this.GetSupportedPhotoPixelFormatTypesForFileType : string -&gt; Foundation.NSNumber[]" Usage="aVCapturePhotoOutput.GetSupportedPhotoPixelFormatTypesForFileType fileType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("supportedPhotoPixelFormatTypesForFileType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedRawPhotoPixelFormatTypesForFileType">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] GetSupportedRawPhotoPixelFormatTypesForFileType (string fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSNumber[] GetSupportedRawPhotoPixelFormatTypesForFileType(string fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.GetSupportedRawPhotoPixelFormatTypesForFileType(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedRawPhotoPixelFormatTypesForFileType : string -&gt; Foundation.NSNumber[]&#xA;override this.GetSupportedRawPhotoPixelFormatTypesForFileType : string -&gt; Foundation.NSNumber[]" Usage="aVCapturePhotoOutput.GetSupportedRawPhotoPixelFormatTypesForFileType fileType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("supportedRawPhotoPixelFormatTypesForFileType:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlashScene">
      <MemberSignature Language="C#" Value="public virtual bool IsFlashScene { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFlashScene" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsFlashScene" />
      <MemberSignature Language="F#" Value="member this.IsFlashScene : bool" Usage="AVFoundation.AVCapturePhotoOutput.IsFlashScene" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isFlashScene")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether flash is needed for a shot.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighResolutionCaptureEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsHighResolutionCaptureEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighResolutionCaptureEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsHighResolutionCaptureEnabled" />
      <MemberSignature Language="F#" Value="member this.IsHighResolutionCaptureEnabled : bool with get, set" Usage="AVFoundation.AVCapturePhotoOutput.IsHighResolutionCaptureEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isHighResolutionCaptureEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setHighResolutionCaptureEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether high resolution capture is enabled.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLensStabilizationDuringBracketedCaptureSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsLensStabilizationDuringBracketedCaptureSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLensStabilizationDuringBracketedCaptureSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsLensStabilizationDuringBracketedCaptureSupported" />
      <MemberSignature Language="F#" Value="member this.IsLensStabilizationDuringBracketedCaptureSupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.IsLensStabilizationDuringBracketedCaptureSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLensStabilizationDuringBracketedCaptureSupported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether stabilization is supported while capturing bracketed images.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLivePhotoAutoTrimmingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsLivePhotoAutoTrimmingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLivePhotoAutoTrimmingEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsLivePhotoAutoTrimmingEnabled" />
      <MemberSignature Language="F#" Value="member this.IsLivePhotoAutoTrimmingEnabled : bool with get, set" Usage="AVFoundation.AVCapturePhotoOutput.IsLivePhotoAutoTrimmingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLivePhotoAutoTrimmingEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setLivePhotoAutoTrimmingEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether to trim Live Photos to reduce movement.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLivePhotoCaptureEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsLivePhotoCaptureEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLivePhotoCaptureEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsLivePhotoCaptureEnabled" />
      <MemberSignature Language="F#" Value="member this.IsLivePhotoCaptureEnabled : bool with get, set" Usage="AVFoundation.AVCapturePhotoOutput.IsLivePhotoCaptureEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLivePhotoCaptureEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setLivePhotoCaptureEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether Live Photo capture is enabled.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLivePhotoCaptureSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsLivePhotoCaptureSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLivePhotoCaptureSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsLivePhotoCaptureSupported" />
      <MemberSignature Language="F#" Value="member this.IsLivePhotoCaptureSupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.IsLivePhotoCaptureSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLivePhotoCaptureSupported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether Live Photo capture is supported.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLivePhotoCaptureSuspended">
      <MemberSignature Language="C#" Value="public virtual bool IsLivePhotoCaptureSuspended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLivePhotoCaptureSuspended" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsLivePhotoCaptureSuspended" />
      <MemberSignature Language="F#" Value="member this.IsLivePhotoCaptureSuspended : bool with get, set" Usage="AVFoundation.AVCapturePhotoOutput.IsLivePhotoCaptureSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isLivePhotoCaptureSuspended")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setLivePhotoCaptureSuspended:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that controls whether live photo capture is suspended.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStillImageStabilizationScene">
      <MemberSignature Language="C#" Value="public virtual bool IsStillImageStabilizationScene { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStillImageStabilizationScene" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsStillImageStabilizationScene" />
      <MemberSignature Language="F#" Value="member this.IsStillImageStabilizationScene : bool" Usage="AVFoundation.AVCapturePhotoOutput.IsStillImageStabilizationScene" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isStillImageStabilizationScene")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether the current scene requires stabilization.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStillImageStabilizationSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsStillImageStabilizationSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStillImageStabilizationSupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.IsStillImageStabilizationSupported" />
      <MemberSignature Language="F#" Value="member this.IsStillImageStabilizationSupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.IsStillImageStabilizationSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isStillImageStabilizationSupported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that tells whether image stabilization is supported for still images.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBracketedCapturePhotoCount">
      <MemberSignature Language="C#" Value="public virtual nuint MaxBracketedCapturePhotoCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint MaxBracketedCapturePhotoCount" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.MaxBracketedCapturePhotoCount" />
      <MemberSignature Language="F#" Value="member this.MaxBracketedCapturePhotoCount : nuint" Usage="AVFoundation.AVCapturePhotoOutput.MaxBracketedCapturePhotoCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("maxBracketedCapturePhotoCount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum number of image brackets supported for a bracketed image.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhotoSettingsForSceneMonitoring">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCapturePhotoSettings PhotoSettingsForSceneMonitoring { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCapturePhotoSettings PhotoSettingsForSceneMonitoring" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.PhotoSettingsForSceneMonitoring" />
      <MemberSignature Language="F#" Value="member this.PhotoSettingsForSceneMonitoring : AVFoundation.AVCapturePhotoSettings with get, set" Usage="AVFoundation.AVCapturePhotoOutput.PhotoSettingsForSceneMonitoring" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("photoSettingsForSceneMonitoring", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setPhotoSettingsForSceneMonitoring:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCapturePhotoSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a settings object for controlling how flash and stabilization modes are detected by the photo output.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PortraitEffectsMatteDeliveryEnabled">
      <MemberSignature Language="C#" Value="public virtual bool PortraitEffectsMatteDeliveryEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PortraitEffectsMatteDeliveryEnabled" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.PortraitEffectsMatteDeliveryEnabled" />
      <MemberSignature Language="F#" Value="member this.PortraitEffectsMatteDeliveryEnabled : bool with get, set" Usage="AVFoundation.AVCapturePhotoOutput.PortraitEffectsMatteDeliveryEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isPortraitEffectsMatteDeliveryEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setPortraitEffectsMatteDeliveryEnabled:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PortraitEffectsMatteDeliverySupported">
      <MemberSignature Language="C#" Value="public virtual bool PortraitEffectsMatteDeliverySupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PortraitEffectsMatteDeliverySupported" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.PortraitEffectsMatteDeliverySupported" />
      <MemberSignature Language="F#" Value="member this.PortraitEffectsMatteDeliverySupported : bool" Usage="AVFoundation.AVCapturePhotoOutput.PortraitEffectsMatteDeliverySupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isPortraitEffectsMatteDeliverySupported")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreparedPhotoSettings">
      <MemberSignature Language="C#" Value="public virtual AVFoundation.AVCapturePhotoSettings[] PreparedPhotoSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AVFoundation.AVCapturePhotoSettings[] PreparedPhotoSettings" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.PreparedPhotoSettings" />
      <MemberSignature Language="F#" Value="member this.PreparedPhotoSettings : AVFoundation.AVCapturePhotoSettings[]" Usage="AVFoundation.AVCapturePhotoOutput.PreparedPhotoSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("preparedPhotoSettingsArray")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AVFoundation.AVCapturePhotoSettings[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the array of photo settings for which capture resources have been prepared.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreparedPhotoSettings">
      <MemberSignature Language="C#" Value="public virtual void SetPreparedPhotoSettings (AVFoundation.AVCapturePhotoSettings[] preparedPhotoSettingsArray, Action&lt;bool,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPreparedPhotoSettings(class AVFoundation.AVCapturePhotoSettings[] preparedPhotoSettingsArray, class System.Action`2&lt;bool, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.SetPreparedPhotoSettings(AVFoundation.AVCapturePhotoSettings[],System.Action{System.Boolean,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SetPreparedPhotoSettings : AVFoundation.AVCapturePhotoSettings[] * Action&lt;bool, Foundation.NSError&gt; -&gt; unit&#xA;override this.SetPreparedPhotoSettings : AVFoundation.AVCapturePhotoSettings[] * Action&lt;bool, Foundation.NSError&gt; -&gt; unit" Usage="aVCapturePhotoOutput.SetPreparedPhotoSettings (preparedPhotoSettingsArray, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setPreparedPhotoSettingsArray:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparedPhotoSettingsArray" Type="AVFoundation.AVCapturePhotoSettings[]" />
        <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V5))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="preparedPhotoSettingsArray">To be added.</param>
        <param name="completionHandler">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Prepares the photo capture output for future requests with the provided photo settings, and runs a completion handler when it is finished.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreparedPhotoSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Tuple&lt;bool,Foundation.NSError&gt;&gt; SetPreparedPhotoSettingsAsync (AVFoundation.AVCapturePhotoSettings[] preparedPhotoSettingsArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Tuple`2&lt;bool, class Foundation.NSError&gt;&gt; SetPreparedPhotoSettingsAsync(class AVFoundation.AVCapturePhotoSettings[] preparedPhotoSettingsArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:AVFoundation.AVCapturePhotoOutput.SetPreparedPhotoSettingsAsync(AVFoundation.AVCapturePhotoSettings[])" />
      <MemberSignature Language="F#" Value="abstract member SetPreparedPhotoSettingsAsync : AVFoundation.AVCapturePhotoSettings[] -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;&#xA;override this.SetPreparedPhotoSettingsAsync : AVFoundation.AVCapturePhotoSettings[] -&gt; System.Threading.Tasks.Task&lt;bool * Foundation.NSError&gt;" Usage="aVCapturePhotoOutput.SetPreparedPhotoSettingsAsync preparedPhotoSettingsArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Tuple&lt;System.Boolean,Foundation.NSError&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparedPhotoSettingsArray" Type="AVFoundation.AVCapturePhotoSettings[]" />
      </Parameters>
      <Docs>
        <param name="preparedPhotoSettingsArray">To be added.</param>
        <summary>Prepares the photo capture output for future requests with the provided photo settings, and runs a completion handler when it is finished.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous SetPreparedPhotoSettings operation.  The value of the TResult parameter is of type System.Action&lt;System.Boolean,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para copied="true">The SetPreparedPhotoSettingsAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedFlashModes">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSNumber[] SupportedFlashModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSNumber[] SupportedFlashModes" />
      <MemberSignature Language="DocId" Value="P:AVFoundation.AVCapturePhotoOutput.SupportedFlashModes" />
      <MemberSignature Language="F#" Value="member this.SupportedFlashModes : Foundation.NSNumber[]" Usage="AVFoundation.AVCapturePhotoOutput.SupportedFlashModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("supportedFlashModes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the supported flash modes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
