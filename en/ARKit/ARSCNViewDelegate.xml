<Type Name="ARSCNViewDelegate" FullName="ARKit.ARSCNViewDelegate">
  <TypeSignature Language="C#" Value="public class ARSCNViewDelegate : Foundation.NSObject, ARKit.IARSCNViewDelegate, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ARSCNViewDelegate extends Foundation.NSObject implements class ARKit.IARSCNViewDelegate, class ARKit.IARSessionObserver, class ObjCRuntime.INativeObject, class SceneKit.ISCNSceneRendererDelegate, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ARKit.ARSCNViewDelegate" />
  <TypeSignature Language="F#" Value="type ARSCNViewDelegate = class&#xA;    inherit NSObject&#xA;    interface IARSCNViewDelegate&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface IARSessionObserver&#xA;    interface ISCNSceneRendererDelegate" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ARKit.IARSCNViewDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ARKit.IARSessionObserver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>SceneKit.ISCNSceneRendererDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Model</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("ARSCNViewDelegate", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Delegate object for <see cref="T:ARKit.ARSCNView" /> objects.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ARSCNViewDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, initializes a new instance of this class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ARSCNViewDelegate (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new ARKit.ARSCNViewDelegate : Foundation.NSObjectFlag -&gt; ARKit.ARSCNViewDelegate" Usage="new ARKit.ARSCNViewDelegate t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal ARSCNViewDelegate (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new ARKit.ARSCNViewDelegate : nativeint -&gt; ARKit.ARSCNViewDelegate" Usage="new ARKit.ARSCNViewDelegate handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CameraDidChangeTrackingState">
      <MemberSignature Language="C#" Value="public virtual void CameraDidChangeTrackingState (ARKit.ARSession session, ARKit.ARCamera camera);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CameraDidChangeTrackingState(class ARKit.ARSession session, class ARKit.ARCamera camera) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.CameraDidChangeTrackingState(ARKit.ARSession,ARKit.ARCamera)" />
      <MemberSignature Language="F#" Value="abstract member CameraDidChangeTrackingState : ARKit.ARSession * ARKit.ARCamera -&gt; unit&#xA;override this.CameraDidChangeTrackingState : ARKit.ARSession * ARKit.ARCamera -&gt; unit" Usage="aRSCNViewDelegate.CameraDidChangeTrackingState (session, camera)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("session:cameraDidChangeTrackingState:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="ARKit.ARSession" />
        <Parameter Name="camera" Type="ARKit.ARCamera" />
      </Parameters>
      <Docs>
        <param name="session">The session that is supplying the information for the event.</param>
        <param name="camera">The camera whose tracking state changed.</param>
        <summary>Developers may override this method to react to changes in tracking quality.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidAddNode">
      <MemberSignature Language="C#" Value="public virtual void DidAddNode (SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNNode node, ARKit.ARAnchor anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidAddNode(class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNNode node, class ARKit.ARAnchor anchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidAddNode(SceneKit.ISCNSceneRenderer,SceneKit.SCNNode,ARKit.ARAnchor)" />
      <MemberSignature Language="F#" Value="abstract member DidAddNode : SceneKit.ISCNSceneRenderer * SceneKit.SCNNode * ARKit.ARAnchor -&gt; unit&#xA;override this.DidAddNode : SceneKit.ISCNSceneRenderer * SceneKit.SCNNode * ARKit.ARAnchor -&gt; unit" Usage="aRSCNViewDelegate.DidAddNode (renderer, node, anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:didAddNode:forAnchor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="node" Type="SceneKit.SCNNode" />
        <Parameter Name="anchor" Type="ARKit.ARAnchor" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the event.</param>
        <param name="node">The node that was added.</param>
        <param name="anchor">The anchor for the node that was added.</param>
        <summary>Developers may override this method to react to the adding of a <see cref="T:SceneKit.SCNNode" /> that corresponds to a new <see cref="T:ARKit.ARAnchor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidApplyAnimations">
      <MemberSignature Language="C#" Value="public virtual void DidApplyAnimations (SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidApplyAnimations(class SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidApplyAnimations(SceneKit.ISCNSceneRenderer,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member DidApplyAnimations : SceneKit.ISCNSceneRenderer * double -&gt; unit&#xA;override this.DidApplyAnimations : SceneKit.ISCNSceneRenderer * double -&gt; unit" Usage="aRSCNViewDelegate.DidApplyAnimations (renderer, timeInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:didApplyAnimationsAtTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="timeInSeconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="timeInSeconds">The current system time.</param>
        <summary>Developers may override this method that is called shortly after animations are applied .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidApplyConstraints">
      <MemberSignature Language="C#" Value="public virtual void DidApplyConstraints (SceneKit.ISCNSceneRenderer renderer, double atTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidApplyConstraints(class SceneKit.ISCNSceneRenderer renderer, float64 atTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidApplyConstraints(SceneKit.ISCNSceneRenderer,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member DidApplyConstraints : SceneKit.ISCNSceneRenderer * double -&gt; unit&#xA;override this.DidApplyConstraints : SceneKit.ISCNSceneRenderer * double -&gt; unit" Usage="aRSCNViewDelegate.DidApplyConstraints (renderer, atTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:didApplyConstraintsAtTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 4, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 13, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="atTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="atTime">The system time at which the the constraint was applied.</param>
        <summary>Developers may override this method that is called shortly after display constraints have been applied.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFail">
      <MemberSignature Language="C#" Value="public virtual void DidFail (ARKit.ARSession session, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidFail(class ARKit.ARSession session, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidFail(ARKit.ARSession,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member DidFail : ARKit.ARSession * Foundation.NSError -&gt; unit&#xA;override this.DidFail : ARKit.ARSession * Foundation.NSError -&gt; unit" Usage="aRSCNViewDelegate.DidFail (session, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("session:didFailWithError:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="ARKit.ARSession" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="session">The session that is supplying the information for the event.</param>
        <param name="error">The error that occurred.</param>
        <summary>Developers may override this method to react to failures in the augmented-reality processing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidOutputAudioSampleBuffer">
      <MemberSignature Language="C#" Value="public virtual void DidOutputAudioSampleBuffer (ARKit.ARSession session, CoreMedia.CMSampleBuffer audioSampleBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidOutputAudioSampleBuffer(class ARKit.ARSession session, class CoreMedia.CMSampleBuffer audioSampleBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidOutputAudioSampleBuffer(ARKit.ARSession,CoreMedia.CMSampleBuffer)" />
      <MemberSignature Language="F#" Value="abstract member DidOutputAudioSampleBuffer : ARKit.ARSession * CoreMedia.CMSampleBuffer -&gt; unit&#xA;override this.DidOutputAudioSampleBuffer : ARKit.ARSession * CoreMedia.CMSampleBuffer -&gt; unit" Usage="aRSCNViewDelegate.DidOutputAudioSampleBuffer (session, audioSampleBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("session:didOutputAudioSampleBuffer:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="ARKit.ARSession" />
        <Parameter Name="audioSampleBuffer" Type="CoreMedia.CMSampleBuffer" />
      </Parameters>
      <Docs>
        <param name="session">The session that is supplying the information for the event.</param>
        <param name="audioSampleBuffer">The audio buffer that was played.</param>
        <summary>Developers may override this method that is called shortly after an audio buffer has been played.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRemoveNode">
      <MemberSignature Language="C#" Value="public virtual void DidRemoveNode (SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNNode node, ARKit.ARAnchor anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRemoveNode(class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNNode node, class ARKit.ARAnchor anchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidRemoveNode(SceneKit.ISCNSceneRenderer,SceneKit.SCNNode,ARKit.ARAnchor)" />
      <MemberSignature Language="F#" Value="abstract member DidRemoveNode : SceneKit.ISCNSceneRenderer * SceneKit.SCNNode * ARKit.ARAnchor -&gt; unit&#xA;override this.DidRemoveNode : SceneKit.ISCNSceneRenderer * SceneKit.SCNNode * ARKit.ARAnchor -&gt; unit" Usage="aRSCNViewDelegate.DidRemoveNode (renderer, node, anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:didRemoveNode:forAnchor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="node" Type="SceneKit.SCNNode" />
        <Parameter Name="anchor" Type="ARKit.ARAnchor" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="node">The node that was removed.</param>
        <param name="anchor">The anchor for the node that was removed.</param>
        <summary>Developers may override this method to react to the removal of <paramref name="node" />, which was removed after <paramref name="anchor" /> was removed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRenderScene">
      <MemberSignature Language="C#" Value="public virtual void DidRenderScene (SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNScene scene, double timeInSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRenderScene(class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNScene scene, float64 timeInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidRenderScene(SceneKit.ISCNSceneRenderer,SceneKit.SCNScene,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member DidRenderScene : SceneKit.ISCNSceneRenderer * SceneKit.SCNScene * double -&gt; unit&#xA;override this.DidRenderScene : SceneKit.ISCNSceneRenderer * SceneKit.SCNScene * double -&gt; unit" Usage="aRSCNViewDelegate.DidRenderScene (renderer, scene, timeInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:didRenderScene:atTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="scene" Type="SceneKit.SCNScene" />
        <Parameter Name="timeInSeconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="scene">The scene that was rendered.</param>
        <param name="timeInSeconds">The current system time.</param>
        <summary>This method is called shortly after the scene has been rendered.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidSimulatePhysics">
      <MemberSignature Language="C#" Value="public virtual void DidSimulatePhysics (SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidSimulatePhysics(class SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidSimulatePhysics(SceneKit.ISCNSceneRenderer,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member DidSimulatePhysics : SceneKit.ISCNSceneRenderer * double -&gt; unit&#xA;override this.DidSimulatePhysics : SceneKit.ISCNSceneRenderer * double -&gt; unit" Usage="aRSCNViewDelegate.DidSimulatePhysics (renderer, timeInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:didSimulatePhysicsAtTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="timeInSeconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="timeInSeconds">The current system time.</param>
        <summary>This method is called shortly after physics have been simulated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdateNode">
      <MemberSignature Language="C#" Value="public virtual void DidUpdateNode (SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNNode node, ARKit.ARAnchor anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidUpdateNode(class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNNode node, class ARKit.ARAnchor anchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.DidUpdateNode(SceneKit.ISCNSceneRenderer,SceneKit.SCNNode,ARKit.ARAnchor)" />
      <MemberSignature Language="F#" Value="abstract member DidUpdateNode : SceneKit.ISCNSceneRenderer * SceneKit.SCNNode * ARKit.ARAnchor -&gt; unit&#xA;override this.DidUpdateNode : SceneKit.ISCNSceneRenderer * SceneKit.SCNNode * ARKit.ARAnchor -&gt; unit" Usage="aRSCNViewDelegate.DidUpdateNode (renderer, node, anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:didUpdateNode:forAnchor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="node" Type="SceneKit.SCNNode" />
        <Parameter Name="anchor" Type="ARKit.ARAnchor" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="node">The node that was updated.</param>
        <param name="anchor">The anchor for the node that was updated.</param>
        <summary>This method is called shortly after <paramref name="node" /> has been updated to reflect the current state of <paramref name="anchor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNode">
      <MemberSignature Language="C#" Value="public virtual SceneKit.SCNNode GetNode (SceneKit.ISCNSceneRenderer renderer, ARKit.ARAnchor anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class SceneKit.SCNNode GetNode(class SceneKit.ISCNSceneRenderer renderer, class ARKit.ARAnchor anchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.GetNode(SceneKit.ISCNSceneRenderer,ARKit.ARAnchor)" />
      <MemberSignature Language="F#" Value="abstract member GetNode : SceneKit.ISCNSceneRenderer * ARKit.ARAnchor -&gt; SceneKit.SCNNode&#xA;override this.GetNode : SceneKit.ISCNSceneRenderer * ARKit.ARAnchor -&gt; SceneKit.SCNNode" Usage="aRSCNViewDelegate.GetNode (renderer, anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:nodeForAnchor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SceneKit.SCNNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="anchor" Type="ARKit.ARAnchor" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="anchor">The anchor for the node to get.</param>
        <summary>Retrieves the <see cref="T:SceneKit.SCNNode" /> corresponding to the specified <paramref name="anchor" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterruptionEnded">
      <MemberSignature Language="C#" Value="public virtual void InterruptionEnded (ARKit.ARSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InterruptionEnded(class ARKit.ARSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.InterruptionEnded(ARKit.ARSession)" />
      <MemberSignature Language="F#" Value="abstract member InterruptionEnded : ARKit.ARSession -&gt; unit&#xA;override this.InterruptionEnded : ARKit.ARSession -&gt; unit" Usage="aRSCNViewDelegate.InterruptionEnded session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("sessionInterruptionEnded:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="ARKit.ARSession" />
      </Parameters>
      <Docs>
        <param name="session">The session that is supplying the information for the event.</param>
        <summary>Developers may override this method to begin frame processing and device tracking after an interruption.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldAttemptRelocalization">
      <MemberSignature Language="C#" Value="public virtual bool ShouldAttemptRelocalization (ARKit.ARSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldAttemptRelocalization(class ARKit.ARSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.ShouldAttemptRelocalization(ARKit.ARSession)" />
      <MemberSignature Language="F#" Value="abstract member ShouldAttemptRelocalization : ARKit.ARSession -&gt; bool&#xA;override this.ShouldAttemptRelocalization : ARKit.ARSession -&gt; bool" Usage="aRSCNViewDelegate.ShouldAttemptRelocalization session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("sessionShouldAttemptRelocalization:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="ARKit.ARSession" />
      </Parameters>
      <Docs>
        <param name="session">The session in question.</param>
        <summary>Returns a Boolean value that tells whether the session should attempt to reorient after an interruption.</summary>
        <returns>A Boolean value that tells whether the session should attempt to reorient after an interruption.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.Update(SceneKit.ISCNSceneRenderer,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member Update : SceneKit.ISCNSceneRenderer * double -&gt; unit&#xA;override this.Update : SceneKit.ISCNSceneRenderer * double -&gt; unit" Usage="aRSCNViewDelegate.Update (renderer, timeInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:updateAtTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="timeInSeconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="timeInSeconds">The current system time.</param>
        <summary>Developers may override this method to perform processing prior to any actions, animations, or physics simulations.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WasInterrupted">
      <MemberSignature Language="C#" Value="public virtual void WasInterrupted (ARKit.ARSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WasInterrupted(class ARKit.ARSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.WasInterrupted(ARKit.ARSession)" />
      <MemberSignature Language="F#" Value="abstract member WasInterrupted : ARKit.ARSession -&gt; unit&#xA;override this.WasInterrupted : ARKit.ARSession -&gt; unit" Usage="aRSCNViewDelegate.WasInterrupted session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("sessionWasInterrupted:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="ARKit.ARSession" />
      </Parameters>
      <Docs>
        <param name="session">The session that is supplying the information for the event.</param>
        <summary>Developers may override this method to stop frame processing and device tracking when an interruption occurs.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillRenderScene">
      <MemberSignature Language="C#" Value="public virtual void WillRenderScene (SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNScene scene, double timeInSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillRenderScene(class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNScene scene, float64 timeInSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.WillRenderScene(SceneKit.ISCNSceneRenderer,SceneKit.SCNScene,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member WillRenderScene : SceneKit.ISCNSceneRenderer * SceneKit.SCNScene * double -&gt; unit&#xA;override this.WillRenderScene : SceneKit.ISCNSceneRenderer * SceneKit.SCNScene * double -&gt; unit" Usage="aRSCNViewDelegate.WillRenderScene (renderer, scene, timeInSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:willRenderScene:atTime:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 8, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="scene" Type="SceneKit.SCNScene" />
        <Parameter Name="timeInSeconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="scene">The scene that will be rendered.</param>
        <param name="timeInSeconds">The current system time.</param>
        <summary>Developers may override this method to do processing immediately prior to the rendering of the scene.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillUpdateNode">
      <MemberSignature Language="C#" Value="public virtual void WillUpdateNode (SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNNode node, ARKit.ARAnchor anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WillUpdateNode(class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNNode node, class ARKit.ARAnchor anchor) cil managed" />
      <MemberSignature Language="DocId" Value="M:ARKit.ARSCNViewDelegate.WillUpdateNode(SceneKit.ISCNSceneRenderer,SceneKit.SCNNode,ARKit.ARAnchor)" />
      <MemberSignature Language="F#" Value="abstract member WillUpdateNode : SceneKit.ISCNSceneRenderer * SceneKit.SCNNode * ARKit.ARAnchor -&gt; unit&#xA;override this.WillUpdateNode : SceneKit.ISCNSceneRenderer * SceneKit.SCNNode * ARKit.ARAnchor -&gt; unit" Usage="aRSCNViewDelegate.WillUpdateNode (renderer, node, anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("renderer:willUpdateNode:forAnchor:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SceneKit.ISCNSceneRenderer" />
        <Parameter Name="node" Type="SceneKit.SCNNode" />
        <Parameter Name="anchor" Type="ARKit.ARAnchor" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer for the scene.</param>
        <param name="node">The node that will be updated.</param>
        <param name="anchor">The anchor for the node that will be updated.</param>
        <summary>This method is called shortly before the properties of <paramref name="node" /> are updated to reflect the state of <paramref name="anchor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
