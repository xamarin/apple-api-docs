<Type Name="ARHitTestResultType" FullName="ARKit.ARHitTestResultType">
  <TypeSignature Language="C#" Value="public enum ARHitTestResultType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ARHitTestResultType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:ARKit.ARHitTestResultType" />
  <TypeSignature Language="F#" Value="type ARHitTestResultType = " />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Native</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates the kinds of objects detected by the <see cref="M:ARKit.ARFrame.HitTest(CoreGraphics.CGPoint,ARKit.ARHitTestResultType)" /> method.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EstimatedHorizontalPlane">
      <MemberSignature Language="C#" Value="EstimatedHorizontalPlane" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ARKit.ARHitTestResultType EstimatedHorizontalPlane = unsigned int64(2)" />
      <MemberSignature Language="DocId" Value="F:ARKit.ARHitTestResultType.EstimatedHorizontalPlane" />
      <MemberSignature Language="F#" Value="EstimatedHorizontalPlane = 2" Usage="ARKit.ARHitTestResultType.EstimatedHorizontalPlane" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ARKit.ARHitTestResultType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>A real-world horizontal plane detected by image analysis.</summary>
      </Docs>
    </Member>
    <Member MemberName="EstimatedVerticalPlane">
      <MemberSignature Language="C#" Value="EstimatedVerticalPlane" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ARKit.ARHitTestResultType EstimatedVerticalPlane = unsigned int64(4)" />
      <MemberSignature Language="DocId" Value="F:ARKit.ARHitTestResultType.EstimatedVerticalPlane" />
      <MemberSignature Language="F#" Value="EstimatedVerticalPlane = 4" Usage="ARKit.ARHitTestResultType.EstimatedVerticalPlane" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ARKit.ARHitTestResultType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>A real-world vertical plane detected by image analysis.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExistingPlane">
      <MemberSignature Language="C#" Value="ExistingPlane" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ARKit.ARHitTestResultType ExistingPlane = unsigned int64(8)" />
      <MemberSignature Language="DocId" Value="F:ARKit.ARHitTestResultType.ExistingPlane" />
      <MemberSignature Language="F#" Value="ExistingPlane = 8" Usage="ARKit.ARHitTestResultType.ExistingPlane" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ARKit.ARHitTestResultType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>An existing plane in the scene, detected without constraints on the plane's size.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExistingPlaneUsingExtent">
      <MemberSignature Language="C#" Value="ExistingPlaneUsingExtent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ARKit.ARHitTestResultType ExistingPlaneUsingExtent = unsigned int64(16)" />
      <MemberSignature Language="DocId" Value="F:ARKit.ARHitTestResultType.ExistingPlaneUsingExtent" />
      <MemberSignature Language="F#" Value="ExistingPlaneUsingExtent = 16" Usage="ARKit.ARHitTestResultType.ExistingPlaneUsingExtent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ARKit.ARHitTestResultType</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>An existing plane in the scene, detected only if the point is within the plane's extent.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExistingPlaneUsingGeometry">
      <MemberSignature Language="C#" Value="ExistingPlaneUsingGeometry" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ARKit.ARHitTestResultType ExistingPlaneUsingGeometry = unsigned int64(32)" />
      <MemberSignature Language="DocId" Value="F:ARKit.ARHitTestResultType.ExistingPlaneUsingGeometry" />
      <MemberSignature Language="F#" Value="ExistingPlaneUsingGeometry = 32" Usage="ARKit.ARHitTestResultType.ExistingPlaneUsingGeometry" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ARKit.ARHitTestResultType</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>An existint plane in the scene, detected if the point is coplanar with the plane's geometry.</summary>
      </Docs>
    </Member>
    <Member MemberName="FeaturePoint">
      <MemberSignature Language="C#" Value="FeaturePoint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ARKit.ARHitTestResultType FeaturePoint = unsigned int64(1)" />
      <MemberSignature Language="DocId" Value="F:ARKit.ARHitTestResultType.FeaturePoint" />
      <MemberSignature Language="F#" Value="FeaturePoint = 1" Usage="ARKit.ARHitTestResultType.FeaturePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ARKit.ARHitTestResultType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A point detected by image processing that appears to be on a continuous surface but does not have an <see cref="T:ARKit.ARAnchor" />.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
