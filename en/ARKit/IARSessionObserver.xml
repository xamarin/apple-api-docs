<Type Name="IARSessionObserver" FullName="ARKit.IARSessionObserver">
  <TypeSignature Language="C#" Value="public interface IARSessionObserver : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IARSessionObserver implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:ARKit.IARSessionObserver" />
  <TypeSignature Language="F#" Value="type IARSessionObserver = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="ARSessionObserver", WrapperType=typeof(ARKit.ARSessionObserverWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidFail", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ARKit.ARSession), typeof(Foundation.NSError) }, Selector="session:didFailWithError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="CameraDidChangeTrackingState", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ARKit.ARSession), typeof(ARKit.ARCamera) }, Selector="session:cameraDidChangeTrackingState:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="WasInterrupted", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ARKit.ARSession) }, Selector="sessionWasInterrupted:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="InterruptionEnded", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ARKit.ARSession) }, Selector="sessionInterruptionEnded:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldAttemptRelocalization", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(ARKit.ARSession) }, ReturnType=typeof(System.Boolean), Selector="sessionShouldAttemptRelocalization:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidOutputAudioSampleBuffer", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(ARKit.ARSession), typeof(CoreMedia.CMSampleBuffer) }, Selector="session:didOutputAudioSampleBuffer:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface defining methods that respond to events in an <see cref="T:ARKit.ARSession" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
