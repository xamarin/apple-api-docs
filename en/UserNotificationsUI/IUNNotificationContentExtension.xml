<Type Name="IUNNotificationContentExtension" FullName="UserNotificationsUI.IUNNotificationContentExtension">
  <TypeSignature Language="C#" Value="public interface IUNNotificationContentExtension : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUNNotificationContentExtension implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:UserNotificationsUI.IUNNotificationContentExtension" />
  <TypeSignature Language="F#" Value="type IUNNotificationContentExtension = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Protocol(Name="UNNotificationContentExtension", WrapperType=typeof(UserNotificationsUI.UNNotificationContentExtensionWrapper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidReceiveNotification", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="didReceiveNotification:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidReceiveNotificationResponse", ParameterBlockProxy=Mono.Cecil.CustomAttributeArgument[], ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="didReceiveNotificationResponse:completionHandler:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PlayMedia", Selector="mediaPlay")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="PauseMedia", Selector="mediaPause")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.UnsafeUnretained, GetterSelector="mediaPlayPauseButtonType", IsProperty=true, IsRequired=false, IsStatic=false, Name="MediaPlayPauseButtonType", PropertyType=typeof(UserNotificationsUI.UNNotificationContentExtensionMediaPlayPauseButtonType), Selector="mediaPlayPauseButtonType")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.UnsafeUnretained, GetterSelector="mediaPlayPauseButtonFrame", IsProperty=true, IsRequired=false, IsStatic=false, Name="MediaPlayPauseButtonFrame", PropertyType=typeof(CoreGraphics.CGRect), Selector="mediaPlayPauseButtonFrame")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Copy, GetterSelector="mediaPlayPauseButtonTintColor", IsProperty=true, IsRequired=false, IsStatic=false, Name="MediaPlayPauseButtonTintColor", PropertyType=typeof(UIKit.UIColor), Selector="mediaPlayPauseButtonTintColor")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.MacOSX, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="DidReceiveNotification", ParameterByRef=new System.Boolean[] { false }, ParameterType=new System.Type[] { typeof(UserNotifications.UNNotification) }, Selector="didReceiveNotification:")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidReceiveNotificationResponse", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(UserNotifications.UNNotificationResponse), typeof(System.Action`1&lt;UserNotificationsUI.UNNotificationContentExtensionResponseOption&gt;) }, Selector="didReceiveNotificationResponse:completionHandler:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface that contains the mandatory methods, if any, for the <see cref="T:UserNotifications.UNNotificationContent" /> protocol, which is required for displaying notification content from a view controller's view with custom UI.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DidReceiveNotification">
      <MemberSignature Language="C#" Value="public void DidReceiveNotification (UserNotifications.UNNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReceiveNotification(class UserNotifications.UNNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:UserNotificationsUI.IUNNotificationContentExtension.DidReceiveNotification(UserNotifications.UNNotification)" />
      <MemberSignature Language="F#" Value="abstract member DidReceiveNotification : UserNotifications.UNNotification -&gt; unit" Usage="iUNNotificationContentExtension.DidReceiveNotification notification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("didReceiveNotification:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notification" Type="UserNotifications.UNNotification" />
      </Parameters>
      <Docs>
        <param name="notification">The notification that was sent.</param>
        <summary>Method that is called when the application is sent a notification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
