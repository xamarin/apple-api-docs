<Type Name="CGRect" FullName="CoreGraphics.CGRect">
  <TypeSignature Language="C#" Value="public struct CGRect : IEquatable&lt;CoreGraphics.CGRect&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CGRect extends System.ValueType implements class System.IEquatable`1&lt;valuetype CoreGraphics.CGRect&gt;" />
  <TypeSignature Language="DocId" Value="T:CoreGraphics.CGRect" />
  <TypeSignature Language="F#" Value="type CGRect = struct" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;CoreGraphics.CGRect&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Structure defining a rectangle in terms of location and size.</summary>
    <remarks>
      <para>
	CGRects structures define a rectangle using floating point
	values of type <see cref="T:System.nfloat" /> and are defined
	using an initial location (X,Y) as well as a size (Width,
	Height). 
      </para>
      <para>
	You can save the CGRect into an <see cref="T:Foundation.NSDictionary" /> by calling the
	<see cref="M:CoreGraphics.CGRect.ToDictionary" />
	method.   You can also get an CGRect out a serialized
	dictionary by using the <see cref="M:CoreGraphics.CGRect.TryParse(Foundation.NSDictionary,CoreGraphics.CGRect@)" /> method. 
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGRect (CoreGraphics.CGPoint location, CoreGraphics.CGSize size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CoreGraphics.CGPoint location, valuetype CoreGraphics.CGSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.#ctor(CoreGraphics.CGPoint,CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGRect : CoreGraphics.CGPoint * CoreGraphics.CGSize -&gt; CoreGraphics.CGRect" Usage="new CoreGraphics.CGRect (location, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="CoreGraphics.CGPoint" />
        <Parameter Name="size" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="location">Rectangle location.</param>
        <param name="size">Dimensions for the rectangle.</param>
        <summary>Initializes a CGRect structure from a rectangle and a size parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGRect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGRect : double * double * double * double -&gt; CoreGraphics.CGRect" Usage="new CoreGraphics.CGRect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">X component for the rectangle.</param>
        <param name="y">Y component for the rectangle.</param>
        <param name="width">Width component for the rectangle.</param>
        <param name="height">Height component for the rectangle.</param>
        <summary>Initializes a CGRect structure from a double
	precision floating point values, with potential truncation on
	32 bit systems.</summary>
        <remarks>
          <para>
	    This initializes the structure with the given parameters.
	    On 32-bit systems, the values will be explicitly cast to
	    single precision floating point values.
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGRect (nfloat x, nfloat y, nfloat width, nfloat height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.nfloat x, valuetype System.nfloat y, valuetype System.nfloat width, valuetype System.nfloat height) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.#ctor(System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGRect : nfloat * nfloat * nfloat * nfloat -&gt; CoreGraphics.CGRect" Usage="new CoreGraphics.CGRect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
        <Parameter Name="width" Type="System.nfloat" />
        <Parameter Name="height" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="x">X component for the rectangle.</param>
        <param name="y">Y component for the rectangle.</param>
        <param name="width">Width component for the rectangle.</param>
        <param name="height">Height component for the rectangle.</param>
        <summary>Initializes a CGRect structure from native floating
	point values.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGRect (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.#ctor(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGRect : single * single * single * single -&gt; CoreGraphics.CGRect" Usage="new CoreGraphics.CGRect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>Constructs a rectangle with the specified dimensions.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public nfloat Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Bottom" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Bottom" />
      <MemberSignature Language="F#" Value="member this.Bottom : nfloat" Usage="CoreGraphics.CGRect.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the y-coordinate that is the sum of the <see cref="P:CoreGraphics.CGRect.Y" /> and <see cref="P:CoreGraphics.CGRect.Height" /> property values of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <value>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of the <see cref="P:CoreGraphics.CGRect.Bottom" /> property represents the y-coordinate of the first point at the bottom edge of the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=T:CoreGraphics.CGRect.Rectangle&amp;scope=Xamarin" title="T:CoreGraphics.CGRect.Rectangle">T:CoreGraphics.CGRect.Rectangle</a></format> that is not contained in the <see cref="T:CoreGraphics.CGRect" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Contains(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.Contains : CoreGraphics.CGPoint -&gt; bool" Usage="cGRect.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Drawing.Point" /> to test. </param>
        <summary>Determines if the specified point is contained within this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method returns true if the point represented by <paramref name="point" /> is contained within this <see cref="T:CoreGraphics.CGRect" /> structure; otherwise false.</para>
        </returns>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The containing rectangle must be normalized for this method to return accurate results.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Contains(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="member this.Contains : CoreGraphics.CGRect -&gt; bool" Usage="cGRect.Contains rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:CoreGraphics.CGRect" /> to test. </param>
        <summary>Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method returns true if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:CoreGraphics.CGRect" /> structure; otherwise false.</para>
        </returns>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The containing rectangle must be normalized for this method to return accurate results.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="cGRect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
          <see langword="true" /> if the point [<paramref name="x" />, <paramref name="y" />] is within the rectangle.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Contains(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.Contains : nfloat * nfloat -&gt; bool" Usage="cGRect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="x">
          <attribution license="cc4" from="Microsoft" modified="false" />The x-coordinate of the point to test. </param>
        <param name="y">
          <attribution license="cc4" from="Microsoft" modified="false" />The y-coordinate of the point to test. </param>
        <summary>Determines if the specified point is contained within this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method returns true if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this <see cref="T:CoreGraphics.CGRect" /> structure; otherwise false.</para>
        </returns>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The containing rectangle must be normalized for this method to return accurate results.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Contains(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="member this.Contains : single * single -&gt; bool" Usage="cGRect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>Determines if the specified point is contained within this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly CoreGraphics.CGRect Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CoreGraphics.CGRect Empty" />
      <MemberSignature Language="DocId" Value="F:CoreGraphics.CGRect.Empty" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("CGRectZero", "CoreGraphics")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a <see cref="T:CoreGraphics.CGRect" /> structure with its properties left uninitialized.</summary>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A rectangle is defined by its width, height and upper-left corner.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Equals(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="override this.Equals : CoreGraphics.CGRect -&gt; bool" Usage="cGRect.Equals rect" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <attribution license="cc4" from="Microsoft" modified="false" />The <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Object&amp;scope=Xamarin" title="T:System.Object">T:System.Object</a></format> to test. </param>
        <summary>Tests whether <paramref name="rect" /> is a <see cref="T:CoreGraphics.CGRect" /> structure with the same location and size of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method returns true if <paramref name="rect" /> is a <see cref="T:CoreGraphics.CGRect" /> structure and its <see cref="P:CoreGraphics.CGRect.X" />, <see cref="P:CoreGraphics.CGRect.Y" />, <see cref="P:CoreGraphics.CGRect.Width" />, and <see cref="P:CoreGraphics.CGRect.Height" /> properties are equal to the corresponding properties of this <see cref="T:CoreGraphics.CGRect" /> structure; otherwise, false.</para>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Equals(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cGRect.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <attribution license="cc4" from="Microsoft" modified="false" />The <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Object&amp;scope=Xamarin" title="T:System.Object">T:System.Object</a></format> to test. </param>
        <summary>Tests whether <paramref name="obj" /> is a <see cref="T:CoreGraphics.CGRect" /> structure with the same location and size of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method returns true if <paramref name="obj" /> is a <see cref="T:CoreGraphics.CGRect" /> structure and its <see cref="P:CoreGraphics.CGRect.X" />, <see cref="P:CoreGraphics.CGRect.Y" />, <see cref="P:CoreGraphics.CGRect.Width" />, and <see cref="P:CoreGraphics.CGRect.Height" /> properties are equal to the corresponding properties of this <see cref="T:CoreGraphics.CGRect" /> structure; otherwise, false.</para>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromLTRB">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect FromLTRB (nfloat left, nfloat top, nfloat right, nfloat bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect FromLTRB(valuetype System.nfloat left, valuetype System.nfloat top, valuetype System.nfloat right, valuetype System.nfloat bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.FromLTRB(System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member FromLTRB : nfloat * nfloat * nfloat * nfloat -&gt; CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.FromLTRB (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.nfloat" />
        <Parameter Name="top" Type="System.nfloat" />
        <Parameter Name="right" Type="System.nfloat" />
        <Parameter Name="bottom" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="left">
          <attribution license="cc4" from="Microsoft" modified="false" />The x-coordinate of the upper-left corner of this <see cref="T:CoreGraphics.CGRect" /> structure. </param>
        <param name="top">
          <attribution license="cc4" from="Microsoft" modified="false" />The y-coordinate of the upper-left corner of this <see cref="T:CoreGraphics.CGRect" /> structure. </param>
        <param name="right">
          <attribution license="cc4" from="Microsoft" modified="false" />The x-coordinate of the lower-right corner of this <see cref="T:CoreGraphics.CGRect" /> structure. </param>
        <param name="bottom">
          <attribution license="cc4" from="Microsoft" modified="false" />The y-coordinate of the lower-right corner of this <see cref="T:CoreGraphics.CGRect" /> structure. </param>
        <summary>Creates a <see cref="T:CoreGraphics.CGRect" /> structure with the specified edge locations.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The new <see cref="T:CoreGraphics.CGRect" /> that this method creates.</para>
        </returns>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method creates a <see cref="T:CoreGraphics.CGRect" /> with the specified upper-left and lower-right corners.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.GetHashCode" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cGRect.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this <see cref="T:CoreGraphics.CGRect" /> structure. For information about the use of hash codes, see <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Object%20Get%20Hash%20Code&amp;scope=Xamarin" title="M:System.Object.GetHashCode*">M:System.Object.GetHashCode*</a></format> .</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An integer that represents the hash code for this rectangle.</para>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public nfloat Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Height" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Height" />
      <MemberSignature Language="F#" Value="member this.Height : nfloat with get, set" Usage="CoreGraphics.CGRect.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <value>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changing the <see cref="P:CoreGraphics.CGRect.Height" /> property will also cause a change in the <see cref="P:CoreGraphics.CGRect.Bottom" /> property of the <see cref="T:CoreGraphics.CGRect" />. The units the rectangle is drawn in is determined by the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Drawing%20Graphics%20Page%20Unit&amp;scope=Xamarin" title="P:System.Drawing.Graphics.PageUnit">P:System.Drawing.Graphics.PageUnit</a></format> and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Drawing%20Graphics%20Page%20Scale&amp;scope=Xamarin" title="P:System.Drawing.Graphics.PageScale">P:System.Drawing.Graphics.PageScale</a></format> properties of the graphics object used for drawing. The default unit is pixels.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Infinite">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect Infinite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype CoreGraphics.CGRect Infinite" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Infinite" />
      <MemberSignature Language="F#" Value="member this.Infinite : CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.Infinite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("CGRectInfinite", "CoreGraphics")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an infinitely large rectangle.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (CoreGraphics.CGSize size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype CoreGraphics.CGSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Inflate(CoreGraphics.CGSize)" />
      <MemberSignature Language="F#" Value="member this.Inflate : CoreGraphics.CGSize -&gt; unit" Usage="cGRect.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="CoreGraphics.CGSize" />
      </Parameters>
      <Docs>
        <param name="size">
          <attribution license="cc4" from="Microsoft" modified="false" />The amount to inflate this rectangle. </param>
        <summary>Enlarges this <see cref="T:CoreGraphics.CGRect" /> by the specified amount.</summary>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</para>
          <para>If either <paramref name="x" /> or <paramref name="y" /> is negative, the <see cref="T:CoreGraphics.CGRect" /> structure is deflated in the corresponding direction.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double -&gt; unit" Usage="cGRect.Inflate (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">The amount to add to both horizontal sides.</param>
        <param name="y">The amount to add to both vertical sides.</param>
        <summary>Increases the size of the rectangle by adding the specified amounts along both directions of each axis.</summary>
        <remarks>
          <para>Inflating a rectangle that is of size [1,1] and centered on [1,1] results in a rectangle of size [,3,3] centered on the same spot, since the <paramref name="x" /> and <paramref name="y" /> inflations are applied to all sides.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Inflate(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.Inflate : nfloat * nfloat -&gt; unit" Usage="cGRect.Inflate (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="x">Width to inflate by.</param>
        <param name="y">Height to inflate by.</param>
        <summary>Enlarges this <see cref="T:CoreGraphics.CGRect" /> by the specified amount.</summary>
        <remarks>
          <para>This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</para>
          <para>If either <paramref name="x" /> or <paramref name="y" /> is negative, the <see cref="T:CoreGraphics.CGRect" /> structure is deflated in the corresponding direction.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Inflate(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="member this.Inflate : single * single -&gt; unit" Usage="cGRect.Inflate (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect Inflate (CoreGraphics.CGRect rect, nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect Inflate(valuetype CoreGraphics.CGRect rect, valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Inflate(CoreGraphics.CGRect,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member Inflate : CoreGraphics.CGRect * nfloat * nfloat -&gt; CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.Inflate (rect, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="rect">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:CoreGraphics.CGRect" /> with which to start. This rectangle is not modified. </param>
        <param name="x">
          <attribution license="cc4" from="Microsoft" modified="false" />The amount to inflate this <see cref="T:CoreGraphics.CGRect" /> horizontally. </param>
        <param name="y">
          <attribution license="cc4" from="Microsoft" modified="false" />The amount to inflate this <see cref="T:CoreGraphics.CGRect" /> vertically. </param>
        <summary>Creates and returns an enlarged copy of the specified <see cref="T:CoreGraphics.CGRect" /> structure. The copy is enlarged by the specified amount. The original <see cref="T:CoreGraphics.CGRect" /> structure remains unmodified.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The enlarged <see cref="T:CoreGraphics.CGRect" />.</para>
        </returns>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method makes a copy of <paramref name="rect" />, enlarges the copy, and then returns the enlarged copy. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Intersect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="member this.Intersect : CoreGraphics.CGRect -&gt; unit" Usage="cGRect.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:CoreGraphics.CGRect" /> with which to intersect. </param>
        <summary>Replaces this <see cref="T:CoreGraphics.CGRect" /> with the intersection of itself and the specified <see cref="T:CoreGraphics.CGRect" />.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect Intersect (CoreGraphics.CGRect a, CoreGraphics.CGRect b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect Intersect(valuetype CoreGraphics.CGRect a, valuetype CoreGraphics.CGRect b) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Intersect(CoreGraphics.CGRect,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member Intersect : CoreGraphics.CGRect * CoreGraphics.CGRect -&gt; CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.Intersect (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CoreGraphics.CGRect" />
        <Parameter Name="b" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="a">
          <attribution license="cc4" from="Microsoft" modified="false" />A rectangle to intersect. </param>
        <param name="b">
          <attribution license="cc4" from="Microsoft" modified="false" />A rectangle to intersect. </param>
        <summary>Returns a third <see cref="T:CoreGraphics.CGRect" /> structure that represents the intersection of two other <see cref="T:CoreGraphics.CGRect" /> structures. If there is no intersection, an empty <see cref="T:CoreGraphics.CGRect" /> is returned.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:CoreGraphics.CGRect" /> that represents the intersection of <paramref name="a" /> and <paramref name="b" />.</para>
        </returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.IntersectsWith(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="member this.IntersectsWith : CoreGraphics.CGRect -&gt; bool" Usage="cGRect.IntersectsWith rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <attribution license="cc4" from="Microsoft" modified="false" />The rectangle to test. </param>
        <summary>Determines if this rectangle intersects with <paramref name="rect" />.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method returns true if there is any intersection, otherwise false.</para>
        </returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.IsEmpty" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="CoreGraphics.CGRect.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests whether all numeric properties of this <see cref="T:CoreGraphics.CGRect" /> have values of zero.</summary>
        <value>
        </value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public nfloat Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Left" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Left" />
      <MemberSignature Language="F#" Value="member this.Left : nfloat" Usage="CoreGraphics.CGRect.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the x-coordinate of the left edge of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <value>
        </value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPoint Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint Location" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Location" />
      <MemberSignature Language="F#" Value="member this.Location : CoreGraphics.CGPoint with get, set" Usage="CoreGraphics.CGRect.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the coordinates of the upper-left corner of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <value>
        </value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect Null { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype CoreGraphics.CGRect Null" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Null" />
      <MemberSignature Language="F#" Value="member this.Null : CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.Null" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("CGRectNull", "CoreGraphics")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an invalid, or null, rectangle.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (CoreGraphics.CGPoint pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype CoreGraphics.CGPoint pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Offset(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.Offset : CoreGraphics.CGPoint -&gt; unit" Usage="cGRect.Offset pos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="pos">
          <attribution license="cc4" from="Microsoft" modified="false" />Amount to offset the location. </param>
        <summary>Adjusts the location of this rectangle by the specified amount.</summary>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method adjusts the location of the upper-left corner horizontally by the x-coordinate of the specified point, and vertically by the y-coordinate of the specified point.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="cGRect.Offset (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>Adjusts the location of this rectangle by the specified amount.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Offset(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.Offset : nfloat * nfloat -&gt; unit" Usage="cGRect.Offset (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="x">
          <attribution license="cc4" from="Microsoft" modified="false" />The horizontal offset. </param>
        <param name="y">
          <attribution license="cc4" from="Microsoft" modified="false" />The vertical offset. </param>
        <summary>Adjusts the location of this rectangle by the specified amount.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Offset(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="member this.Offset : single * single -&gt; unit" Usage="cGRect.Offset (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>Adjusts the location of this rectangle by the specified amount.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (CoreGraphics.CGRect left, CoreGraphics.CGRect right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype CoreGraphics.CGRect left, valuetype CoreGraphics.CGRect right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.op_Equality(CoreGraphics.CGRect,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member ( = ) : CoreGraphics.CGRect * CoreGraphics.CGRect -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CoreGraphics.CGRect" />
        <Parameter Name="right" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="left">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:CoreGraphics.CGRect" /> structure that is to the left of the equality operator. </param>
        <param name="right">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:CoreGraphics.CGRect" /> structure that is to the right of the equality operator. </param>
        <summary>Tests whether two <see cref="T:CoreGraphics.CGRect" /> structures have equal location and size.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This operator returns true if the two <see cref="T:CoreGraphics.CGRect" /> structures have equal <see cref="P:CoreGraphics.CGRect.X" />, <see cref="P:CoreGraphics.CGRect.Y" />, <see cref="P:CoreGraphics.CGRect.Width" />, and <see cref="P:CoreGraphics.CGRect.Height" /> properties.</para>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Drawing.Rectangle (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.Rectangle op_Explicit(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.op_Explicit(CoreGraphics.CGRect)~System.Drawing.Rectangle" />
      <MemberSignature Language="F#" Value="static member op_Explicit : CoreGraphics.CGRect -&gt; System.Drawing.Rectangle" Usage="CoreGraphics.CGRect.op_Explicit rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>Converts a <see cref="T:CoreGraphics.CGRect" /> to a <see cref="T:System.Drawing.Rectangle" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Drawing.RectangleF (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.RectangleF op_Explicit(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.op_Explicit(CoreGraphics.CGRect)~System.Drawing.RectangleF" />
      <MemberSignature Language="F#" Value="static member op_Explicit : CoreGraphics.CGRect -&gt; System.Drawing.RectangleF" Usage="CoreGraphics.CGRect.op_Explicit rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>Converts a <see cref="T:CoreGraphics.CGRect" /> to a <see cref="T:System.Drawing.RectangleF" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator CoreGraphics.CGRect (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CoreGraphics.CGRect op_Implicit(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.op_Implicit(System.Drawing.Rectangle)~CoreGraphics.CGRect" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Drawing.Rectangle -&gt; CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.op_Implicit rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>Implicitly converts a <see cref="T:System.Drawing.Rectangle" /> to a <see cref="T:CoreGraphics.CGRect" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator CoreGraphics.CGRect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CoreGraphics.CGRect op_Implicit(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.op_Implicit(System.Drawing.RectangleF)~CoreGraphics.CGRect" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Drawing.RectangleF -&gt; CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.op_Implicit rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>Implicitly converts a <see cref="T:System.Drawing.RectangleF" /> to a <see cref="T:CoreGraphics.CGRect" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (CoreGraphics.CGRect left, CoreGraphics.CGRect right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype CoreGraphics.CGRect left, valuetype CoreGraphics.CGRect right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.op_Inequality(CoreGraphics.CGRect,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member op_Inequality : CoreGraphics.CGRect * CoreGraphics.CGRect -&gt; bool" Usage="CoreGraphics.CGRect.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CoreGraphics.CGRect" />
        <Parameter Name="right" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>Peforms a value comparison of two rectangles.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public nfloat Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Right" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Right" />
      <MemberSignature Language="F#" Value="member this.Right : nfloat" Usage="CoreGraphics.CGRect.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the x-coordinate that is the sum of <see cref="P:CoreGraphics.CGRect.X" /> and <see cref="P:CoreGraphics.CGRect.Width" /> property values of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <value>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of the <see cref="P:CoreGraphics.CGRect.Right" /> property represents the x-coordinate of the first point at the right edge of the rectangle that is not contained in the rectangle.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGSize Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGSize Size" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Size" />
      <MemberSignature Language="F#" Value="member this.Size : CoreGraphics.CGSize with get, set" Usage="CoreGraphics.CGRect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size of this <see cref="T:CoreGraphics.CGRect" />.</summary>
        <value>
        </value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary ToDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary ToDictionary() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.ToDictionary" />
      <MemberSignature Language="F#" Value="member this.ToDictionary : unit -&gt; Foundation.NSDictionary" Usage="cGRect.ToDictionary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serializes the state of the rectangle into an NSDictionary.</summary>
        <returns>An NSDictionary representing the rectangle.</returns>
        <remarks>
          <para>
	    The returned dictionary conforms to the serialization
	    standard of Cocoa and CocoaTouch and can be used to serialize
	    the state into objects that can be parsed by other Apple APIs.
	  </para>
          <para>
	    It is possible to create CGRect from a Dictionary using
	    the <see cref="M:CoreGraphics.CGRect.TryParse(Foundation.NSDictionary,CoreGraphics.CGRect@)" />
	    method. 
	  </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public nfloat Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Top" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Top" />
      <MemberSignature Language="F#" Value="member this.Top : nfloat" Usage="CoreGraphics.CGRect.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Y coordinate of the top of the rectangle.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cGRect.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the y-coordinate of the top edge of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <returns />
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Foundation.NSDictionary dictionaryRepresentation, out CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class Foundation.NSDictionary dictionaryRepresentation, [out] valuetype CoreGraphics.CGRect&amp; rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.TryParse(Foundation.NSDictionary,CoreGraphics.CGRect@)" />
      <MemberSignature Language="F#" Value="static member TryParse : Foundation.NSDictionary *  -&gt; bool" Usage="CoreGraphics.CGRect.TryParse (dictionaryRepresentation, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionaryRepresentation" Type="Foundation.NSDictionary" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dictionaryRepresentation">Dictionary containing
	a serialized CGRect.</param>
        <param name="rect">The rectangle value with the contents if
	the return value is true.</param>
        <summary>To be added.</summary>
        <returns>True if the NSDictionary contained a serialized
	CGRect and the initialized <paramref name="rect" />  with the
	contents on return.   False on failure, and the contents of
	<paramref name="rect" /> are set to Empty in that case.</returns>
        <remarks>Used to create a CGRect from a dictionary containing
	keys for X, Y, Widht and Height.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect Union (CoreGraphics.CGRect a, CoreGraphics.CGRect b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect Union(valuetype CoreGraphics.CGRect a, valuetype CoreGraphics.CGRect b) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGRect.Union(CoreGraphics.CGRect,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member Union : CoreGraphics.CGRect * CoreGraphics.CGRect -&gt; CoreGraphics.CGRect" Usage="CoreGraphics.CGRect.Union (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CoreGraphics.CGRect" />
        <Parameter Name="b" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="a">
          <attribution license="cc4" from="Microsoft" modified="false" />A rectangle to union. </param>
        <param name="b">
          <attribution license="cc4" from="Microsoft" modified="false" />A rectangle to union. </param>
        <summary>Gets a <see cref="T:CoreGraphics.CGRect" /> structure that contains the union of two <see cref="T:CoreGraphics.CGRect" /> structures.</summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:CoreGraphics.CGRect" /> structure that bounds the union of the two <see cref="T:CoreGraphics.CGRect" /> structures.</para>
        </returns>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When one of the two rectangles is empty, meaning all of its values are zero, the <see cref="M:CoreGraphics.CGRect.Union(CoreGraphics.CGRect,CoreGraphics.CGRect)" /> method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle. For example, if you have two rectangles: A = (0, 0; 0, 0) and B = (1, 1; 2, 2), then the union of A and B is (0, 0; 2, 2).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public nfloat Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Width" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Width" />
      <MemberSignature Language="F#" Value="member this.Width : nfloat with get, set" Usage="CoreGraphics.CGRect.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the width of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <value>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changing the <see cref="P:CoreGraphics.CGRect.Width" /> property will also cause a change in the <see cref="P:CoreGraphics.CGRect.Right" /> property of the <see cref="T:CoreGraphics.CGRect" />. The units the rectangle is drawn in is determined by the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Drawing%20Graphics%20Page%20Unit&amp;scope=Xamarin" title="P:System.Drawing.Graphics.PageUnit">P:System.Drawing.Graphics.PageUnit</a></format> and <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=System%20Drawing%20Graphics%20Page%20Scale&amp;scope=Xamarin" title="P:System.Drawing.Graphics.PageScale">P:System.Drawing.Graphics.PageScale</a></format> properties of the graphics object used for drawing. The default unit is pixels.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public nfloat X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat X" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.X" />
      <MemberSignature Language="F#" Value="member this.X : nfloat with get, set" Usage="CoreGraphics.CGRect.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <value>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changing the <see cref="P:CoreGraphics.CGRect.X" /> property will also cause a change in the <see cref="P:CoreGraphics.CGRect.Right" /> property of the <see cref="T:CoreGraphics.CGRect" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public nfloat Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat Y" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGRect.Y" />
      <MemberSignature Language="F#" Value="member this.Y : nfloat with get, set" Usage="CoreGraphics.CGRect.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:CoreGraphics.CGRect" /> structure.</summary>
        <value>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changing the <see cref="P:CoreGraphics.CGRect.Y" /> property will also cause a change in the <see cref="P:CoreGraphics.CGRect.Bottom" /> property of the <see cref="T:CoreGraphics.CGRect" />.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
