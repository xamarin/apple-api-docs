<Type Name="CGBitmapContext" FullName="CoreGraphics.CGBitmapContext">
  <TypeSignature Language="C#" Value="public class CGBitmapContext : CoreGraphics.CGContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGBitmapContext extends CoreGraphics.CGContext" />
  <TypeSignature Language="DocId" Value="T:CoreGraphics.CGBitmapContext" />
  <TypeSignature Language="F#" Value="type CGBitmapContext = class&#xA;    inherit CGContext" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreGraphics.CGContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>CGContext backed by an in-memory bitmap.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/Drawing/">Example_Drawing</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGBitmapContext (byte[] data, nint width, nint height, nint bitsPerComponent, nint bytesPerRow, CoreGraphics.CGColorSpace colorSpace, CoreGraphics.CGBitmapFlags bitmapInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] data, valuetype System.nint width, valuetype System.nint height, valuetype System.nint bitsPerComponent, valuetype System.nint bytesPerRow, class CoreGraphics.CGColorSpace colorSpace, valuetype CoreGraphics.CGBitmapFlags bitmapInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGBitmapContext.#ctor(System.Byte[],System.nint,System.nint,System.nint,System.nint,CoreGraphics.CGColorSpace,CoreGraphics.CGBitmapFlags)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGBitmapContext : byte[] * nint * nint * nint * nint * CoreGraphics.CGColorSpace * CoreGraphics.CGBitmapFlags -&gt; CoreGraphics.CGBitmapContext" Usage="new CoreGraphics.CGBitmapContext (data, width, height, bitsPerComponent, bytesPerRow, colorSpace, bitmapInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="width" Type="System.nint" />
        <Parameter Name="height" Type="System.nint" />
        <Parameter Name="bitsPerComponent" Type="System.nint" />
        <Parameter Name="bytesPerRow" Type="System.nint" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
        <Parameter Name="bitmapInfo" Type="CoreGraphics.CGBitmapFlags" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="bitsPerComponent">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <param name="bitmapInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGBitmapContext (byte[] data, nint width, nint height, nint bitsPerComponent, nint bytesPerRow, CoreGraphics.CGColorSpace colorSpace, CoreGraphics.CGImageAlphaInfo bitmapInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] data, valuetype System.nint width, valuetype System.nint height, valuetype System.nint bitsPerComponent, valuetype System.nint bytesPerRow, class CoreGraphics.CGColorSpace colorSpace, valuetype CoreGraphics.CGImageAlphaInfo bitmapInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGBitmapContext.#ctor(System.Byte[],System.nint,System.nint,System.nint,System.nint,CoreGraphics.CGColorSpace,CoreGraphics.CGImageAlphaInfo)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGBitmapContext : byte[] * nint * nint * nint * nint * CoreGraphics.CGColorSpace * CoreGraphics.CGImageAlphaInfo -&gt; CoreGraphics.CGBitmapContext" Usage="new CoreGraphics.CGBitmapContext (data, width, height, bitsPerComponent, bytesPerRow, colorSpace, bitmapInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="width" Type="System.nint" />
        <Parameter Name="height" Type="System.nint" />
        <Parameter Name="bitsPerComponent" Type="System.nint" />
        <Parameter Name="bytesPerRow" Type="System.nint" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
        <Parameter Name="bitmapInfo" Type="CoreGraphics.CGImageAlphaInfo" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="bitsPerComponent">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <param name="bitmapInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGBitmapContext (IntPtr data, nint width, nint height, nint bitsPerComponent, nint bytesPerRow, CoreGraphics.CGColorSpace colorSpace, CoreGraphics.CGBitmapFlags bitmapInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int data, valuetype System.nint width, valuetype System.nint height, valuetype System.nint bitsPerComponent, valuetype System.nint bytesPerRow, class CoreGraphics.CGColorSpace colorSpace, valuetype CoreGraphics.CGBitmapFlags bitmapInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGBitmapContext.#ctor(System.IntPtr,System.nint,System.nint,System.nint,System.nint,CoreGraphics.CGColorSpace,CoreGraphics.CGBitmapFlags)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGBitmapContext : nativeint * nint * nint * nint * nint * CoreGraphics.CGColorSpace * CoreGraphics.CGBitmapFlags -&gt; CoreGraphics.CGBitmapContext" Usage="new CoreGraphics.CGBitmapContext (data, width, height, bitsPerComponent, bytesPerRow, colorSpace, bitmapInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="width" Type="System.nint" />
        <Parameter Name="height" Type="System.nint" />
        <Parameter Name="bitsPerComponent" Type="System.nint" />
        <Parameter Name="bytesPerRow" Type="System.nint" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
        <Parameter Name="bitmapInfo" Type="CoreGraphics.CGBitmapFlags" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="bitsPerComponent">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <param name="bitmapInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGBitmapContext (IntPtr data, nint width, nint height, nint bitsPerComponent, nint bytesPerRow, CoreGraphics.CGColorSpace colorSpace, CoreGraphics.CGImageAlphaInfo bitmapInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int data, valuetype System.nint width, valuetype System.nint height, valuetype System.nint bitsPerComponent, valuetype System.nint bytesPerRow, class CoreGraphics.CGColorSpace colorSpace, valuetype CoreGraphics.CGImageAlphaInfo bitmapInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGBitmapContext.#ctor(System.IntPtr,System.nint,System.nint,System.nint,System.nint,CoreGraphics.CGColorSpace,CoreGraphics.CGImageAlphaInfo)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGBitmapContext : nativeint * nint * nint * nint * nint * CoreGraphics.CGColorSpace * CoreGraphics.CGImageAlphaInfo -&gt; CoreGraphics.CGBitmapContext" Usage="new CoreGraphics.CGBitmapContext (data, width, height, bitsPerComponent, bytesPerRow, colorSpace, bitmapInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="width" Type="System.nint" />
        <Parameter Name="height" Type="System.nint" />
        <Parameter Name="bitsPerComponent" Type="System.nint" />
        <Parameter Name="bytesPerRow" Type="System.nint" />
        <Parameter Name="colorSpace" Type="CoreGraphics.CGColorSpace" />
        <Parameter Name="bitmapInfo" Type="CoreGraphics.CGImageAlphaInfo" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="bitsPerComponent">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <param name="bitmapInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlphaInfo">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImageAlphaInfo AlphaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGImageAlphaInfo AlphaInfo" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.AlphaInfo" />
      <MemberSignature Language="F#" Value="member this.AlphaInfo : CoreGraphics.CGImageAlphaInfo" Usage="CoreGraphics.CGBitmapContext.AlphaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImageAlphaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the alpha information for <c>this</c> <see cref="T:CoreGraphics.CGBitmapContext" /> object, as a <see cref="T:CoreGraphics.CGImageAlphaInfo" /> object, or <see cref="F:CoreGraphics.CGImageAlphaInfo.None" /> if <c>this</c> object is not a bitmap context.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapInfo">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGBitmapFlags BitmapInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGBitmapFlags BitmapInfo" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.BitmapInfo" />
      <MemberSignature Language="F#" Value="member this.BitmapInfo : CoreGraphics.CGBitmapFlags" Usage="CoreGraphics.CGBitmapContext.BitmapInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGBitmapFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitsPerComponent">
      <MemberSignature Language="C#" Value="public nint BitsPerComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint BitsPerComponent" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.BitsPerComponent" />
      <MemberSignature Language="F#" Value="member this.BitsPerComponent : nint" Usage="CoreGraphics.CGBitmapContext.BitsPerComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Number of bits per component for</summary>
        <value>Gets the number of bits per component for <c>this</c> <see cref="T:CoreGraphics.CGBitmapContext" /> object, or 0 if <c>this</c> object is not a bitmap context.</value>
        <remarks>The number of bits used by each component of a pixel in memory.  For example, when using 32-bit RGBA buffers the value for this would be an 8.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitsPerPixel">
      <MemberSignature Language="C#" Value="public nint BitsPerPixel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint BitsPerPixel" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.BitsPerPixel" />
      <MemberSignature Language="F#" Value="member this.BitsPerPixel : nint" Usage="CoreGraphics.CGBitmapContext.BitsPerPixel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Number of bits per pixel.</summary>
        <value>Gets the number of bits per pixel for <c>this</c> <see cref="T:CoreGraphics.CGBitmapContext" /> object, or 0 if <c>this</c> object is not a bitmap context.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesPerRow">
      <MemberSignature Language="C#" Value="public nint BytesPerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint BytesPerRow" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.BytesPerRow" />
      <MemberSignature Language="F#" Value="member this.BytesPerRow : nint" Usage="CoreGraphics.CGBitmapContext.BytesPerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of bytes per row for <c>this</c> <see cref="T:CoreGraphics.CGBitmapContext" /> object, or 0 if <c>this</c> object is not a bitmap context.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Number of bytes per row, a number greather or equal that the number of bytes used by a row of pixels.   </para>
          <para>Typically is the width multiplied by the number of bytes per pixel, with some extra padding.   This is called the image stride.   </para>
          <para>While this does not affect the rendering of the image, it can improve the performance of image rendering by aligning the first pixel to the natural processor alignment.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorSpace">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGColorSpace ColorSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreGraphics.CGColorSpace ColorSpace" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.ColorSpace" />
      <MemberSignature Language="F#" Value="member this.ColorSpace : CoreGraphics.CGColorSpace" Usage="CoreGraphics.CGBitmapContext.ColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the color space for <c>this</c> <see cref="T:CoreGraphics.CGBitmapContext" /> object, as a <see cref="T:CoreGraphics.CGColorSpace" />, or <see langword="null" /> if <c>this</c> object is not a bitmap context.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public IntPtr Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Data" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.Data" />
      <MemberSignature Language="F#" Value="member this.Data : nativeint" Usage="CoreGraphics.CGBitmapContext.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a pointer to the image data for <c>this</c> <see cref="T:CoreGraphics.CGBitmapContext" /> object, or <see langword="null" /> if <c>this</c> object is not a bitmap context.</summary>
        <value>A pointer to the data.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGBitmapContext.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="cGBitmapContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGBitmapContext object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGBitmapContext class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGBitmapContext ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public nint Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint Height" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.Height" />
      <MemberSignature Language="F#" Value="member this.Height : nint" Usage="CoreGraphics.CGBitmapContext.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height for <c>this</c> <see cref="T:CoreGraphics.CGBitmapContext" /> object, in pixels, or 0 if <c>this</c> object is not a bitmap context.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImage">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGImage ToImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGImage ToImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGBitmapContext.ToImage" />
      <MemberSignature Language="F#" Value="member this.ToImage : unit -&gt; CoreGraphics.CGImage" Usage="cGBitmapContext.ToImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public nint Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint Width" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGBitmapContext.Width" />
      <MemberSignature Language="F#" Value="member this.Width : nint" Usage="CoreGraphics.CGBitmapContext.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width for <c>this</c> <see cref="T:CoreGraphics.CGBitmapContext" /> object, in pixels, or 0 if <c>this</c> object is not a bitmap context.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
