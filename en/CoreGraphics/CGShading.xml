<Type Name="CGShading" FullName="CoreGraphics.CGShading">
  <TypeSignature Language="C#" Value="public class CGShading : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGShading extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreGraphics.CGShading" />
  <TypeSignature Language="F#" Value="type CGShading = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A type that represents a Quartz shading.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGShading (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGShading.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGShading : nativeint -&gt; CoreGraphics.CGShading" Usage="new CoreGraphics.CGShading handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAxial">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGShading CreateAxial (CoreGraphics.CGColorSpace colorspace, CoreGraphics.CGPoint start, CoreGraphics.CGPoint end, CoreGraphics.CGFunction function, bool extendStart, bool extendEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGShading CreateAxial(class CoreGraphics.CGColorSpace colorspace, valuetype CoreGraphics.CGPoint start, valuetype CoreGraphics.CGPoint end, class CoreGraphics.CGFunction function, bool extendStart, bool extendEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGShading.CreateAxial(CoreGraphics.CGColorSpace,CoreGraphics.CGPoint,CoreGraphics.CGPoint,CoreGraphics.CGFunction,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateAxial : CoreGraphics.CGColorSpace * CoreGraphics.CGPoint * CoreGraphics.CGPoint * CoreGraphics.CGFunction * bool * bool -&gt; CoreGraphics.CGShading" Usage="CoreGraphics.CGShading.CreateAxial (colorspace, start, end, function, extendStart, extendEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGShading</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorspace" Type="CoreGraphics.CGColorSpace" />
        <Parameter Name="start" Type="CoreGraphics.CGPoint" />
        <Parameter Name="end" Type="CoreGraphics.CGPoint" />
        <Parameter Name="function" Type="CoreGraphics.CGFunction" />
        <Parameter Name="extendStart" Type="System.Boolean" />
        <Parameter Name="extendEnd" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="colorspace">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="function">To be added.</param>
        <param name="extendStart">To be added.</param>
        <param name="extendEnd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRadial">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGShading CreateRadial (CoreGraphics.CGColorSpace colorspace, CoreGraphics.CGPoint start, nfloat startRadius, CoreGraphics.CGPoint end, nfloat endRadius, CoreGraphics.CGFunction function, bool extendStart, bool extendEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGShading CreateRadial(class CoreGraphics.CGColorSpace colorspace, valuetype CoreGraphics.CGPoint start, valuetype System.nfloat startRadius, valuetype CoreGraphics.CGPoint end, valuetype System.nfloat endRadius, class CoreGraphics.CGFunction function, bool extendStart, bool extendEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGShading.CreateRadial(CoreGraphics.CGColorSpace,CoreGraphics.CGPoint,System.nfloat,CoreGraphics.CGPoint,System.nfloat,CoreGraphics.CGFunction,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateRadial : CoreGraphics.CGColorSpace * CoreGraphics.CGPoint * nfloat * CoreGraphics.CGPoint * nfloat * CoreGraphics.CGFunction * bool * bool -&gt; CoreGraphics.CGShading" Usage="CoreGraphics.CGShading.CreateRadial (colorspace, start, startRadius, end, endRadius, function, extendStart, extendEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGShading</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorspace" Type="CoreGraphics.CGColorSpace" />
        <Parameter Name="start" Type="CoreGraphics.CGPoint" />
        <Parameter Name="startRadius" Type="System.nfloat" />
        <Parameter Name="end" Type="CoreGraphics.CGPoint" />
        <Parameter Name="endRadius" Type="System.nfloat" />
        <Parameter Name="function" Type="CoreGraphics.CGFunction" />
        <Parameter Name="extendStart" Type="System.Boolean" />
        <Parameter Name="extendEnd" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="colorspace">To be added.</param>
        <param name="start">To be added.</param>
        <param name="startRadius">To be added.</param>
        <param name="end">To be added.</param>
        <param name="endRadius">To be added.</param>
        <param name="function">To be added.</param>
        <param name="extendStart">To be added.</param>
        <param name="extendEnd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGShading.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cGShading.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGShading object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGShading class.</para>
          <para>Calling the Dispose method when the application is finished using the CGShading ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGShading.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cGShading.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGShading object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGShading class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGShading ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGShading ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGShading.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cGShading.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGShading object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGShading.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreGraphics.CGShading.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
