<Type Name="CGPathDrawingMode" FullName="CoreGraphics.CGPathDrawingMode">
  <TypeSignature Language="C#" Value="public enum CGPathDrawingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CGPathDrawingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:CoreGraphics.CGPathDrawingMode" />
  <TypeSignature Language="F#" Value="type CGPathDrawingMode = " />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Drawing mode.</summary>
    <remarks>
      <para>This enumeration allows the application developer to choose between showing the fill, stroke, or both of a path. Additionally, it allows the developer to choose whether to use the Core Graphics standing "non-zero winding rule" fill mode or the "even-odd rule" fill mode.</para>
      <para>Both the "non-zero winding rule" and the "even-odd rule" decide whether to fill a pixel by considering a line drawn from the point to outside the path.</para>
      <para>The “non-zero winding rule” mode does not fill the pixel if the path crosses that line clockwise and counterclockwise an equal number of times. If the count of clockwise versus counterclockwise crossings is non-zero, the point is considered inside the path and is filled. As the following illustration shows, this makes path direction an important consideration.</para>
      <para>
        <img href="~/CoreGraphics/_images/CGPathDrawingMode.NonZeroWindingRule.png" />
      </para>
      <para>The “even-odd” rule fills a pixel if the number of paths crossed is odd. It does not take the direction of the path into account.</para>
      <para>
        <img href="~/CoreGraphics/_images/CGPathDrawingMode.EvenOddRule.png" />
      </para>
      <para>The following example shows a more complex situation. The top path is drawn with the "even-odd rule" (<see cref="F:CoreGraphics.CGPathDrawingMode.EOFillStroke" />) while the bottom is filled with the "non-zero winding rule" (<see cref="F:CoreGraphics.CGPathDrawingMode.FillStroke" />). In both cases, the path is both stroked in red and filled in green.</para>
      <example>
        <code lang="C#"><![CDATA[
 public override void Draw (RectangleF rect)
{
	base.Draw (rect);

	using (var ctxt = UIGraphics.GetCurrentContext ()) {
		ctxt.ScaleCTM (1, -1);
		ctxt.TranslateCTM (0, -Bounds.Height);
   	DrawPathWithWindingMode (ctxt, Bounds.Height / 2, CGPathDrawingMode.EOFillStroke);
	  DrawPathWithWindingMode (ctxt, 0, CGPathDrawingMode.FillStroke);
		}
}

void DrawPathWithWindingMode (CGContext ctxt, float yOffset, CGPathDrawingMode mode)
{
	var points = new PointF[] {
		new PointF (50, 50),
		new PointF (200, 50),
		new PointF (200, 100),
		new PointF (50, 100),
		new PointF (50, 50),
		new PointF (150, 50),
		new PointF (150, 150),
		new PointF (100, 150),
		new PointF (100, 25)
	};
	points = points.Select (pt => new PointF(pt.X, pt.Y += yOffset)).ToArray();
	ctxt.SetStrokeColor (UIColor.Red.CGColor);
	ctxt.SetFillColor (UIColor.Green.CGColor);
	ctxt.MoveTo (points [0].X, points [0].Y);
	for (var i = 1; i < points.Length; i++) {
		ctxt.AddLineToPoint (points [i].X, points [i].Y);
	}
	ctxt.DrawPath (mode);
}         
          ]]></code>
      </example>
      <para>
        <img href="~/CoreGraphics/_images/CGPathDrawingMode.NonZeroVsEvenOdd.png" />
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EOFill">
      <MemberSignature Language="C#" Value="EOFill" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype CoreGraphics.CGPathDrawingMode EOFill = int32(1)" />
      <MemberSignature Language="DocId" Value="F:CoreGraphics.CGPathDrawingMode.EOFill" />
      <MemberSignature Language="F#" Value="EOFill = 1" Usage="CoreGraphics.CGPathDrawingMode.EOFill" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPathDrawingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Fills the path using the even-odd rule.</summary>
      </Docs>
    </Member>
    <Member MemberName="EOFillStroke">
      <MemberSignature Language="C#" Value="EOFillStroke" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype CoreGraphics.CGPathDrawingMode EOFillStroke = int32(4)" />
      <MemberSignature Language="DocId" Value="F:CoreGraphics.CGPathDrawingMode.EOFillStroke" />
      <MemberSignature Language="F#" Value="EOFillStroke = 4" Usage="CoreGraphics.CGPathDrawingMode.EOFillStroke" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPathDrawingMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Fills and strokes the path using the even-odd rule.</summary>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="Fill" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype CoreGraphics.CGPathDrawingMode Fill = int32(0)" />
      <MemberSignature Language="DocId" Value="F:CoreGraphics.CGPathDrawingMode.Fill" />
      <MemberSignature Language="F#" Value="Fill = 0" Usage="CoreGraphics.CGPathDrawingMode.Fill" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPathDrawingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Fills the path using the non-zero winding rule.</summary>
      </Docs>
    </Member>
    <Member MemberName="FillStroke">
      <MemberSignature Language="C#" Value="FillStroke" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype CoreGraphics.CGPathDrawingMode FillStroke = int32(3)" />
      <MemberSignature Language="DocId" Value="F:CoreGraphics.CGPathDrawingMode.FillStroke" />
      <MemberSignature Language="F#" Value="FillStroke = 3" Usage="CoreGraphics.CGPathDrawingMode.FillStroke" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPathDrawingMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Fills and strokes the path using the non-zero winding rule.</summary>
      </Docs>
    </Member>
    <Member MemberName="Stroke">
      <MemberSignature Language="C#" Value="Stroke" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype CoreGraphics.CGPathDrawingMode Stroke = int32(2)" />
      <MemberSignature Language="DocId" Value="F:CoreGraphics.CGPathDrawingMode.Stroke" />
      <MemberSignature Language="F#" Value="Stroke = 2" Usage="CoreGraphics.CGPathDrawingMode.Stroke" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPathDrawingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Strokes the path.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
