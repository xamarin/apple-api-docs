<Type Name="CGDataProvider" FullName="CoreGraphics.CGDataProvider">
  <TypeSignature Language="C#" Value="public class CGDataProvider : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGDataProvider extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreGraphics.CGDataProvider" />
  <TypeSignature Language="F#" Value="type CGDataProvider = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A class that wraps a data source and exposes it to the CGImage class.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (Foundation.NSData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(Foundation.NSData)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : Foundation.NSData -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="Foundation.NSData" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>Creates a new <see cref="T:CoreGraphics.CGDataProvider" /> from the provided <paramref name="data" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : Foundation.NSUrl -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>Creates a new <see cref="T:CoreGraphics.CGDataProvider" /> from the data at the specified <paramref name="url" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(System.Byte[])" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : byte[] -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider buffer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>Creates a new <see cref="T:CoreGraphics.CGDataProvider" /> from the data in the provided <paramref name="buffer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : nativeint -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : string -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider file" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file">The file to load data from.</param>
        <summary>Exposes the contents of the file as a CGDataProvider.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (IntPtr memoryBlock, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int memoryBlock, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(System.IntPtr,System.Int32)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : nativeint * int -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider (memoryBlock, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memoryBlock" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="memoryBlock">Pointer to the memory block.</param>
        <param name="size">Size of the block.</param>
        <summary>Creates a CGDataProvider from an in-memory block.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : byte[] * int * int -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider (buffer, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">A block of bytes that contains the data to be provided.</param>
        <param name="offset">Offset into the block that is considered part of the data to be provided.</param>
        <param name="count">The number of bytes to consume from the offset start from the block.</param>
        <summary>Creates a CGDataProvider that exposes the byte array starting at the specified offset for the specified amount of bytes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (IntPtr memoryBlock, int size, Action&lt;IntPtr&gt; releaseMemoryBlockCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int memoryBlock, int32 size, class System.Action`1&lt;native int&gt; releaseMemoryBlockCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(System.IntPtr,System.Int32,System.Action{System.IntPtr})" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : nativeint * int * Action&lt;nativeint&gt; -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider (memoryBlock, size, releaseMemoryBlockCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memoryBlock" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="releaseMemoryBlockCallback" Type="System.Action&lt;System.IntPtr&gt;" />
      </Parameters>
      <Docs>
        <param name="memoryBlock">To be added.</param>
        <param name="size">To be added.</param>
        <param name="releaseMemoryBlockCallback">To be added.</param>
        <summary>Creates a new <see cref="T:CoreGraphics.CGDataProvider" /> from the data at the specified <paramref name="memoryBlock" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGDataProvider (IntPtr memoryBlock, int size, bool ownBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int memoryBlock, int32 size, bool ownBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.#ctor(System.IntPtr,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGDataProvider : nativeint * int * bool -&gt; CoreGraphics.CGDataProvider" Usage="new CoreGraphics.CGDataProvider (memoryBlock, size, ownBuffer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memoryBlock" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="ownBuffer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="memoryBlock">Pointer to the memory block.</param>
        <param name="size">Size of the block.</param>
        <param name="ownBuffer">If true this means that the CGDataProvider owns the buffer and will call FreeHGlobal when it is disposed, otherwise it is assumed that the block is owned by another object.</param>
        <summary>Creates a CGDataProvider from an in-memory block.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyData">
      <MemberSignature Language="C#" Value="public Foundation.NSData CopyData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSData CopyData() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.CopyData" />
      <MemberSignature Language="F#" Value="member this.CopyData : unit -&gt; Foundation.NSData" Usage="cGDataProvider.CopyData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of the provider's data.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cGDataProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGDataProvider object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGDataProvider class.</para>
          <para>Calling the Dispose method when the application is finished using the CGDataProvider ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cGDataProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGDataProvider object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGDataProvider class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGDataProvider ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGDataProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cGDataProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGDataProvider object</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGDataProvider FromFile (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGDataProvider FromFile(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGDataProvider.FromFile(System.String)" />
      <MemberSignature Language="F#" Value="static member FromFile : string -&gt; CoreGraphics.CGDataProvider" Usage="CoreGraphics.CGDataProvider.FromFile file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGDataProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file">File name.</param>
        <summary>Creates a CGDataProvider from an on-disk file.</summary>
        <returns>An initialized CGDataProvider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGDataProvider.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreGraphics.CGDataProvider.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
