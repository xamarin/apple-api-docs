<Type Name="CGFont" FullName="CoreGraphics.CGFont">
  <TypeSignature Language="C#" Value="public class CGFont : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGFont extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreGraphics.CGFont" />
  <TypeSignature Language="F#" Value="type CGFont = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Font support.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Ascent">
      <MemberSignature Language="C#" Value="public int Ascent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ascent" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.Ascent" />
      <MemberSignature Language="F#" Value="member this.Ascent : int" Usage="CoreGraphics.CGFont.Ascent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the ascent of the font.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapHeight">
      <MemberSignature Language="C#" Value="public int CapHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CapHeight" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.CapHeight" />
      <MemberSignature Language="F#" Value="member this.CapHeight : int" Usage="CoreGraphics.CGFont.CapHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the cap height of the font.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromProvider">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGFont CreateFromProvider (CoreGraphics.CGDataProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGFont CreateFromProvider(class CoreGraphics.CGDataProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.CreateFromProvider(CoreGraphics.CGDataProvider)" />
      <MemberSignature Language="F#" Value="static member CreateFromProvider : CoreGraphics.CGDataProvider -&gt; CoreGraphics.CGFont" Usage="CoreGraphics.CGFont.CreateFromProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGFont</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="CoreGraphics.CGDataProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Data provider that wraps the font.</param>
        <summary>Creates a font from a data provider.</summary>
        <returns>The constructed font.</returns>
        <remarks>
          <para>
	    You can use this method to create CGFonts from an
	    in-memory representation of the font (for example, to
	    embed binary fonts into your application to prevent easy
	    copying of licensed fonts, or when you fetch the font from
	    a streaming source and do not want to store it on disk).

	  </para>
          <example>
            <code lang="C#"><![CDATA[
// 
// Load font into byte array from a file.
//
byte [] myBuffer = File.ReadAllBytes ("demo.ttf"); 
CGFont font = CGFont.CreateFromProvider (new CGDataProvider (myBuffer, 0, myBuffer.Count));

]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithFontName">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGFont CreateWithFontName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGFont CreateWithFontName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.CreateWithFontName(System.String)" />
      <MemberSignature Language="F#" Value="static member CreateWithFontName : string -&gt; CoreGraphics.CGFont" Usage="CoreGraphics.CGFont.CreateWithFontName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGFont</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Creates a new CGFont representing the specified PostScript or full name.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Descent">
      <MemberSignature Language="C#" Value="public int Descent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Descent" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.Descent" />
      <MemberSignature Language="F#" Value="member this.Descent : int" Usage="CoreGraphics.CGFont.Descent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the descent of the font.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cGFont.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGFont object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGFont class.</para>
          <para>Calling the Dispose method when the application is finished using the CGFont ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at https://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cGFont.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGFont object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGFont class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGFont ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at https://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGFont ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cGFont.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGFont object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontBBox">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGRect FontBBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGRect FontBBox" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.FontBBox" />
      <MemberSignature Language="F#" Value="member this.FontBBox : CoreGraphics.CGRect" Usage="CoreGraphics.CGFont.FontBBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a rectangle specifing the bounding box of the font.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.FullName" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="CoreGraphics.CGFont.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the full name of the font.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphWithGlyphName">
      <MemberSignature Language="C#" Value="public ushort GetGlyphWithGlyphName (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16 GetGlyphWithGlyphName(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.GetGlyphWithGlyphName(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetGlyphWithGlyphName : string -&gt; uint16" Usage="cGFont.GetGlyphWithGlyphName s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>Returns the glyph for the specified glyph name.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/CoreText.framework/CoreText&quot; as &quot;CGFontGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.GetTypeID" />
      <MemberSignature Language="F#" Value="static member GetTypeID : unit -&gt; nint" Usage="CoreGraphics.CGFont.GetTypeID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the CoreGraphics.CGFont type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID(System.IntPtr)" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isCGFont = (CFType.GetTypeID (foo.Handle) == CGFont.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphNameForGlyph">
      <MemberSignature Language="C#" Value="public string GlyphNameForGlyph (ushort glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GlyphNameForGlyph(unsigned int16 glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.GlyphNameForGlyph(System.UInt16)" />
      <MemberSignature Language="F#" Value="member this.GlyphNameForGlyph : uint16 -&gt; string" Usage="cGFont.GlyphNameForGlyph glyph" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreGraphics.CGFont.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItalicAngle">
      <MemberSignature Language="C#" Value="public nfloat ItalicAngle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat ItalicAngle" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.ItalicAngle" />
      <MemberSignature Language="F#" Value="member this.ItalicAngle : nfloat" Usage="CoreGraphics.CGFont.ItalicAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Leading">
      <MemberSignature Language="C#" Value="public int Leading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Leading" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.Leading" />
      <MemberSignature Language="F#" Value="member this.Leading : int" Usage="CoreGraphics.CGFont.Leading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfGlyphs">
      <MemberSignature Language="C#" Value="public nint NumberOfGlyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint NumberOfGlyphs" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.NumberOfGlyphs" />
      <MemberSignature Language="F#" Value="member this.NumberOfGlyphs : nint" Usage="CoreGraphics.CGFont.NumberOfGlyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostScriptName">
      <MemberSignature Language="C#" Value="public string PostScriptName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostScriptName" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.PostScriptName" />
      <MemberSignature Language="F#" Value="member this.PostScriptName : string" Usage="CoreGraphics.CGFont.PostScriptName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StemV">
      <MemberSignature Language="C#" Value="public nfloat StemV { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nfloat StemV" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.StemV" />
      <MemberSignature Language="F#" Value="member this.StemV : nfloat" Usage="CoreGraphics.CGFont.StemV" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToCTFont">
      <MemberSignature Language="C#" Value="public CoreText.CTFont ToCTFont (nfloat size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreText.CTFont ToCTFont(valuetype System.nfloat size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.ToCTFont(System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.ToCTFont : nfloat -&gt; CoreText.CTFont" Usage="cGFont.ToCTFont size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreText.CTFont</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToCTFont">
      <MemberSignature Language="C#" Value="public CoreText.CTFont ToCTFont (nfloat size, CoreGraphics.CGAffineTransform matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreText.CTFont ToCTFont(valuetype System.nfloat size, valuetype CoreGraphics.CGAffineTransform matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGFont.ToCTFont(System.nfloat,CoreGraphics.CGAffineTransform)" />
      <MemberSignature Language="F#" Value="member this.ToCTFont : nfloat * CoreGraphics.CGAffineTransform -&gt; CoreText.CTFont" Usage="cGFont.ToCTFont (size, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreText.CTFont</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.nfloat" />
        <Parameter Name="matrix" Type="CoreGraphics.CGAffineTransform" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="matrix">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitsPerEm">
      <MemberSignature Language="C#" Value="public int UnitsPerEm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UnitsPerEm" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.UnitsPerEm" />
      <MemberSignature Language="F#" Value="member this.UnitsPerEm : int" Usage="CoreGraphics.CGFont.UnitsPerEm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XHeight">
      <MemberSignature Language="C#" Value="public int XHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XHeight" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGFont.XHeight" />
      <MemberSignature Language="F#" Value="member this.XHeight : int" Usage="CoreGraphics.CGFont.XHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
