<Type Name="CGPath" FullName="CoreGraphics.CGPath">
  <TypeSignature Language="C#" Value="public class CGPath : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CGPath extends System.Object implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreGraphics.CGPath" />
  <TypeSignature Language="F#" Value="type CGPath = class&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A drawing path is made up of lines, arcs, beziers that can be used to paint.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/WeatherMap/">WeatherMap</related>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/CoreAnimation/">Example_CoreAnimation</related>
    <related type="sample" href="https://github.com/xamarin/ios-samples/tree/master/Drawing/">Example_Drawing</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an empty <see cref="T:CoreGraphics.CGPath" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGPath (CoreGraphics.CGPath basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CoreGraphics.CGPath basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.#ctor(CoreGraphics.CGPath)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGPath : CoreGraphics.CGPath -&gt; CoreGraphics.CGPath" Usage="new CoreGraphics.CGPath basePath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="basePath" Type="CoreGraphics.CGPath" />
      </Parameters>
      <Docs>
        <param name="basePath">To be added.</param>
        <summary>Creates an new <see cref="T:CoreGraphics.CGPath" /> from the provided <paramref name="basePath" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGPath (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGPath : nativeint -&gt; CoreGraphics.CGPath" Usage="new CoreGraphics.CGPath handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CGPath (CoreGraphics.CGPath reference, CoreGraphics.CGAffineTransform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CoreGraphics.CGPath reference, valuetype CoreGraphics.CGAffineTransform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.#ctor(CoreGraphics.CGPath,CoreGraphics.CGAffineTransform)" />
      <MemberSignature Language="F#" Value="new CoreGraphics.CGPath : CoreGraphics.CGPath * CoreGraphics.CGAffineTransform -&gt; CoreGraphics.CGPath" Usage="new CoreGraphics.CGPath (reference, transform)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reference" Type="CoreGraphics.CGPath" />
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
      </Parameters>
      <Docs>
        <param name="reference">To be added.</param>
        <param name="transform">To be added.</param>
        <summary>Creates an new <see cref="T:CoreGraphics.CGPath" /> from the provided <paramref name="reference" /> path by applying the provided <paramref name="transform" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (nfloat x, nfloat y, nfloat radius, nfloat startAngle, nfloat endAngle, bool clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.nfloat x, valuetype System.nfloat y, valuetype System.nfloat radius, valuetype System.nfloat startAngle, valuetype System.nfloat endAngle, bool clockwise) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddArc(System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.AddArc : nfloat * nfloat * nfloat * nfloat * nfloat * bool -&gt; unit" Usage="cGPath.AddArc (x, y, radius, startAngle, endAngle, clockwise)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
        <Parameter Name="radius" Type="System.nfloat" />
        <Parameter Name="startAngle" Type="System.nfloat" />
        <Parameter Name="endAngle" Type="System.nfloat" />
        <Parameter Name="clockwise" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="startAngle">To be added.</param>
        <param name="endAngle">To be added.</param>
        <param name="clockwise">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (CoreGraphics.CGAffineTransform m, nfloat x, nfloat y, nfloat radius, nfloat startAngle, nfloat endAngle, bool clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype CoreGraphics.CGAffineTransform m, valuetype System.nfloat x, valuetype System.nfloat y, valuetype System.nfloat radius, valuetype System.nfloat startAngle, valuetype System.nfloat endAngle, bool clockwise) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddArc(CoreGraphics.CGAffineTransform,System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.AddArc : CoreGraphics.CGAffineTransform * nfloat * nfloat * nfloat * nfloat * nfloat * bool -&gt; unit" Usage="cGPath.AddArc (m, x, y, radius, startAngle, endAngle, clockwise)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
        <Parameter Name="radius" Type="System.nfloat" />
        <Parameter Name="startAngle" Type="System.nfloat" />
        <Parameter Name="endAngle" Type="System.nfloat" />
        <Parameter Name="clockwise" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="startAngle">To be added.</param>
        <param name="endAngle">To be added.</param>
        <param name="clockwise">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArcToPoint">
      <MemberSignature Language="C#" Value="public void AddArcToPoint (nfloat x1, nfloat y1, nfloat x2, nfloat y2, nfloat radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArcToPoint(valuetype System.nfloat x1, valuetype System.nfloat y1, valuetype System.nfloat x2, valuetype System.nfloat y2, valuetype System.nfloat radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddArcToPoint(System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddArcToPoint : nfloat * nfloat * nfloat * nfloat * nfloat -&gt; unit" Usage="cGPath.AddArcToPoint (x1, y1, x2, y2, radius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.nfloat" />
        <Parameter Name="y1" Type="System.nfloat" />
        <Parameter Name="x2" Type="System.nfloat" />
        <Parameter Name="y2" Type="System.nfloat" />
        <Parameter Name="radius" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="x1">To be added.</param>
        <param name="y1">To be added.</param>
        <param name="x2">To be added.</param>
        <param name="y2">To be added.</param>
        <param name="radius">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArcToPoint">
      <MemberSignature Language="C#" Value="public void AddArcToPoint (CoreGraphics.CGAffineTransform m, nfloat x1, nfloat y1, nfloat x2, nfloat y2, nfloat radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArcToPoint(valuetype CoreGraphics.CGAffineTransform m, valuetype System.nfloat x1, valuetype System.nfloat y1, valuetype System.nfloat x2, valuetype System.nfloat y2, valuetype System.nfloat radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddArcToPoint(CoreGraphics.CGAffineTransform,System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddArcToPoint : CoreGraphics.CGAffineTransform * nfloat * nfloat * nfloat * nfloat * nfloat -&gt; unit" Usage="cGPath.AddArcToPoint (m, x1, y1, x2, y2, radius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="x1" Type="System.nfloat" />
        <Parameter Name="y1" Type="System.nfloat" />
        <Parameter Name="x2" Type="System.nfloat" />
        <Parameter Name="y2" Type="System.nfloat" />
        <Parameter Name="radius" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="x1">To be added.</param>
        <param name="y1">To be added.</param>
        <param name="x2">To be added.</param>
        <param name="y2">To be added.</param>
        <param name="radius">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurveToPoint">
      <MemberSignature Language="C#" Value="public void AddCurveToPoint (CoreGraphics.CGPoint cp1, CoreGraphics.CGPoint cp2, CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurveToPoint(valuetype CoreGraphics.CGPoint cp1, valuetype CoreGraphics.CGPoint cp2, valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddCurveToPoint(CoreGraphics.CGPoint,CoreGraphics.CGPoint,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.AddCurveToPoint : CoreGraphics.CGPoint * CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit" Usage="cGPath.AddCurveToPoint (cp1, cp2, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp1" Type="CoreGraphics.CGPoint" />
        <Parameter Name="cp2" Type="CoreGraphics.CGPoint" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="cp1">To be added.</param>
        <param name="cp2">To be added.</param>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurveToPoint">
      <MemberSignature Language="C#" Value="public void AddCurveToPoint (CoreGraphics.CGAffineTransform transform, CoreGraphics.CGPoint cp1, CoreGraphics.CGPoint cp2, CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurveToPoint(valuetype CoreGraphics.CGAffineTransform transform, valuetype CoreGraphics.CGPoint cp1, valuetype CoreGraphics.CGPoint cp2, valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddCurveToPoint(CoreGraphics.CGAffineTransform,CoreGraphics.CGPoint,CoreGraphics.CGPoint,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.AddCurveToPoint : CoreGraphics.CGAffineTransform * CoreGraphics.CGPoint * CoreGraphics.CGPoint * CoreGraphics.CGPoint -&gt; unit" Usage="cGPath.AddCurveToPoint (transform, cp1, cp2, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="cp1" Type="CoreGraphics.CGPoint" />
        <Parameter Name="cp2" Type="CoreGraphics.CGPoint" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="cp1">To be added.</param>
        <param name="cp2">To be added.</param>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurveToPoint">
      <MemberSignature Language="C#" Value="public void AddCurveToPoint (nfloat cp1x, nfloat cp1y, nfloat cp2x, nfloat cp2y, nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurveToPoint(valuetype System.nfloat cp1x, valuetype System.nfloat cp1y, valuetype System.nfloat cp2x, valuetype System.nfloat cp2y, valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddCurveToPoint(System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddCurveToPoint : nfloat * nfloat * nfloat * nfloat * nfloat * nfloat -&gt; unit" Usage="cGPath.AddCurveToPoint (cp1x, cp1y, cp2x, cp2y, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp1x" Type="System.nfloat" />
        <Parameter Name="cp1y" Type="System.nfloat" />
        <Parameter Name="cp2x" Type="System.nfloat" />
        <Parameter Name="cp2y" Type="System.nfloat" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="cp1x">To be added.</param>
        <param name="cp1y">To be added.</param>
        <param name="cp2x">To be added.</param>
        <param name="cp2y">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurveToPoint">
      <MemberSignature Language="C#" Value="public void AddCurveToPoint (CoreGraphics.CGAffineTransform transform, nfloat cp1x, nfloat cp1y, nfloat cp2x, nfloat cp2y, nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurveToPoint(valuetype CoreGraphics.CGAffineTransform transform, valuetype System.nfloat cp1x, valuetype System.nfloat cp1y, valuetype System.nfloat cp2x, valuetype System.nfloat cp2y, valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddCurveToPoint(CoreGraphics.CGAffineTransform,System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddCurveToPoint : CoreGraphics.CGAffineTransform * nfloat * nfloat * nfloat * nfloat * nfloat * nfloat -&gt; unit" Usage="cGPath.AddCurveToPoint (transform, cp1x, cp1y, cp2x, cp2y, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="cp1x" Type="System.nfloat" />
        <Parameter Name="cp1y" Type="System.nfloat" />
        <Parameter Name="cp2x" Type="System.nfloat" />
        <Parameter Name="cp2y" Type="System.nfloat" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="cp1x">To be added.</param>
        <param name="cp1y">To be added.</param>
        <param name="cp2x">To be added.</param>
        <param name="cp2y">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipseInRect">
      <MemberSignature Language="C#" Value="public void AddEllipseInRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipseInRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddEllipseInRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="member this.AddEllipseInRect : CoreGraphics.CGRect -&gt; unit" Usage="cGPath.AddEllipseInRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipseInRect">
      <MemberSignature Language="C#" Value="public void AddEllipseInRect (CoreGraphics.CGAffineTransform m, CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipseInRect(valuetype CoreGraphics.CGAffineTransform m, valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddEllipseInRect(CoreGraphics.CGAffineTransform,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="member this.AddEllipseInRect : CoreGraphics.CGAffineTransform * CoreGraphics.CGRect -&gt; unit" Usage="cGPath.AddEllipseInRect (m, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (CoreGraphics.CGPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype CoreGraphics.CGPoint[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddLines(CoreGraphics.CGPoint[])" />
      <MemberSignature Language="F#" Value="member this.AddLines : CoreGraphics.CGPoint[] -&gt; unit" Usage="cGPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="CoreGraphics.CGPoint[]" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (CoreGraphics.CGAffineTransform m, CoreGraphics.CGPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype CoreGraphics.CGAffineTransform m, valuetype CoreGraphics.CGPoint[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddLines(CoreGraphics.CGAffineTransform,CoreGraphics.CGPoint[])" />
      <MemberSignature Language="F#" Value="member this.AddLines : CoreGraphics.CGAffineTransform * CoreGraphics.CGPoint[] -&gt; unit" Usage="cGPath.AddLines (m, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="points" Type="CoreGraphics.CGPoint[]" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="points">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (CoreGraphics.CGPoint[] points, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype CoreGraphics.CGPoint[] points, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddLines(CoreGraphics.CGPoint[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AddLines : CoreGraphics.CGPoint[] * int -&gt; unit" Usage="cGPath.AddLines (points, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="CoreGraphics.CGPoint[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="points">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (CoreGraphics.CGAffineTransform m, CoreGraphics.CGPoint[] points, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype CoreGraphics.CGAffineTransform m, valuetype CoreGraphics.CGPoint[] points, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddLines(CoreGraphics.CGAffineTransform,CoreGraphics.CGPoint[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AddLines : CoreGraphics.CGAffineTransform * CoreGraphics.CGPoint[] * int -&gt; unit" Usage="cGPath.AddLines (m, points, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="points" Type="CoreGraphics.CGPoint[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="points">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLineToPoint">
      <MemberSignature Language="C#" Value="public void AddLineToPoint (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLineToPoint(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddLineToPoint(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.AddLineToPoint : CoreGraphics.CGPoint -&gt; unit" Usage="cGPath.AddLineToPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLineToPoint">
      <MemberSignature Language="C#" Value="public void AddLineToPoint (CoreGraphics.CGAffineTransform transform, CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLineToPoint(valuetype CoreGraphics.CGAffineTransform transform, valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddLineToPoint(CoreGraphics.CGAffineTransform,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.AddLineToPoint : CoreGraphics.CGAffineTransform * CoreGraphics.CGPoint -&gt; unit" Usage="cGPath.AddLineToPoint (transform, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLineToPoint">
      <MemberSignature Language="C#" Value="public void AddLineToPoint (nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLineToPoint(valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddLineToPoint(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddLineToPoint : nfloat * nfloat -&gt; unit" Usage="cGPath.AddLineToPoint (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLineToPoint">
      <MemberSignature Language="C#" Value="public void AddLineToPoint (CoreGraphics.CGAffineTransform transform, nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLineToPoint(valuetype CoreGraphics.CGAffineTransform transform, valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddLineToPoint(CoreGraphics.CGAffineTransform,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddLineToPoint : CoreGraphics.CGAffineTransform * nfloat * nfloat -&gt; unit" Usage="cGPath.AddLineToPoint (transform, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (CoreGraphics.CGPath path2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class CoreGraphics.CGPath path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddPath(CoreGraphics.CGPath)" />
      <MemberSignature Language="F#" Value="member this.AddPath : CoreGraphics.CGPath -&gt; unit" Usage="cGPath.AddPath path2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path2" Type="CoreGraphics.CGPath" />
      </Parameters>
      <Docs>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (CoreGraphics.CGAffineTransform t, CoreGraphics.CGPath path2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(valuetype CoreGraphics.CGAffineTransform t, class CoreGraphics.CGPath path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddPath(CoreGraphics.CGAffineTransform,CoreGraphics.CGPath)" />
      <MemberSignature Language="F#" Value="member this.AddPath : CoreGraphics.CGAffineTransform * CoreGraphics.CGPath -&gt; unit" Usage="cGPath.AddPath (t, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="path2" Type="CoreGraphics.CGPath" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQuadCurveToPoint">
      <MemberSignature Language="C#" Value="public void AddQuadCurveToPoint (nfloat cpx, nfloat cpy, nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddQuadCurveToPoint(valuetype System.nfloat cpx, valuetype System.nfloat cpy, valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddQuadCurveToPoint(System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddQuadCurveToPoint : nfloat * nfloat * nfloat * nfloat -&gt; unit" Usage="cGPath.AddQuadCurveToPoint (cpx, cpy, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cpx" Type="System.nfloat" />
        <Parameter Name="cpy" Type="System.nfloat" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="cpx">To be added.</param>
        <param name="cpy">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQuadCurveToPoint">
      <MemberSignature Language="C#" Value="public void AddQuadCurveToPoint (CoreGraphics.CGAffineTransform transform, nfloat cpx, nfloat cpy, nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddQuadCurveToPoint(valuetype CoreGraphics.CGAffineTransform transform, valuetype System.nfloat cpx, valuetype System.nfloat cpy, valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddQuadCurveToPoint(CoreGraphics.CGAffineTransform,System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddQuadCurveToPoint : CoreGraphics.CGAffineTransform * nfloat * nfloat * nfloat * nfloat -&gt; unit" Usage="cGPath.AddQuadCurveToPoint (transform, cpx, cpy, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="cpx" Type="System.nfloat" />
        <Parameter Name="cpy" Type="System.nfloat" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="cpx">To be added.</param>
        <param name="cpy">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRect">
      <MemberSignature Language="C#" Value="public void AddRect (CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRect(valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="member this.AddRect : CoreGraphics.CGRect -&gt; unit" Usage="cGPath.AddRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRect">
      <MemberSignature Language="C#" Value="public void AddRect (CoreGraphics.CGAffineTransform transform, CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRect(valuetype CoreGraphics.CGAffineTransform transform, valuetype CoreGraphics.CGRect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRect(CoreGraphics.CGAffineTransform,CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="member this.AddRect : CoreGraphics.CGAffineTransform * CoreGraphics.CGRect -&gt; unit" Usage="cGPath.AddRect (transform, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRects">
      <MemberSignature Language="C#" Value="public void AddRects (CoreGraphics.CGRect[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRects(valuetype CoreGraphics.CGRect[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRects(CoreGraphics.CGRect[])" />
      <MemberSignature Language="F#" Value="member this.AddRects : CoreGraphics.CGRect[] -&gt; unit" Usage="cGPath.AddRects rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="CoreGraphics.CGRect[]" />
      </Parameters>
      <Docs>
        <param name="rects">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRects">
      <MemberSignature Language="C#" Value="public void AddRects (CoreGraphics.CGAffineTransform m, CoreGraphics.CGRect[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRects(valuetype CoreGraphics.CGAffineTransform m, valuetype CoreGraphics.CGRect[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRects(CoreGraphics.CGAffineTransform,CoreGraphics.CGRect[])" />
      <MemberSignature Language="F#" Value="member this.AddRects : CoreGraphics.CGAffineTransform * CoreGraphics.CGRect[] -&gt; unit" Usage="cGPath.AddRects (m, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="rects" Type="CoreGraphics.CGRect[]" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="rects">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRects">
      <MemberSignature Language="C#" Value="public void AddRects (CoreGraphics.CGRect[] rects, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRects(valuetype CoreGraphics.CGRect[] rects, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRects(CoreGraphics.CGRect[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AddRects : CoreGraphics.CGRect[] * int -&gt; unit" Usage="cGPath.AddRects (rects, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="CoreGraphics.CGRect[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rects">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRects">
      <MemberSignature Language="C#" Value="public void AddRects (CoreGraphics.CGAffineTransform m, CoreGraphics.CGRect[] rects, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRects(valuetype CoreGraphics.CGAffineTransform m, valuetype CoreGraphics.CGRect[] rects, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRects(CoreGraphics.CGAffineTransform,CoreGraphics.CGRect[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AddRects : CoreGraphics.CGAffineTransform * CoreGraphics.CGRect[] * int -&gt; unit" Usage="cGPath.AddRects (m, rects, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="rects" Type="CoreGraphics.CGRect[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="rects">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRelativeArc">
      <MemberSignature Language="C#" Value="public void AddRelativeArc (nfloat x, nfloat y, nfloat radius, nfloat startAngle, nfloat delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRelativeArc(valuetype System.nfloat x, valuetype System.nfloat y, valuetype System.nfloat radius, valuetype System.nfloat startAngle, valuetype System.nfloat delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRelativeArc(System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddRelativeArc : nfloat * nfloat * nfloat * nfloat * nfloat -&gt; unit" Usage="cGPath.AddRelativeArc (x, y, radius, startAngle, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
        <Parameter Name="radius" Type="System.nfloat" />
        <Parameter Name="startAngle" Type="System.nfloat" />
        <Parameter Name="delta" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="startAngle">To be added.</param>
        <param name="delta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRelativeArc">
      <MemberSignature Language="C#" Value="public void AddRelativeArc (CoreGraphics.CGAffineTransform m, nfloat x, nfloat y, nfloat radius, nfloat startAngle, nfloat delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRelativeArc(valuetype CoreGraphics.CGAffineTransform m, valuetype System.nfloat x, valuetype System.nfloat y, valuetype System.nfloat radius, valuetype System.nfloat startAngle, valuetype System.nfloat delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRelativeArc(CoreGraphics.CGAffineTransform,System.nfloat,System.nfloat,System.nfloat,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddRelativeArc : CoreGraphics.CGAffineTransform * nfloat * nfloat * nfloat * nfloat * nfloat -&gt; unit" Usage="cGPath.AddRelativeArc (m, x, y, radius, startAngle, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
        <Parameter Name="radius" Type="System.nfloat" />
        <Parameter Name="startAngle" Type="System.nfloat" />
        <Parameter Name="delta" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="startAngle">To be added.</param>
        <param name="delta">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoundedRect">
      <MemberSignature Language="C#" Value="public void AddRoundedRect (CoreGraphics.CGRect rect, nfloat cornerWidth, nfloat cornerHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRoundedRect(valuetype CoreGraphics.CGRect rect, valuetype System.nfloat cornerWidth, valuetype System.nfloat cornerHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRoundedRect(CoreGraphics.CGRect,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddRoundedRect : CoreGraphics.CGRect * nfloat * nfloat -&gt; unit" Usage="cGPath.AddRoundedRect (rect, cornerWidth, cornerHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="cornerWidth" Type="System.nfloat" />
        <Parameter Name="cornerHeight" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="cornerWidth">To be added.</param>
        <param name="cornerHeight">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoundedRect">
      <MemberSignature Language="C#" Value="public void AddRoundedRect (CoreGraphics.CGAffineTransform transform, CoreGraphics.CGRect rect, nfloat cornerWidth, nfloat cornerHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRoundedRect(valuetype CoreGraphics.CGAffineTransform transform, valuetype CoreGraphics.CGRect rect, valuetype System.nfloat cornerWidth, valuetype System.nfloat cornerHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.AddRoundedRect(CoreGraphics.CGAffineTransform,CoreGraphics.CGRect,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.AddRoundedRect : CoreGraphics.CGAffineTransform * CoreGraphics.CGRect * nfloat * nfloat -&gt; unit" Usage="cGPath.AddRoundedRect (transform, rect, cornerWidth, cornerHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="rect" Type="CoreGraphics.CGRect" />
        <Parameter Name="cornerWidth" Type="System.nfloat" />
        <Parameter Name="cornerHeight" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="rect">To be added.</param>
        <param name="cornerWidth">To be added.</param>
        <param name="cornerHeight">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply (CoreGraphics.CGPath.ApplierFunction func);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply(class CoreGraphics.CGPath/ApplierFunction func) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.Apply(CoreGraphics.CGPath.ApplierFunction)" />
      <MemberSignature Language="F#" Value="member this.Apply : CoreGraphics.CGPath.ApplierFunction -&gt; unit" Usage="cGPath.Apply func" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="CoreGraphics.CGPath+ApplierFunction" />
      </Parameters>
      <Docs>
        <param name="func">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingBox">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGRect BoundingBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGRect BoundingBox" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGPath.BoundingBox" />
      <MemberSignature Language="F#" Value="member this.BoundingBox : CoreGraphics.CGRect" Usage="CoreGraphics.CGPath.BoundingBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseSubpath">
      <MemberSignature Language="C#" Value="public void CloseSubpath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseSubpath() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.CloseSubpath" />
      <MemberSignature Language="F#" Value="member this.CloseSubpath : unit -&gt; unit" Usage="cGPath.CloseSubpath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPoint">
      <MemberSignature Language="C#" Value="public bool ContainsPoint (CoreGraphics.CGPoint point, bool eoFill);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPoint(valuetype CoreGraphics.CGPoint point, bool eoFill) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.ContainsPoint(CoreGraphics.CGPoint,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ContainsPoint : CoreGraphics.CGPoint * bool -&gt; bool" Usage="cGPath.ContainsPoint (point, eoFill)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
        <Parameter Name="eoFill" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="eoFill">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPoint">
      <MemberSignature Language="C#" Value="public bool ContainsPoint (CoreGraphics.CGAffineTransform m, CoreGraphics.CGPoint point, bool eoFill);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPoint(valuetype CoreGraphics.CGAffineTransform m, valuetype CoreGraphics.CGPoint point, bool eoFill) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.ContainsPoint(CoreGraphics.CGAffineTransform,CoreGraphics.CGPoint,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ContainsPoint : CoreGraphics.CGAffineTransform * CoreGraphics.CGPoint * bool -&gt; bool" Usage="cGPath.ContainsPoint (m, point, eoFill)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
        <Parameter Name="eoFill" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="point">To be added.</param>
        <param name="eoFill">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPath Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGPath Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.Copy" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; CoreGraphics.CGPath" Usage="cGPath.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyByDashingPath">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPath CopyByDashingPath (nfloat[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGPath CopyByDashingPath(valuetype System.nfloat[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.CopyByDashingPath(System.nfloat[])" />
      <MemberSignature Language="F#" Value="member this.CopyByDashingPath : nfloat[] -&gt; CoreGraphics.CGPath" Usage="cGPath.CopyByDashingPath lengths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lengths" Type="System.nfloat[]" />
      </Parameters>
      <Docs>
        <param name="lengths">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyByDashingPath">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPath CopyByDashingPath (CoreGraphics.CGAffineTransform transform, nfloat[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGPath CopyByDashingPath(valuetype CoreGraphics.CGAffineTransform transform, valuetype System.nfloat[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.CopyByDashingPath(CoreGraphics.CGAffineTransform,System.nfloat[])" />
      <MemberSignature Language="F#" Value="member this.CopyByDashingPath : CoreGraphics.CGAffineTransform * nfloat[] -&gt; CoreGraphics.CGPath" Usage="cGPath.CopyByDashingPath (transform, lengths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="lengths" Type="System.nfloat[]" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="lengths">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyByDashingPath">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPath CopyByDashingPath (nfloat[] lengths, nfloat phase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGPath CopyByDashingPath(valuetype System.nfloat[] lengths, valuetype System.nfloat phase) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.CopyByDashingPath(System.nfloat[],System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.CopyByDashingPath : nfloat[] * nfloat -&gt; CoreGraphics.CGPath" Usage="cGPath.CopyByDashingPath (lengths, phase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lengths" Type="System.nfloat[]" />
        <Parameter Name="phase" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="lengths">To be added.</param>
        <param name="phase">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyByDashingPath">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPath CopyByDashingPath (CoreGraphics.CGAffineTransform transform, nfloat[] lengths, nfloat phase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGPath CopyByDashingPath(valuetype CoreGraphics.CGAffineTransform transform, valuetype System.nfloat[] lengths, valuetype System.nfloat phase) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.CopyByDashingPath(CoreGraphics.CGAffineTransform,System.nfloat[],System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.CopyByDashingPath : CoreGraphics.CGAffineTransform * nfloat[] * nfloat -&gt; CoreGraphics.CGPath" Usage="cGPath.CopyByDashingPath (transform, lengths, phase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="lengths" Type="System.nfloat[]" />
        <Parameter Name="phase" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="lengths">To be added.</param>
        <param name="phase">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyByStrokingPath">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPath CopyByStrokingPath (nfloat lineWidth, CoreGraphics.CGLineCap lineCap, CoreGraphics.CGLineJoin lineJoin, nfloat miterLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGPath CopyByStrokingPath(valuetype System.nfloat lineWidth, valuetype CoreGraphics.CGLineCap lineCap, valuetype CoreGraphics.CGLineJoin lineJoin, valuetype System.nfloat miterLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.CopyByStrokingPath(System.nfloat,CoreGraphics.CGLineCap,CoreGraphics.CGLineJoin,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.CopyByStrokingPath : nfloat * CoreGraphics.CGLineCap * CoreGraphics.CGLineJoin * nfloat -&gt; CoreGraphics.CGPath" Usage="cGPath.CopyByStrokingPath (lineWidth, lineCap, lineJoin, miterLimit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineWidth" Type="System.nfloat" />
        <Parameter Name="lineCap" Type="CoreGraphics.CGLineCap" />
        <Parameter Name="lineJoin" Type="CoreGraphics.CGLineJoin" />
        <Parameter Name="miterLimit" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="lineWidth">To be added.</param>
        <param name="lineCap">To be added.</param>
        <param name="lineJoin">To be added.</param>
        <param name="miterLimit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyByStrokingPath">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPath CopyByStrokingPath (CoreGraphics.CGAffineTransform transform, nfloat lineWidth, CoreGraphics.CGLineCap lineCap, CoreGraphics.CGLineJoin lineJoin, nfloat miterLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGPath CopyByStrokingPath(valuetype CoreGraphics.CGAffineTransform transform, valuetype System.nfloat lineWidth, valuetype CoreGraphics.CGLineCap lineCap, valuetype CoreGraphics.CGLineJoin lineJoin, valuetype System.nfloat miterLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.CopyByStrokingPath(CoreGraphics.CGAffineTransform,System.nfloat,CoreGraphics.CGLineCap,CoreGraphics.CGLineJoin,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.CopyByStrokingPath : CoreGraphics.CGAffineTransform * nfloat * CoreGraphics.CGLineCap * CoreGraphics.CGLineJoin * nfloat -&gt; CoreGraphics.CGPath" Usage="cGPath.CopyByStrokingPath (transform, lineWidth, lineCap, lineJoin, miterLimit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="lineWidth" Type="System.nfloat" />
        <Parameter Name="lineCap" Type="CoreGraphics.CGLineCap" />
        <Parameter Name="lineJoin" Type="CoreGraphics.CGLineJoin" />
        <Parameter Name="miterLimit" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="lineWidth">To be added.</param>
        <param name="lineCap">To be added.</param>
        <param name="lineJoin">To be added.</param>
        <param name="miterLimit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyByTransformingPath">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPath CopyByTransformingPath (CoreGraphics.CGAffineTransform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreGraphics.CGPath CopyByTransformingPath(valuetype CoreGraphics.CGAffineTransform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.CopyByTransformingPath(CoreGraphics.CGAffineTransform)" />
      <MemberSignature Language="F#" Value="member this.CopyByTransformingPath : CoreGraphics.CGAffineTransform -&gt; CoreGraphics.CGPath" Usage="cGPath.CopyByTransformingPath transform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPoint">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGPoint CurrentPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGPoint CurrentPoint" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGPath.CurrentPoint" />
      <MemberSignature Language="F#" Value="member this.CurrentPoint : CoreGraphics.CGPoint" Usage="CoreGraphics.CGPath.CurrentPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cGPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CGPath object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CGPath class.</para>
          <para>Calling the Dispose method when the application is finished using the CGPath ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cGPath.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CGPath object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CGPath class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CGPath ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EllipseFromRect">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGPath EllipseFromRect (CoreGraphics.CGRect boundingRect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGPath EllipseFromRect(valuetype CoreGraphics.CGRect boundingRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.EllipseFromRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member EllipseFromRect : CoreGraphics.CGRect -&gt; CoreGraphics.CGPath" Usage="CoreGraphics.CGPath.EllipseFromRect boundingRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="boundingRect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="boundingRect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EllipseFromRect">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGPath EllipseFromRect (CoreGraphics.CGRect boundingRect, CoreGraphics.CGAffineTransform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGPath EllipseFromRect(valuetype CoreGraphics.CGRect boundingRect, valuetype CoreGraphics.CGAffineTransform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.EllipseFromRect(CoreGraphics.CGRect,CoreGraphics.CGAffineTransform)" />
      <MemberSignature Language="F#" Value="static member EllipseFromRect : CoreGraphics.CGRect * CoreGraphics.CGAffineTransform -&gt; CoreGraphics.CGPath" Usage="CoreGraphics.CGPath.EllipseFromRect (boundingRect, transform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="boundingRect" Type="CoreGraphics.CGRect" />
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
      </Parameters>
      <Docs>
        <param name="boundingRect">To be added.</param>
        <param name="transform">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.Equals(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cGPath.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CGPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cGPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CGPath object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRect">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGPath FromRect (CoreGraphics.CGRect rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGPath FromRect(valuetype CoreGraphics.CGRect rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.FromRect(CoreGraphics.CGRect)" />
      <MemberSignature Language="F#" Value="static member FromRect : CoreGraphics.CGRect -&gt; CoreGraphics.CGPath" Usage="CoreGraphics.CGPath.FromRect rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="rectangle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRect">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGPath FromRect (CoreGraphics.CGRect rectangle, CoreGraphics.CGAffineTransform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGPath FromRect(valuetype CoreGraphics.CGRect rectangle, valuetype CoreGraphics.CGAffineTransform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.FromRect(CoreGraphics.CGRect,CoreGraphics.CGAffineTransform)" />
      <MemberSignature Language="F#" Value="static member FromRect : CoreGraphics.CGRect * CoreGraphics.CGAffineTransform -&gt; CoreGraphics.CGPath" Usage="CoreGraphics.CGPath.FromRect (rectangle, transform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="CoreGraphics.CGRect" />
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
      </Parameters>
      <Docs>
        <param name="rectangle">To be added.</param>
        <param name="transform">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRoundedRect">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGPath FromRoundedRect (CoreGraphics.CGRect rectangle, nfloat cornerWidth, nfloat cornerHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGPath FromRoundedRect(valuetype CoreGraphics.CGRect rectangle, valuetype System.nfloat cornerWidth, valuetype System.nfloat cornerHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.FromRoundedRect(CoreGraphics.CGRect,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="static member FromRoundedRect : CoreGraphics.CGRect * nfloat * nfloat -&gt; CoreGraphics.CGPath" Usage="CoreGraphics.CGPath.FromRoundedRect (rectangle, cornerWidth, cornerHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="CoreGraphics.CGRect" />
        <Parameter Name="cornerWidth" Type="System.nfloat" />
        <Parameter Name="cornerHeight" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="rectangle">To be added.</param>
        <param name="cornerWidth">To be added.</param>
        <param name="cornerHeight">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRoundedRect">
      <MemberSignature Language="C#" Value="public static CoreGraphics.CGPath FromRoundedRect (CoreGraphics.CGRect rectangle, nfloat cornerWidth, nfloat cornerHeight, CoreGraphics.CGAffineTransform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGPath FromRoundedRect(valuetype CoreGraphics.CGRect rectangle, valuetype System.nfloat cornerWidth, valuetype System.nfloat cornerHeight, valuetype CoreGraphics.CGAffineTransform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.FromRoundedRect(CoreGraphics.CGRect,System.nfloat,System.nfloat,CoreGraphics.CGAffineTransform)" />
      <MemberSignature Language="F#" Value="static member FromRoundedRect : CoreGraphics.CGRect * nfloat * nfloat * CoreGraphics.CGAffineTransform -&gt; CoreGraphics.CGPath" Usage="CoreGraphics.CGPath.FromRoundedRect (rectangle, cornerWidth, cornerHeight, transform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="CoreGraphics.CGRect" />
        <Parameter Name="cornerWidth" Type="System.nfloat" />
        <Parameter Name="cornerHeight" Type="System.nfloat" />
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
      </Parameters>
      <Docs>
        <param name="rectangle">To be added.</param>
        <param name="cornerWidth">To be added.</param>
        <param name="cornerHeight">To be added.</param>
        <param name="transform">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.GetHashCode" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cGPath.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGPath.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreGraphics.CGPath.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGPath.IsEmpty" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="CoreGraphics.CGPath.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRect">
      <MemberSignature Language="C#" Value="public bool IsRect (out CoreGraphics.CGRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRect([out] valuetype CoreGraphics.CGRect&amp; rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.IsRect(CoreGraphics.CGRect@)" />
      <MemberSignature Language="F#" Value="member this.IsRect :  -&gt; bool" Usage="cGPath.IsRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="CoreGraphics.CGRect" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToPoint">
      <MemberSignature Language="C#" Value="public void MoveToPoint (CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveToPoint(valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.MoveToPoint(CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.MoveToPoint : CoreGraphics.CGPoint -&gt; unit" Usage="cGPath.MoveToPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToPoint">
      <MemberSignature Language="C#" Value="public void MoveToPoint (CoreGraphics.CGAffineTransform transform, CoreGraphics.CGPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveToPoint(valuetype CoreGraphics.CGAffineTransform transform, valuetype CoreGraphics.CGPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.MoveToPoint(CoreGraphics.CGAffineTransform,CoreGraphics.CGPoint)" />
      <MemberSignature Language="F#" Value="member this.MoveToPoint : CoreGraphics.CGAffineTransform * CoreGraphics.CGPoint -&gt; unit" Usage="cGPath.MoveToPoint (transform, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="point" Type="CoreGraphics.CGPoint" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToPoint">
      <MemberSignature Language="C#" Value="public void MoveToPoint (nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveToPoint(valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.MoveToPoint(System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.MoveToPoint : nfloat * nfloat -&gt; unit" Usage="cGPath.MoveToPoint (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToPoint">
      <MemberSignature Language="C#" Value="public void MoveToPoint (CoreGraphics.CGAffineTransform transform, nfloat x, nfloat y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveToPoint(valuetype CoreGraphics.CGAffineTransform transform, valuetype System.nfloat x, valuetype System.nfloat y) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.MoveToPoint(CoreGraphics.CGAffineTransform,System.nfloat,System.nfloat)" />
      <MemberSignature Language="F#" Value="member this.MoveToPoint : CoreGraphics.CGAffineTransform * nfloat * nfloat -&gt; unit" Usage="cGPath.MoveToPoint (transform, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="CoreGraphics.CGAffineTransform" />
        <Parameter Name="x" Type="System.nfloat" />
        <Parameter Name="y" Type="System.nfloat" />
      </Parameters>
      <Docs>
        <param name="transform">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (CoreGraphics.CGPath path1, CoreGraphics.CGPath path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class CoreGraphics.CGPath path1, class CoreGraphics.CGPath path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.op_Equality(CoreGraphics.CGPath,CoreGraphics.CGPath)" />
      <MemberSignature Language="F#" Value="static member ( = ) : CoreGraphics.CGPath * CoreGraphics.CGPath -&gt; bool" Usage="path1 = path2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="CoreGraphics.CGPath" />
        <Parameter Name="path2" Type="CoreGraphics.CGPath" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (CoreGraphics.CGPath path1, CoreGraphics.CGPath path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class CoreGraphics.CGPath path1, class CoreGraphics.CGPath path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreGraphics.CGPath.op_Inequality(CoreGraphics.CGPath,CoreGraphics.CGPath)" />
      <MemberSignature Language="F#" Value="static member op_Inequality : CoreGraphics.CGPath * CoreGraphics.CGPath -&gt; bool" Usage="CoreGraphics.CGPath.op_Inequality (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="CoreGraphics.CGPath" />
        <Parameter Name="path2" Type="CoreGraphics.CGPath" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathBoundingBox">
      <MemberSignature Language="C#" Value="public CoreGraphics.CGRect PathBoundingBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreGraphics.CGRect PathBoundingBox" />
      <MemberSignature Language="DocId" Value="P:CoreGraphics.CGPath.PathBoundingBox" />
      <MemberSignature Language="F#" Value="member this.PathBoundingBox : CoreGraphics.CGRect" Usage="CoreGraphics.CGPath.PathBoundingBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreGraphics.CGRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
