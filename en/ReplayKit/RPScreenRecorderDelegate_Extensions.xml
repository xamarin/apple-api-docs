<Type Name="RPScreenRecorderDelegate_Extensions" FullName="ReplayKit.RPScreenRecorderDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class RPScreenRecorderDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RPScreenRecorderDelegate_Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:ReplayKit.RPScreenRecorderDelegate_Extensions" />
  <TypeSignature Language="F#" Value="type RPScreenRecorderDelegate_Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods to the <see cref="T:ReplayKit.IRPScreenRecorderDelegate" /> interface to support all the methods from the <see cref="T:ReplayKit.RPScreenRecorderDelegate" /> protocol.</summary>
    <remarks>
      <para>The extension methods for <see cref="T:ReplayKit.IRPScreenRecorderDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:ReplayKit.RPScreenRecorderDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidChangeAvailability">
      <MemberSignature Language="C#" Value="public static void DidChangeAvailability (this ReplayKit.IRPScreenRecorderDelegate This, ReplayKit.RPScreenRecorder screenRecorder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeAvailability(class ReplayKit.IRPScreenRecorderDelegate This, class ReplayKit.RPScreenRecorder screenRecorder) cil managed" />
      <MemberSignature Language="DocId" Value="M:ReplayKit.RPScreenRecorderDelegate_Extensions.DidChangeAvailability(ReplayKit.IRPScreenRecorderDelegate,ReplayKit.RPScreenRecorder)" />
      <MemberSignature Language="F#" Value="static member DidChangeAvailability : ReplayKit.IRPScreenRecorderDelegate * ReplayKit.RPScreenRecorder -&gt; unit" Usage="ReplayKit.RPScreenRecorderDelegate_Extensions.DidChangeAvailability (This, screenRecorder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
        <Parameter Name="screenRecorder" Type="ReplayKit.RPScreenRecorder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="screenRecorder">To be added.</param>
        <summary>Method that is called when the availability status changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStopRecording">
      <MemberSignature Language="C#" Value="public static void DidStopRecording (this ReplayKit.IRPScreenRecorderDelegate This, ReplayKit.RPScreenRecorder screenRecorder, Foundation.NSError error, ReplayKit.RPPreviewViewController previewViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopRecording(class ReplayKit.IRPScreenRecorderDelegate This, class ReplayKit.RPScreenRecorder screenRecorder, class Foundation.NSError error, class ReplayKit.RPPreviewViewController previewViewController) cil managed" />
      <MemberSignature Language="DocId" Value="M:ReplayKit.RPScreenRecorderDelegate_Extensions.DidStopRecording(ReplayKit.IRPScreenRecorderDelegate,ReplayKit.RPScreenRecorder,Foundation.NSError,ReplayKit.RPPreviewViewController)" />
      <MemberSignature Language="F#" Value="static member DidStopRecording : ReplayKit.IRPScreenRecorderDelegate * ReplayKit.RPScreenRecorder * Foundation.NSError * ReplayKit.RPPreviewViewController -&gt; unit" Usage="ReplayKit.RPScreenRecorderDelegate_Extensions.DidStopRecording (This, screenRecorder, error, previewViewController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidStopRecording(RPScreenRecorder,RPPreviewViewController,NSError)' instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DidStopRecording(RPScreenRecorder,RPPreviewViewController,NSError)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
        <Parameter Name="screenRecorder" Type="ReplayKit.RPScreenRecorder" />
        <Parameter Name="error" Type="Foundation.NSError" />
        <Parameter Name="previewViewController" Type="ReplayKit.RPPreviewViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="screenRecorder">To be added.</param>
        <param name="error">To be added.</param>
        <param name="previewViewController">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>Developers should not use this deprecated method. Developers should use 'DidStopRecording(RPScreenRecorder,RPPreviewViewController,NSError)' instead.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStopRecording">
      <MemberSignature Language="C#" Value="public static void DidStopRecording (this ReplayKit.IRPScreenRecorderDelegate This, ReplayKit.RPScreenRecorder screenRecorder, ReplayKit.RPPreviewViewController previewViewController, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopRecording(class ReplayKit.IRPScreenRecorderDelegate This, class ReplayKit.RPScreenRecorder screenRecorder, class ReplayKit.RPPreviewViewController previewViewController, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:ReplayKit.RPScreenRecorderDelegate_Extensions.DidStopRecording(ReplayKit.IRPScreenRecorderDelegate,ReplayKit.RPScreenRecorder,ReplayKit.RPPreviewViewController,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="static member DidStopRecording : ReplayKit.IRPScreenRecorderDelegate * ReplayKit.RPScreenRecorder * ReplayKit.RPPreviewViewController * Foundation.NSError -&gt; unit" Usage="ReplayKit.RPScreenRecorderDelegate_Extensions.DidStopRecording (This, screenRecorder, previewViewController, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
        <Parameter Name="screenRecorder" Type="ReplayKit.RPScreenRecorder" />
        <Parameter Name="previewViewController" Type="ReplayKit.RPPreviewViewController" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="screenRecorder">To be added.</param>
        <param name="previewViewController">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="error">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
