<Type Name="CLLocationManagerDelegate" FullName="MonoTouch.CoreLocation.CLLocationManagerDelegate">
  <TypeSignature Language="C#" Value="public class CLLocationManagerDelegate : MonoTouch.Foundation.NSObject, IDisposable, MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CLLocationManagerDelegate extends MonoTouch.Foundation.NSObject implements class MonoTouch.CoreLocation.ICLLocationManagerDelegate, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.CoreLocation.ICLLocationManagerDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CLLocationManagerDelegate", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Virtual methods on this class receive notifications from the CLLocationManager.</summary>
    <remarks>To be added.</remarks>
    <related type="sample" href="http://samples.xamarin.com/Samples/ByGuid?guid=747bae48-05f5-4dec-a9fa-4cb979056b2d">Example_CoreLocation</related>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManagerDelegate_Protocol/index.html">Apple documentation for <c>CLLocationManagerDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CLLocationManagerDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of this class with no parameters.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="classic">
      <MemberSignature Language="C#" Value="public CLLocationManagerDelegate (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>
          <para>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).   This is part of the <see cref="T:MonoTouch.Foundation.NSCoding" />  protocol.</para>
          <para>If you want to create a subclass of this object and continue to support deserialization from an archive, you should implement a constructor with an identical signature: taking a single parameter of type <see cref="T:MonoTouch.Foundation.NSCoder" /> and decorate it with the [Export("initWithCoder:"] attribute declaration.</para>
          <para>The state of this object can also be serialized by using the companion method, EncodeTo.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CLLocationManagerDelegate (MonoTouch.Foundation.NSObjectFlag t);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected CLLocationManagerDelegate (MonoTouch.Foundation.NSObjectFlag t);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When you invoke the constructor that takes the NSObjectFlag.Empty you taking advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to you.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is your responsibility to completely initialize the object if you chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if your constructors invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, you should instead chain to the proper constructor in your class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from MonoTouch's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSend_RectangleF (this.Handle, initWithFrame, frame);
	else
		Handle = MonoTouch.ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_RectangleF (this.SuperHandle, initWithFrame, frame);
}
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CLLocationManagerDelegate (IntPtr handle);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected CLLocationManagerDelegate (IntPtr handle);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoTouch.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationChanged">
      <MemberSignature Language="C#" Value="public virtual void AuthorizationChanged (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLAuthorizationStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthorizationChanged(class MonoTouch.CoreLocation.CLLocationManager manager, valuetype MonoTouch.CoreLocation.CLAuthorizationStatus status) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didChangeAuthorizationStatus:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_4_2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="status" Type="MonoTouch.CoreLocation.CLAuthorizationStatus" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="status">The new authorization status of the application.</param>
        <summary>The authorization status of the application has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredUpdatesFinished">
      <MemberSignature Language="C#" Value="public virtual void DeferredUpdatesFinished (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeferredUpdatesFinished(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didFinishDeferredUpdatesWithError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_6_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="error">The reason deferred updates are no longer available.</param>
        <summary>Location updates will no longer be deferred.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDetermineState">
      <MemberSignature Language="C#" Value="public virtual void DidDetermineState (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegionState state, MonoTouch.CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDetermineState(class MonoTouch.CoreLocation.CLLocationManager manager, valuetype MonoTouch.CoreLocation.CLRegionState state, class MonoTouch.CoreLocation.CLRegion region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didDetermineState:forRegion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_7_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="state" Type="MonoTouch.CoreLocation.CLRegionState" />
        <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="state">The new state of the region.</param>
        <param name="region">To be added.</param>
        <summary>The <paramref name="state" /> of the <paramref name="region" /> has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidRangeBeacons">
      <MemberSignature Language="C#" Value="public virtual void DidRangeBeacons (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLBeacon[] beacons, MonoTouch.CoreLocation.CLBeaconRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidRangeBeacons(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLBeacon[] beacons, class MonoTouch.CoreLocation.CLBeaconRegion region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didRangeBeacons:inRegion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_7_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="beacons" Type="MonoTouch.CoreLocation.CLBeacon[]" />
        <Parameter Name="region" Type="MonoTouch.CoreLocation.CLBeaconRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="beacons">The ranged <see cref="T:MonoTouch.CoreLocation.CLBeacon" />s.</param>
        <param name="region">To be added.</param>
        <summary>Range information was generated for <paramref name="beacons" /> in <paramref name="region" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStartMonitoringForRegion" apistyle="classic">
      <MemberSignature Language="C#" Value="public virtual void DidStartMonitoringForRegion (MonoTouch.CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidStartMonitoringForRegion(class MonoTouch.CoreLocation.CLRegion region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Do not override this method, override the (CLLocationManager, CLRegion) overload instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <summary>Monitoring began for <paramref name="region" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStartMonitoringForRegion">
      <MemberSignature Language="C#" Value="public virtual void DidStartMonitoringForRegion (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidStartMonitoringForRegion(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLRegion region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didStartMonitoringForRegion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_5_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">To be added.</param>
        <summary>Monitoring began for <paramref name="region" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidVisit">
      <MemberSignature Language="C#" Value="public virtual void DidVisit (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLVisit visit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidVisit(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLVisit visit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didVisit:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_8_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="visit" Type="MonoTouch.CoreLocation.CLVisit" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="visit">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Failed">
      <MemberSignature Language="C#" Value="public virtual void Failed (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Failed(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didFailWithError:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="error">The error that occurred.</param>
        <summary>A failure occurred while updating locations.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationsUpdated">
      <MemberSignature Language="C#" Value="public virtual void LocationsUpdated (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLLocation[] locations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LocationsUpdated(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLLocation[] locations) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didUpdateLocations:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_6_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="locations" Type="MonoTouch.CoreLocation.CLLocation[]" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="locations">To be added.</param>
        <summary>The device has generated <paramref name="locations" /> updates.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationUpdatesPaused">
      <MemberSignature Language="C#" Value="public virtual void LocationUpdatesPaused (MonoTouch.CoreLocation.CLLocationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LocationUpdatesPaused(class MonoTouch.CoreLocation.CLLocationManager manager) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManagerDidPauseLocationUpdates:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_6_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <summary>Location updating has been paused.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationUpdatesResumed">
      <MemberSignature Language="C#" Value="public virtual void LocationUpdatesResumed (MonoTouch.CoreLocation.CLLocationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LocationUpdatesResumed(class MonoTouch.CoreLocation.CLLocationManager manager) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManagerDidResumeLocationUpdates:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_6_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <summary>Location updating has restarted after pausing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MonitoringFailed">
      <MemberSignature Language="C#" Value="public virtual void MonitoringFailed (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegion region, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MonitoringFailed(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLRegion region, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:monitoringDidFailForRegion:withError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_4_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">To be added.</param>
        <param name="error">The cause of the failure.</param>
        <summary>Monitoring <paramref name="region" /> failed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangingBeaconsDidFailForRegion">
      <MemberSignature Language="C#" Value="public virtual void RangingBeaconsDidFailForRegion (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLBeaconRegion region, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RangingBeaconsDidFailForRegion(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLBeaconRegion region, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:rangingBeaconsDidFailForRegion:withError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_7_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="MonoTouch.CoreLocation.CLBeaconRegion" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
          <paramref name="error" /> occurred while attempting to get range data from <paramref name="region" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionEntered">
      <MemberSignature Language="C#" Value="public virtual void RegionEntered (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegionEntered(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLRegion region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didEnterRegion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_4_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">The region entered.</param>
        <summary>Called when the device enters a monitored region.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionLeft">
      <MemberSignature Language="C#" Value="public virtual void RegionLeft (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegionLeft(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLRegion region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didExitRegion:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_4_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="region">The region left.</param>
        <summary>Called when the device leaves a monitored region.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldDisplayHeadingCalibration">
      <MemberSignature Language="C#" Value="public virtual bool ShouldDisplayHeadingCalibration (MonoTouch.CoreLocation.CLLocationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldDisplayHeadingCalibration(class MonoTouch.CoreLocation.CLLocationManager manager) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManagerShouldDisplayHeadingCalibration:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <summary>The system believes that the magnetometer should be calibrated.</summary>
        <returns>Return <see langword="true" /> to allow the calibration dialog.</returns>
        <remarks>
          <para>This method will be executed when the system believes that the magnetometer (compass) requires calibration, either because it has not been calibrated recently or because a large change in the local magnetic field was detected.</para>
          <para>Application developers may override this method to return <see langword="false" />, in which case the calibration dialog will not appear.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedHeading">
      <MemberSignature Language="C#" Value="public virtual void UpdatedHeading (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLHeading newHeading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedHeading(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLHeading newHeading) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didUpdateHeading:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="newHeading" Type="MonoTouch.CoreLocation.CLHeading" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="newHeading">The new heading.</param>
        <summary>The device's heading has been updated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedLocation">
      <MemberSignature Language="C#" Value="public virtual void UpdatedLocation (MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLLocation newLocation, MonoTouch.CoreLocation.CLLocation oldLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdatedLocation(class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLLocation newLocation, class MonoTouch.CoreLocation.CLLocation oldLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("locationManager:didUpdateToLocation:fromLocation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Availability(Deprecated=MonoTouch.ObjCRuntime.Platform.iOS_6_0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        <Parameter Name="newLocation" Type="MonoTouch.CoreLocation.CLLocation" />
        <Parameter Name="oldLocation" Type="MonoTouch.CoreLocation.CLLocation" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:MonoTouch.CoreLocation.CLLocationManager" /> for which <c>this</c> is the delegate object.</param>
        <param name="newLocation">To be added.</param>
        <param name="oldLocation">To be added.</param>
        <summary>The device's location has been updated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
