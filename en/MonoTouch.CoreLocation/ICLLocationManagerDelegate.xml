<Type Name="ICLLocationManagerDelegate" FullName="MonoTouch.CoreLocation.ICLLocationManagerDelegate">
  <TypeSignature Language="C#" Value="public interface ICLLocationManagerDelegate : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICLLocationManagerDelegate implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="CLLocationManagerDelegate", WrapperType=typeof(MonoTouch.CoreLocation.CLLocationManagerDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UpdatedLocation", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didUpdateToLocation:fromLocation:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="UpdatedHeading", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didUpdateHeading:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="ShouldDisplayHeadingCalibration", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(System.Boolean), Selector="locationManagerShouldDisplayHeadingCalibration:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="Failed", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didFailWithError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RegionEntered", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didEnterRegion:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RegionLeft", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didExitRegion:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="MonitoringFailed", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:monitoringDidFailForRegion:withError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidStartMonitoringForRegion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didStartMonitoringForRegion:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidDetermineState", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didDetermineState:forRegion:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidRangeBeacons", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didRangeBeacons:inRegion:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="RangingBeaconsDidFailForRegion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:rangingBeaconsDidFailForRegion:withError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DidVisit", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didVisit:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="AuthorizationChanged", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didChangeAuthorizationStatus:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="LocationsUpdated", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didUpdateLocations:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="LocationUpdatesPaused", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManagerDidPauseLocationUpdates:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="LocationUpdatesResumed", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManagerDidResumeLocationUpdates:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=false, IsStatic=false, Name="DeferredUpdatesFinished", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="locationManager:didFinishDeferredUpdatesWithError:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Interface representing the required methods (if any) of the protocol <see cref="T:MonoTouch.CoreLocation.CLLocationManagerDelegate" />.</para>
    </summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:MonoTouch.CoreLocation.CLLocationManagerDelegate" />.</para>
      <para>If you create objects that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:MonoTouch.CoreLocation.CLLocationManagerDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <see cref="T:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" /> class as extension methods to the interface, allowing you to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members />
</Type>
