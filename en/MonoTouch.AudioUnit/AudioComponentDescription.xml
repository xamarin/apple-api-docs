<Type Name="AudioComponentDescription" FullName="MonoTouch.AudioUnit.AudioComponentDescription">
  <TypeSignature Language="C#" Value="public class AudioComponentDescription" apistyle="classic" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit AudioComponentDescription extends System.Object" apistyle="classic" />
  <TypeSignature Language="C#" Value="public struct AudioComponentDescription" apistyle="unified" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AudioComponentDescription extends System.ValueType" apistyle="unified" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Identifiers for a <see cref="T:MonoTouch.AudioUnit.AudioComponent" />.</summary>
    <remarks>
      <para>You can either create <see cref="T:MonoTouch.AudioUnit.AudioComponentDescription" /> using the empty constructor and setting all of the fields for the audio component, or you can use one of the convenience factory method that provide strongly typed ways of instantiating the structure.</para>
      <para>
      </para>
      <para>The following example shows how to use the various Create methods:</para>
      <para>
      </para>
      <para>
      </para>
      <example>
        <code lang="C#"><![CDATA[auGraph = new AUGraph ();
auGraph.Open ();
int effectNode = auGraph.AddNode (AudioComponentDescription.CreateConverter (AudioTypeConverter.NewTimePitch));
effectUnit = auGraph.GetNodeInfo (effectNode);

int convertToEffectNode = auGraph.AddNode (AudioComponentDescription.CreateConverter (AudioTypeConverter.AU));
convertToEffectUnit = auGraph.GetNodeInfo (convertToEffectNode);

int convertFromEffectNode = auGraph.AddNode (AudioComponentDescription.CreateConverter (AudioTypeConverter.AU));
convertFromEffectUnit = auGraph.GetNodeInfo (convertFromEffectNode);

int genericOutputNode = auGraph.AddNode (AudioComponentDescription.CreateOutput (AudioTypeOutput.Generic));
genericOutputUnit = auGraph.GetNodeInfo (genericOutputNode);

// set the format conversions throughout the graph
AudioStreamBasicDescription effectFormat = effectUnit.GetAudioFormat (AudioUnitScopeType.Output);
var tapFormat = aqTap.ProcessingFormat;

convertToEffectUnit.SetAudioFormat (tapFormat, AudioUnitScopeType.Input);
convertToEffectUnit.SetAudioFormat (effectFormat, AudioUnitScopeType.Output);

convertFromEffectUnit.SetAudioFormat (effectFormat, AudioUnitScopeType.Input);
convertFromEffectUnit.SetAudioFormat (tapFormat, AudioUnitScopeType.Output);

genericOutputUnit.SetAudioFormat (tapFormat, AudioUnitScopeType.Input);
genericOutputUnit.SetAudioFormat (tapFormat, AudioUnitScopeType.Output);]]></code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor" apistyle="classic">
      <MemberSignature Language="C#" Value="public AudioComponentDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an empty AudioComponentDescription.</summary>
        <remarks>
          <para>You would use this constructor to initialize your AudioComponentDescription one by one:</para>
          <para>
          </para>
          <para>
          </para>
          <example>
            <code lang="C#"><![CDATA[var processingGraph = new AUGraph ();

int samplerNode, ioNode;

var musicSampler = new AudioComponentDescription () {
        ComponentManufacturer = AudioComponentManufacturerType.Apple,
        ComponentType = AudioComponentType.MusicDevice,
        ComponentSubType = (int)AudioTypeMusicDevice.Sampler
};
samplerNode = processingGraph.AddNode (musicSampler);

var remoteOutput = new AudioComponentDescription () {
        ComponentManufacturer = AudioComponentManufacturerType.Apple,
        ComponentType = AudioComponentType.Output,
        ComponentSubType = (int)AudioTypeOutput.Remote
};
ioNode = processingGraph.AddNode (remoteOutput);

processingGraph.Open ();]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentFlags">
      <MemberSignature Language="C#" Value="public MonoTouch.AudioUnit.AudioComponentFlag ComponentFlags;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype MonoTouch.AudioUnit.AudioComponentFlag ComponentFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentFlagsMask">
      <MemberSignature Language="C#" Value="public int ComponentFlagsMask;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ComponentFlagsMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentManufacturer">
      <MemberSignature Language="C#" Value="public MonoTouch.AudioUnit.AudioComponentManufacturerType ComponentManufacturer;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype MonoTouch.AudioUnit.AudioComponentManufacturerType ComponentManufacturer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentManufacturerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentSubType">
      <MemberSignature Language="C#" Value="public int ComponentSubType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ComponentSubType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Audio Unit component subtype, depending on the <see cref="P:MonoTouch.AudioUnit.AudioComponentDescription.ComponentSubType" /> value you should use one of the values from <see cref="T:MonoTouch.AudioUnit.AudioTypeOutput" />, <see cref="T:MonoTouch.AudioUnit.AudioTypeMusicDevice" />, <see cref="T:MonoTouch.AudioUnit.AudioTypeConverter" />, <see cref="T:MonoTouch.AudioUnit.AudioTypeEffect" />, <see cref="T:MonoTouch.AudioUnit.AudioTypeMixer" />, <see cref="T:MonoTouch.AudioUnit.AudioTypePanner," /> <see cref="T:MonoTouch.AudioUnit.AudioTypeGenerator" /></summary>
        <remarks>
          <para>Audio Unit component subtype, depending on the <see cref="T:MonoTouch.AudioUnit.AudioComponentDescription.ComponentType" /> you should use one of the values from <see cref="T:MonoTouch.AudioUnit.AudioTypeOutput" />, <see cref="T:MonoTouch.AudioUnit.AudioTypeMusicDevice" />, <see cref="T:MonoTouch.AudioUnit.AudioTypeConverter" />, <see cref="T:MonoTouch.AudioUnit.AudioTypeEffect" />, <see cref="T:MonoTouch.AudioUnit.AudioTypeMixer" />, <see cref="T:MonoTouch.AudioUnit.AudioTypePanner," /> <see cref="T:MonoTouch.AudioUnit.AudioTypeGenerator" />.</para>
          <para />
          <para>Since this is an integer, and the values on those enumerations are strongly typed, you typically need to cast.   The following example shows this:</para>
          <para />
          <para />
          <example>
            <code lang="C#"><![CDATA[var processingGraph = new AUGraph ();

int samplerNode, ioNode;

var musicSampler = new AudioComponentDescription () {
        ComponentManufacturer = AudioComponentManufacturerType.Apple,
        ComponentType = AudioComponentType.MusicDevice,
        ComponentSubType = (int)AudioTypeMusicDevice.Sampler
};
samplerNode = processingGraph.AddNode (musicSampler);

var remoteOutput = new AudioComponentDescription () {
        ComponentManufacturer = AudioComponentManufacturerType.Apple,
        ComponentType = AudioComponentType.Output,
        ComponentSubType = (int)AudioTypeOutput.Remote
};
ioNode = processingGraph.AddNode (remoteOutput);

processingGraph.Open ();]]></code>
          </example>.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public MonoTouch.AudioUnit.AudioComponentType ComponentType;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype MonoTouch.AudioUnit.AudioComponentType ComponentType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Describes the component type, some of the component types have subtypes, in those cases, you should also set the <see cref="P:MonoTouch.AudioUnit.AudioComponentDescription.ComponentSubType" /> property.</summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConverter">
      <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AudioComponentDescription CreateConverter (MonoTouch.AudioUnit.AudioTypeConverter converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AudioComponentDescription CreateConverter(valuetype MonoTouch.AudioUnit.AudioTypeConverter converter) cil managed" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.AudioUnit.AudioComponentDescription CreateConverter(valuetype MonoTouch.AudioUnit.AudioTypeConverter converter) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="MonoTouch.AudioUnit.AudioTypeConverter" />
      </Parameters>
      <Docs>
        <param name="converter">To be added.</param>
        <summary>Creates an audio converter component description.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEffect">
      <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AudioComponentDescription CreateEffect (MonoTouch.AudioUnit.AudioTypeEffect effect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AudioComponentDescription CreateEffect(valuetype MonoTouch.AudioUnit.AudioTypeEffect effect) cil managed" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.AudioUnit.AudioComponentDescription CreateEffect(valuetype MonoTouch.AudioUnit.AudioTypeEffect effect) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="MonoTouch.AudioUnit.AudioTypeEffect" />
      </Parameters>
      <Docs>
        <param name="effect">To be added.</param>
        <summary>Creates an audio effect component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="P:MonoTouch.AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="E:MonoTouch.AudioUnit.AudioComponentType.Effect" /> and the specified effect.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AudioComponentDescription CreateGenerator (MonoTouch.AudioUnit.AudioTypeGenerator generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AudioComponentDescription CreateGenerator(valuetype MonoTouch.AudioUnit.AudioTypeGenerator generator) cil managed" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.AudioUnit.AudioComponentDescription CreateGenerator(valuetype MonoTouch.AudioUnit.AudioTypeGenerator generator) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="MonoTouch.AudioUnit.AudioTypeGenerator" />
      </Parameters>
      <Docs>
        <param name="generator">To be added.</param>
        <summary>Creates an audio generator component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="P:MonoTouch.AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="E:MonoTouch.AudioUnit.AudioComponentType.Generator" /> and the specified generator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric">
      <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AudioComponentDescription CreateGeneric (MonoTouch.AudioUnit.AudioComponentType type, int subType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AudioComponentDescription CreateGeneric(valuetype MonoTouch.AudioUnit.AudioComponentType type, int32 subType) cil managed" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.AudioUnit.AudioComponentDescription CreateGeneric(valuetype MonoTouch.AudioUnit.AudioComponentType type, int32 subType) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoTouch.AudioUnit.AudioComponentType" />
        <Parameter Name="subType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="subType">To be added.</param>
        <summary>Initializes an <see cref="T:MonoTouch.AudioUnit.AudioComponentDescription" /> with the given type and given subtype.   This method is here for cases where you might want to create a component description that is not covered by the built-in enumerations for component subtypes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMixer">
      <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AudioComponentDescription CreateMixer (MonoTouch.AudioUnit.AudioTypeMixer mixer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AudioComponentDescription CreateMixer(valuetype MonoTouch.AudioUnit.AudioTypeMixer mixer) cil managed" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.AudioUnit.AudioComponentDescription CreateMixer(valuetype MonoTouch.AudioUnit.AudioTypeMixer mixer) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mixer" Type="MonoTouch.AudioUnit.AudioTypeMixer" />
      </Parameters>
      <Docs>
        <param name="mixer">To be added.</param>
        <summary>Creates an audio mixer component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="P:MonoTouch.AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="E:MonoTouch.AudioUnit.AudioComponentType.Mixer" /> and the specified mixer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMusicDevice">
      <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AudioComponentDescription CreateMusicDevice (MonoTouch.AudioUnit.AudioTypeMusicDevice musicDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AudioComponentDescription CreateMusicDevice(valuetype MonoTouch.AudioUnit.AudioTypeMusicDevice musicDevice) cil managed" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.AudioUnit.AudioComponentDescription CreateMusicDevice(valuetype MonoTouch.AudioUnit.AudioTypeMusicDevice musicDevice) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="musicDevice" Type="MonoTouch.AudioUnit.AudioTypeMusicDevice" />
      </Parameters>
      <Docs>
        <param name="musicDevice">To be added.</param>
        <summary>Creates a music effect component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="P:MonoTouch.AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="E:MonoTouch.AudioUnit.AudioComponentType.MusicDevice" /> and the specified device.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOutput">
      <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AudioComponentDescription CreateOutput (MonoTouch.AudioUnit.AudioTypeOutput outputType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AudioComponentDescription CreateOutput(valuetype MonoTouch.AudioUnit.AudioTypeOutput outputType) cil managed" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.AudioUnit.AudioComponentDescription CreateOutput(valuetype MonoTouch.AudioUnit.AudioTypeOutput outputType) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputType" Type="MonoTouch.AudioUnit.AudioTypeOutput" />
      </Parameters>
      <Docs>
        <param name="outputType">To be added.</param>
        <summary>Creates an output component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="P:MonoTouch.AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="E:MonoTouch.AudioUnit.AudioComponentType.Output" /> and the specified output type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePanner">
      <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AudioComponentDescription CreatePanner (MonoTouch.AudioUnit.AudioTypePanner panner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AudioComponentDescription CreatePanner(valuetype MonoTouch.AudioUnit.AudioTypePanner panner) cil managed" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.AudioUnit.AudioComponentDescription CreatePanner(valuetype MonoTouch.AudioUnit.AudioTypePanner panner) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.AudioUnit.AudioComponentDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panner" Type="MonoTouch.AudioUnit.AudioTypePanner" />
      </Parameters>
      <Docs>
        <param name="panner">To be added.</param>
        <summary>Creates a panner component description.</summary>
        <returns>An initialized AudioComponentDescription with the <see cref="P:MonoTouch.AudioUnit.AudioComponentDescription.ComponentType" /> set to <see cref="E:MonoTouch.AudioUnit.AudioComponentType.Panner" /> and the specified panner.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a debugging message showing the component type and subtype for this description.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
