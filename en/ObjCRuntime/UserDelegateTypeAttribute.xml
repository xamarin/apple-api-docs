<Type Name="UserDelegateTypeAttribute" FullName="ObjCRuntime.UserDelegateTypeAttribute">
  <TypeSignature Language="C#" Value="public sealed class UserDelegateTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UserDelegateTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:ObjCRuntime.UserDelegateTypeAttribute" />
  <TypeSignature Language="F#" Value="type UserDelegateTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Delegate, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
        This attribute is used on delegates created by the binding generator to properly map between signatures for Objective-C blocks and their corresponding exposed managed delegates.
      </para>
      <para>
        When binding Objective-C blocks, the binding generator will create a managed delegate whose signature is equivalent
        to the corresponding block's signature for the required binding code. However, this signature isn't necessarily accurate
        enough to re-create the block's signature at runtime (which is needed in some circumstances). This attribute makes it
        possible to find the type of the corresponding managed delegate that is exposed by the generated bindings, which does
        have enough information to re-create the corresponding block's signature.
      </para>
    </summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserDelegateTypeAttribute (Type userDelegateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type userDelegateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:ObjCRuntime.UserDelegateTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="F#" Value="new ObjCRuntime.UserDelegateTypeAttribute : Type -&gt; ObjCRuntime.UserDelegateTypeAttribute" Usage="new ObjCRuntime.UserDelegateTypeAttribute userDelegateType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userDelegateType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="userDelegateType">The exposed managed delegate type that corresponds to the delegate this attribute is applied to.</param>
        <summary>Initializes a new attribute with the specified managed delegate type.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDelegateType">
      <MemberSignature Language="C#" Value="public Type UserDelegateType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UserDelegateType" />
      <MemberSignature Language="DocId" Value="P:ObjCRuntime.UserDelegateTypeAttribute.UserDelegateType" />
      <MemberSignature Language="F#" Value="member this.UserDelegateType : Type" Usage="ObjCRuntime.UserDelegateTypeAttribute.UserDelegateType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The managed delegate type that corresponds to the delegate this attribute is applied to.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
