<Type Name="MarshalObjectiveCExceptionEventArgs" FullName="ObjCRuntime.MarshalObjectiveCExceptionEventArgs">
  <TypeSignature Language="C#" Value="public class MarshalObjectiveCExceptionEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MarshalObjectiveCExceptionEventArgs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:ObjCRuntime.MarshalObjectiveCExceptionEventArgs" />
  <TypeSignature Language="F#" Value="type MarshalObjectiveCExceptionEventArgs = class" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary></summary>
    <remarks></remarks>
    <related type="article" href="https://developer.xamarin.com/guides/ios/advanced_topics/exception_marshaling/">Exception marshaling</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MarshalObjectiveCExceptionEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ObjCRuntime.MarshalObjectiveCExceptionEventArgs.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Foundation.NSException Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSException Exception" />
      <MemberSignature Language="DocId" Value="P:ObjCRuntime.MarshalObjectiveCExceptionEventArgs.Exception" />
      <MemberSignature Language="F#" Value="member this.Exception : Foundation.NSException with get, set" Usage="ObjCRuntime.MarshalObjectiveCExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Objective-C exception that must be marshalled.</summary>
        <value>The Objective-C exception that must be marshalled.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionMode">
      <MemberSignature Language="C#" Value="public ObjCRuntime.MarshalObjectiveCExceptionMode ExceptionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ObjCRuntime.MarshalObjectiveCExceptionMode ExceptionMode" />
      <MemberSignature Language="DocId" Value="P:ObjCRuntime.MarshalObjectiveCExceptionEventArgs.ExceptionMode" />
      <MemberSignature Language="F#" Value="member this.ExceptionMode : ObjCRuntime.MarshalObjectiveCExceptionMode with get, set" Usage="ObjCRuntime.MarshalObjectiveCExceptionEventArgs.ExceptionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.MarshalObjectiveCExceptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify how to marshal the Objective-C exception.</summary>
        <value>A value that specifies how to marshal the Objective-C exception.</value>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
