<Type Name="NativeAttribute" FullName="ObjCRuntime.NativeAttribute">
  <TypeSignature Language="C#" Value="public sealed class NativeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NativeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:ObjCRuntime.NativeAttribute" />
  <TypeSignature Language="F#" Value="type NativeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Enum)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This attributes tells the Xamarin.iOS runtime that the native enum this managed enum binds is using a native size for the platform as the size for each enum value (i.e. a 32-bit value on 32-bit architectures, and a 64-bit value on 64-bit architectures).</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NativeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ObjCRuntime.NativeAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new Native attribute.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NativeAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:ObjCRuntime.NativeAttribute.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new ObjCRuntime.NativeAttribute : string -&gt; ObjCRuntime.NativeAttribute" Usage="new ObjCRuntime.NativeAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the corresponding native enum (in case it doesn't match the managed enum's name).</param>
        <summary>Initializes a new Native attribute.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public string NativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:ObjCRuntime.NativeAttribute.NativeName" />
      <MemberSignature Language="F#" Value="member this.NativeName : string with get, set" Usage="ObjCRuntime.NativeAttribute.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the corresponding native enum (in case it doesn't match the managed enum's name).</summary>
        <value>The name of the corresponding native enum (in case it doesn't match the managed enum's name).</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
