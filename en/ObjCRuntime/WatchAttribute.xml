<Type Name="WatchAttribute" FullName="ObjCRuntime.WatchAttribute">
  <TypeSignature Language="C#" Value="public sealed class WatchAttribute : ObjCRuntime.IntroducedAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WatchAttribute extends ObjCRuntime.IntroducedAttribute" />
  <TypeSignature Language="DocId" Value="T:ObjCRuntime.WatchAttribute" />
  <TypeSignature Language="F#" Value="type WatchAttribute = class&#xA;    inherit IntroducedAttribute" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ObjCRuntime.IntroducedAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WatchAttribute (byte major, byte minor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 major, unsigned int8 minor) cil managed" />
      <MemberSignature Language="DocId" Value="M:ObjCRuntime.WatchAttribute.#ctor(System.Byte,System.Byte)" />
      <MemberSignature Language="F#" Value="new ObjCRuntime.WatchAttribute : byte * byte -&gt; ObjCRuntime.WatchAttribute" Usage="new ObjCRuntime.WatchAttribute (major, minor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Byte" />
        <Parameter Name="minor" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="major">To be added.</param>
        <param name="minor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WatchAttribute (byte major, byte minor, bool onlyOn64 = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 major, unsigned int8 minor, bool onlyOn64) cil managed" />
      <MemberSignature Language="DocId" Value="M:ObjCRuntime.WatchAttribute.#ctor(System.Byte,System.Byte,System.Boolean)" />
      <MemberSignature Language="F#" Value="new ObjCRuntime.WatchAttribute : byte * byte * bool -&gt; ObjCRuntime.WatchAttribute" Usage="new ObjCRuntime.WatchAttribute (major, minor, onlyOn64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Byte" />
        <Parameter Name="minor" Type="System.Byte" />
        <Parameter Name="onlyOn64" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="major">To be added.</param>
        <param name="minor">To be added.</param>
        <param name="onlyOn64">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WatchAttribute (byte major, byte minor, byte subminor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 major, unsigned int8 minor, unsigned int8 subminor) cil managed" />
      <MemberSignature Language="DocId" Value="M:ObjCRuntime.WatchAttribute.#ctor(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="F#" Value="new ObjCRuntime.WatchAttribute : byte * byte * byte -&gt; ObjCRuntime.WatchAttribute" Usage="new ObjCRuntime.WatchAttribute (major, minor, subminor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Byte" />
        <Parameter Name="minor" Type="System.Byte" />
        <Parameter Name="subminor" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="major">To be added.</param>
        <param name="minor">To be added.</param>
        <param name="subminor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WatchAttribute (byte major, byte minor, byte subminor, bool onlyOn64);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 major, unsigned int8 minor, unsigned int8 subminor, bool onlyOn64) cil managed" />
      <MemberSignature Language="DocId" Value="M:ObjCRuntime.WatchAttribute.#ctor(System.Byte,System.Byte,System.Byte,System.Boolean)" />
      <MemberSignature Language="F#" Value="new ObjCRuntime.WatchAttribute : byte * byte * byte * bool -&gt; ObjCRuntime.WatchAttribute" Usage="new ObjCRuntime.WatchAttribute (major, minor, subminor, onlyOn64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Byte" />
        <Parameter Name="minor" Type="System.Byte" />
        <Parameter Name="subminor" Type="System.Byte" />
        <Parameter Name="onlyOn64" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="major">To be added.</param>
        <param name="minor">To be added.</param>
        <param name="subminor">To be added.</param>
        <param name="onlyOn64">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
