<Type Name="Dlfcn+RTLD" FullName="ObjCRuntime.Dlfcn+RTLD">
  <TypeSignature Language="C#" Value="public enum Dlfcn.RTLD" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Dlfcn/RTLD extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Dynamic loader resolution flags.</summary>
    <remarks>These flags are used to control the way the dynamic linker looks up symbols at runtime.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ObjCRuntime.Dlfcn/RTLD Default = int32(-2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.Dlfcn+RTLD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Searches all mach-o images in the process (except those loaded with dlopen(xxx, RTLD_LOCAL)) are searched in the order they were loaded.  This can be a costly search and should be avoided.</summary>
      </Docs>
    </Member>
    <Member MemberName="MainOnly">
      <MemberSignature Language="C#" Value="MainOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ObjCRuntime.Dlfcn/RTLD MainOnly = int32(-5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.Dlfcn+RTLD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Only searches for symbol in the main executable.</summary>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="Next" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ObjCRuntime.Dlfcn/RTLD Next = int32(-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.Dlfcn+RTLD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The dynamic linker searches for the symbol in the dylibs the calling image linked against when built. It is usually used when you intentionally have multiply defined symbol across images and want to find the "next" definition. </para>
          <para>It searches other images for the definition that the caller would be using if it did not have a definition.  The exact search algorithm depends on whether the caller's image was linked -flat_namespace or -twolevel_namespace.  For flat linked images, the search starts in the load ordered list of all images, in the image right after the caller's image.  For two-level images, the search simulates how the static linker would have searched for the symbol when linking the caller's image.</para>
.</summary>
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="Self" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype ObjCRuntime.Dlfcn/RTLD Self = int32(-3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.Dlfcn+RTLD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Search for the symbol starts with the image that called dlsym.  If it is not found, the search continues as if Next was used.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
