<Type Name="TestFixtureAttribute" FullName="NUnit.Framework.TestFixtureAttribute">
  <TypeSignature Language="C#" Value="public class TestFixtureAttribute : NUnit.Framework.NUnitAttribute, NUnit.Framework.Internal.IApplyToTest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestFixtureAttribute extends NUnit.Framework.NUnitAttribute implements class NUnit.Framework.Internal.IApplyToTest" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.TestFixtureAttribute" />
  <TypeSignature Language="F#" Value="type TestFixtureAttribute = class&#xA;    inherit NUnitAttribute&#xA;    interface IApplyToTest" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.NUnitAttribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Internal.IApplyToTest</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <example>
            [TestFixture]
            public class ExampleClass
            {}
            </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestFixtureAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.TestFixtureAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Default constructor
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestFixtureAttribute (params object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.TestFixtureAttribute.#ctor(System.Object[])" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.TestFixtureAttribute : obj[] -&gt; NUnit.Framework.TestFixtureAttribute" Usage="new NUnit.Framework.TestFixtureAttribute arguments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="arguments">
        </param>
        <summary>
            Construct with a object[] representing a set of arguments.
            In .NET 2.0, the arguments may later be separated into
            type arguments and constructor arguments.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToTest">
      <MemberSignature Language="C#" Value="public void ApplyToTest (NUnit.Framework.Internal.Test test);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyToTest(class NUnit.Framework.Internal.Test test) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.TestFixtureAttribute.ApplyToTest(NUnit.Framework.Internal.Test)" />
      <MemberSignature Language="F#" Value="abstract member ApplyToTest : NUnit.Framework.Internal.Test -&gt; unit&#xA;override this.ApplyToTest : NUnit.Framework.Internal.Test -&gt; unit" Usage="testFixtureAttribute.ApplyToTest test" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:NUnit.Framework.Internal.IApplyToTest.ApplyToTest(NUnit.Framework.Internal.Test)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Internal.Test" />
      </Parameters>
      <Docs>
        <param name="test">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public object[] Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] Arguments" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.TestFixtureAttribute.Arguments" />
      <MemberSignature Language="F#" Value="member this.Arguments : obj[]" Usage="NUnit.Framework.TestFixtureAttribute.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The arguments originally provided to the attribute
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public System.Collections.IList Categories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Categories" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.TestFixtureAttribute.Categories" />
      <MemberSignature Language="F#" Value="member this.Categories : System.Collections.IList" Usage="NUnit.Framework.TestFixtureAttribute.Categories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.TestFixtureAttribute.Category" />
      <MemberSignature Language="F#" Value="member this.Category : string with get, set" Usage="NUnit.Framework.TestFixtureAttribute.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.TestFixtureAttribute.Description" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="NUnit.Framework.TestFixtureAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Descriptive text for this fixture
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public bool Ignore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ignore" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.TestFixtureAttribute.Ignore" />
      <MemberSignature Language="F#" Value="member this.Ignore : bool with get, set" Usage="NUnit.Framework.TestFixtureAttribute.Ignore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether this <see cref="T:NUnit.Framework.TestFixtureAttribute" /> should be ignored.
            </summary>
        <value>
          <c>true</c> if ignore; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreReason">
      <MemberSignature Language="C#" Value="public string IgnoreReason { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IgnoreReason" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.TestFixtureAttribute.IgnoreReason" />
      <MemberSignature Language="F#" Value="member this.IgnoreReason : string with get, set" Usage="NUnit.Framework.TestFixtureAttribute.IgnoreReason" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the ignore reason. May set Ignored as a side effect.
            </summary>
        <value>The ignore reason.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArgs">
      <MemberSignature Language="C#" Value="public Type[] TypeArgs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TypeArgs" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.TestFixtureAttribute.TypeArgs" />
      <MemberSignature Language="F#" Value="member this.TypeArgs : Type[] with get, set" Usage="NUnit.Framework.TestFixtureAttribute.TypeArgs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get or set the type arguments. If not set
            explicitly, any leading arguments that are
            Types are taken as type arguments.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
