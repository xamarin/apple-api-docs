<Type Name="IExpectException" FullName="NUnit.Framework.IExpectException">
  <TypeSignature Language="C#" Value="public interface IExpectException" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpectException" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface implemented by a user fixture in order to
            validate any expected exceptions. It is only called
            for test methods marked with the ExpectedException
            attribute.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleException">
      <MemberSignature Language="C#" Value="public void HandleException (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleException(class System.Exception ex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex">The exception to be handled</param>
        <summary>
            Method to handle an expected exception
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
