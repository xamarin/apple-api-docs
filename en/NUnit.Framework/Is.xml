<Type Name="Is" FullName="NUnit.Framework.Is">
  <TypeSignature Language="C#" Value="public class Is" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Is extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper class with properties and methods that supply
            a number of constraints used in Asserts.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Is ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ConstraintExpression All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ConstraintExpression All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression, which will apply
            the following constraint to all members of a collection,
            succeeding if all of them succeed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssignableFrom">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom (Type expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom(class System.Type expectedType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.AssignableFromConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <summary>
            Returns a constraint that tests whether the actual value
            is assignable from the type supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssignableFrom&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.AssignableFromConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>
            Returns a constraint that tests whether the actual value
            is assignable from the type supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssignableTo">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.AssignableToConstraint AssignableTo (Type expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.AssignableToConstraint AssignableTo(class System.Type expectedType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.AssignableToConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <summary>
            Returns a constraint that tests whether the actual value
            is assignable from the type supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssignableTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.AssignableToConstraint AssignableTo&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.AssignableToConstraint AssignableTo&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.AssignableToConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>
            Returns a constraint that tests whether the actual value
            is assignable from the type supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AtLeast">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.GreaterThanOrEqualConstraint AtLeast (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.GreaterThanOrEqualConstraint AtLeast(object expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.GreaterThanOrEqualConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the
            actual value is greater than or equal to the suppled argument
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AtMost">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.LessThanOrEqualConstraint AtMost (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.LessThanOrEqualConstraint AtMost(object expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.LessThanOrEqualConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the
            actual value is less than or equal to the suppled argument
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BinarySerializable">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.BinarySerializableConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests whether an object graph is serializable in binary format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.EmptyConstraint Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.EmptyConstraint Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.EmptyConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests for empty
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualTo">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.EqualConstraint EqualTo (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.EqualConstraint EqualTo(object expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.EqualConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests two items for equality
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EquivalentTo">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.CollectionEquivalentConstraint EquivalentTo (System.Collections.IEnumerable expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.CollectionEquivalentConstraint EquivalentTo(class System.Collections.IEnumerable expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.CollectionEquivalentConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the actual value
            is a collection containing the same elements as the
            collection supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.FalseConstraint False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.FalseConstraint False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.FalseConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests for False
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.GreaterThanConstraint GreaterThan (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.GreaterThanConstraint GreaterThan(object expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.GreaterThanConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the
            actual value is greater than the suppled argument
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqualTo">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.GreaterThanOrEqualConstraint GreaterThanOrEqualTo (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.GreaterThanOrEqualConstraint GreaterThanOrEqualTo(object expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.GreaterThanOrEqualConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the
            actual value is greater than or equal to the suppled argument
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InRange">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.RangeConstraint InRange (IComparable from, IComparable to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.RangeConstraint InRange(class System.IComparable from, class System.IComparable to) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.RangeConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.IComparable" />
        <Parameter Name="to" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <summary>
            Returns a constraint that tests whether the actual value falls
            within a specified range.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.RangeConstraint&lt;T&gt; InRange&lt;T&gt; (T from, T to) where T : IComparable&lt;T&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.RangeConstraint`1&lt;!!T&gt; InRange&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(!!T from, !!T to) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.RangeConstraint&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="from" Type="T" />
        <Parameter Name="to" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceOf">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf (Type expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf(class System.Type expectedType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.InstanceOfTypeConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <summary>
            Returns a constraint that tests whether the actual value
            is of the type supplied as an argument or a derived type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.InstanceOfTypeConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>
            Returns a constraint that tests whether the actual value
            is of the type supplied as an argument or a derived type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceOfType">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType (Type expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType(class System.Type expectedType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceOf(expectedType)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.InstanceOfTypeConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <summary>
            Returns a constraint that tests whether the actual value
            is of the type supplied as an argument or a derived type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceOfType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceOf&lt;T&gt;()")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.InstanceOfTypeConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>
            Returns a constraint that tests whether the actual value
            is of the type supplied as an argument or a derived type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.LessThanConstraint LessThan (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.LessThanConstraint LessThan(object expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.LessThanConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the
            actual value is less than the suppled argument
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqualTo">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.LessThanOrEqualConstraint LessThanOrEqualTo (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.LessThanOrEqualConstraint LessThanOrEqualTo(object expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.LessThanOrEqualConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the
            actual value is less than or equal to the suppled argument
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.NaNConstraint NaN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.NaNConstraint NaN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.NaNConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests for NaN
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negative">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.LessThanConstraint Negative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.LessThanConstraint Negative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.LessThanConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ConstraintExpression Not { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ConstraintExpression Not" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression that negates any
            following constraint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.NullConstraint Null { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.NullConstraint Null" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.NullConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests for null
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.CollectionOrderedConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests whether a collection is ordered
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Positive">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.GreaterThanConstraint Positive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.GreaterThanConstraint Positive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.GreaterThanConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SameAs">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.SameAsConstraint SameAs (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.SameAsConstraint SameAs(object expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.SameAsConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests that two references are the same object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SamePath">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.SamePathConstraint SamePath (string expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.SamePathConstraint SamePath(string expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.SamePathConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the path provided
            is the same as an expected path after canonicalization.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SamePathOrUnder">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.SamePathOrUnderConstraint SamePathOrUnder (string expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.SamePathOrUnderConstraint SamePathOrUnder(string expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.SamePathOrUnderConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the path provided
            is the same path or under an expected path after canonicalization.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringContaining">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.SubstringConstraint StringContaining (string expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.SubstringConstraint StringContaining(string expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.SubstringConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that succeeds if the actual
            value contains the substring supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringEnding">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.EndsWithConstraint StringEnding (string expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.EndsWithConstraint StringEnding(string expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.EndsWithConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that succeeds if the actual
            value ends with the substring supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringMatching">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.RegexConstraint StringMatching (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.RegexConstraint StringMatching(string pattern) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.RegexConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
            Returns a constraint that succeeds if the actual
            value matches the regular expression supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringStarting">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.StartsWithConstraint StringStarting (string expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.StartsWithConstraint StringStarting(string expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.StartsWithConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that succeeds if the actual
            value starts with the substring supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubPath">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.SubPathConstraint SubPath (string expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.SubPathConstraint SubPath(string expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.SubPathConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubsetOf">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.CollectionSubsetConstraint SubsetOf (System.Collections.IEnumerable expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.CollectionSubsetConstraint SubsetOf(class System.Collections.IEnumerable expected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.CollectionSubsetConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a constraint that tests whether the actual value
            is a subset of the collection supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.TrueConstraint True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.TrueConstraint True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.TrueConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests for True
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeOf">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ExactTypeConstraint TypeOf (Type expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.ExactTypeConstraint TypeOf(class System.Type expectedType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ExactTypeConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <summary>
            Returns a constraint that tests whether the actual
            value is of the exact type supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ExactTypeConstraint TypeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.ExactTypeConstraint TypeOf&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ExactTypeConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>
            Returns a constraint that tests whether the actual
            value is of the exact type supplied as an argument.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.UniqueItemsConstraint Unique { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.UniqueItemsConstraint Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.UniqueItemsConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests whether a collection
            contains all unique items.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSerializable">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.XmlSerializableConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a constraint that tests whether an object graph is serializable in xml format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
