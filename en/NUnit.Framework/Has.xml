<Type Name="Has" FullName="NUnit.Framework.Has">
  <TypeSignature Language="C#" Value="public class Has" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Has extends System.Object" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Has" />
  <TypeSignature Language="F#" Value="type Has = class" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper class with properties and methods that supply
            a number of constraints used in Asserts.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Has ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Has.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ConstraintExpression All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ConstraintExpression All" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Has.All" />
      <MemberSignature Language="F#" Value="member this.All : NUnit.Framework.Constraints.ConstraintExpression" Usage="NUnit.Framework.Has.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression, which will apply
            the following constraint to all members of a collection,
            succeeding if all of them succeed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute (Type expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute(class System.Type expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Has.Attribute(System.Type)" />
      <MemberSignature Language="F#" Value="static member Attribute : Type -&gt; NUnit.Framework.Constraints.ResolvableConstraintExpression" Usage="NUnit.Framework.Has.Attribute expectedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ResolvableConstraintExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <summary>
            Returns a new AttributeConstraint checking for the
            presence of a particular attribute on an object.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Has.Attribute``1" />
      <MemberSignature Language="F#" Value="static member Attribute : unit -&gt; NUnit.Framework.Constraints.ResolvableConstraintExpression" Usage="NUnit.Framework.Has.Attribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ResolvableConstraintExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>
            Returns a new AttributeConstraint checking for the
            presence of a particular attribute on an object.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ResolvableConstraintExpression Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ResolvableConstraintExpression Count" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Has.Count" />
      <MemberSignature Language="F#" Value="member this.Count : NUnit.Framework.Constraints.ResolvableConstraintExpression" Usage="NUnit.Framework.Has.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ResolvableConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a new ConstraintExpression, which will apply the following
            constraint to the Count property of the object being tested.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exactly">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ConstraintExpression Exactly (int expectedCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.ConstraintExpression Exactly(int32 expectedCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Has.Exactly(System.Int32)" />
      <MemberSignature Language="F#" Value="static member Exactly : int -&gt; NUnit.Framework.Constraints.ConstraintExpression" Usage="NUnit.Framework.Has.Exactly expectedCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Has.InnerException" />
      <MemberSignature Language="F#" Value="member this.InnerException : NUnit.Framework.Constraints.ResolvableConstraintExpression" Usage="NUnit.Framework.Has.InnerException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ResolvableConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a new ConstraintExpression, which will apply the following
            constraint to the InnerException property of the object being tested.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ResolvableConstraintExpression Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ResolvableConstraintExpression Length" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Has.Length" />
      <MemberSignature Language="F#" Value="member this.Length : NUnit.Framework.Constraints.ResolvableConstraintExpression" Usage="NUnit.Framework.Has.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ResolvableConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a new ConstraintExpression, which will apply the following
            constraint to the Length property of the object being tested.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.CollectionContainsConstraint Member (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.CollectionContainsConstraint Member(object expected) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Has.Member(System.Object)" />
      <MemberSignature Language="F#" Value="static member Member : obj -&gt; NUnit.Framework.Constraints.CollectionContainsConstraint" Usage="NUnit.Framework.Has.Member expected" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.CollectionContainsConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <summary>
            Returns a new CollectionContainsConstraint checking for the
            presence of a particular object in the collection.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ResolvableConstraintExpression Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ResolvableConstraintExpression Message" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Has.Message" />
      <MemberSignature Language="F#" Value="member this.Message : NUnit.Framework.Constraints.ResolvableConstraintExpression" Usage="NUnit.Framework.Has.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ResolvableConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a new ConstraintExpression, which will apply the following
            constraint to the Message property of the object being tested.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ConstraintExpression No { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ConstraintExpression No" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Has.No" />
      <MemberSignature Language="F#" Value="member this.No : NUnit.Framework.Constraints.ConstraintExpression" Usage="NUnit.Framework.Has.No" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression that negates any
            following constraint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ConstraintExpression None { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ConstraintExpression None" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Has.None" />
      <MemberSignature Language="F#" Value="member this.None : NUnit.Framework.Constraints.ConstraintExpression" Usage="NUnit.Framework.Has.None" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression, which will apply
            the following constraint to all members of a collection,
            succeeding if all of them fail.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ResolvableConstraintExpression Property (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Constraints.ResolvableConstraintExpression Property(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Has.Property(System.String)" />
      <MemberSignature Language="F#" Value="static member Property : string -&gt; NUnit.Framework.Constraints.ResolvableConstraintExpression" Usage="NUnit.Framework.Has.Property name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ResolvableConstraintExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Returns a new PropertyConstraintExpression, which will either
            test for the existence of the named property on the object
            being tested or apply any following constraint to that property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Some">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.ConstraintExpression Some { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class NUnit.Framework.Constraints.ConstraintExpression Some" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Has.Some" />
      <MemberSignature Language="F#" Value="member this.Some : NUnit.Framework.Constraints.ConstraintExpression" Usage="NUnit.Framework.Has.Some" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression, which will apply
            the following constraint to all members of a collection,
            succeeding if at least one of them succeeds.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
