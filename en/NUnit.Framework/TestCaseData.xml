<Type Name="TestCaseData" FullName="NUnit.Framework.TestCaseData">
  <TypeSignature Language="C#" Value="public class TestCaseData : Xamarin.iOS.dll=NUnit.Framework.Api.ITestCaseData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestCaseData extends System.Object implements class Xamarin.iOS.dll=NUnit.Framework.Api.ITestCaseData" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Api.ITestCaseData</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The TestCaseData class represents a set of arguments
            and other parameter info to be used for a parameterized
            test case. It provides a number of instance modifiers
            for use in initializing the test case.
            Note: Instance modifiers are getters that return
            the same instance after modifying it's state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestCaseData (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object arg) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">The argument.</param>
        <summary>
            Initializes a new instance of the <see cref="T:TestCaseData" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestCaseData (object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object[] args) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args">The arguments.</param>
        <summary>
            Initializes a new instance of the <see cref="T:TestCaseData" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestCaseData (object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object arg1, object arg2) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg1">The first argument.</param>
        <param name="arg2">The second argument.</param>
        <summary>
            Initializes a new instance of the <see cref="T:TestCaseData" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestCaseData (object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object arg1, object arg2, object arg3) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg1">The first argument.</param>
        <param name="arg2">The second argument.</param>
        <param name="arg3">The third argument.</param>
        <summary>
            Initializes a new instance of the <see cref="T:TestCaseData" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public object[] Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the argument list to be provided to the test
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionData">
      <MemberSignature Language="C#" Value="public Xamarin.iOS.dll=NUnit.Framework.Api.ExpectedExceptionData ExceptionData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.iOS.dll=NUnit.Framework.Api.ExpectedExceptionData ExceptionData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ExpectedExceptionData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets data about any expected exception.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedException">
      <MemberSignature Language="C#" Value="public Type ExpectedException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpectedException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedExceptionMessage">
      <MemberSignature Language="C#" Value="public string ExpectedExceptionMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpectedExceptionMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedExceptionName">
      <MemberSignature Language="C#" Value="public string ExpectedExceptionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpectedExceptionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedResult">
      <MemberSignature Language="C#" Value="public object ExpectedResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExpectedResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the expected result
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasExpectedResult">
      <MemberSignature Language="C#" Value="public bool HasExpectedResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasExpectedResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the expected result has been set
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchType">
      <MemberSignature Language="C#" Value="public Xamarin.iOS.dll=NUnit.Framework.MessageMatch MatchType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.iOS.dll=NUnit.Framework.MessageMatch MatchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=MonoTouch.NUnit.Framework.MessageMatch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Xamarin.iOS.dll=NUnit.Framework.Api.IPropertyBag Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.iOS.dll=NUnit.Framework.Api.IPropertyBag Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.IPropertyBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the property dictionary for this test
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunState">
      <MemberSignature Language="C#" Value="public Xamarin.iOS.dll=NUnit.Framework.Api.RunState RunState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.iOS.dll=NUnit.Framework.Api.RunState RunState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.RunState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the RunState for this test case.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestName">
      <MemberSignature Language="C#" Value="public string TestName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TestName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name to be used for the test
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>