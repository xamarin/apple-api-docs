<Type Name="RPScreenRecorderDelegate_Extensions" FullName="MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class RPScreenRecorderDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RPScreenRecorderDelegate_Extensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:MonoTouch.ReplayKit.IRPScreenRecorderDelegate" /> interface to support all the methods from the <see cref="T:MonoTouch.ReplayKit.RPScreenRecorderDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:MonoTouch.ReplayKit.IRPScreenRecorderDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:MonoTouch.ReplayKit.RPScreenRecorderDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidChangeAvailability">
      <MemberSignature Language="C#" Value="public static void DidChangeAvailability (this MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, MonoTouch.ReplayKit.RPScreenRecorder screenRecorder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeAvailability(class MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, class MonoTouch.ReplayKit.RPScreenRecorder screenRecorder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
        <Parameter Name="screenRecorder" Type="MonoTouch.ReplayKit.RPScreenRecorder" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="screenRecorder">To be added.</param>
        <summary>Method that is called when the availability status changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStopRecording">
      <MemberSignature Language="C#" Value="public static void DidStopRecording (this MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, MonoTouch.ReplayKit.RPScreenRecorder screenRecorder, MonoTouch.Foundation.NSError error, MonoTouch.ReplayKit.RPPreviewViewController previewViewController);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopRecording(class MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, class MonoTouch.ReplayKit.RPScreenRecorder screenRecorder, class MonoTouch.Foundation.NSError error, class MonoTouch.ReplayKit.RPPreviewViewController previewViewController) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.TvOS, 11, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use 'DidStopRecording(RPScreenRecorder,RPPreviewViewController,NSError)' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Deprecated(MonoTouch.ObjCRuntime.PlatformName.iOS, 11, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, "Use 'DidStopRecording(RPScreenRecorder,RPPreviewViewController,NSError)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
        <Parameter Name="screenRecorder" Type="MonoTouch.ReplayKit.RPScreenRecorder" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        <Parameter Name="previewViewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="screenRecorder">To be added.</param>
        <param name="error">To be added.</param>
        <param name="previewViewController">To be added.This parameter can be .</param>
        <summary>Method that is called when the recording stops.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidStopRecording">
      <MemberSignature Language="C#" Value="public static void DidStopRecording (this MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, MonoTouch.ReplayKit.RPScreenRecorder screenRecorder, MonoTouch.ReplayKit.RPPreviewViewController previewViewController, MonoTouch.Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopRecording(class MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, class MonoTouch.ReplayKit.RPScreenRecorder screenRecorder, class MonoTouch.ReplayKit.RPPreviewViewController previewViewController, class MonoTouch.Foundation.NSError error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.TvOS, 11, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 11, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
        <Parameter Name="screenRecorder" Type="MonoTouch.ReplayKit.RPScreenRecorder" />
        <Parameter Name="previewViewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
        <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates on.</param>
        <param name="screenRecorder">To be added.</param>
        <param name="previewViewController">To be added.This parameter can be .</param>
        <param name="error">To be added.This parameter can be .</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>