<Type Name="EffectsExtension" FullName="OpenTK.Audio.OpenAL.EffectsExtension">
  <TypeSignature Language="C#" Value="public class EffectsExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EffectsExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:OpenTK.Audio.OpenAL.EffectsExtension" />
  <TypeSignature Language="F#" Value="type EffectsExtension = class" />
  <AssemblyInfo>
    <AssemblyName>OpenTK-1.0</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides access to the OpenAL effects extension.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EffectsExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs a new EffectsExtension instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void AuxiliaryEffectSlot (int asid, OpenTK.Audio.OpenAL.EfxAuxiliaryf param, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AuxiliaryEffectSlot(int32 asid, valuetype OpenTK.Audio.OpenAL.EfxAuxiliaryf param, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.AuxiliaryEffectSlot(System.Int32,OpenTK.Audio.OpenAL.EfxAuxiliaryf,System.Single)" />
      <MemberSignature Language="F#" Value="member this.AuxiliaryEffectSlot : int * OpenTK.Audio.OpenAL.EfxAuxiliaryf * single -&gt; unit" Usage="effectsExtension.AuxiliaryEffectSlot (asid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asid" Type="System.Int32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxAuxiliaryf" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="asid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void AuxiliaryEffectSlot (int asid, OpenTK.Audio.OpenAL.EfxAuxiliaryi param, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AuxiliaryEffectSlot(int32 asid, valuetype OpenTK.Audio.OpenAL.EfxAuxiliaryi param, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.AuxiliaryEffectSlot(System.Int32,OpenTK.Audio.OpenAL.EfxAuxiliaryi,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AuxiliaryEffectSlot : int * OpenTK.Audio.OpenAL.EfxAuxiliaryi * int -&gt; unit" Usage="effectsExtension.AuxiliaryEffectSlot (asid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asid" Type="System.Int32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxAuxiliaryi" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="asid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void AuxiliaryEffectSlot (uint asid, OpenTK.Audio.OpenAL.EfxAuxiliaryf param, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AuxiliaryEffectSlot(unsigned int32 asid, valuetype OpenTK.Audio.OpenAL.EfxAuxiliaryf param, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.AuxiliaryEffectSlot(System.UInt32,OpenTK.Audio.OpenAL.EfxAuxiliaryf,System.Single)" />
      <MemberSignature Language="F#" Value="member this.AuxiliaryEffectSlot : uint32 * OpenTK.Audio.OpenAL.EfxAuxiliaryf * single -&gt; unit" Usage="effectsExtension.AuxiliaryEffectSlot (asid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asid" Type="System.UInt32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxAuxiliaryf" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="asid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void AuxiliaryEffectSlot (uint asid, OpenTK.Audio.OpenAL.EfxAuxiliaryi param, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AuxiliaryEffectSlot(unsigned int32 asid, valuetype OpenTK.Audio.OpenAL.EfxAuxiliaryi param, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.AuxiliaryEffectSlot(System.UInt32,OpenTK.Audio.OpenAL.EfxAuxiliaryi,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AuxiliaryEffectSlot : uint32 * OpenTK.Audio.OpenAL.EfxAuxiliaryi * int -&gt; unit" Usage="effectsExtension.AuxiliaryEffectSlot (asid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asid" Type="System.UInt32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxAuxiliaryi" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="asid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEffect">
      <MemberSignature Language="C#" Value="public void BindEffect (int eid, OpenTK.Audio.OpenAL.EfxEffectType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEffect(int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffectType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.BindEffect(System.Int32,OpenTK.Audio.OpenAL.EfxEffectType)" />
      <MemberSignature Language="F#" Value="member this.BindEffect : int * OpenTK.Audio.OpenAL.EfxEffectType -&gt; unit" Usage="effectsExtension.BindEffect (eid, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.Int32" />
        <Parameter Name="type" Type="OpenTK.Audio.OpenAL.EfxEffectType" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEffect">
      <MemberSignature Language="C#" Value="public void BindEffect (uint eid, OpenTK.Audio.OpenAL.EfxEffectType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEffect(unsigned int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffectType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.BindEffect(System.UInt32,OpenTK.Audio.OpenAL.EfxEffectType)" />
      <MemberSignature Language="F#" Value="member this.BindEffect : uint32 * OpenTK.Audio.OpenAL.EfxEffectType -&gt; unit" Usage="effectsExtension.BindEffect (eid, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.UInt32" />
        <Parameter Name="type" Type="OpenTK.Audio.OpenAL.EfxEffectType" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEffectToAuxiliarySlot">
      <MemberSignature Language="C#" Value="public void BindEffectToAuxiliarySlot (int auxiliaryeffectslot, int effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEffectToAuxiliarySlot(int32 auxiliaryeffectslot, int32 effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.BindEffectToAuxiliarySlot(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.BindEffectToAuxiliarySlot : int * int -&gt; unit" Usage="effectsExtension.BindEffectToAuxiliarySlot (auxiliaryeffectslot, effect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="auxiliaryeffectslot" Type="System.Int32" />
        <Parameter Name="effect" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="auxiliaryeffectslot">The slot handle to attach the Effect to.</param>
        <param name="effect">The Effect handle that is being attached.</param>
        <summary>(Helper) Attaches an Effect to an Auxiliary Effect Slot.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEffectToAuxiliarySlot">
      <MemberSignature Language="C#" Value="public void BindEffectToAuxiliarySlot (uint auxiliaryeffectslot, uint effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEffectToAuxiliarySlot(unsigned int32 auxiliaryeffectslot, unsigned int32 effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.BindEffectToAuxiliarySlot(System.UInt32,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.BindEffectToAuxiliarySlot : uint32 * uint32 -&gt; unit" Usage="effectsExtension.BindEffectToAuxiliarySlot (auxiliaryeffectslot, effect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="auxiliaryeffectslot" Type="System.UInt32" />
        <Parameter Name="effect" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="auxiliaryeffectslot">The slot handle to attach the Effect to.</param>
        <param name="effect">The Effect handle that is being attached.</param>
        <summary>(Helper) Attaches an Effect to an Auxiliary Effect Slot.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindFilterToSource">
      <MemberSignature Language="C#" Value="public void BindFilterToSource (int source, int filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindFilterToSource(int32 source, int32 filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.BindFilterToSource(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.BindFilterToSource : int * int -&gt; unit" Usage="effectsExtension.BindFilterToSource (source, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">A valid Source handle.</param>
        <param name="filter">A valid Filter handle.</param>
        <summary>(Helper) reroutes the output of a Source through a Filter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindFilterToSource">
      <MemberSignature Language="C#" Value="public void BindFilterToSource (uint source, uint filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindFilterToSource(unsigned int32 source, unsigned int32 filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.BindFilterToSource(System.UInt32,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.BindFilterToSource : uint32 * uint32 -&gt; unit" Usage="effectsExtension.BindFilterToSource (source, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.UInt32" />
        <Parameter Name="filter" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="source">A valid Source handle.</param>
        <param name="filter">A valid Filter handle.</param>
        <summary>(Helper) reroutes the output of a Source through a Filter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindSourceToAuxiliarySlot">
      <MemberSignature Language="C#" Value="public void BindSourceToAuxiliarySlot (int source, int slot, int slotnumber, int filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindSourceToAuxiliarySlot(int32 source, int32 slot, int32 slotnumber, int32 filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.BindSourceToAuxiliarySlot(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.BindSourceToAuxiliarySlot : int * int * int * int -&gt; unit" Usage="effectsExtension.BindSourceToAuxiliarySlot (source, slot, slotnumber, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32" />
        <Parameter Name="slot" Type="System.Int32" />
        <Parameter Name="slotnumber" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The Source handle who's output is forwarded.</param>
        <param name="slot">The Auxiliary Effect Slot handle that receives input from the Source.</param>
        <param name="slotnumber">Every Source has only a limited number of slots it can feed buffer to. The number must stay below AlcContextAttributes.EfxMaxAuxiliarySends</param>
        <param name="filter">Filter handle to be attached between Source ouput and Auxiliary Slot input. Use 0 or EfxFilterType.FilterNull for no filter. </param>
        <summary>(Helper) Reroutes a Source's output into an Auxiliary Effect Slot.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindSourceToAuxiliarySlot">
      <MemberSignature Language="C#" Value="public void BindSourceToAuxiliarySlot (uint source, uint slot, int slotnumber, uint filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindSourceToAuxiliarySlot(unsigned int32 source, unsigned int32 slot, int32 slotnumber, unsigned int32 filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.BindSourceToAuxiliarySlot(System.UInt32,System.UInt32,System.Int32,System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.BindSourceToAuxiliarySlot : uint32 * uint32 * int * uint32 -&gt; unit" Usage="effectsExtension.BindSourceToAuxiliarySlot (source, slot, slotnumber, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.UInt32" />
        <Parameter Name="slot" Type="System.UInt32" />
        <Parameter Name="slotnumber" Type="System.Int32" />
        <Parameter Name="filter" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="source">The Source handle who's output is forwarded.</param>
        <param name="slot">The Auxiliary Effect Slot handle that receives input from the Source.</param>
        <param name="slotnumber">Every Source has only a limited number of slots it can feed buffer to. The number must stay below AlcContextAttributes.EfxMaxAuxiliarySends</param>
        <param name="filter">Filter handle to be attached between Source ouput and Auxiliary Slot input. Use 0 or EfxFilterType.FilterNull for no filter. </param>
        <summary>(Helper) Reroutes a Source's output into an Auxiliary Effect Slot.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void DeleteAuxiliaryEffectSlot (int slot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteAuxiliaryEffectSlot(int32 slot) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteAuxiliaryEffectSlot(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DeleteAuxiliaryEffectSlot : int -&gt; unit" Usage="effectsExtension.DeleteAuxiliaryEffectSlot slot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="slot">Pointer to an auxiliary effect slot name/handle identifying the Auxiliary Effect Slot Object to be deleted.</param>
        <summary>This function deletes one AuxiliaryEffectSlot only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void DeleteAuxiliaryEffectSlot (ref uint slot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteAuxiliaryEffectSlot(unsigned int32&amp; slot) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteAuxiliaryEffectSlot(System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteAuxiliaryEffectSlot :  -&gt; unit" Usage="effectsExtension.DeleteAuxiliaryEffectSlot slot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.UInt32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="slot">Pointer to an auxiliary effect slot name/handle identifying the Auxiliary Effect Slot Object to be deleted.</param>
        <summary>This function deletes one AuxiliaryEffectSlot only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuxiliaryEffectSlots">
      <MemberSignature Language="C#" Value="public void DeleteAuxiliaryEffectSlots (int[] slots);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteAuxiliaryEffectSlots(int32[] slots) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteAuxiliaryEffectSlots(System.Int32[])" />
      <MemberSignature Language="F#" Value="member this.DeleteAuxiliaryEffectSlots : int[] -&gt; unit" Usage="effectsExtension.DeleteAuxiliaryEffectSlots slots" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slots" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="slots">Pointer to n Effect Slot object identifiers.</param>
        <summary>The DeleteAuxiliaryEffectSlots function is used to delete and free resources for Auxiliary Effect Slots previously created with GenAuxiliaryEffectSlots.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuxiliaryEffectSlots">
      <MemberSignature Language="C#" Value="public void DeleteAuxiliaryEffectSlots (uint[] slots);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteAuxiliaryEffectSlots(unsigned int32[] slots) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteAuxiliaryEffectSlots(System.UInt32[])" />
      <MemberSignature Language="F#" Value="member this.DeleteAuxiliaryEffectSlots : uint32[] -&gt; unit" Usage="effectsExtension.DeleteAuxiliaryEffectSlots slots" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slots" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="slots">Pointer to an auxiliary effect slot name/handle identifying the Auxiliary Effect Slot Object to be deleted.</param>
        <summary>This function deletes one AuxiliaryEffectSlot only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuxiliaryEffectSlots">
      <MemberSignature Language="C#" Value="public void DeleteAuxiliaryEffectSlots (int n, ref int slots);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteAuxiliaryEffectSlots(int32 n, int32&amp; slots) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteAuxiliaryEffectSlots(System.Int32,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteAuxiliaryEffectSlots : int *  -&gt; unit" Usage="effectsExtension.DeleteAuxiliaryEffectSlots (n, slots)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="slots" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">Number of Auxiliary Effect Slots to be deleted.</param>
        <param name="slots">Pointer to n Effect Slot object identifiers.</param>
        <summary>The DeleteAuxiliaryEffectSlots function is used to delete and free resources for Auxiliary Effect Slots previously created with GenAuxiliaryEffectSlots.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAuxiliaryEffectSlots">
      <MemberSignature Language="C#" Value="public void DeleteAuxiliaryEffectSlots (int n, ref uint slots);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteAuxiliaryEffectSlots(int32 n, unsigned int32&amp; slots) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteAuxiliaryEffectSlots(System.Int32,System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteAuxiliaryEffectSlots : int *  -&gt; unit" Usage="effectsExtension.DeleteAuxiliaryEffectSlots (n, slots)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="slots" Type="System.UInt32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">Number of Auxiliary Effect Slots to be deleted.</param>
        <param name="slots">Pointer to n Effect Slot object identifiers.</param>
        <summary>The DeleteAuxiliaryEffectSlots function is used to delete and free resources for Auxiliary Effect Slots previously created with GenAuxiliaryEffectSlots.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEffect">
      <MemberSignature Language="C#" Value="public void DeleteEffect (int effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteEffect(int32 effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteEffect(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DeleteEffect : int -&gt; unit" Usage="effectsExtension.DeleteEffect effect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="effect">Pointer to an effect name/handle identifying the Effect Object to be deleted.</param>
        <summary>This function deletes one Effect only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEffect">
      <MemberSignature Language="C#" Value="public void DeleteEffect (ref uint effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteEffect(unsigned int32&amp; effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteEffect(System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteEffect :  -&gt; unit" Usage="effectsExtension.DeleteEffect effect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="System.UInt32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="effect">Pointer to an effect name/handle identifying the Effect Object to be deleted.</param>
        <summary>This function deletes one Effect only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEffects">
      <MemberSignature Language="C#" Value="public void DeleteEffects (int[] effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteEffects(int32[] effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteEffects(System.Int32[])" />
      <MemberSignature Language="F#" Value="member this.DeleteEffects : int[] -&gt; unit" Usage="effectsExtension.DeleteEffects effects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effects" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="effects">Pointer to n Effect object identifiers.</param>
        <summary>The DeleteEffects function is used to delete and free resources for Effect objects previously created with GenEffects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEffects">
      <MemberSignature Language="C#" Value="public void DeleteEffects (uint[] effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteEffects(unsigned int32[] effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteEffects(System.UInt32[])" />
      <MemberSignature Language="F#" Value="member this.DeleteEffects : uint32[] -&gt; unit" Usage="effectsExtension.DeleteEffects effects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effects" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="effects">Pointer to n Effect object identifiers.</param>
        <summary>The DeleteEffects function is used to delete and free resources for Effect objects previously created with GenEffects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEffects">
      <MemberSignature Language="C#" Value="public void DeleteEffects (int n, ref int effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteEffects(int32 n, int32&amp; effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteEffects(System.Int32,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteEffects : int *  -&gt; unit" Usage="effectsExtension.DeleteEffects (n, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="effects" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">Number of Effects to be deleted.</param>
        <param name="effects">Pointer to n Effect object identifiers.</param>
        <summary>The DeleteEffects function is used to delete and free resources for Effect objects previously created with GenEffects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEffects">
      <MemberSignature Language="C#" Value="public void DeleteEffects (int n, ref uint effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteEffects(int32 n, unsigned int32&amp; effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteEffects(System.Int32,System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteEffects : int *  -&gt; unit" Usage="effectsExtension.DeleteEffects (n, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="effects" Type="System.UInt32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">Number of Effects to be deleted.</param>
        <param name="effects">Pointer to n Effect object identifiers.</param>
        <summary>The DeleteEffects function is used to delete and free resources for Effect objects previously created with GenEffects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFilter">
      <MemberSignature Language="C#" Value="public void DeleteFilter (int filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteFilter(int32 filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteFilter(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DeleteFilter : int -&gt; unit" Usage="effectsExtension.DeleteFilter filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filter">Pointer to an filter name/handle identifying the Filter Object to be deleted.</param>
        <summary>This function deletes one Filter only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFilter">
      <MemberSignature Language="C#" Value="public void DeleteFilter (ref uint filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteFilter(unsigned int32&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteFilter(System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteFilter :  -&gt; unit" Usage="effectsExtension.DeleteFilter filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.UInt32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="filter">Pointer to an filter name/handle identifying the Filter Object to be deleted.</param>
        <summary>This function deletes one Filter only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFilters">
      <MemberSignature Language="C#" Value="public void DeleteFilters (int[] filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteFilters(int32[] filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteFilters(System.Int32[])" />
      <MemberSignature Language="F#" Value="member this.DeleteFilters : int[] -&gt; unit" Usage="effectsExtension.DeleteFilters filters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="filters">Pointer to an filter name/handle identifying the Filter Object to be deleted.</param>
        <summary>This function deletes one Filter only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFilters">
      <MemberSignature Language="C#" Value="public void DeleteFilters (uint[] filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteFilters(unsigned int32[] filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteFilters(System.UInt32[])" />
      <MemberSignature Language="F#" Value="member this.DeleteFilters : uint32[] -&gt; unit" Usage="effectsExtension.DeleteFilters filters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="filters">Pointer to an filter name/handle identifying the Filter Object to be deleted.</param>
        <summary>This function deletes one Filter only.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFilters">
      <MemberSignature Language="C#" Value="public void DeleteFilters (int n, ref int filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteFilters(int32 n, int32&amp; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteFilters(System.Int32,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteFilters : int *  -&gt; unit" Usage="effectsExtension.DeleteFilters (n, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="filters" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">Number of Filters to be deleted.</param>
        <param name="filters">Pointer to n Filter object identifiers.</param>
        <summary>The DeleteFilters function is used to delete and free resources for Filter objects previously created with GenFilters.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFilters">
      <MemberSignature Language="C#" Value="public void DeleteFilters (int n, ref uint filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteFilters(int32 n, unsigned int32&amp; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.DeleteFilters(System.Int32,System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.DeleteFilters : int *  -&gt; unit" Usage="effectsExtension.DeleteFilters (n, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="filters" Type="System.UInt32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">Number of Filters to be deleted.</param>
        <param name="filters">Pointer to n Filter object identifiers.</param>
        <summary>The DeleteFilters function is used to delete and free resources for Filter objects previously created with GenFilters.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public void Effect (int eid, OpenTK.Audio.OpenAL.EfxEffect3f param, ref OpenTK.Vector3 values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Effect(int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffect3f param, valuetype OpenTK.Vector3&amp; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Effect(System.Int32,OpenTK.Audio.OpenAL.EfxEffect3f,OpenTK.Vector3@)" />
      <MemberSignature Language="F#" Value="member this.Effect : int * OpenTK.Audio.OpenAL.EfxEffect3f *  -&gt; unit" Usage="effectsExtension.Effect (eid, param, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.Int32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxEffect3f" />
        <Parameter Name="values" Type="OpenTK.Vector3" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public void Effect (int eid, OpenTK.Audio.OpenAL.EfxEffectf param, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Effect(int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffectf param, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Effect(System.Int32,OpenTK.Audio.OpenAL.EfxEffectf,System.Single)" />
      <MemberSignature Language="F#" Value="member this.Effect : int * OpenTK.Audio.OpenAL.EfxEffectf * single -&gt; unit" Usage="effectsExtension.Effect (eid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.Int32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxEffectf" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public void Effect (int eid, OpenTK.Audio.OpenAL.EfxEffecti param, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Effect(int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffecti param, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Effect(System.Int32,OpenTK.Audio.OpenAL.EfxEffecti,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Effect : int * OpenTK.Audio.OpenAL.EfxEffecti * int -&gt; unit" Usage="effectsExtension.Effect (eid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.Int32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxEffecti" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public void Effect (uint eid, OpenTK.Audio.OpenAL.EfxEffect3f param, ref OpenTK.Vector3 values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Effect(unsigned int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffect3f param, valuetype OpenTK.Vector3&amp; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Effect(System.UInt32,OpenTK.Audio.OpenAL.EfxEffect3f,OpenTK.Vector3@)" />
      <MemberSignature Language="F#" Value="member this.Effect : uint32 * OpenTK.Audio.OpenAL.EfxEffect3f *  -&gt; unit" Usage="effectsExtension.Effect (eid, param, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.UInt32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxEffect3f" />
        <Parameter Name="values" Type="OpenTK.Vector3" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public void Effect (uint eid, OpenTK.Audio.OpenAL.EfxEffectf param, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Effect(unsigned int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffectf param, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Effect(System.UInt32,OpenTK.Audio.OpenAL.EfxEffectf,System.Single)" />
      <MemberSignature Language="F#" Value="member this.Effect : uint32 * OpenTK.Audio.OpenAL.EfxEffectf * single -&gt; unit" Usage="effectsExtension.Effect (eid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.UInt32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxEffectf" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public void Effect (uint eid, OpenTK.Audio.OpenAL.EfxEffecti param, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Effect(unsigned int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffecti param, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Effect(System.UInt32,OpenTK.Audio.OpenAL.EfxEffecti,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Effect : uint32 * OpenTK.Audio.OpenAL.EfxEffecti * int -&gt; unit" Usage="effectsExtension.Effect (eid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.UInt32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxEffecti" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (int fid, OpenTK.Audio.OpenAL.EfxFilterf param, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(int32 fid, valuetype OpenTK.Audio.OpenAL.EfxFilterf param, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Filter(System.Int32,OpenTK.Audio.OpenAL.EfxFilterf,System.Single)" />
      <MemberSignature Language="F#" Value="member this.Filter : int * OpenTK.Audio.OpenAL.EfxFilterf * single -&gt; unit" Usage="effectsExtension.Filter (fid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.Int32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxFilterf" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (int fid, OpenTK.Audio.OpenAL.EfxFilteri param, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(int32 fid, valuetype OpenTK.Audio.OpenAL.EfxFilteri param, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Filter(System.Int32,OpenTK.Audio.OpenAL.EfxFilteri,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Filter : int * OpenTK.Audio.OpenAL.EfxFilteri * int -&gt; unit" Usage="effectsExtension.Filter (fid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.Int32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxFilteri" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (uint fid, OpenTK.Audio.OpenAL.EfxFilterf param, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(unsigned int32 fid, valuetype OpenTK.Audio.OpenAL.EfxFilterf param, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Filter(System.UInt32,OpenTK.Audio.OpenAL.EfxFilterf,System.Single)" />
      <MemberSignature Language="F#" Value="member this.Filter : uint32 * OpenTK.Audio.OpenAL.EfxFilterf * single -&gt; unit" Usage="effectsExtension.Filter (fid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.UInt32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxFilterf" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (uint fid, OpenTK.Audio.OpenAL.EfxFilteri param, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(unsigned int32 fid, valuetype OpenTK.Audio.OpenAL.EfxFilteri param, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.Filter(System.UInt32,OpenTK.Audio.OpenAL.EfxFilteri,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Filter : uint32 * OpenTK.Audio.OpenAL.EfxFilteri * int -&gt; unit" Usage="effectsExtension.Filter (fid, param, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.UInt32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxFilteri" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public int GenAuxiliaryEffectSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GenAuxiliaryEffectSlot() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenAuxiliaryEffectSlot" />
      <MemberSignature Language="F#" Value="member this.GenAuxiliaryEffectSlot : unit -&gt; int" Usage="effectsExtension.GenAuxiliaryEffectSlot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This function generates only one Auxiliary Effect Slot.</summary>
        <returns>Storage Int32 for the new auxiliary effect slot name/handle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void GenAuxiliaryEffectSlot (out uint slot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenAuxiliaryEffectSlot([out] unsigned int32&amp; slot) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenAuxiliaryEffectSlot(System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.GenAuxiliaryEffectSlot :  -&gt; unit" Usage="effectsExtension.GenAuxiliaryEffectSlot slot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="slot">To be added.</param>
        <summary>This function generates only one Auxiliary Effect Slot.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenAuxiliaryEffectSlots">
      <MemberSignature Language="C#" Value="public int[] GenAuxiliaryEffectSlots (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GenAuxiliaryEffectSlots(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenAuxiliaryEffectSlots(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GenAuxiliaryEffectSlots : int -&gt; int[]" Usage="effectsExtension.GenAuxiliaryEffectSlots n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">Number of Auxiliary Effect Slots to be created.</param>
        <summary>The GenAuxiliaryEffectSlots function is used to create one or more Auxiliary Effect Slots. The number of slots that can be created will be dependant upon the Open AL device used.</summary>
        <returns>Pointer addressing sufficient memory to store n Effect Slot object identifiers.</returns>
        <remarks>An application should check the OpenAL error state after making this call to determine if the Effect Slot was successfully created. If the function call fails then none of the requested Effect Slots are created. A good strategy for creating any OpenAL object is to use a for-loop and generate one object each loop iteration and then check for an error condition. If an error is set then the loop can be broken and the application can determine if sufficient resources are available.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenAuxiliaryEffectSlots">
      <MemberSignature Language="C#" Value="public void GenAuxiliaryEffectSlots (int n, out int slots);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenAuxiliaryEffectSlots(int32 n, [out] int32&amp; slots) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenAuxiliaryEffectSlots(System.Int32,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GenAuxiliaryEffectSlots : int *  -&gt; unit" Usage="effectsExtension.GenAuxiliaryEffectSlots (n, slots)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="slots" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">Number of Auxiliary Effect Slots to be created.</param>
        <param name="slots">Pointer addressing sufficient memory to store n Effect Slot object identifiers.</param>
        <summary>The GenAuxiliaryEffectSlots function is used to create one or more Auxiliary Effect Slots. The number of slots that can be created will be dependant upon the Open AL device used.</summary>
        <remarks>An application should check the OpenAL error state after making this call to determine if the Effect Slot was successfully created. If the function call fails then none of the requested Effect Slots are created. A good strategy for creating any OpenAL object is to use a for-loop and generate one object each loop iteration and then check for an error condition. If an error is set then the loop can be broken and the application can determine if sufficient resources are available.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenAuxiliaryEffectSlots">
      <MemberSignature Language="C#" Value="public void GenAuxiliaryEffectSlots (int n, out uint slots);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenAuxiliaryEffectSlots(int32 n, [out] unsigned int32&amp; slots) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenAuxiliaryEffectSlots(System.Int32,System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.GenAuxiliaryEffectSlots : int *  -&gt; unit" Usage="effectsExtension.GenAuxiliaryEffectSlots (n, slots)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="slots" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">Number of Auxiliary Effect Slots to be created.</param>
        <param name="slots">Pointer addressing sufficient memory to store n Effect Slot object identifiers.</param>
        <summary>The GenAuxiliaryEffectSlots function is used to create one or more Auxiliary Effect Slots. The number of slots that can be created will be dependant upon the Open AL device used.</summary>
        <remarks>An application should check the OpenAL error state after making this call to determine if the Effect Slot was successfully created. If the function call fails then none of the requested Effect Slots are created. A good strategy for creating any OpenAL object is to use a for-loop and generate one object each loop iteration and then check for an error condition. If an error is set then the loop can be broken and the application can determine if sufficient resources are available.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenEffect">
      <MemberSignature Language="C#" Value="public int GenEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GenEffect() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenEffect" />
      <MemberSignature Language="F#" Value="member this.GenEffect : unit -&gt; int" Usage="effectsExtension.GenEffect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a single effect object.</summary>
        <returns>A handle to the generated effect object.</returns>
        <remarks>
          <para>The GenEffects function is used to create one or more Effect objects. An Effect object stores an effect type and a set of parameter values to control that Effect. In order to use an Effect it must be attached to an Auxiliary Effect Slot object.</para>
          <para>After creation an Effect has no type (EfxEffectType.Null), so before it can be used to store a set of parameters, the application must specify what type of effect should be stored in the object, using Effect() with EfxEffecti.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenEffect">
      <MemberSignature Language="C#" Value="public void GenEffect (out uint effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenEffect([out] unsigned int32&amp; effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenEffect(System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.GenEffect :  -&gt; unit" Usage="effectsExtension.GenEffect effect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="effect">A handle to the generated effect object.</param>
        <summary>Generates a single effect object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenEffects">
      <MemberSignature Language="C#" Value="public int[] GenEffects (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GenEffects(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenEffects(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GenEffects : int -&gt; int[]" Usage="effectsExtension.GenEffects n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">Number of Effect object identifiers to generate.</param>
        <summary>Generates one or more effect objects.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The GenEffects function is used to create one or more Effect objects. An Effect object stores an effect type and a set of parameter values to control that Effect. In order to use an Effect it must be attached to an Auxiliary Effect Slot object.</para>
          <para>After creation an Effect has no type (EfxEffectType.Null), so before it can be used to store a set of parameters, the application must specify what type of effect should be stored in the object, using Effect() with EfxEffecti.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenEffects">
      <MemberSignature Language="C#" Value="public void GenEffects (int n, out int effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenEffects(int32 n, [out] int32&amp; effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenEffects(System.Int32,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GenEffects : int *  -&gt; unit" Usage="effectsExtension.GenEffects (n, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="effects" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">Number of Effects to be created.</param>
        <param name="effects">Pointer addressing sufficient memory to store n Effect object identifiers.</param>
        <summary>The GenEffects function is used to create one or more Effect objects. An Effect object stores an effect type and a set of parameter values to control that Effect. In order to use an Effect it must be attached to an Auxiliary Effect Slot object</summary>
        <remarks>After creation an Effect has no type (EfxEffectType.Null), so before it can be used to store a set of parameters, the application must specify what type of effect should be stored in the object, using Effect() with EfxEffecti.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenEffects">
      <MemberSignature Language="C#" Value="public void GenEffects (int n, out uint effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenEffects(int32 n, [out] unsigned int32&amp; effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenEffects(System.Int32,System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.GenEffects : int *  -&gt; unit" Usage="effectsExtension.GenEffects (n, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="effects" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">Number of Effects to be created.</param>
        <param name="effects">Pointer addressing sufficient memory to store n Effect object identifiers.</param>
        <summary>The GenEffects function is used to create one or more Effect objects. An Effect object stores an effect type and a set of parameter values to control that Effect. In order to use an Effect it must be attached to an Auxiliary Effect Slot object</summary>
        <remarks>After creation an Effect has no type (EfxEffectType.Null), so before it can be used to store a set of parameters, the application must specify what type of effect should be stored in the object, using Effect() with EfxEffecti.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenFilter">
      <MemberSignature Language="C#" Value="public int GenFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GenFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenFilter" />
      <MemberSignature Language="F#" Value="member this.GenFilter : unit -&gt; int" Usage="effectsExtension.GenFilter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This function generates only one Filter.</summary>
        <returns>Storage Int32 for the new filter name/handle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenFilter">
      <MemberSignature Language="C#" Value="public void GenFilter (out uint filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenFilter([out] unsigned int32&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenFilter(System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.GenFilter :  -&gt; unit" Usage="effectsExtension.GenFilter filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">Storage UInt32 for the new filter name/handle.</param>
        <summary>This function generates only one Filter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenFilters">
      <MemberSignature Language="C#" Value="public int[] GenFilters (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GenFilters(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenFilters(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GenFilters : int -&gt; int[]" Usage="effectsExtension.GenFilters n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">Number of Filters to be created.</param>
        <summary>The GenFilters function is used to create one or more Filter objects. A Filter object stores a filter type and a set of parameter values to control that Filter. Filter objects can be attached to Sources as Direct Filters or Auxiliary Send Filters.</summary>
        <returns>Pointer addressing sufficient memory to store n Filter object identifiers.</returns>
        <remarks>After creation a Filter has no type (EfxFilterType.Null), so before it can be used to store a set of parameters, the application must specify what type of filter should be stored in the object, using Filter() with EfxFilteri.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenFilters">
      <MemberSignature Language="C#" Value="public void GenFilters (int n, out int filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenFilters(int32 n, [out] int32&amp; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenFilters(System.Int32,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GenFilters : int *  -&gt; unit" Usage="effectsExtension.GenFilters (n, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="filters" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">Number of Filters to be created.</param>
        <param name="filters">Pointer addressing sufficient memory to store n Filter object identifiers.</param>
        <summary>The GenFilters function is used to create one or more Filter objects. A Filter object stores a filter type and a set of parameter values to control that Filter. Filter objects can be attached to Sources as Direct Filters or Auxiliary Send Filters.</summary>
        <remarks>After creation a Filter has no type (EfxFilterType.Null), so before it can be used to store a set of parameters, the application must specify what type of filter should be stored in the object, using Filter() with EfxFilteri.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenFilters">
      <MemberSignature Language="C#" Value="public void GenFilters (int n, out uint filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenFilters(int32 n, [out] unsigned int32&amp; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GenFilters(System.Int32,System.UInt32@)" />
      <MemberSignature Language="F#" Value="member this.GenFilters : int *  -&gt; unit" Usage="effectsExtension.GenFilters (n, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="filters" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">Number of Filters to be created.</param>
        <param name="filters">Pointer addressing sufficient memory to store n Filter object identifiers.</param>
        <summary>The GenFilters function is used to create one or more Filter objects. A Filter object stores a filter type and a set of parameter values to control that Filter. Filter objects can be attached to Sources as Direct Filters or Auxiliary Send Filters.</summary>
        <remarks>After creation a Filter has no type (EfxFilterType.Null), so before it can be used to store a set of parameters, the application must specify what type of filter should be stored in the object, using Filter() with EfxFilteri.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void GetAuxiliaryEffectSlot (int asid, OpenTK.Audio.OpenAL.EfxAuxiliaryf pname, out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAuxiliaryEffectSlot(int32 asid, valuetype OpenTK.Audio.OpenAL.EfxAuxiliaryf pname, [out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetAuxiliaryEffectSlot(System.Int32,OpenTK.Audio.OpenAL.EfxAuxiliaryf,System.Single@)" />
      <MemberSignature Language="F#" Value="member this.GetAuxiliaryEffectSlot : int * OpenTK.Audio.OpenAL.EfxAuxiliaryf *  -&gt; unit" Usage="effectsExtension.GetAuxiliaryEffectSlot (asid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asid" Type="System.Int32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxAuxiliaryf" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="asid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void GetAuxiliaryEffectSlot (int asid, OpenTK.Audio.OpenAL.EfxAuxiliaryi pname, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAuxiliaryEffectSlot(int32 asid, valuetype OpenTK.Audio.OpenAL.EfxAuxiliaryi pname, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetAuxiliaryEffectSlot(System.Int32,OpenTK.Audio.OpenAL.EfxAuxiliaryi,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GetAuxiliaryEffectSlot : int * OpenTK.Audio.OpenAL.EfxAuxiliaryi *  -&gt; unit" Usage="effectsExtension.GetAuxiliaryEffectSlot (asid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asid" Type="System.Int32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxAuxiliaryi" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="asid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void GetAuxiliaryEffectSlot (uint asid, OpenTK.Audio.OpenAL.EfxAuxiliaryf pname, out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAuxiliaryEffectSlot(unsigned int32 asid, valuetype OpenTK.Audio.OpenAL.EfxAuxiliaryf pname, [out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetAuxiliaryEffectSlot(System.UInt32,OpenTK.Audio.OpenAL.EfxAuxiliaryf,System.Single@)" />
      <MemberSignature Language="F#" Value="member this.GetAuxiliaryEffectSlot : uint32 * OpenTK.Audio.OpenAL.EfxAuxiliaryf *  -&gt; unit" Usage="effectsExtension.GetAuxiliaryEffectSlot (asid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asid" Type="System.UInt32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxAuxiliaryf" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="asid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public void GetAuxiliaryEffectSlot (uint asid, OpenTK.Audio.OpenAL.EfxAuxiliaryi pname, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAuxiliaryEffectSlot(unsigned int32 asid, valuetype OpenTK.Audio.OpenAL.EfxAuxiliaryi pname, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetAuxiliaryEffectSlot(System.UInt32,OpenTK.Audio.OpenAL.EfxAuxiliaryi,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GetAuxiliaryEffectSlot : uint32 * OpenTK.Audio.OpenAL.EfxAuxiliaryi *  -&gt; unit" Usage="effectsExtension.GetAuxiliaryEffectSlot (asid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asid" Type="System.UInt32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxAuxiliaryi" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="asid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEaxFromEfxEax">
      <MemberSignature Language="C#" Value="public static void GetEaxFromEfxEax (ref OpenTK.Audio.OpenAL.EffectsExtension.EaxReverb input, out OpenTK.Audio.OpenAL.EffectsExtension.EfxEaxReverb output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetEaxFromEfxEax(valuetype OpenTK.Audio.OpenAL.EffectsExtension/EaxReverb&amp; input, [out] valuetype OpenTK.Audio.OpenAL.EffectsExtension/EfxEaxReverb&amp; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetEaxFromEfxEax(OpenTK.Audio.OpenAL.EffectsExtension.EaxReverb@,OpenTK.Audio.OpenAL.EffectsExtension.EfxEaxReverb@)" />
      <MemberSignature Language="F#" Value="static member GetEaxFromEfxEax :  *  -&gt; unit" Usage="OpenTK.Audio.OpenAL.EffectsExtension.GetEaxFromEfxEax (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="OpenTK.Audio.OpenAL.EffectsExtension+EaxReverb" RefType="ref" />
        <Parameter Name="output" Type="OpenTK.Audio.OpenAL.EffectsExtension+EfxEaxReverb" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffect">
      <MemberSignature Language="C#" Value="public void GetEffect (int eid, OpenTK.Audio.OpenAL.EfxEffect3f param, out OpenTK.Vector3 values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetEffect(int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffect3f param, [out] valuetype OpenTK.Vector3&amp; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetEffect(System.Int32,OpenTK.Audio.OpenAL.EfxEffect3f,OpenTK.Vector3@)" />
      <MemberSignature Language="F#" Value="member this.GetEffect : int * OpenTK.Audio.OpenAL.EfxEffect3f *  -&gt; unit" Usage="effectsExtension.GetEffect (eid, param, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.Int32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxEffect3f" />
        <Parameter Name="values" Type="OpenTK.Vector3" RefType="out" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffect">
      <MemberSignature Language="C#" Value="public void GetEffect (int eid, OpenTK.Audio.OpenAL.EfxEffectf pname, out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetEffect(int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffectf pname, [out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetEffect(System.Int32,OpenTK.Audio.OpenAL.EfxEffectf,System.Single@)" />
      <MemberSignature Language="F#" Value="member this.GetEffect : int * OpenTK.Audio.OpenAL.EfxEffectf *  -&gt; unit" Usage="effectsExtension.GetEffect (eid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.Int32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxEffectf" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffect">
      <MemberSignature Language="C#" Value="public void GetEffect (int eid, OpenTK.Audio.OpenAL.EfxEffecti pname, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetEffect(int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffecti pname, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetEffect(System.Int32,OpenTK.Audio.OpenAL.EfxEffecti,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GetEffect : int * OpenTK.Audio.OpenAL.EfxEffecti *  -&gt; unit" Usage="effectsExtension.GetEffect (eid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.Int32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxEffecti" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffect">
      <MemberSignature Language="C#" Value="public void GetEffect (uint eid, OpenTK.Audio.OpenAL.EfxEffect3f param, out OpenTK.Vector3 values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetEffect(unsigned int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffect3f param, [out] valuetype OpenTK.Vector3&amp; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetEffect(System.UInt32,OpenTK.Audio.OpenAL.EfxEffect3f,OpenTK.Vector3@)" />
      <MemberSignature Language="F#" Value="member this.GetEffect : uint32 * OpenTK.Audio.OpenAL.EfxEffect3f *  -&gt; unit" Usage="effectsExtension.GetEffect (eid, param, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.UInt32" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.EfxEffect3f" />
        <Parameter Name="values" Type="OpenTK.Vector3" RefType="out" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="param">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffect">
      <MemberSignature Language="C#" Value="public void GetEffect (uint eid, OpenTK.Audio.OpenAL.EfxEffectf pname, out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetEffect(unsigned int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffectf pname, [out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetEffect(System.UInt32,OpenTK.Audio.OpenAL.EfxEffectf,System.Single@)" />
      <MemberSignature Language="F#" Value="member this.GetEffect : uint32 * OpenTK.Audio.OpenAL.EfxEffectf *  -&gt; unit" Usage="effectsExtension.GetEffect (eid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.UInt32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxEffectf" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffect">
      <MemberSignature Language="C#" Value="public void GetEffect (uint eid, OpenTK.Audio.OpenAL.EfxEffecti pname, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetEffect(unsigned int32 eid, valuetype OpenTK.Audio.OpenAL.EfxEffecti pname, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetEffect(System.UInt32,OpenTK.Audio.OpenAL.EfxEffecti,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GetEffect : uint32 * OpenTK.Audio.OpenAL.EfxEffecti *  -&gt; unit" Usage="effectsExtension.GetEffect (eid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.UInt32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxEffecti" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="eid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilter">
      <MemberSignature Language="C#" Value="public void GetFilter (int fid, OpenTK.Audio.OpenAL.EfxFilterf pname, out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetFilter(int32 fid, valuetype OpenTK.Audio.OpenAL.EfxFilterf pname, [out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetFilter(System.Int32,OpenTK.Audio.OpenAL.EfxFilterf,System.Single@)" />
      <MemberSignature Language="F#" Value="member this.GetFilter : int * OpenTK.Audio.OpenAL.EfxFilterf *  -&gt; unit" Usage="effectsExtension.GetFilter (fid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.Int32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxFilterf" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilter">
      <MemberSignature Language="C#" Value="public void GetFilter (int fid, OpenTK.Audio.OpenAL.EfxFilteri pname, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetFilter(int32 fid, valuetype OpenTK.Audio.OpenAL.EfxFilteri pname, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetFilter(System.Int32,OpenTK.Audio.OpenAL.EfxFilteri,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GetFilter : int * OpenTK.Audio.OpenAL.EfxFilteri *  -&gt; unit" Usage="effectsExtension.GetFilter (fid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.Int32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxFilteri" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilter">
      <MemberSignature Language="C#" Value="public void GetFilter (uint fid, OpenTK.Audio.OpenAL.EfxFilterf pname, out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetFilter(unsigned int32 fid, valuetype OpenTK.Audio.OpenAL.EfxFilterf pname, [out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetFilter(System.UInt32,OpenTK.Audio.OpenAL.EfxFilterf,System.Single@)" />
      <MemberSignature Language="F#" Value="member this.GetFilter : uint32 * OpenTK.Audio.OpenAL.EfxFilterf *  -&gt; unit" Usage="effectsExtension.GetFilter (fid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.UInt32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxFilterf" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilter">
      <MemberSignature Language="C#" Value="public void GetFilter (uint fid, OpenTK.Audio.OpenAL.EfxFilteri pname, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetFilter(unsigned int32 fid, valuetype OpenTK.Audio.OpenAL.EfxFilteri pname, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.GetFilter(System.UInt32,OpenTK.Audio.OpenAL.EfxFilteri,System.Int32@)" />
      <MemberSignature Language="F#" Value="member this.GetFilter : uint32 * OpenTK.Audio.OpenAL.EfxFilteri *  -&gt; unit" Usage="effectsExtension.GetFilter (fid, pname, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.UInt32" />
        <Parameter Name="pname" Type="OpenTK.Audio.OpenAL.EfxFilteri" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fid">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public bool IsAuxiliaryEffectSlot (int slot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuxiliaryEffectSlot(int32 slot) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.IsAuxiliaryEffectSlot(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.IsAuxiliaryEffectSlot : int -&gt; bool" Usage="effectsExtension.IsAuxiliaryEffectSlot slot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="slot">Effect Slot object identifier to validate.</param>
        <summary>The IsAuxiliaryEffectSlot function is used to determine if an object identifier is a valid Auxiliary Effect Slot object.</summary>
        <returns>True if the identifier is a valid Auxiliary Effect Slot, False otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuxiliaryEffectSlot">
      <MemberSignature Language="C#" Value="public bool IsAuxiliaryEffectSlot (uint slot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuxiliaryEffectSlot(unsigned int32 slot) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.IsAuxiliaryEffectSlot(System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.IsAuxiliaryEffectSlot : uint32 -&gt; bool" Usage="effectsExtension.IsAuxiliaryEffectSlot slot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="slot">Effect Slot object identifier to validate.</param>
        <summary>The IsAuxiliaryEffectSlot function is used to determine if an object identifier is a valid Auxiliary Effect Slot object.</summary>
        <returns>True if the identifier is a valid Auxiliary Effect Slot, False otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEffect">
      <MemberSignature Language="C#" Value="public bool IsEffect (int eid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEffect(int32 eid) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.IsEffect(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.IsEffect : int -&gt; bool" Usage="effectsExtension.IsEffect eid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eid">Effect identifier to validate.</param>
        <summary>The IsEffect function is used to determine if an object identifier is a valid Effect object.</summary>
        <returns>True if the identifier is a valid Effect, False otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEffect">
      <MemberSignature Language="C#" Value="public bool IsEffect (uint eid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEffect(unsigned int32 eid) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.IsEffect(System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.IsEffect : uint32 -&gt; bool" Usage="effectsExtension.IsEffect eid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eid" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="eid">Effect identifier to validate.</param>
        <summary>The IsEffect function is used to determine if an object identifier is a valid Effect object.</summary>
        <returns>True if the identifier is a valid Effect, False otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFilter">
      <MemberSignature Language="C#" Value="public bool IsFilter (int fid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFilter(int32 fid) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.IsFilter(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.IsFilter : int -&gt; bool" Usage="effectsExtension.IsFilter fid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fid">Effect identifier to validate.</param>
        <summary>The IsFilter function is used to determine if an object identifier is a valid Filter object.</summary>
        <returns>True if the identifier is a valid Filter, False otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFilter">
      <MemberSignature Language="C#" Value="public bool IsFilter (uint fid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFilter(unsigned int32 fid) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.OpenAL.EffectsExtension.IsFilter(System.UInt32)" />
      <MemberSignature Language="F#" Value="member this.IsFilter : uint32 -&gt; bool" Usage="effectsExtension.IsFilter fid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fid" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="fid">Effect identifier to validate.</param>
        <summary>The IsFilter function is used to determine if an object identifier is a valid Filter object.</summary>
        <returns>True if the identifier is a valid Filter, False otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Audio.OpenAL.EffectsExtension.IsInitialized" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="OpenTK.Audio.OpenAL.EffectsExtension.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns True if the EFX Extension has been found and could be initialized.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
