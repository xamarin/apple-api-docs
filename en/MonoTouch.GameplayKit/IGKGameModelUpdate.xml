<Type Name="IGKGameModelUpdate" FullName="MonoTouch.GameplayKit.IGKGameModelUpdate">
  <TypeSignature Language="C#" Value="public interface IGKGameModelUpdate : IDisposable, MonoTouch.ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGKGameModelUpdate implements class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.Mac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="GKGameModelUpdate", WrapperType=typeof(MonoTouch.GameplayKit.GKGameModelUpdateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.UnsafeUnretained, GetterSelector="value", IsProperty=true, IsRequired=true, IsStatic=false, Name="Value", PropertyType=typeof(System.nint), Selector="value", SetterSelector="setValue:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 9, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.MacOSX, 10, 11, MonoTouch.ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A valid game move. The minimal data necessary to transition a valid <see cref="T:Monotouch.GameplayKit.IGKGameModel" /> into a valid subsequent state.</summary>
    <remarks>
      <para>Developers should strive to make their implementations of this interface efficient. A large number of <see cref="T:Monotouch.GameplayKit.IGKGameModelUpdate" /> objects are likely to be produced by <see cref="M:Monotouch.GameplayKit.IGKGameModel.GetGameModelUpdate" /> which, in return, is likely to be called many times by <see cref="M:Monotouch.GameplayKit.GKMinMaxStrategist.GetBestMove" />.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; set; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" apistyle="classic" />
      <MemberSignature Language="C#" Value="public nint Value { get; set; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nint Value" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>monotouch</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyName>Xamarin.Mac</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("value")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setValue:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Int32</ReturnType>
        <ReturnType apistyle="unified">System.nint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equivalent to the value produced by <see cref="M:Monotouch.GameplayKit.IGKGameModel.Score" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This property is determined by the <see cref="M:Monotouch.GameplayKit.IGKGameModel.Score" /> when <c>this</c><see cref="T:Monotouch.GameplayKit.IGKGameModelUpdate" /> is applied to the game state of the <see cref="T:Monotouch.GameplayKit.IGKGameModel" />. Ultimately, the <see cref="M:Monotouch.GameplayKit.GKMinMaxStrategist.GetBestMove" /> method returns the <see cref="T:Monotouch.GameplayKit.IGKGameModelUpdate" /> with the highest <see cref="P:Monotouch.GameplayKit.IGKGameModelUpdate.Value" />. If multiple <see cref="T:Monotouch.GameplayKit.IGKGameModelUpdate" /> have the same <see cref="P:Monotouch.GameplayKit.IGKGameModelUpdate.Value" /> and <see cref="P:Monotouch.GameplayKit.GKMinMaxStrategist.Random" /> is not <see langword="null" />, the returned <see cref="T:Monotouch.GameplayKit.IGKGameModelUpdate" /> is chosen randomly among those with the highest <see cref="P:Monotouch.GameplayKit.IGKGameModelUpdate.Value" />.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
