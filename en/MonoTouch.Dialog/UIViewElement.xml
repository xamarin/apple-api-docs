<Type Name="UIViewElement" FullName="MonoTouch.Dialog.UIViewElement">
  <TypeSignature Language="C#" Value="public class UIViewElement : MonoTouch.Dialog.Element, MonoTouch.Dialog.IElementSizing" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIViewElement extends MonoTouch.Dialog.Element implements class MonoTouch.Dialog.IElementSizing" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.Dialog-1</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Dialog.Element</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.Dialog.IElementSizing</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This element can be used to insert an arbitrary UIView
            </summary>
    <remarks>
            There is no cell reuse here as we have a 1:1 mapping
            in this case from the UIViewElement to the cell that
            holds our view.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIViewElement (string caption, MonoTouch.UIKit.UIView view, bool transparent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, class MonoTouch.UIKit.UIView view, bool transparent) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
        <Parameter Name="transparent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="caption">
            The caption, only used for RootElements that might want to summarize results
            </param>
        <param name="view">
            The view to display
            </param>
        <param name="transparent">
            If this is set, then the view is responsible for painting the entire area,
            otherwise the default cell paint code will be used.
            </param>
        <summary>
            Constructor
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public UIViewElement (string caption, UIKit.UIView view, bool transparent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, class UIKit.UIView view, bool transparent) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="view" Type="UIKit.UIView" />
        <Parameter Name="transparent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="view">To be added.</param>
        <param name="transparent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIViewElement (string caption, MonoTouch.UIKit.UIView view, bool transparent, MonoTouch.UIKit.UIEdgeInsets insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, class MonoTouch.UIKit.UIView view, bool transparent, valuetype MonoTouch.UIKit.UIEdgeInsets insets) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
        <Parameter Name="transparent" Type="System.Boolean" />
        <Parameter Name="insets" Type="MonoTouch.UIKit.UIEdgeInsets" />
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="view">To be added.</param>
        <param name="transparent">To be added.</param>
        <param name="insets">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public UIViewElement (string caption, UIKit.UIView view, bool transparent, UIKit.UIEdgeInsets insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, class UIKit.UIView view, bool transparent, valuetype UIKit.UIEdgeInsets insets) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="view" Type="UIKit.UIView" />
        <Parameter Name="transparent" Type="System.Boolean" />
        <Parameter Name="insets" Type="UIKit.UIEdgeInsets" />
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="view">To be added.</param>
        <param name="transparent">To be added.</param>
        <param name="insets">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellKey">
      <MemberSignature Language="C#" Value="protected override Foundation.NSString CellKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString CellKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Subclasses that override the GetCell method should override this method as well
            </summary>
        <value>Unique NSString value, typically the underlying value is allocated as a static variable.</value>
        <remarks>
            This method should return the key passed to UITableView.DequeueReusableCell.
            If your code overrides the <see cref="MonoTouch.Dialog.Element.GetCell(MonoTouch.UIKit.UITableView" /> method to change the cell, you must also
            override this method and return a unique key for it.
            This works in most subclasses with a couple of exceptions: StringElement and
            various derived classes do not use this setting as they need a wider range
            of keys for different uses, so you need to look at the source code for those
            if you are trying to override StringElement or StyledStringElement.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerView">
      <MemberSignature Language="C#" Value="public UIKit.UIView ContainerView;" />
      <MemberSignature Language="ILAsm" Value=".field public class UIKit.UIView ContainerView" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public MonoTouch.Dialog.UIViewElement.CellFlags Flags;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype MonoTouch.Dialog.UIViewElement/CellFlags Flags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Dialog.UIViewElement+CellFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCell">
      <MemberSignature Language="C#" Value="public override MonoTouch.UIKit.UITableViewCell GetCell (MonoTouch.UIKit.UITableView tv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.UIKit.UITableViewCell GetCell(class MonoTouch.UIKit.UITableView tv) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UITableViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tv" Type="MonoTouch.UIKit.UITableView" />
      </Parameters>
      <Docs>
        <param name="tv">The containing table view.</param>
        <summary>
            Gets a UITableViewCell for this element.   Can be overridden, but if you
            customize the style or contents of the cell you must also override the CellKey
            property in your derived class.
            </summary>
        <returns>
        </returns>
        <remarks>This is part of the machinery required by UITableView.   This method is only ever used by developers creating new MonoTouch.Dialog Elements and is not intended to be used by consumers of the API.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCell" apistyle="unified">
      <MemberSignature Language="C#" Value="public override UIKit.UITableViewCell GetCell (UIKit.UITableView tv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class UIKit.UITableViewCell GetCell(class UIKit.UITableView tv) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITableViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tv" Type="UIKit.UITableView" />
      </Parameters>
      <Docs>
        <param name="tv">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeight">
      <MemberSignature Language="C#" Value="public float GetHeight (MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetHeight(class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeight" apistyle="unified">
      <MemberSignature Language="C#" Value="public nfloat GetHeight (UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.nfloat GetHeight(class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nfloat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableView" Type="UIKit.UITableView" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insets">
      <MemberSignature Language="C#" Value="public UIKit.UIEdgeInsets Insets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UIEdgeInsets Insets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIEdgeInsets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="protected UIKit.UIView View;" />
      <MemberSignature Language="ILAsm" Value=".field family class UIKit.UIView View" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
