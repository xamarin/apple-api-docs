<Type Name="ImageStringElement" FullName="MonoTouch.Dialog.ImageStringElement">
  <TypeSignature Language="C#" Value="public class ImageStringElement : MonoTouch.Dialog.StringElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageStringElement extends MonoTouch.Dialog.StringElement" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.Dialog-1</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Dialog.StringElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>An element that displays an thumbnail image with a string, not stylable.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageStringElement (string caption, MonoTouch.UIKit.UIImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, class MonoTouch.UIKit.UIImage image) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="caption">The text to display</param>
        <param name="image">The image to show</param>
        <summary>Creates an instance of ImageStringElement.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public ImageStringElement (string caption, UIKit.UIImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, class UIKit.UIImage image) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="image" Type="UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="image">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageStringElement (string caption, MonoTouch.Foundation.NSAction tapped, MonoTouch.UIKit.UIImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, class MonoTouch.Foundation.NSAction tapped, class MonoTouch.UIKit.UIImage image) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="tapped" Type="MonoTouch.Foundation.NSAction" />
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="caption">The text to display</param>
        <param name="tapped">Code to invoke when the user taps on this cell</param>
        <param name="image">The image to show</param>
        <summary>Creates an instance of ImageStringElement.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public ImageStringElement (string caption, Action tapped, UIKit.UIImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, class System.Action tapped, class UIKit.UIImage image) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="tapped" Type="System.Action" />
        <Parameter Name="image" Type="UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="tapped">To be added.</param>
        <param name="image">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageStringElement (string caption, string value, MonoTouch.UIKit.UIImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, string value, class MonoTouch.UIKit.UIImage image) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="caption">The text to display</param>
        <param name="value">Subheading for the cell</param>
        <param name="image">The image to show</param>
        <summary>Creates an instance of ImageStringElement.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public ImageStringElement (string caption, string value, UIKit.UIImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, string value, class UIKit.UIImage image) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="image" Type="UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="value">To be added.</param>
        <param name="image">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessory">
      <MemberSignature Language="C#" Value="public UIKit.UITableViewCellAccessory Accessory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UITableViewCellAccessory Accessory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITableViewCellAccessory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines the accessory to use for the cell</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellKey">
      <MemberSignature Language="C#" Value="protected override Foundation.NSString CellKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString CellKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Subclasses that override the GetCell method should override this method as well
            </summary>
        <value>Unique NSString value, typically the underlying value is allocated as a static variable.</value>
        <remarks>
            This method should return the key passed to UITableView.DequeueReusableCell.
            If your code overrides the <see cref="MonoTouch.Dialog.Element.GetCell(MonoTouch.UIKit.UITableView" /> method to change the cell, you must also
            override this method and return a unique key for it.
            This works in most subclasses with a couple of exceptions: StringElement and
            various derived classes do not use this setting as they need a wider range
            of keys for different uses, so you need to look at the source code for those
            if you are trying to override StringElement or StyledStringElement.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCell">
      <MemberSignature Language="C#" Value="public override MonoTouch.UIKit.UITableViewCell GetCell (MonoTouch.UIKit.UITableView tv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MonoTouch.UIKit.UITableViewCell GetCell(class MonoTouch.UIKit.UITableView tv) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UITableViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tv" Type="MonoTouch.UIKit.UITableView" />
      </Parameters>
      <Docs>
        <param name="tv">The containing table view.</param>
        <summary>
            Gets a UITableViewCell for this element.   Can be overridden, but if you
            customize the style or contents of the cell you must also override the CellKey
            property in your derived class.
            </summary>
        <returns>
        </returns>
        <remarks>This is part of the machinery required by UITableView.   This method is only ever used by developers creating new MonoTouch.Dialog Elements and is not intended to be used by consumers of the API.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCell" apistyle="unified">
      <MemberSignature Language="C#" Value="public override UIKit.UITableViewCell GetCell (UIKit.UITableView tv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class UIKit.UITableViewCell GetCell(class UIKit.UITableView tv) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITableViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tv" Type="UIKit.UITableView" />
      </Parameters>
      <Docs>
        <param name="tv">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
