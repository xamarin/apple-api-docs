<Type Name="EntryElement" FullName="MonoTouch.Dialog.EntryElement">
  <TypeSignature Language="C#" Value="public class EntryElement : MonoTouch.Dialog.Element" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntryElement extends MonoTouch.Dialog.Element" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.Dialog-1</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Dialog.Element</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An element that can be used to enter text.
            </summary>
    <remarks>
            This element can be used to enter text both regular and password protected entries.
            The Text fields in a given section are aligned with each other.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryElement (string caption, string placeholder, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, string placeholder, string value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="placeholder" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="caption">
            The caption to use
            </param>
        <param name="placeholder">
            Placeholder to display when no value is set.
            </param>
        <param name="value">
            Initial value.
            </param>
        <summary>
            Constructs an EntryElement with the given caption, placeholder and initial value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryElement (string caption, string placeholder, string value, bool isPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string caption, string placeholder, string value, bool isPassword) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="placeholder" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="isPassword" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="caption">
            The caption to use.
            </param>
        <param name="placeholder">
            Placeholder to display when no value is set.
            </param>
        <param name="value">
            Initial value.
            </param>
        <param name="isPassword">
            True if this should be used to enter a password.
            </param>
        <summary>
            Constructs an EntryElement for password entry with the given caption, placeholder and initial value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignEntryWithAllSections">
      <MemberSignature Language="C#" Value="public bool AlignEntryWithAllSections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlignEntryWithAllSections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutocapitalizationType">
      <MemberSignature Language="C#" Value="public UIKit.UITextAutocapitalizationType AutocapitalizationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UITextAutocapitalizationType AutocapitalizationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITextAutocapitalizationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Configuration to set the entry's auto capitalization mode.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutocorrectionType">
      <MemberSignature Language="C#" Value="public UIKit.UITextAutocorrectionType AutocorrectionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UITextAutocorrectionType AutocorrectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITextAutocorrectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Configuration to set the entry's auto correction type.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BecomeFirstResponder">
      <MemberSignature Language="C#" Value="public virtual void BecomeFirstResponder (bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BecomeFirstResponder(bool animated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="animated">
            Whether scrolling to the location of this cell should be animated
            </param>
        <summary>
            Makes this cell the first responder (get the focus)
            </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellKey">
      <MemberSignature Language="C#" Value="protected override Foundation.NSString CellKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString CellKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Subclasses that override the GetCell method should override this method as well
            </summary>
        <value>Unique NSString value, typically the underlying value is allocated as a static variable.</value>
        <remarks>
            This method should return the key passed to UITableView.DequeueReusableCell.
            If your code overrides the <see cref="MonoTouch.Dialog.Element.GetCell(MonoTouch.UIKit.UITableView" /> method to change the cell, you must also
            override this method and return a unique key for it.
            This works in most subclasses with a couple of exceptions: StringElement and
            various derived classes do not use this setting as they need a wider range
            of keys for different uses, so you need to look at the source code for those
            if you are trying to override StringElement or StyledStringElement.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised when the contents of the Entry have changed.n</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearButtonMode">
      <MemberSignature Language="C#" Value="public UIKit.UITextFieldViewMode ClearButtonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UITextFieldViewMode ClearButtonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITextFieldViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether the standard clear button widget appears on the entry.</summary>
        <value>
        </value>
        <remarks>
          <example>
            <code lang="c#">
var e = new EntryElement ("Name", "Your name", "miguel") {
	ClearButtonMode = UITextFieldViewMode.WhileEditing
};
	    </code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextField">
      <MemberSignature Language="C#" Value="protected virtual UIKit.UITextField CreateTextField (CoreGraphics.CGRect frame);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class UIKit.UITextField CreateTextField(valuetype CoreGraphics.CGRect frame) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITextField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablesReturnKeyAutomatically">
      <MemberSignature Language="C#" Value="public bool EnablesReturnKeyAutomatically { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablesReturnKeyAutomatically" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryEnded">
      <MemberSignature Language="C#" Value="public EventHandler EntryEnded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler EntryEnded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised when the underlying UITextField widget raises the Ended event.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryKey">
      <MemberSignature Language="C#" Value="protected virtual Foundation.NSString EntryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSString EntryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryStarted">
      <MemberSignature Language="C#" Value="public EventHandler EntryStarted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler EntryStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchValue">
      <MemberSignature Language="C#" Value="public void FetchValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FetchValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCell">
      <MemberSignature Language="C#" Value="public override UIKit.UITableViewCell GetCell (UIKit.UITableView tv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class UIKit.UITableViewCell GetCell(class UIKit.UITableView tv) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITableViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tv" Type="UIKit.UITableView" />
      </Parameters>
      <Docs>
        <param name="tv">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardType">
      <MemberSignature Language="C#" Value="public UIKit.UIKeyboardType KeyboardType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UIKeyboardType KeyboardType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UIKeyboardType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The type of keyboard used for input, you can change
            this to use this for numeric input, email addressed,
            urls, phones.
            </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Text that the user is looking for</param>
        <param name="text">To be added.</param>
        <summary>
            Method invoked to determine if the cell matches the given text, never invoked with a null value or an empty string.
            </summary>
        <returns>True if the element contains the text, false otherwise.</returns>
        <remarks>This method should return true if the user would find the text represented by this cell.  This could perform a search on the visible elements of the cell, or some components of the cell that are not visible.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyChangedOnKeyStroke">
      <MemberSignature Language="C#" Value="public bool NotifyChangedOnKeyStroke { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyChangedOnKeyStroke" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResignFirstResponder">
      <MemberSignature Language="C#" Value="public virtual void ResignFirstResponder (bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResignFirstResponder(bool animated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="animated">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnKeyType">
      <MemberSignature Language="C#" Value="public Nullable&lt;UIKit.UIReturnKeyType&gt; ReturnKeyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype UIKit.UIReturnKeyType&gt; ReturnKeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;UIKit.UIReturnKeyType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override void Selected (MonoTouch.Dialog.DialogViewController dvc, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Selected(class MonoTouch.Dialog.DialogViewController dvc, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dvc" Type="MonoTouch.Dialog.DialogViewController" />
        <Parameter Name="tableView" Type="UIKit.UITableView" />
        <Parameter Name="indexPath" Type="Foundation.NSIndexPath" />
      </Parameters>
      <Docs>
        <param name="dvc">To be added.</param>
        <param name="tableView">To be added.</param>
        <param name="indexPath">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldReturn">
      <MemberSignature Language="C#" Value="public event Func&lt;bool&gt; ShouldReturn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`1&lt;bool&gt; ShouldReturn" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public override string Summary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Summary() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public UIKit.UITextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UIKit.UITextAlignment TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UIKit.UITextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="val">
      <MemberSignature Language="C#" Value="protected string val;" />
      <MemberSignature Language="ILAsm" Value=".field family string val" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The value of the EntryElement
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
