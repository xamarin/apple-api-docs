<Type Name="ADClient" FullName="iAd.ADClient">
  <TypeSignature Language="C#" Value="public class ADClient : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ADClient extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:iAd.ADClient" />
  <TypeSignature Language="F#" Value="type ADClient = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("ADClient", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 1, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Used to determine whether the app was installed via an interaction with an iAd Network campaign.</summary>
    <remarks>
      <para>The ADClient is a singleton class.</para>
      <para />
      <para>To access the functioanlity of this class, you use the <see cref="P:iAd.ADClient.SharedClient" />Â property which contains the reference to the global instance.</para>
    </remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/library/ios/documentation/iAd/Reference/ADClient/index.html">Apple documentation for <c>ADClient</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ADClient (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:iAd.ADClient.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new iAd.ADClient : Foundation.NSObjectFlag -&gt; iAd.ADClient" Usage="new iAd.ADClient t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal ADClient (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:iAd.ADClient.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new iAd.ADClient : nativeint -&gt; iAd.ADClient" Usage="new iAd.ADClient handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClientToSegments">
      <MemberSignature Language="C#" Value="public virtual void AddClientToSegments (string[] segmentIdentifiers, bool replaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClientToSegments(string[] segmentIdentifiers, bool replaceExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:iAd.ADClient.AddClientToSegments(System.String[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AddClientToSegments : string[] * bool -&gt; unit&#xA;override this.AddClientToSegments : string[] * bool -&gt; unit" Usage="aDClient.AddClientToSegments (segmentIdentifiers, replaceExisting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("addClientToSegments:replaceExisting:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segmentIdentifiers" Type="System.String[]" />
        <Parameter Name="replaceExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="segmentIdentifiers">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="replaceExisting">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:iAd.ADClient.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="iAd.ADClient.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineAppInstallationAttribution">
      <MemberSignature Language="C#" Value="public virtual void DetermineAppInstallationAttribution (iAd.AttributedToiAdCompletionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetermineAppInstallationAttribution(class iAd.AttributedToiAdCompletionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:iAd.ADClient.DetermineAppInstallationAttribution(iAd.AttributedToiAdCompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member DetermineAppInstallationAttribution : iAd.AttributedToiAdCompletionHandler -&gt; unit&#xA;override this.DetermineAppInstallationAttribution : iAd.AttributedToiAdCompletionHandler -&gt; unit" Usage="aDClient.DetermineAppInstallationAttribution completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("determineAppInstallationAttributionWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, "Replaced by 'RequestAttributionDetails'.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 7, 1, ObjCRuntime.PlatformArchitecture.All, "Replaced by 'RequestAttributionDetails'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="iAd.AttributedToiAdCompletionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAttributedToiAdCompletionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDomain">
      <MemberSignature Language="C#" Value="public static Foundation.NSString ErrorDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString ErrorDomain" />
      <MemberSignature Language="DocId" Value="P:iAd.ADClient.ErrorDomain" />
      <MemberSignature Language="F#" Value="member this.ErrorDomain : Foundation.NSString" Usage="iAd.ADClient.ErrorDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Field("ADClientErrorDomain", "iAd")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAdConversionDetails">
      <MemberSignature Language="C#" Value="public virtual void LookupAdConversionDetails (iAd.ADConversionDetails onCompleted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LookupAdConversionDetails(class iAd.ADConversionDetails onCompleted) cil managed" />
      <MemberSignature Language="DocId" Value="M:iAd.ADClient.LookupAdConversionDetails(iAd.ADConversionDetails)" />
      <MemberSignature Language="F#" Value="abstract member LookupAdConversionDetails : iAd.ADConversionDetails -&gt; unit&#xA;override this.LookupAdConversionDetails : iAd.ADConversionDetails -&gt; unit" Usage="aDClient.LookupAdConversionDetails onCompleted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("lookupAdConversionDetails:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, "Replaced by 'RequestAttributionDetails'.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Replaced by 'RequestAttributionDetails'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onCompleted" Type="iAd.ADConversionDetails">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDADConversionDetails))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="onCompleted">



Callback to invoke with the information.
  	   
  	   </param>
        <summary>Queries the iAd system to get the dates for the app purchase time as well as the first iAd impression.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAdConversionDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;iAd.ADClientConversionDetailsResult&gt; LookupAdConversionDetailsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class iAd.ADClientConversionDetailsResult&gt; LookupAdConversionDetailsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:iAd.ADClient.LookupAdConversionDetailsAsync" />
      <MemberSignature Language="F#" Value="abstract member LookupAdConversionDetailsAsync : unit -&gt; System.Threading.Tasks.Task&lt;iAd.ADClientConversionDetailsResult&gt;&#xA;override this.LookupAdConversionDetailsAsync : unit -&gt; System.Threading.Tasks.Task&lt;iAd.ADClientConversionDetailsResult&gt;" Usage="aDClient.LookupAdConversionDetailsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, "Replaced by 'RequestAttributionDetails'.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, "Replaced by 'RequestAttributionDetails'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;iAd.ADClientConversionDetailsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Queries the iAd system to get the dates for the app purchase time as well as the first iAd impression.</summary>
        <returns>
          <para>A task that represents the asynchronous LookupAdConversionDetails operation.   The value of the TResult parameter is of type iAd.ADClientConversionDetailsResult.  Contains purchase date and impression date information.</para>
        </returns>
        <remarks>
          <para>
          </para>
          <para>This information might not be available if the user has configured âLimit Ad Trackingâ.</para>
          <para>
          </para>
          <para>Additionally, Apple recommends to not query this information at application launch time, as this can take some time to query. Â  Apple recomends that you make this call only when you actually need the information.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAttributionDetails">
      <MemberSignature Language="C#" Value="public virtual void RequestAttributionDetails (Action&lt;Foundation.NSDictionary,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestAttributionDetails(class System.Action`2&lt;class Foundation.NSDictionary, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:iAd.ADClient.RequestAttributionDetails(System.Action{Foundation.NSDictionary,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member RequestAttributionDetails : Action&lt;Foundation.NSDictionary, Foundation.NSError&gt; -&gt; unit&#xA;override this.RequestAttributionDetails : Action&lt;Foundation.NSDictionary, Foundation.NSError&gt; -&gt; unit" Usage="aDClient.RequestAttributionDetails completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("requestAttributionDetailsWithBlock:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSDictionary,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V44))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAttributionDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Foundation.NSDictionary&gt; RequestAttributionDetailsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Foundation.NSDictionary&gt; RequestAttributionDetailsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:iAd.ADClient.RequestAttributionDetailsAsync" />
      <MemberSignature Language="F#" Value="abstract member RequestAttributionDetailsAsync : unit -&gt; System.Threading.Tasks.Task&lt;Foundation.NSDictionary&gt;&#xA;override this.RequestAttributionDetailsAsync : unit -&gt; System.Threading.Tasks.Task&lt;Foundation.NSDictionary&gt;" Usage="aDClient.RequestAttributionDetailsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Foundation.NSDictionary&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous RequestAttributionDetails operation.  The value of the TResult parameter is of type System.Action&lt;Foundation.NSDictionary,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para copied="true">The RequestAttributionDetailsAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedClient">
      <MemberSignature Language="C#" Value="public static iAd.ADClient SharedClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class iAd.ADClient SharedClient" />
      <MemberSignature Language="DocId" Value="P:iAd.ADClient.SharedClient" />
      <MemberSignature Language="F#" Value="member this.SharedClient : iAd.ADClient" Usage="iAd.ADClient.SharedClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("sharedClient")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>iAd.ADClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Global shared ADClient.</summary>
        <value>
The global shared ADClient.</value>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
