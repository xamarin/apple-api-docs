<Type Name="NLTokenizer" FullName="NaturalLanguage.NLTokenizer">
  <TypeSignature Language="C#" Value="public class NLTokenizer : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NLTokenizer extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:NaturalLanguage.NLTokenizer" />
  <TypeSignature Language="F#" Value="type NLTokenizer = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>Foundation.Register("NLTokenizer", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 14, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 12, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 5, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Breaks a text up into semantic units.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NLTokenizer (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:NaturalLanguage.NLTokenizer.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new NaturalLanguage.NLTokenizer : Foundation.NSObjectFlag -&gt; NaturalLanguage.NLTokenizer" Usage="new NaturalLanguage.NLTokenizer t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NLTokenizer (NaturalLanguage.NLTokenUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype NaturalLanguage.NLTokenUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:NaturalLanguage.NLTokenizer.#ctor(NaturalLanguage.NLTokenUnit)" />
      <MemberSignature Language="F#" Value="new NaturalLanguage.NLTokenizer : NaturalLanguage.NLTokenUnit -&gt; NaturalLanguage.NLTokenizer" Usage="new NaturalLanguage.NLTokenizer unit" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("initWithUnit:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="unit" Type="NaturalLanguage.NLTokenUnit" />
      </Parameters>
      <Docs>
        <param name="unit">The unit into which the tokenizer will separate text.</param>
        <summary>Creates a new tokenizer that breaks text up into the specified semantic <paramref name="unit" />s.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal NLTokenizer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:NaturalLanguage.NLTokenizer.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new NaturalLanguage.NLTokenizer : nativeint -&gt; NaturalLanguage.NLTokenizer" Usage="new NaturalLanguage.NLTokenizer handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:NaturalLanguage.NLTokenizer.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="NaturalLanguage.NLTokenizer.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateTokens">
      <MemberSignature Language="C#" Value="public virtual void EnumerateTokens (Foundation.NSRange range, NaturalLanguage.NLTokenizerEnumerateContinuationHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumerateTokens(valuetype Foundation.NSRange range, class NaturalLanguage.NLTokenizerEnumerateContinuationHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:NaturalLanguage.NLTokenizer.EnumerateTokens(Foundation.NSRange,NaturalLanguage.NLTokenizerEnumerateContinuationHandler)" />
      <MemberSignature Language="F#" Value="abstract member EnumerateTokens : Foundation.NSRange * NaturalLanguage.NLTokenizerEnumerateContinuationHandler -&gt; unit&#xA;override this.EnumerateTokens : Foundation.NSRange * NaturalLanguage.NLTokenizerEnumerateContinuationHandler -&gt; unit" Usage="nLTokenizer.EnumerateTokens (range, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("enumerateTokensInRange:usingBlock:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
        <Parameter Name="handler" Type="NaturalLanguage.NLTokenizerEnumerateContinuationHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNLTokenizerEnumerateContinuationHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="range">The lexical range over which to get tokens.</param>
        <param name="handler">A handler to run on each token.</param>
        <summary>Enumerates tokens for the specified range in the text.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenRange">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSRange GetTokenRange (nuint characterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Foundation.NSRange GetTokenRange(valuetype System.nuint characterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:NaturalLanguage.NLTokenizer.GetTokenRange(System.nuint)" />
      <MemberSignature Language="F#" Value="abstract member GetTokenRange : nuint -&gt; Foundation.NSRange&#xA;override this.GetTokenRange : nuint -&gt; Foundation.NSRange" Usage="nLTokenizer.GetTokenRange characterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("tokenRangeAtIndex:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterIndex" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="characterIndex">The index of a character that is covered by a token.</param>
        <summary>Gets the range of the token that covers the specified character index.</summary>
        <returns>The range of the token that covers the specified character index.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokens">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSValue[] GetTokens (Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Foundation.NSValue[] GetTokens(valuetype Foundation.NSRange range) cil managed" />
      <MemberSignature Language="DocId" Value="M:NaturalLanguage.NLTokenizer.GetTokens(Foundation.NSRange)" />
      <MemberSignature Language="F#" Value="abstract member GetTokens : Foundation.NSRange -&gt; Foundation.NSValue[]&#xA;override this.GetTokens : Foundation.NSRange -&gt; Foundation.NSValue[]" Usage="nLTokenizer.GetTokens range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>Foundation.Export("tokensForRange:")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSValue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="range">The range for which to return all tokens.</param>
        <summary>Tokenizes the specified range of text.</summary>
        <returns>Tokens for the specified range.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLanguage">
      <MemberSignature Language="C#" Value="public void SetLanguage (NaturalLanguage.NLLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLanguage(valuetype NaturalLanguage.NLLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:NaturalLanguage.NLTokenizer.SetLanguage(NaturalLanguage.NLLanguage)" />
      <MemberSignature Language="F#" Value="member this.SetLanguage : NaturalLanguage.NLLanguage -&gt; unit" Usage="nLTokenizer.SetLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="NaturalLanguage.NLLanguage" />
      </Parameters>
      <Docs>
        <param name="language">The language value to set.</param>
        <summary>Sets the language that the tokenizer will use when processing the string.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public virtual string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:NaturalLanguage.NLTokenizer.String" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="NaturalLanguage.NLTokenizer.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("string", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>set: Foundation.Export("setString:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string to process.</summary>
        <value>The string to process.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unit">
      <MemberSignature Language="C#" Value="public virtual NaturalLanguage.NLTokenUnit Unit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype NaturalLanguage.NLTokenUnit Unit" />
      <MemberSignature Language="DocId" Value="P:NaturalLanguage.NLTokenizer.Unit" />
      <MemberSignature Language="F#" Value="member this.Unit : NaturalLanguage.NLTokenUnit" Usage="NaturalLanguage.NLTokenizer.Unit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
          <AttributeName>get: Foundation.Export("unit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NaturalLanguage.NLTokenUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the semantic unit of the tokens that this tokenizer returns.</summary>
        <value>The semantic unit of the tokens that this tokenizer returns.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
